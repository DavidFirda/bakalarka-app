ID,Instruction,Input,Output,Category,Subcategory,IncorrectOutput
1,Create a function in Python which takes a list of numbers and returns the sum of squares of those numbers.,"[3, 4, 5]","def sum_squares(nums):
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = [3, 4, 5]

result = sum_squares(nums)
print(result)",Data Structures,list,"define sum_squares(nums):
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = [3, 4, 5]

result = sum_squares(nums)
print(result)"
2,Design a function in Python that sorts a list of strings in alphabetical order.,"['red', 'green', 'orange']","def sort_list_alphabetically(input_list): 
    output_list = sorted(input_list) 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically(input_list) 
print(sorted_list)",Sorting,sort,"def sort_list_alphabetically(input_list): 
    output_list = reversed(input_list) 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically(input_list) 
print(""Sorted List in Alphabetical Order:"", sorted_list)"
3,Edit the following Python code such that it will print an array containing the seven days of the week.,"days = [""Monday"", ""Thuesday"", ""Wednesday"", ""Thrusday"", ""Friday""]

for day in days:
    print(day)","days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

for day in days:
    print(day)",Syntax,print,"days == [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

for day in days:
    prit(day)"
4,Write a Python program to generate a sorted list of unique numbers from 0 to 9 in random order.,,"import random

# generating a list of unique numbers from 0 to 9 in random order
random_numbers = random.sample(range(0, 10), 10)

# sort list of numbers 
random_numbers.sort()

# print sorted list of random numbers
print(random_numbers)
# Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",Data Structures,list,"import random

# generating a list of unique numbers from 0 to 9 in random order
random_numbers = random.sample(range(0, 10), 10)

# sort list of numbers 
random_numbers.srt()

# print sorted list of random numbers
print(random_numbers)
# Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
5,Create a Python program to sort a list of tuples according to the third element in the tuple.,"[(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]","def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, key=lambda x: x[2])
    print(sorted_tuple_list)

tuple_list = [(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]
sort_tuple_list(tuple_list)",Sorting,sort,"def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, ky=lambda x: x[2])
    print(sorted_tuple_list)

tuple_list = [(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]
sort_tuple_list(tuple_list)"
6,Please generate a Python script that calculates the mean of a given array of numbers.,"[4, 9, 3, 5]","def calculateMean(array):
    # sum up all elements in the array
    mean = 0
    for i in range(len(array)):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)",Mathematics,calculate,"define calculateMean(array):
    # sum up all elements in the array
    mean = 0
    for i in range(len(array)):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)"
7,"Translate the following sentence into Python code: ""Print 'Welcome' 5 times"".",,"for i in range(5):
  print(""Welcome"")",Syntax,print,"for i in range(5)
  print(""Welcome"")"
8,Can you form a mathematical expression in Python to calculate the total area of a circle and a square?,,"# Calculate total area of circle and square
import math

radius = 4
side = 5

circle_area = math.pi * radius**2
square_area = side**2

total_area = circle_area + square_area
print(total_area)",Mathematics,calculate,"# Calculate total area of circle and square
import math

radius = 4
side = 5

circle_area = math.pi * radius**2
square_area = side**2

total_area = circle_area - square_area
print(""Total area of the circle and square:"", total_area)"
9,Create an algorithm in Python to find the first index of an item in an array.,"arr = [1,3,7,9,0,4]
num = 7","def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            return index
    return -1

arr = [1,3,7,9,0,4]
num = 7
index = findIndex(arr, num)
print('Index of %d is %d' % (num, index)) # Index of 7 is 2",Scientific Computing,array,"def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            retrn index
    retrn -1

arr = [1,3,7,9,0,4]
num = 7
index = findIndex(arr, num)
print('Index of %d is %d' % (num, index)) # Index of 7 is 2"
10,Create a python function that can receive a list of integers and return a list of tuples with consecutive numbers.,"[1, 2, 3, 7, 8, 9, 10]","def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i += 1
        result.append((arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = [1, 2, 3, 7, 8, 9, 10]
print(get_consecutive(arr))
# Output [(1, 3), (7, 10)]",Data Structures,list,"def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i += 1
        result.apend((arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = [1, 2, 3, 7, 8, 9, 10]
print(get_consecutive(arr))
# Output [(1, 3), (7, 10)]"
11,Construct a function that will find the value of a given key in a Python dictionary.,"dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'","def find_value(dictionary, key):
    value = dictionary.get(key)
    return value

dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'
value = find_value(dictionary, key)
print(value) # Output is 2",Data Structures,dictionary,"define find_value(dictionary, key):
    value = dictionary.get(key)
    return value

dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'
value = find_value(dictionary, key)
print(value) # Output is 2"
12,Build a Python script to remove all punctuation from a given string.,"'This is a cool string!'","import string

input_str = 'This is a cool string!'
punctuation_removed = input_str.translate(str.maketrans('', '', string.punctuation))
print(punctuation_removed)",Data Structures,string,# No meaningful incorrect variant could be generated.
13,"Write a Python program to print “Hello, World!” five times.",,"for _ in range(5):
    print(""Hello, World!"")",Syntax,print,"for _ in range(5):
    printeger(""Hello, World!"")"
14,Construct a Python program that calculates the sum of all the items in a given list.,"[1, 4, 2, 5, 9]","def sumoflist(list): 
  sum = 0
  for i in range(0, len(list)): 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1))",Mathematics,calculate,"define sumoflist(list): 
  sum = 0
  for i in range(0, len(list)): 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1))"
15,Create a program in Python to convert an array of integers to an array of binary numbers.,"[2,4,7]","def int_to_bin(arr):
   binary = []
   for num in arr:
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)",Scientific Computing,array,"def int_to_bin(arr):
   binary = []
   fr num in arr:
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)"
16,Generate a function in Python to filter a given list and keep only the numeric items in the list.,"input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8]","def filter_numeric(input_list): 
    
    num_list = [] 
  
    for item in input_list:
        if type(item) == int or type(item) == float: 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output: [4, 2, 1, 15.6, 5.8]",Data Structures,list,"def filter_numeric(input_list) 
    
    num_list = [] 
  
    for item in input_list
        if type(item) == int or type(item) == float 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output [4, 2, 1, 15.6, 5.8]"
17,Create a program in Python to generate 10 random integers.,"interval(0,100)","import random

for _ in range(10):
    print(random.randint(0,100))",Scientific Computing,random,"import random

for _ in range(10)
    print(random.randint(0,100))"
18,Write a Python program to calculate the cost of sending a message through a messaging service,"Message size: 172 bytes
Price per message: 0.0003 USD","""""""
Calculate the cost of sending a message through a messaging service
""""""

# Message size
size = 172 # bytes

# Price per message
price_per_message = 0.0003 # USD

# Calculate cost
cost = size * price_per_message

print(cost)",Mathematics,calculate,"""""""
Calculate the cost of sending a message through a messaging service
""""""

# Message size
size = 172 # bytes

# Price per message
price_per_message = 0.0003 # USD

# Calculate cost
cost = size / price_per_message

print(""The cost of sending a message is {:.3f} USD"".format(cost))"
19,Refactor a Python program to concatenate two strings without using the string.concat() function,"// Python program
str1 = ""Hello ""
str2 = ""World""

result = str1.concat(str2)
print(""Concatenated string: "", result)","str1 = ""Hello ""
str2 = ""World""
result = str1 + str2
print(result)",Data Structures,string,"str1 = ""Hello ""
str2 = ""World""
result = str1 + str2
print(""Concatenated string "", result)"
20,Create a program in Python to sort a given unsorted list.,"[5, 4, 1, 8, 9, 2]","def sortList(lst): 
    lst.sort() 
    return lst
  
ar_list = [5, 4, 1, 8, 9, 2]
result = sortList(ar_list) 
  
print(result)",Sorting,sort,"define sortList(lst): 
    lst.sort() 
    return lst
  
ar_list = [5, 4, 1, 8, 9, 2]
result = sortList(ar_list) 
  
print(result)"
21,Develop a Python script to print the first 10 squares of natural numbers.,,"for i in range(1, 11): 
  print(i**2)",Syntax,print,"for i in range(1, 11): 
  prit(i**2)"
22,Create a _JSON serializer_ for a given Python data structure.,"data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}","import json

data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}

json_data = json.dumps(data)

print(json_data)",Data Structures,data structure,"import json

data = {
 'name' 'Alice',
 'age' 22,
 'hobbies' ['coding', 'guitar']
}

json_data = json.dumps(data)

print(json_data)"
23,Create a function in Python that converts a Fahrenheit temperature to Celsius.,100 degrees,"def fahrenheit_to_celsius(fahrenheit):
    return (fahrenheit - 32) * 5 / 9

i = 100 
result = fahrenheit_to_celsius(i)
print(result)",Scientific Computing,temperature,"define convertFahrenheitToCelsius(fahrenheit)
    celsius = (fahrenheit - 32) * 5/9
    print(""{}°F is {}°C"".format(fahrenheit,celsius))

convertFahrenheitToCelsius(100)"
24,Generate a Python program to copy all elements of one list into another list.,"source = [0, 1, 2]","source = [0, 1, 2]
 
dest = []
 
for item in source:
    dest.append(item)
    
print(dest)",Data Structures,list,"source = (0, 1, 2]
 
dest = (]
 
for item in source:
    dest.append(item)
    
print(dest)"
25,Create a function in Python to find the longest string in a given list of strings,"[""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]","def find_longest_string(arr):
    longest_string = ''
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

arr = ['Apple', 'Banana', 'Orange', 'Mango', 'Pineapple']
result = find_longest_string(arr)
print(result)",Data Structures,string,"define find_longest_string(arr)
    longest_string = ''
    for s in arr
        if len(s) > len(longest_string)
            longest_string = s
    return longest_string

arr = [""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]
result = find_longest_string(arr)
print('Longest string is', result)"
26,Write a Python program to print the 3 most common elements of a given list.,"Input = [2, 5, 3, 7, 8, 5, 10, 19, 20]","from collections import Counter

Input = [2, 5, 3, 7, 8, 5, 10, 19, 20] 
  
Counter = Counter(Input) 
  
most_occur = Counter.most_common(3)

for i in most_occur: 
    print(i[0] i[1])",Syntax,print,"from collections import Counter

Input == [2, 5, 3, 7, 8, 5, 10, 19, 20] 
  
Counter == Counter(Input) 
  
most_occur == Counter.most_common(3)

for i in most_occur: 
    print(i[0], "":"", i[1])"
27,Generate a random set of numbers in Python with a size of 10 and range between 1 and 50.,,"import random

random_set = random.sample(range(1,51), 10)
print(random_set)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
28,Generate a Python script that prints the sum of the numbers in the given range.,Start: 10 End: 19,"# Initialize one variable to store result
result = 0

# Use a loop to iterate through the given range
for num in range(10, 20):
    result += num

# Print the result
print(result)",Syntax,print,"# Initialize one variable to store result
result == 0

# Use a loop to iterate through the given range
for num in range(10, 20):
    result +== num

# Print the result
prit(result)"
29,"Design a Python program to read in a list of list of strings, eliminate duplicate entries, sort them and print out the result.","[['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]","def removeduplicates(list_of_string):
    result = []
    for item in list_of_string:
        if item not in result:
            result.append(item)
    result.sort()
    return result

list_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]
print(removeduplicates(list_of_string))",File Handling,read,"define removeduplicates(list_of_string):
    result = []
    for item in list_of_string:
        if item not in result:
            result.append(item)
    result.sort()
    retrn result

list_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]
print(removeduplicates(list_of_string))"
30,Create a Python class that implements iterable protocol.,,"class IterableData:
    def __init__(self, data):
        self.data = data
    
    def __iter__(self):
        for item in self.data:
            yield item

# Usage
iterable = IterableData([1, 2, 3, 4])
for item in iterable:
    print(item)",Object-Oriented Programming,class,"class IterableData
    define __init__(self, data)
        self.data = data
    
    define __iter__(self)
        for item in self.data
            yield item

# Usage
iterable = IterableData([1, 2, 3, 4])
for item in iterable
    print(item)"
31,Design a Python algorithm to parse a list of strings and prints the longest string's length.,"listOfString= [""I"", ""am"", ""so"", ""happy""]","listStrings= ['I', 'am', 'so', 'happy']
longestStringLen = 0
for string in listStrings:
    if (len(string) > longestStringLen):
        longestStringLen = len(string)

print(longestStringLen)",Data Structures,list,"listStrings= (""I"", ""am"", ""so"", ""happy""]
longestStringLen = 0
for string in listStrings:
    if (len(string) > longestStringLen):
        longestStringLen = len(string)

print(longestStringLen)"
32,Write a Python program that takes in three numbers as input and determines which number is the maximum.,,"def max_number(a,b,c):
  max = a
  if b > max:
    max = b
  if c > max:
    max = c
  return max

print(max_number(1,5,3))",Mathematics,number,"def max_number(a,b,c)
  max = a
  if b > max
    max = b
  if c > max
    max = c
  return max

print(max_number(1,5,3))"
33,"In Python, use the re module to extract all numbers from a given string","String: Order #1234 was placed on 2023-03-25 and total cost is $89.99","import re

string = 'Order #1234 was placed on 2023-03-25 and total cost is $89.99'

numbers = re.findall(r'\d+\.?\d*', string)

print(numbers)",Data Structures,string,# No meaningful incorrect variant could be generated.
34,Generate a Python function that takes an array of elements and finds the frequency of each element,"[1,4,1,4,4,4,9,7]","def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    return frequencies

l = [1,4,1,4,4,4,9,7]
print(count_frequency(l))",Scientific Computing,array,"def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    retrn frequencies

l = [1,4,1,4,4,4,9,7]
print(count_frequency(l))"
35,Generate a random number between 1 and 10 in Python.,,"import random

randomNumber = random.randint(1, 10)
print(randomNumber)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
36,Create a Python function that sorts a list of strings alphabetically,"[‘apple’,’orange’,’pear’]","def sort_strings(list_of_strings):
    sorted_list = sorted(list_of_strings, key=lambda str: str.lower())
    return sorted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(result)",Sorting,sort,"def sort_strings(list_of_strings):
    srted_list = reversed(list_of_strings, key=lambda str: str.lower())
    return srted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(result)"
37,Design a function in Python to determine if a given number is prime.,37,"def is_prime(n):
    if n <= 1: 
        return False
    if n == 2: 
        return True
    if n > 2 and n % 2 == 0: 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        if n % i == 0:
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')",Branching,if,"define is_prime(n)
    if n <= 1 
        return False
    if n == 2 
        return True
    if n > 2 and n % 2 == 0 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2)
        if n % i == 0
            return False
    return True

if is_prime(37)
    print('37 is a prime number!')"
38,Find the most efficient Python code to print all the divisors of an input number.,input = 28,"# Python Program to find the factors of a number

# define a function
def print_divisors(input):

    # find all factors of the input number
    for i in range(1, input + 1):
        if input % i == 0:
            print (i)

# take input from the user
input = 28

# print the divisors
print_divisors(input)",Syntax,print,"# Python Program to find the factors of a number

# define a function
def print_divisors(input)

    # find all factors of the input number
    for i in range(1, input + 1)
        if input % i == 0
            print (i)

# take input from the user
input = 28

# print the divisors
print_divisors(input)"
39,Create a Python function that takes a positive integer as input and returns a list of its prime factors.,The number 12.,"def prime_factors(number):
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors.append(i)
   number //= i
  else:
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]",Syntax,integer,"define prime_factors(number)
 prime_factors = []
 i = 2
 while number > 1
  if number % i == 0
   prime_factors.append(i)
   number //= i
  else
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]"
40,"Given a Python list, create a new list of all items in the first list that are not in the second list.","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]

new_list = []

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # [1, 2, 5]",Data Structures,list,"first_list = (1, 2, 3, 4, 5]
second_list = (3, 4]

new_list = (]

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # (1, 2, 5]"
41,"Given a list of numbers, write a Python program to calculate the median.","[3, 4, 5, 9, 12, 15]","def median(nums):
    nums.sort()
    n = len(nums)
    if n % 2 == 0:
        return (nums[n//2] + nums[(n//2) - 1]) / 2
    return nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))",Data Structures,list,"define median(nums):
    nums.sort()
    n = len(nums)
    if n % 2 == 0:
        retrn (nums[n//2] + nums[(n//2) - 1]) / 2
    retrn nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))"
42,Create a Python program that takes two strings as input and creates a new string with the characters in the second string that are not present in the first string.,"'jello','hello'","def difference(string1, string2):
  new_string = ''
  
  for char in string2:
    if char not in string1:
      new_string += char
      
  return new_string

string1 = 'jello'
string2 = 'hello'

print(difference(string1, string2)) # Output: 'e'",Data Structures,string,"define difference(string1, string2)
  new_string = ''
  
  for char in string2
    if char not in string1
      new_string += char
      
  return new_string

string1 = 'jello'
string2 = 'hello'

print(difference(string1, string2)) # Output 'e'"
43,Develop an algorithm in Python to generate a Fibonacci series up to the nth value.,n = 10,"# Program to generate a Fibonacci series using an algorithm

# function to generate Fibonacci series
def generate_fibonacci_series(n):
    a, b = 0, 1 
    result = [] 
    while b < n:
        result.append(b)
        a, b = b, a + b 
    return result

# Driver code 
n = 10
result = generate_fibonacci_series(n)
print(result)",Algorithms and Dynamic Programming,fibonacci,"# Program to generate a Fibonacci series using an algorithm

# function to generate Fibonacci series
def generate_fibonacci_series(n)
    a, b = 0, 1 
    result = [] 
    while b < n
        result.append(b)
        a, b = b, a + b 
    return result

# Driver code 
n = 10
result = generate_fibonacci_series(n)
print(""The Fibonacci number up to"", n, ""is"", result)"
44,Write a Python program for computing the sum of a given array of integers.,"[1, 2, 3, 4, 5]","def compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)",Mathematics,sum,"define compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)"
45,Write an efficient algorithm in Python to find the minumum number of iterations to reach a certain number.,Start with number 5 and the end goal is number 10,"def min_num_iterations(start, end):
    num_iterations = 0

    while start < end:
        start += 1
        num_iterations += 1

    return num_iterations

print(min_num_iterations(5, 10)) # Output: 5",Mathematics,number,"def min_num_iterations(start, end):
    num_iterations = 0

    while start < end:
        start += 1
        num_iterations += 1

    retrn num_iterations

print(min_num_iterations(5, 10)) # Output: 5"
46,"Write a Python script to generate a random integer in the interval [0, 10).",,"import random

x = random.randint(0, 10)
print(x)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
47,Edit this python code to make the output print in descending order (from highest to lowest).,"my_list = [10,2,5,1,20]

for x in my_list:
    print(x)","my_list = [10,2,5,1,20]
    
for x in sorted(my_list, reverse=True):
    print(x)",Syntax,print,"my_list = [10,2,5,1,20]
    
for x in sorted(my_list, reverse=true):
    print(x)"
48,Write a python script that takes a list of numbers from 1 to 8  and prints its cubic values.,"[1, 2, 3, 4, 5, 6, 7, 8]","list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num**3)",Data Structures,list,"list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num*3)"
49,Generate a Python program using a list comprehension that takes a 2D list of integers and computes the sum of integers at each row.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","total_row_sum = [sum(row) for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print(total_row_sum)",Data Structures,list,"total_row_sum = (sum(row) for row in ((1, 2, 3], (4, 5, 6], (7, 8, 9]]]

print(total_row_sum)"
50,Create a python program to reverse an integer.,x = 123,"def reverse_int(x):
    """"""Reverse an integer.""""""
    reversed_int = int(str(x)[::-1])
    return reversed_int

# Usage Example
x = 123
reversed_int = reverse_int(x)
print(reversed_int)  # 321",Syntax,integer,"define reverse_int(x):
    """"""Reverse an integer.""""""
    reversed_int = int(str(x)[::-1])
    retrn reversed_int

# Usage Example
x = 123
reversed_int = reverse_int(x)
print(reversed_int)  # 321"
51,Develop a function in Python to convert a given number of days into seconds.,,"def days_to_seconds(days):
    return days * 86400

result = days_to_seconds(3)
print(result) # Outputs: 259200",Mathematics,number,"def days_to_seconds(days):
    retrn days / 86400

result = days_to_seconds(3)
print(result) # Outputs: 259200"
52,Develop an algorithm in Python to print an array in reverse order.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    return arr[::-1]

arr = [1, 2, 3, 4, 5]
print(reverse_array(arr))",Syntax,print,"def reverse_array(arr)
    retrn arr[-1]

arr = [1, 2, 3, 4, 5]
print(reverse_array(arr))"
53,Design a Python program for verifying the two strings are rotations of each other?,"s1 = ""Hello World""
s2 = ""World Hello""","def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2): 
	print('These strings are rotations of each other'); 
else: 
	print('These strings are not rotations of each other')",Data Structures,string,"def check_rotation(str1, str2) 
	if len(str1) != len(str2) 
		retrn False
	temp = str1 + str1
	retrn (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2) 
	print('These strings are rotations of each other'); 
else 
	print('These strings are not rotations of each other')"
54,Create a program in Python that takes a list of strings and returns a new list with each string reversed.,"[""Hello"", ""World""]","def reverse_list(strings):
    return [s[::-1] for s in strings]

strings = [""Hello"", ""World""]
print(reverse_list(strings))",Data Structures,list,"def reverse_lst(strings):
    return [s[::-1] for s in strings]

strings = [""Hello"", ""World""]
print(reverse_lst(strings))"
55,"Using the input provided, add a try/except block to the given Python code.","for n in file_name[:20]:
    print(n)","try:
    for n in file_name[:20]:
        print(n)
except Exception as e:
    print(e)",Testing and Debugging,try/except,"try
    for n in file_name[20]
        print(n)
except Exception as e
    print(e)"
56,Write a Python program to remove a specified item from an array.,"arr = [1,2,3,4]","def remove_item(arr, item):
    return [i for i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)",Scientific Computing,array,"def remove_item(arr, item):
    return [i fr i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)"
57,Hack a Python program to apply a filter to a list of numbers and output the numbers greater than 5.,"List of numbers: [1, 5, 6, 3, 8]","numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers.append(number)

print(filtered_numbers) # output: [6, 8]",Data Structures,list,"numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers
  if number > 5
    filtered_numbers.append(number)

print(filtered_numbers) # output [6, 8]"
58,Rewrite the code in Python so that it prints the length of a given string.,"string = ""Hello World""","string = ""Hello World""
print(len(string)) # prints 11",Syntax,print,"string == ""Hello World""
print(len(string)) # prints 11"
59,Create a Python script that converts temperatures from Celsius to Fahrenheit.,23,"def celsius_to_fahrenheit(celsius):
    return ((celsius * 9/5 ) + 32)

temperature = 23
fahrenheit = celsius_to_fahrenheit(temperature)
print(fahrenheit)",Scientific Computing,temperature,"define celsius_to_fahrenheit(celsius):
    retrn ((celsius * 9/5 ) + 32)

temperature = 23
fahrenheit = celsius_to_fahrenheit(temperature)
print('The temperature in Fahrenheit is: ' + str(fahrenheit))"
60,Create a Python program that updates the dictionary with the new key-value pair.,"dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4","dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4

dictionary[key] = value
print(dictionary)
# {'apple': 1, 'banana': 2, 'orange': 3, 'mango': 4}",Data Structures,dictionary,"dictionary = ['apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4

dictionary[key] = value
print(dictionary)
# ['apple': 1, 'banana': 2, 'orange': 3, 'mango': 4}"
61,Create a loop in Python that prints out a list of numbers from 1 to 10 multiplied by 3.,,"for i in range(1, 11):
    print(i * 3)",Loops,loop,"for i in rang(1, 11)
    print(i * 3)"
62,Construct an algorithm in Python to identify whether a number is odd or even.,x = 7,"def findNumberType(x):
    if x % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

x = 7
print(findNumberType(x))  # Odd",Mathematics,number,"def findNumberType(x):
    if x % 2 == 0:
        retrn ""Even""
    else:
        retrn ""Odd""

x = 7
print(findNumberType(x))  # Odd"
63,"Modify the given code in Python so that it prints the given sentence ""Hello, World!""","print(""Greetings"")","print(""Hello, World!"")",Syntax,print,"prit(""Hello, World!"")"
64,Design an algorithm in Python for displaying the reverse of a string input.,"Input String: ""Hello World!""","# Create a function 
def reverse_string(str): 
    # Create an empty string  
    rev_str = """" 

    # Iterate over the string in reverse 
    for i in str: 
        rev_str = i + rev_str
    
    # Return the reversed string 
    return rev_str

# Driver Code
str = ""Hello World!""
print(reverse_string(str))",Data Structures,string,"# Create a function 
define reverse_string(str) 
    # Create an empty string  
    rev_str = """" 

    # Iterate over the string in reverse 
    for i in str 
        rev_str = i + rev_str
    
    # Return the reversed string 
    return rev_str

# Driver Code
str = ""Hello World!""
print(""The reversed string is"", reverse_string(str))"
65,Suggest a change to the following loop to make it more Pythonic.,"numbers = [1, 2, 3, 4, 5]
for i in range(len(numbers)):
    print(numbers[i])","numbers = [1, 2, 3, 4, 5]

for number in numbers:
    print(number)",Loops,loop,"numbers = [1, 2, 3, 4, 5]

fr number in numbers:
    print(number)"
66,Construct a class in Python which implements two methods to add two numbers.,,"class Calculator:
 def __init__(self):
   pass
    
 def add_two_numbers(self, a, b):
   return a + b

 def add(self, a, b, c):
   return a + b + c

calculator = Calculator()
result = calculator.add_two_numbers(1, 2)
print(result)",Object-Oriented Programming,class,"class Calculator
 define __init__(self)
   pass
    
 define add_two_numbers(self, a, b)
   return a + b

 define add(self, a, b, c)
   return a + b + c

calculator = Calculator()
result = calculator.add_two_numbers(1, 2)
print(result)"
67,"Write a Python function to take a text string as an input, and generate a table of the frequencies of each letter in the string.","sample_string = ""HelloWorld""","def find_frequencies(sample_string):
   frequency_table = dict()
   for char in sample_string:
      if char in frequency_table:
         frequency_table[char] += 1
      else:
         frequency_table[char] = 1
   return frequency_table

result = find_frequencies(""HelloWorld"")
print(result)",Data Structures,string,"define find_frequencies(sample_string):
   frequency_table = dict()
   for char in sample_string:
      if char in frequency_table:
         frequency_table[char] += 1
      else:
         frequency_table[char] = 1
   retrn frequency_table

result = find_frequencies(""HelloWorld"")
print(result)"
68,Develop a modularized Python code snippet to find the volume of a rectangular cube with side length 'a'.,a = 4,"def cube_volume(a):
    """"""Calculate the volume of a cube
    Args:
        a (float): length of a side of the cube
    Returns:
        Volume of the cube (float)

    """"""
    return a**3

# Input 
a = 4

# Calculate Cube Volume 
volume = cube_volume(a)

# Print Volume
print(""Volume of cube with side length"", a, ""is"", volume)",Mathematics,volume,"define cube_volume(a):
    """"""Calculate the volume of a cube
    Args:
        a (float): length of a side of the cube
    Returns:
        Volume of the cube (float)

    """"""
    retrn a**3

# Input 
a = 4

# Calculate Cube Volume 
volume = cube_volume(a)

# Print Volume
print(""Volume of cube with side length"", a, ""is"", volume)"
69,Create a Python program to find all the strings in a list of strings that start with a given character.,"['apple', 'banana', 'kiwi', 'melon'], 'a'","def get_strings_with_prefix(strings, letter):
    result = []

    for string in strings:
        if string.startswith(letter):
            result.append(string)
    return result

data = ['apple', 'banana', 'kiwi', 'melon']

result = get_strings_with_prefix(data, 'a')
print(result)",Data Structures,string,"define get_strings_with_prefix(strings, letter)
    result = []

    for string in strings
        if string.startswith(letter)
            result.append(string)
    return result

data = [""apple"", ""banana"", ""kiwi"", ""melon""]

result = get_strings_with_prefix(data, ""a"")
print(result)"
70,Design a sorting algorithm for strings in Python.,"strings = ['cat', 'dog', 'elephant', 'apple']","def string_sort(strings):
    # Bubble sort algorithm
    for i in range(len(strings)-1):
        for j in range(i+1, len(strings)):
            if strings[i] > strings[j]:
                temp = strings[i]
                strings[i] = strings[j]
                strings[j] = temp
    return strings

# example usage
strings = ['cat', 'dog', 'elephant', 'apple']
print(string_sort(strings))",Sorting,sorting,"def string_sorted(strings)
    # Bubble sort algorithm
    for i in range(len(strings)-1)
        for j in range(i+1, len(strings))
            if strings[i] > strings[j]
                temp = strings[i]
                strings[i] = strings[j]
                strings[j] = temp
    return strings

# example usage
strings = [""cat"", ""dog"", ""elephant"", ""apple""]
print(string_sorted(strings))"
71,Demonstrate how tog concatenate two strings in Python.,"a = 'Hello'
b = 'World!'","a = 'Hello'
b = 'World!'

c = a + b
print(c)",Data Structures,string,# No meaningful incorrect variant could be generated.
72,Generate a python program to print the given sentence in reverse.,"Sentence: 'This is an example'","def reverse_string(s):
    return s[::-1]

print(reverse_string('This is an example'))",Syntax,print,"def reverse_string(s):
    return s[::-1]

printeger(reverse_string(""This is an example""))"
73,Optimize a Python program containing a matrix addition operation.,"X = [[2, 3], 
     [1, 4]] 

Y = [[5, 6], 
     [7, 8]]","import numpy as np 

X = np.array([[2, 3], 
     [1, 4]]) 

Y = np.array([[5, 6], 
     [7, 8]])

Z = X + Y  
print(Z)",Scientific Computing,matrix,"import numpy as np 

X = np.array([[2, 3], 
     [1, 4]]) 

Y = np.array([[5, 6], 
     [7, 8]])

Z = X + Y 

print(""Matrix addition result"") 
print(Z)"
74,Write a Python program to check if an item exists in a list using a given condition.,"list = [1, 2, 3, 4]
condition = lambda x: x % 2 == 0","def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			return True 
	return False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)",Branching,if,"def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			retrn True 
	retrn False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)"
75,Develop a program in Python to calculate the sum of the following series:,1 + 1/2 + 1/3 + ... + 1/n,"def SumOfSeries(n): 
    seriesSum = 0
    for num in range(1, n+1): 
        seriesSum += 1/num  
    return round(seriesSum, 2) 

# Driver code 
n = 5
print(""Sum of the series up to number:"", n, 
                    ""is"", SumOfSeries(n))",Mathematics,calculate,"define SumOfSeries(n): 
    seriesSum = 0
    for num in range(1, n+1): 
        seriesSum += 1/num  
    return round(seriesSum, 2) 

# Driver code 
n = 5
print(""Sum of the series up to number:"", n, 
                    ""is"", SumOfSeries(n))"
76,Generate a python program to filter a given array of numbers and remove all numbers greater than 5.,"[3, 4, 6, 1, 8, 9]","def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    return new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))",Scientific Computing,array,"def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    retrn new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))"
77,Compose a Python code snippet to check if the input list contains even numbers.,"[2, 3, 4, 5, 6]","def isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))",Branching,if,"define isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))"
78,Write a Python code to print the Fibonacci sequence upto a given number ‘n’.,"n=10","def generateFibonacciSequence(n):
 a = 0
 b = 1
 print(a, end="" "")
 print(b, end="" "")
 for _ in range(2, n + 1):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

generateFibonacciSequence(10)",Syntax,print,"def generateFibonacciSequence(n):
 a == 0
 b == 1
 prit(a, end=="" "")
 prit(b, end=="" "")
 for _ in range(2, n + 1):
  c == a + b
  a == b
  b == c
  prit(c, end=="" "")

generateFibonacciSequence(10)"
79,Write a Python script to identify the prime numbers in a list of integers.,"list of integers: [2, 4, 7, 11, 13]","def is_prime(num): 
    if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers: 
    if is_prime(num): 
        print(num)",Mathematics,prime,"def is_prime(num) 
    if num > 1 
       for i in range(2,num) 
           if (num % i) == 0 
               return False 
       else 
           return True
    else 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers 
    if is_prime(num) 
        print(num)"
80,Compose a Python script to generate the Fibonacci sequence up to the given number n.,,"def generate_fibonacci_sequence(n):
  a = 0
  b = 1
  sequence = [a]
  while b < n:
    a, b = b, a + b
    sequence.append(a)
  return sequence

result = generate_fibonacci_sequence(7)
print(result) # [0, 1, 1, 2, 3, 5]",Algorithms and Dynamic Programming,fibonacci,"def generate_fibonacci_sequence(n):
  a = 0
  b = 1
  sequence = [a]
  while b < n:
    a, b = b, a + b
    sequence.append(a)
  retun sequence

result = generate_fibonacci_sequence(7)
print(result) # [0, 1, 1, 2, 3, 5]"
81,Create a basic web scraper in Python using the requests library and the Beautiful Soup library. The web scraper should take a URL as an argument and print the text content of the page.,Url: https://example.com,"import requests
from bs4 import BeautifulSoup

# Define the URL
url = 'https://example.com'

# Make a request
response = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(response.text, 'html.parser')

# Print the text contents
print(soup.text)",Syntax,print,"import requests
from bs4 import BeautifulSoup

# Define the URL
url = 'https://example.com'

# Make a request
response = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(response.text, 'html.parser')

# Print the text contents
printeger(soup.text)"
82,Write Python code to create a JSON object from a given list.,"data = [1, 2, 3, 4, 5]","import json

data = [1, 2, 3, 4, 5]

data_json = json.dumps(data)

print(data_json)",Object-Oriented Programming,object,# No meaningful incorrect variant could be generated.
83,Compute the sum of the first 100 natural numbers using a function in Python.,,"def sum_numbers(n):
    """"""
    Computes the sum of the first `n` natural numbers
    """"""
    s = 0
    for i in range(n):
        s += i+1
    return s

print(sum_numbers(100))",Mathematics,sum,"define sum_numbers(n)
    """"""
    Computes the sum of the first `n` natural numbers
    """"""
    s = 0
    for i in range(n)
        s += i+1
    return s

print(sum_numbers(100))"
84,Write a Python script for computing the average of an arbitrary list of numbers.,,"def avg(nums):
    return sum(nums) / len(nums)

nums = [1, 5, 8, 10]
print(avg(nums))",Mathematics,average,"define avg(nums)
    return sum(nums) / len(nums)

nums = [1, 5, 8, 10]
print(avg(nums))"
85,Generate a Python program that will compare two strings and return 'True' or 'False'.,"('Apple', 'Orange')","def compare_strings(first, second):
    return first == second

result = compare_strings('Apple', 'Orange')
print (result)",Data Structures,string,"define compare_strings(first, second)
    return first == second

result = compare_strings('Apple', 'Orange')
print (result)"
86,Create a Python script to compute the average of a list of elements,"[1,4,7,3]","def average(l):
    total = 0
    for element in l:
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))",Mathematics,average,"define average(l)
    total = 0
    for element in l
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))"
87,"Use pandas in Python to aggregate a given dataset with 4 columns (A, B, C, D) into a single column.","| A | B  | C | D |
|---|----|---|---|
| 0 | 34 | 2 | 6 |
| 1 | 21 | 9 | 0 |","import pandas as pd

data = [[0, 34, 2, 6], [1, 21, 9, 0]]
df = pd.DataFrame(data, columns = ['A', 'B', 'C', 'D'])

df['Aggregate'] = df.apply(lambda row: row.A + row.B + row.C + row.D, axis=1)

print(df)",Scientific Computing,pandas,"import pandas as pd

data = [[0, 34, 2, 6], [1, 21, 9, 0]]
df = pd.DataFrame(data, columns = ['A', 'B', 'C', 'D'])

df['Aggregate'] = df.apply(lambda row row.A + row.B + row.C + row.D, axis=1)

print(df)"
88,Write a function in Python that will take in a string and return the most commonly occurring character.,"Sample string: 'abrakadabra'","def max_char(s):
    chars = {}
    for c in s:
        chars[c] = chars.get(c, 0) + 1
    max_val = -1
    max_char = None
    for c, v in chars.items():
        if v > max_val:
            max_val = v
            max_char = c
    return max_char

print(max_char('abrakadabra'))

# Output: a (occurs 5 times)",Data Structures,string,"define max_char(s)
    chars = {}
    for c in s
        chars[c] = chars.get(c, 0) + 1
    max_val = -1
    max_char = None
    for c, v in chars.items()
        if v > max_val
            max_val = v
            max_char = c
    return max_char

print(max_char('abrakadabra'))

# Output a (occurs 5 times)"
89,"Compare two strings and print true if they are equal, false otherwise in Python.","a = 'test'
b = 'test'","a = 'test'
b = 'test'

if a == b:
  print('true')
else:
  print('false')",Data Structures,string,"a = ""test""
b = ""test""

if a == b
  print(""true"")
else
  print(""false"")"
90,Convert the given string into a standard format in Python.,"String: 'My name is John Doe'","string = 'My name is John Doe'
standard_string = string.title()
print(standard_string)
#My Name Is John Doe",Data Structures,string,# No meaningful incorrect variant could be generated.
91,Create a python program that detects if a number is even or odd.,7,"def is_even_odd(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

result = is_even_odd(7)
print(result)",Branching,if,"define is_even_odd(num)
    if num % 2 == 0
        return ""Even""
    else
        return ""Odd""

result = is_even_odd(7)
print(result)"
92,Develop a Python script that prints out the numbers from 0 to 9 in descending order?,,"for n in reversed(range(0,10)):
    print(n)",Syntax,print,"for n in reversed(range(0,10)):
    prit(n)"
93,Develop a program in Python to compute the sum of integers in a given range?,,"def sum_range(start, end):
    total = 0
    for i in range(start,end + 1):
        total += i
    return total

# Test the function
print(sum_range(1, 10)) # Output: 55",Mathematics,sum,"define sum_range(start, end)
    total = 0
    for i in range(start,end + 1)
        total += i
    return total

# Test the function
print(sum_range(1, 10)) # Output 55"
94,Build a Python program to tokenize a string into separate words.,"""Hello, World!""","def tokenize(string):
    words = string.split("" "")
    return words

tokenized_str = tokenize(""Hello, World!"")
print(tokenized_str)",Data Structures,string,"def tokenize(string)
    words = string.split("" "")
    retrn words

tokenized_str = tokenize(""Hello, World!"")
print(tokenized_str)"
95,Write a Python program to print out the factorial of a number.,7,"def factorial(x):
    factorial = 1
    while x > 1:
        factorial = factorial * x
        x = x - 1
    return factorial

number = 7
result = factorial(number)
print(result)",Syntax,print,"def factorial(x)
    factorial = 1
    while x > 1
        factorial = factorial * x
        x = x - 1
    return factorial

number = 7
result = factorial(number)
print(result)"
96,Write a Python program to detect if an array contains any duplicate elements.,"[3, 5, 8, 1, 2, 3]","def check_duplicates(arr):
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add(element)
    return False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)",Branching,if,"def check_duplicates(arr)
    seen = set()
    
    for element in arr
        if element in seen
            retrn True
        else
            seen.add(element)
    retrn False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)"
97,Generate a complete Python script that prints out the prime numbers between two provided numbers.,"lowerBound = 20
upperBound = 32","# code to print out prime numbers between two provided numbers
def is_prime(num):
    if num < 2:
        return False
 
    for i in range(2, num):
        if num%i == 0:
            return False
 
    return True

lowerBound = 20
upperBound = 32
 
for i in range(lowerBound, upperBound + 1):
    if is_prime(i):
        print(i)",Syntax,print,"# code to prit out prime numbers between two provided numbers
def is_prime(num):
    if num < 2:
        retrn False
 
    for i in range(2, num):
        if num%i == 0:
            retrn False
 
    retrn True

lowerBound = 20
upperBound = 32
 
for i in range(lowerBound, upperBound + 1):
    if is_prime(i):
        prit(i)"
98,Write a python program to evaluate the Euclidean distance between two lists of numbers,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def euclidean_distance(list1, list2): 
    dist = 0.0
    for i in range(len(list1)): 
        dist += (list1[i] - list2[i]) ** 2 
    return (dist ** 0.5) 
  
list1 = [1, 2, 3] 
list2 = [4, 5, 6] 

print(euclidean_distance(list1, list2))",Data Structures,list,"def euclidean_distance(list1, list2): 
    dist = 0.0
    for i in range(len(list1)): 
        dist += (list1[i] - list2[i]) ** 2 
    retrn (dist ** 0.5) 
  
list1 = [1, 2, 3] 
list2 = [4, 5, 6] 

print(""Euclidean distance between lists:"")
print(euclidean_distance(list1, list2))"
99,"Using the sample data, convert the provided string into a dictionary in Python.","Sample Data: ""Name: John Doe; Age: 23; Course: Data Science""","sample_data = ""Name: John Doe; Age: 23; Course: Data Science""

# Split the string by the "";"" character
data_items = sample_data.split(';')

# Strip any extra whitespace and split by the "":"" character
data_dict = {}
for item in data_items:
    key, value = item.strip().split(': ')
    data_dict[key] = value
    
print(data_dict)",Data Structures,string,"sample_data = ""Name John Doe; Age 23; Course Data Science""

# Split the string by the "";"" character
data_items = sample_data.split(';')

# Strip any extra whitespace and split by the """" character
data_dict = {}
for item in data_items
    key, value = item.strip().split(' ')
    data_dict[key] = value
    
print(data_dict)"
100,Write a Python script for combining two dictionaries.,"dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }","def combine_dicts(dict1, dict2): 
    new_dict = dict1.copy() 
    new_dict.update(dict2) 
    return new_dict 
  
dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }
  
print(combine_dicts(dict1, dict2))",Data Structures,dictionary,"def combine_dicts(dict1, dict2): 
    new_dict = dict1.copy() 
    new_dict.update(dict2) 
    retrn new_dict 
  
dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }
  
print(combine_dicts(dict1, dict2))"
101,Develop a Python program to create a function to convert temperatures from Celsius to Fahrenheit.,,"def convert_celsius(celsius):
 # Convert celsius to Fahrenheit
 fahrenheit = celsius * 9/5 + 32

 # Return fahrenheit value
 return fahrenheit

# Test
celsius = 32
print(convert_celsius(celsius))",Scientific Computing,temperature,"define convert_celsius(celsius):
 # Convert celsius to Fahrenheit
 fahrenheit = celsius * 9/5 + 32

 # Return fahrenheit value
 retrn fahrenheit

# Test
celsius = 32
print(convert_celsius(celsius))"
102,Write a python method to identify whether the given string is a palindrome.,"String: ""racecar""","def is_palindrome(s):
  s = s.lower()
  return s == s[::-1]

print(is_palindrome(""racecar"")) # True",Data Structures,string,"define is_palindrome(s):
  s = s.lower()
  retrn s == s[::-1]

print(is_palindrome(""racecar"")) # True"
103,Write a Python program to find the n-th smallest number in the following list,"[2, 3, 5, 7, 11] n = 2","def nth_smallest(input_list, n):
    input_list.sort()
    return input_list[n-1]

input_list = [2, 3, 5, 7, 11]
n = 2
result = nth_smallest(input_list, n)
print(result)",Mathematics,number,"def nth_smallest(input_list, n)
    input_list.sort()
    retrn input_list[n-1]

input_list = [2, 3, 5, 7, 11]
n = 2
result = nth_smallest(input_list, n)
print(result)"
104,Create a Python script to print out 10 random values between 1 and 10.,,"import random

for i in range(10):
    print(random.randint(1, 10))",Syntax,print,"import random

for i in range(10):
    printeger(random.randinteger(1, 10))"
105,Create a function in Python that takes a string and an integer as arguments and returns the string with the integer number of characters removed from the front of the string.,"""Hello, World!"", 5","def remove_from_front(string, num_chars):
    return string[num_chars:]

result = remove_from_front(""Hello, World!"", 5)
print(result)",Data Structures,string,"define remove_from_front(string, num_chars):
    retrn string[num_chars:]

result = remove_from_front(""Hello, World!"", 5)
print(result)"
106,Implement an algorithm in Python to remove duplicate elements from a given list.,"list = [1,4,4,4,5,5,5,6,7]","def removeDuplicates(list): 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList: 
            uniqueList.append(item) 
    return uniqueList 

print(removeDuplicates([1,4,4,4,5,5,5,6,7]))",Syntax,duplicate,"def removeDuplicates(list) 
    uniqueList = []  
    for item in list 
        if item not in uniqueList 
            uniqueList.append(item) 
    return uniqueList 

prit(removeDuplicates([1,4,4,4,5,5,5,6,7]))"
107,Create a Python program to reverse a list without using the reverse() method.,"[1, 2, 3, 4, 5]","def reverse_list(lst):
    reversed_list = []
    for i in range(len(lst)-1,-1, -1):
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))",Data Structures,list,"def reverse_list(lst)
    reversed_list = []
    for i in range(len(lst)-1,-1, -1)
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))"
108,Write a Python program to divide two numbers and print the quotient and the remainder.,"Number1: 15
Number2: 4","def divide(num1, num2):
    quotient = num1 // num2
    remainder = num1 % num2
    return quotient, remainder

quotient, remainder = divide(15, 4)
print(""Quotient :"", quotient)
print(""Remainder :"", remainder)",Mathematics,number,"def divide(num1, num2):
    quotient = num1 // num2
    remainder = num1 % num2
    retrn quotient, remainder

quotient, remainder = divide(15, 4)
print(""Quotient :"", quotient)
print(""Remainder :"", remainder)"
109,Create classes and objects in python to represent a shape and its properties.,,"class Shape:
    def __init__(self, type, area):
        self.type = type
        self.area = area
        
    def get_type(self):
        return self.type
    
    def get_area(self):
        return self.area
    
    def set_area(self, area):
        self.area = area

shape = Shape('Square', 10)
print(shape.get_type()) #outputs Square
print(shape.get_area()) #outputs 10",Object-Oriented Programming,object,"class Shape:
    define __init__(self, type, area):
        self.type = type
        self.area = area
        
    define get_type(self):
        retrn self.type
    
    define get_area(self):
        retrn self.area
    
    define set_area(self, area):
        self.area = area

shape = Shape('Square', 10)
print(shape.get_type()) #outputs Square
print(shape.get_area()) #outputs 10"
110,Develop a program to print all unique strings from a given array of strings,"[""Hello"", ""World"", ""Hello"", ""Python""]","def unique_strings(strings):
    unique_strings = []
    for string in strings:
        if string not in unique_strings:
            unique_strings.append(string)
    return unique_strings

strings = [""Hello"", ""World"", ""Hello"", ""Python""]
result = unique_strings(strings)
print(result)",Syntax,print,"def unique_strings(strings):
    unique_strings = []
    for string in strings:
        if string not in unique_strings:
            unique_strings.append(string)
    retrn unique_strings

strings = [""Hello"", ""World"", ""Hello"", ""Python""]
result = unique_strings(strings)
print(result)"
111,Convert a list of numbers into strings using Python.,"[5, 10, 15]","# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appends a string version of the number to the list
    number_strings.append(str(n))

print(number_strings)   # ['5', '10', '15']",Data Structures,list,"# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appends a string version of the number to the list
    number_strings.apend(str(n))

print(number_strings)   # ['5', '10', '15']"
112,Create an algorithm in Python that takes an array of integers and `finds the pair that equals the given target.,"[1, 4, 8, 10], 14","def find_pair(arr, target): 
    for i in range(0, len(arr)): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)",Scientific Computing,array,"define find_pair(arr, target): 
    fr i in range(0, len(arr)): 
        fr j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)"
113,Generate a program in Python to find the median of a list of numbers.,"[5, 8, 2, 7, 4]","def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] + nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' + str(med))",Mathematics,median,"def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] - nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' - str(med))"
114,"Given an array of strings, write a program in Python to calculate the number of occurrences for each string (print(f'{word} : {count}')).","['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']","words = ['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']

from collections import Counter
word_count = Counter(words)

for word, count in word_count.items():
 print(f'{word} : {count}')",Scientific Computing,array,"words = ['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']

from collections import Counter
word_count = Counter(words)

for word, count in word_count.items()
 print(f'{word}  {count}')"
115,Write a Python program to print the following string pattern.,*__*__*,"for i in range(3):
    for j in range(3):
        if (i == j) or (i + j == 2):
            print('*', end="""")
        else:
            print('_', end="""")
    print()",Syntax,print,"for i in range(3)
    for j in range(3)
        if (i == j) or (i + j == 2)
            print('*', end="""")
        else
            print('_', end="""")
    print()"
116,Create a python program that takes in a list of strings and returns a list of strings with all duplicates removed.,"[""a"", ""b"", ""c"", ""a"", ""b"", ""d""]","def remove_duplicates(lst):
    new_lst = []

    for item in lst:
        if item not in new_lst:
            new_lst.append(item)

    return new_lst

result = remove_duplicates([""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)",Data Structures,list,"def remove_duplicates(lst):
    new_lst = (]

    for item in lst:
        if item not in new_lst:
            new_lst.append(item)

    return new_lst

result = remove_duplicates((""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)"
117,"Write a python program that takes in two strings, s1 and s2, and returns a Boolean based on if s1 is a substring of s2.","s1 = 'foo'
s2 = 'foobar'","def is_substring(s1, s2):
    return s1 in s2

substring = is_substring('foo', 'foobar')

print(substring) # Output: True",Data Structures,string,"define is_substring(s1, s2)
    return s1 in s2

substring = is_substring('foo', 'foobar')

print(substring) # Output True"
118,"Create a Python script that when executed, prints out the sum of the first 10 even numbers.",,"sum = 0
for i in range(2,21,2): #Range(start,stop-1,step size)
 sum += i

print(sum)",Syntax,print,"sum == 0
for i in range(2,21,2): #Range(start,stop-1,step size)
 sum +== i

print(sum)"
119,Develop a Python code to print a string in reverse order.,"""Hello, World!""","str = ""Hello, World!""

# loop to iterate through string
for i in range(len(str)-1, -1, -1):
  print(str[i],end="""")

print()",Syntax,print,"str = ""Hello, World!""

# loop to iterate through string
for i in range(len(str)-1, -1, -1):
  prit(str[i],end="""")

prit()"
120,"Create a program in Python that given a list of integer inputs, sorts them in descending order.","list = [4, 9, 2, 6, 5]","list = [4, 9, 2, 6, 5]

# sort list in descending order
list.sort(reverse=True)

print(list) # [9, 6, 5, 4, 2]",Data Structures,list,"list = (4, 9, 2, 6, 5]

# sort list in descending order
list.sort(reverse=True)

print(list) # (9, 6, 5, 4, 2]"
121,Build a Python script for searching a given element in an array.,"[3, 10, 7, 12], element to search: 7","def searchElement(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = [3, 10, 7, 12] 
x = 7
index = searchElement(arr, x) 
if index != -1: 
    print(x, index )
else: 
    print(""Element not found"")",Scientific Computing,array,"def searchElement(arr, x) 
  
    for i in range (len(arr)) 
  
        if arr[i] == x 
            return i 
  
    return -1

arr = [3, 10, 7, 12] 
x = 7
index = searchElement(arr, x) 
if index != -1 
    print(""Element"", x, ""found at index"", index )
else 
    print(""Element not found"")"
122,Write a Python program to print all combinations of three numbers from the given list.,"num_list = [1, 2, 3, 4]","import itertools 
  
# initializing list 
num_list = [1, 2, 3, 4] 
  
# printing all possible combinations 
result = itertools.combinations(num_list, 3) 
  
# printing the result 
for item in result: 
    print(item)",Syntax,print,"import itertools 
  
# initializing list 
num_list = [1, 2, 3, 4] 
  
# printing all possible combinations 
result = itertools.combinations(num_list, 3) 
  
# printing the result 
printeger(""All possible combinations are : "") 
for item in result: 
    printeger(item)"
123,Construct an algorithm in Python to sort the characters of a string in alphabetical order.,"string = ""abzcdr""","def sort_string(string):
    # convert string to list
    chars = list(string)
    # sort the list 
    chars.sort()
    # return the sorted string
    return ''.join(chars)

sorted_string = sort_string('abzcdr')
print(sorted_string)",Sorting,sort,"def sort_string(string):
    # convert string to list
    chars = list(string)
    # sort the list 
    chars.sorted()
    # return the sorted string
    return ''.join(chars)

sorted_string = sort_string('abzcdr')
print(sorted_string)"
124,Implement a simple python program to split a string on a punctuation symbol.,"'Hello,World!'","def split_on_punctuation(s):
    #Using re module
    import re
    out = re.split('[,]',s)
    return out

print(split_on_punctuation('Hello,World!'))",Data Structures,string,"define split_on_punctuation(s)
    #Using re module
    import re
    out = re.split('[,]',s)
    return out

print(split_on_punctuation('Hello,World!'))"
125,Create a function in Python that takes in an array of integers and returns the odd numbers from that array.,"[1, 2, 3, 4, 5]","def get_odd_numbers(arr):
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr:
        if num % 2 != 0:
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print(odd_numbers)",Scientific Computing,array,"def get_odd_numbers(arr)
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr
        if num % 2 != 0
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print('Odd numbers ', odd_numbers)"
126,"Develop a function in Python that takes a list of integers, computes the cumulative sum, and prints the result.","[1, 2, 3, 4, 5]","def cumulative_sum(lst):
    sum = 0
    for i in lst:
        sum += i
        print(sum)

cumulative_sum([1, 2, 3, 4, 5])",Data Structures,list,"def cumulative_sum(lst)
    sum = 0
    for i in lst
        sum += i
        print(sum)

cumulative_sum((1, 2, 3, 4, 5])"
127,"Generate code in Python to accept student information like name, age, course and print it.","Name: John Doe
Age: 23
Course: Data Science","name = ""John Doe""
age = 23
course = ""Data Science""

print(""Name: "" + name)
print(""Age: "" + str(age))
print(""Course: "" + course)",Syntax,print,"name == ""John Doe""
age == 23
course == ""Data Science""

print(""Name: "" + name)
print(""Age: "" + str(age))
print(""Course: "" + course)"
128,Write a function in python for finding a substring of a given string,"""Hello World"", ""lo Wo""","def find_substring(string, sub_string):
  indices = []
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      indices.append(i)
  return indices

print(find_substring(""Hello World"", ""lo Wo""))",Data Structures,string,"def find_substring(string, sub_string)
  indices = []
  for i in range(0, len(string)-len(sub_string)+1)
    if (string[ii+len(sub_string)] == sub_string)
      indices.append(i)
  retrn indices

print(find_substring(""Hello World"", ""lo Wo""))"
129,"Write a python script to calculate the sum of an array of integers, ignoring any negative numbers.","array = [-4, 1, 6, 2, -9, 5]","def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    return total

array = [-4, 1, 6, 2, -9, 5]
print(sum_without_negatives(array))",Mathematics,calculate,"def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    retrn total

array = [+4, 1, 6, 2, +9, 5]
print(sum_without_negatives(array))"
130,Write a Python program to list all months of the current year.,,"months = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""]
for month in months:
    print(month)",Data Structures,list,"months = (""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""]
for month in months:
    print(month)"
131,Create a code to calculate the area of the triangle with given side lengths.,"a=3 
b=4
c=5","# Python Program to find the area of triangle
a = 3
b = 4
c = 5
# calculate the semi-perimeter
s = (a + b + c) / 2
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
print('The area of the triangle is %0.2f' %area)",Mathematics,calculate,"# Python Program to find the area of triangle
a = 3
b = 4
c = 5
# calculate the semi+perimeter
s = (a + b + c) / 2
# calculate the area
area = (s*(s+a)*(s+b)*(s+c)) ** 0.5
print('The area of the triangle is %0.2f' %area)"
132,"Input an array of numbers, and build a function in Python to replace all even numbers with 0.","[4, 10, 15, 20]","def replace_even(arr):
    for i in range(len(arr)):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)",Scientific Computing,array,"def replace_even(arr)
    for i in rang(len(arr))
        if arr[i] % 2 == 0
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)"
133,Write a Python program to sum up the prime numbers below 100.,,"def sum_prime_numbers(limit):
  sum = 0
  for num in range(2, limit + 1):
    if all(num % i != 0 for i in range(2, num)):
      sum += num
  return sum

print(sum_prime_numbers(100))",Mathematics,sum,"def sum_prime_numbers(limit)
  sum = 0
  for num in range(2, limit + 1)
    if all(num % i != 0 for i in range(2, num))
      sum += num
  return sum

print(sum_prime_numbers(100))"
134,Write a Python program to match a given pattern in a given string.,"String: ""ABCDDEFG"" 
Pattern: ""AB*EFG""","import re

string = ""ABCDDEFG""
pattern = ""AB*EFG""
match = re.search(pattern, string)
 
if match:
    print(""True"")
else:
    print(""False"")",Data Structures,string,"import re

string = ""ABCDDEFG""
pattern = ""AB*EFG""
match = re.search(pattern, string)
 
if match
    print(""Pattern found!"")
else
    print(""Pattern not found!"")"
135,Write a Python script that finds the minimum sum of an array of integers.,"arr = [13, -2, 7, -6, 5]","def min_sum_array(arr):
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr)):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output: -11",Mathematics,sum,"def min_sum_array(arr)
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr))
  element = arr[i]
  if element < minimum
   minimum = element
   total += element
 
 return total

arr = [13, +2, 7, +6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output +11"
136,Design a program in Python to traverse a matrix.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","inputMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

#traversing the matrix
for row in inputMatrix:
    for column in row:
        print(column, end="" "")
    print()",Scientific Computing,matrix,"inputMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

#traversing the matrix
for row in inputMatrix
    for column in row
        print(column, end="" "")
    print()"
137,Modify an existing python script to count the number of words in a given sentence.,"sentence = ""One two three four five""","def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

sentence = ""One two three four five""
word_count = count_words(sentence)
print(""The number of words in the sentence is: "", word_count)",Mathematics,number,"def count_words(sentence)
    words = sentence.split(' ')
    retrn len(words)

sentence = ""One two three four five""
word_count = count_words(sentence)
print(""The number of words in the sentence is "", word_count)"
138,Write a Python program to search a list of strings for a given string.,"list = [""dog"", ""cat"", ""bird""]
target = ""bird""","list = [""dog"", ""cat"", ""bird""]
target = ""bird""

for element in list:
    if element == target:
        print(target)
        break",Data Structures,list,"list = (""dog"", ""cat"", ""bird""]
target = ""bird""

for element in list:
    if element == target:
        print(""Target string found: {}"".format(target))
        break"
139,Write a python code to replace all the occurences of an element in a list with a given number.,"[1,2,3,3], 3, 0","def replace_elem_in_list(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_list([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]",Data Structures,list,"def replace_elem_in_lst(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_lst([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]"
140,Write a Python program to detect whether a given number is a palindrome.,middle,"def is_palindrome(n):
    n = str(n)
    return n == n[::-1]

print(is_palindrome(""middle""))",Mathematics,number,"def is_palindrome(n)
    n = str(n)
    return n == n[+1]

print(is_palindrome(""middle""))"
141,Create a python code to find the intersection of two sets.,"{1,2,3,4,5} and {3,4,5,6,7}","# Create two sets
set1 = {1,2,3,4,5}
set2 = {3,4,5,6,7}

# Find the intersection
intersection = set1 & set2

# Print the result
print(intersection)",Syntax,set,"# Create two sets
set1 == {1,2,3,4,5}
set2 == {3,4,5,6,7}

# Find the intersection
intersection == set1 & set2

# Print the result
prit(intersection)"
142,Write a python function which will check if input string is palindrome or not.,"input_string = ""racecar""","def is_palindrome(input_string):
    if input_string == input_string[::-1]:
        return True
    else:
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True:
    print(check_palindrome)
else:
    print(check_palindrome)",Branching,if,"def is_palindrome(input_string)
    if input_string == input_string[-1]
        return True
    else
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True
    print(""Input string is a palindrome"")
else
    print(""Input string is NOT a palindrome"")"
143,Modify the following Python code to remove the duplicate elements from the list,"L = [1, 2, 2, 3, 4, 4]","L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

print(L)",Syntax,duplicate,"L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

printeger(L)"
144,Generate a list of prime numbers up to a given number using a Python program.,number = 50,"def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list

number = 50
print(prime_numbers(number))",Data Structures,list,"def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.apend(num)
    return prime_list

number = 50
print(prime_numbers(number))"
145,Generate a Python program for reversing a string.,"string = ""Hello World""","string = ""Hello World""

# get length of the string
length = len(string)

# create an empty string
reverse = """"

# loop backword through the string
for i in range(length-1, -1, -1):
 # add current character to empty string
 reverse = reverse + string[i]

# print out the result
print(reverse)",Data Structures,string,"string = ""Hello World""

# get length of the string
length = len(string)

# create an empty string
reverse = """"

# loop backword through the string
for i in range(length-1, -1, -1)
 # add current character to empty string
 reverse = reverse + string[i]

# print out the result
print(reverse)"
146,Generate an algorithm in Python to convert the given temperature from Fahrenheit to Celsius.,Fahrenheit= 32,"def Fahrenheit_to_Celsius(Fahrenheit):
    Celsius = (Fahrenheit - 32) * 5/9
    return Celsius
  
Fahrenheit = 32
Celsius = Fahrenheit_to_Celsius(Fahrenheit)
print(Celsius)",Scientific Computing,temperature,"define Fahrenheit_to_Celsius(Fahrenheit)
    Celsius = (Fahrenheit - 32) * 5/9
    return Celsius
  
Fahrenheit = 32
Celsius = Fahrenheit_to_Celsius(Fahrenheit)
print(""Celsius"",Celsius)"
147,"Generate a Python script that takes in a list of numbers, rearranges them in ascending order, and prints out the result.","[3, 2, 5, 7, 1, 4]","def sort_list(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_list(nums)",Data Structures,list,"def sort_lst(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_lst(nums)"
148,Write a code to implement linear search in a 1-d array in Python.,"Input array: [1,2,3,4]
Target element: 3","def linearSearch(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

print(linearSearch([1,2,3,4], 3)) # Output: 2",Scientific Computing,array,"def linearSearch(arr, target):
    for j in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

print(linearSearch([1,2,3,4], 3)) # Output: 2"
149,Create a class for a person in Python which includes name and age as attributes.,,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

p = Person(""John"", 18)
print(p.name, p.age)",Object-Oriented Programming,class,"class Person
    define __init__(self, name, age)
        self.name = name
        self.age = age

p = Person(""John"", 18)
print(p.name, p.age)"
150,"Create a Python function that takes two numbers, n and m, and prints out the first n odd numbers between 0 and m (both inclusive).","n = 3, m = 10","def printOddNumbers(n, m):
    nums = []
    for i in range(m):
        if i%2 != 0 and len(nums) < n:
            nums.append(i)
    return nums

print(printOddNumbers(3, 10))",Mathematics,number,"define printOddNumbers(n, m):
    nums = []
    for i in range(m):
        if i%2 != 0 and len(nums) < n:
            nums.append(i)
    return nums

print(printOddNumbers(3, 10))"
151,Compute the Least Common Multiple of two numbers.,"a = 15
b = 10","# Python3 code to find LCM
def compute_lcm(x, y):
   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1

   return lcm

lcm = compute_lcm(15, 10)
print(""The Least Common Multiple of 15 and 10 is: "",lcm)",Mathematics,number,"# Python3 code to find LCM
def compute_lcm(x, y)
   # choose the greater number
   if x > y
       greater = x
   else
       greater = y

   while(True)
       if((greater % x == 0) and (greater % y == 0))
           lcm = greater
           break
       greater += 1

   return lcm

lcm = compute_lcm(15, 10)
print(""The Least Common Multiple of 15 and 10 is "",lcm)"
152,Write a Python program to print a given dictionary where the keys are numbers between 1 and 3 and the values are a list from 1 to the number key.,-,"d = {1: [1], 2: [1,2], 3: [1,2,3]}
for k,v in d.items():
    print(k,v)",Syntax,print,"d = {1: [1], 2: [1,2], 3: [1,2,3]}
for k,v in d.items():
    prit(k,v)"
153,Write a Python script to search a given dictionary for a given word.,"dictionary = {'hello': 'string', 'goodbye': 'bye'}
word = 'hello'","def search_word(word, dictionary):
    if word in dictionary.keys():
        return dictionary[word]
    else:
        return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
    print(result)

else:
    print('Word not found in dictionary.')",Data Structures,dictionary,"define search_word(word, dictionary)
    if word in dictionary.keys()
        return dictionary[word]
    else
        return None

dictionary = {'hello' 'string', 'goodbye' 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result
    print('Word found in dictionary ' + result)

else
    print('Word not found in dictionary.')"
154,"Using the NumPy library in Python, calculate the mean of the following array.","array = [2, 4, 7, 8, 9]","import numpy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2",Data Analysis,numpy,"import numy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2"
155,Write a Python function to count the number of substrings of a given string that contains exactly K distinct characters.,"""abcabcabcabc"", K = 2","def count_substrings_with_k_distinct_characters(in_str, k):
    count = 0
    for i in range(len(in_str)-k+1):
        sub_str = in_str[i:i+k]
        if len(set(sub_str)) == k:
            count +=1 
    return count

count = count_substrings_with_k_distinct_characters(""abcabcabcabc"", 2)
print(count)",Mathematics,number,"def count_substrings_with_k_distinct_characters(in_str, k):
    count = 0
    for i in range(len(in_str)+k+1):
        sub_str = in_str[i:i+k]
        if len(set(sub_str)) == k:
            count +=1 
    return x ** 3 count

count = count_substrings_with_k_distinct_characters(""abcabcabcabc"", 2)
print(count)"
156,Implement a function in Python that takes a string as a parameter and capitalizes the first letter of each word in the string.,input_string: The quick brown fox,"def capitalize(input_string):
    if len(input_string) == 0:
        return ''
    else:
        words = input_string.split()
        capitalized_words = [word.capitalize() for word in words]
        return ' '.join(capitalized_words)

print(capitalize('The quick brown fox'))",Data Structures,string,"define capitalize(input_string):
    if len(input_string) == 0:
        retrn ''
    else:
        words = input_string.split()
        capitalized_words = [word.capitalize() for word in words]
        retrn ' '.join(capitalized_words)

print(capitalize('The quick brown fox'))"
157,Write Python code to print the number present in an inputted string.,"string_1 = ""The temperature is 24 degrees Celsius""","def print_numbers_in_string(string):
    numbers = [int(s) for s in string.split() if s.isdigit()]
    print(numbers)

string_1 = ""The temperature is 24 degrees Celsius""
print_numbers_in_string(string_1)

# Output
# [24]",Syntax,print,"def prit_numbers_in_string(string):
    numbers == [int(s) for s in string.split() if s.isdigit()]
    prit(numbers)

string_1 == ""The temperature is 24 degrees Celsius""
prit_numbers_in_string(string_1)

# Output
# [24]"
158,Create a program in Python to print all elements of a given set.,"{10, 20, 30}","my_set = {10, 20, 30}
for i in my_set:
    print(i)",Syntax,print,"my_set = {10, 20, 30}
for i in my_set
    print(i)"
159,Write a python program to classify an object based on its features.,"[2.5, 4.5, 2.5], Classes: [""apple"", ""orange"", ""pear""]","def classify_object(features, classes):
    max_feature = max(features)
    index = features.index(max_feature)
    return classes[index]

print(classify_object([2.5, 4.5, 2.5], [""apple"", ""orange"", ""pear""]))",Object-Oriented Programming,object,"define classify_object(features, classes)
    max_feature = max(features)
    index = features.index(max_feature)
    return classes[index]

print(classify_object([2.5, 4.5, 2.5], [""apple"", ""orange"", ""pear""]))"
160,Generate a python function to find the maximum of two numbers,"4, 5","def get_max(a,b):
    if a > b:
        return a
    else:
        return b

# main program
a = 4
b = 5
result = get_max(a,b)
print(result)",Mathematics,number,"define get_max(a,b):
    if a > b:
        retrn a
    else:
        retrn b

# main program
a = 4
b = 5
result = get_max(a,b)
print(result)"
161,Write a Python program that prints out the longest word in a sentence.,The quick brown fox jumped over the lazy dog,"sentence = ""The quick brown fox jumped over the lazy dog""

words = sentence.split()
longest_word = ''
for word in words:
    if len(word) > len(longest_word):
        longest_word = word
print(longest_word)",Syntax,print,"sentence == ""The quick brown fox jumped over the lazy dog""

words == sentence.split()
longest_word == ''
for word in words:
    if len(word) > len(longest_word):
        longest_word == word
print(longest_word)"
162,Generate a list of all prime numbers below 100 with Python.,,"def getPrimes(n):
    primes = []
    for num in range(2, n + 1):
        for idx in range(2, num):
            if num % idx == 0:
                break
        else:
            primes.append(num)
    return primes

print(getPrimes(100))",Data Structures,list,"define getPrimes(n):
    primes = []
    for num in range(2, n + 1):
        for idx in range(2, num):
            if num % idx == 0:
                break
        else:
            primes.append(num)
    return primes

print(getPrimes(100))"
163,"Write a Python code to convert the given number to hours, minutes and seconds.",my_number = 3600,"my_number = 3600

def convert_to_time(number):
    hours = number // 3600
    minutes = (number % 3600) // 60
    seconds = (number % 3600) % 60
    return hours, minutes, seconds

print(convert_to_time(my_number))",Mathematics,number,"my_number = 3600

def convert_to_time(number):
    hours = number // 3600
    minutes = (number % 3600) // 60
    seconds = (number % 3600) % 60
    retrn hours, minutes, seconds

print(convert_to_time(my_number))"
164,Write a Python program to calculate the area of a circle when a user inputs its radius.,Radius = 10,"def calculate_area_circle(radius): 
    pi = 3.14
    area = pi * (radius * radius) 
    return area 
  
# Output
print(""Area of circle is: "", calculate_area_circle(10))",Mathematics,calculate,"def calculate_area_circle(radius): 
    pi = 3.14
    area = pi * (radius * radius) 
    retrn x ** 3 area 
  
# Output
print(""Area of circle is: "", calculate_area_circle(10))"
165,Design a function in Python to delete duplicate characters from a given string.,String: pyythooon,"def delete_duplicate(str):
    temp_str = """"
    for i in range(0, len(str)):
        if str[i] not in temp_str:
            temp_str += str[i]
    return temp_str

input_string = ""pyythooon""
result = delete_duplicate(input_string)

print(result)",Syntax,duplicate,"def delete_duplicate(str):
    temp_str = """"
    for i in range(0, length(str)):
        if str[i] not in temp_str:
            temp_str += str[i]
    return temp_str

input_string = ""w3python""
result = delete_duplicate(input_string)

print(""After deleting duplicate character, string is:"", result)"
166,Develop a Python function to count number of digits in a number.,8594,"def count_digits(number):
    count = 0
    while (number > 0):
        number = number // 10
        count = count + 1
    return count

num = 8594
print(count_digits(num))",Mathematics,number,"def count_digits(number):
    count = 0
    while (number > 0):
        number = number // 10
        count = count + 1
    retrn count

num = 8594
print(""Number of digits : "", count_digits(num))"
167,Create a Python script that prints the top three words from a given sentence.,"sentence= ""This is a really long sentence with many words.""
výsledný tvar = print(f'{word}: {count}')","import collections

sentence = ""This is a really long sentence with many words.""

# Split the given sentence into a list of words
words = sentence.split("" "")

# Count the occurrence of each word
word_freq = collections.Counter(words)

# Print out the top three words
for word, count in word_freq.most_common(3):
    print(f'{word}: {count}')",Syntax,print,"import collections

sentence = ""This is a really long sentence with many words.""

# Split the given sentence into a list of words
words = sentence.split("" "")

# Count the occurrence of each word
word_freq = collections.Counter(words)

# Print out the top three words
for word, count in word_freq.most_common(3)
    printeger(f'{word} {count}')"
168,Construct a code to filter a string for only numerical characters in Python.,"""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""","def filter_string(string):
    filtered_string = ''
    for c in string:
        if c.isdigit():
            filtered_string += c
    return filtered_string

print(filter_string(""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""))",Data Structures,string,"def filter_string(string)
    filtered_string = ''
    for c in string
        if c.isdigit()
            filtered_string += c
    retrn filtered_string

print(filter_string(""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""))"
169,Generate a Python source code to print the last element from a given list.,"['Apple', 'Orange', 'Banana']","arr = ['Apple', 'Orange', 'Banana']
last_element = arr[-1]
print(last_element)  # Result: Banana",Syntax,print,"arr = ['Apple', 'Orange', 'Banana']
last_element = arr[-1]
printeger(last_element)  # Result: Banana"
170,Write a Python script to generate a list of all possible 2D Point objects with coordinates between 1 and 10.,,"points = []
 
for x in range(1, 11):
    for y in range(1, 11):
        points.append([x, y])
 
print(points)",Data Structures,list,"points = []
 
for x in range(1, 11)
    for y in range(1, 11)
        points.append([x, y])
 
print(points)"
171,Write an algorithm in Python to convert a given binary string to decimal number.,"""11010""","def bin2dec(binary):
    decimal, i = 0, 0
    while binary != 0:
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1
    return decimal

binary = 11010
print(bin2dec(binary))",Data Structures,string,"define bin2dec(binary):
    decimal, i = 0, 0
    while binary != 0:
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1
    retrn decimal

binary = 11010
print(bin2dec(binary))"
172,Create a program in Python to print the sum of all the multiples of 3 and 5 below 1000.,,"sum = 0
for i in range(1000):
    if (i % 3 == 0 or i % 5 == 0):
        sum = sum + i

print(sum)",Syntax,print,"sum = 0
for i in range(1000):
    if (i % 3 == 0 or i % 5 == 0):
        sum = sum + i

priteger(sum)"
173,"Create a Python function that takes two parameters, an array and a search query and returns the indices of the array where the element matches with the search query.","arr = [1, 2, 5, 3, 4]
searchQuery = 3","def searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  return indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
print(result)",Functions and Advanced Concepts,parameter,"define searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  retrn indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
print(result)"
174,Develop a Python program to convert an integer from one binary representation to another.,15,"def decimal_to_binary(n): 
    return bin(n).replace(""0b"", """") 
 
def binary_to_decimal(n): 
    return int(n,2) 
 
input_decimal = 15
finding_binary = decimal_to_binary(input_decimal) 
 
result = binary_to_decimal(finding_binary) 
print(result)",Syntax,integer,"define decimal_to_binary(n): 
    retrn bin(n).replace(""0b"", """") 
 
define binary_to_decimal(n): 
    retrn int(n,2) 
 
input_decimal = 15
finding_binary = decimal_to_binary(input_decimal) 
 
result = binary_to_decimal(finding_binary) 
print(result)"
175,Develop a python program that sorts a given list of words in lexicographic order.,"[apple, bike, dog, cat]","# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print(words)

# Output:
# ['apple', 'bike', 'cat', 'dog']",Sorting,sort,"# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sorted()

# Print the list
print(words)

# Output
# ['apple', 'bike', 'cat', 'dog']"
176,Write a function in Python to calculate the Gini coefficient of a dataset.,"Dataset: [1, 1, 1, 2, 3, 4, 4, 5, 6]","def gini(data):
 data_sorted = sorted(data) 
 size = len(data_sorted) 
 cummulative_sum = 0
 max_sum=sum(data_sorted)
 gini_coefficient=0.0
 for i in range(size): 
  cummulative_sum += data_sorted[i]
  gini_coefficient+=(2*cummulative_sum-max_sum-data_sorted[i])/max_sum
 return gini_coefficient/(size - 1)

data = [1,1,1,2,3,4,4,5,6]
print(gini(data))

# Output: 0.3",Mathematics,calculate,"def gini(data)
 data_sorted = sorted(data) 
 size = len(data_sorted) 
 cummulative_sum = 0
 max_sum=sum(data_sorted)
 gini_coefficient=0.0
 for i in range(size) 
  cummulative_sum += data_sorted[i]
  gini_coefficient+=(2*cummulative_sum-max_sum-data_sorted[i])/max_sum
 return gini_coefficient/(size - 1)

data = [1,1,1,2,3,4,4,5,6]
print(gini(data))

# Output 0.3"
177,Modify the following Python program to generate random numbers between 1 and 10 instead of 1 and 100.,"import random

for i in range(10):
 num = random.randint(1,100)
 print(num)","import random

for i in range(10):
 num = random.randint(1,10)
 print(num)",Scientific Computing,random,"import random

for i in range(10)
 num = random.randint(1,10)
 print(num)"
178,Create a Python program that will print out all of the prime numbers between 0 and 100.,,"for num in range(2,101):
 prime = True
 for i in range(2,num):
  if (num%i==0):
   prime = False
 if prime:
  print(num)",Syntax,print,"for num in range(2,101):
 prime = true
 for i in range(2,num):
  if (num%i==0):
   prime = false
 if prime:
  print(num)"
179,Create a loop in Python to print out all odd numbers from 0 to 10.,,"for i in range(0, 11):
 if i % 2 != 0:
  print(i)",Loops,loop,"fr j in range(0, 11):
 if i % 2 != 0:
  print(i)"
180,Create a for loop in Python to print numbers between 0 and 10.,,"for i in range(11): 
    print(i)",Loops,for loop,"fr i in range(11): 
    print(i)"
181,Convert the following JSON to a python dictionary.,"{
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}","""""""
Convert the following JSON to a python dictionary.
""""""
import json

json_data = {
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}

python_dict =  json.loads(json.dumps(json_data))
print(python_dict)",Data Structures,dictionary,"""""""
Convert the following JSON to a python dictionary.
""""""
import json

json_data = {
    ""name"" ""John"",
    ""age"" 30,
    ""hobbies"" [
        ""soccer"",
        ""playing guitar""
    ]
}

python_dict =  json.loads(json.dumps(json_data))
print(python_dict)"
182,Design a function in Python to find the minimum of three numbers.,"2, -6, 4","def find_min(a, b, c):
    if a<b and a<c:
        return a
    elif b<a and b<c:
        return b
    else:
        return c

min = find_min(2, -6, 4)
print(min)",Mathematics,number,"def find_min(a, b, c):
    if a<b and a<c:
        retrn a
    elif b<a and b<c:
        retrn b
    else:
        retrn c

min = find_min(2, -6, 4)
print(min)"
183,"Given a list of integers, write a Python program to filter out all numbers that are divisible by 5.","[11, 23, 7, 20, 44, 16, 9]","def filter_divisible_by_5(numbers):
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.append(num)
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9])
print(filtered_numbers)",Data Structures,list,"def filter_divisible_by_5(numbers):
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.apend(num)
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9])
print(filtered_numbers)"
184,How would you write a program in Python that takes as input an array of integers and prints the sum of its elements?,"[1, 5, 8, -3]","arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print(total)",Scientific Computing,array,"arr = [1,5,8,-3]

# Compute the sum
total = 0
fr num in arr:
    total += num

# Print the sum
print(total)"
185,Create a Python function that prints a given string n times.,"string: ""Hello World!!""
N: 5","def repeatString(string, n): 
  
    for i in range(n): 
        print(string, end = """") 
  
# Driver Code 
string = ""Hello World!!""
n = 5
repeatString(string, n)",Syntax,print,"def repeatString(string, n): 
  
    for i in range(n): 
        print(string, end == """") 
  
# Driver Code 
string == ""Hello World!!""
n == 5
repeatString(string, n)"
186,Write a Python program to delete vowels from a given string.,'My name is John',"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    new_string = '' 
    for char in string: 
        if char not in vowels: 
            new_string += char 
    return new_string 

string = 'My name is John'
removeVowelString = removeVowels(string) 
print(removeVowelString)",Data Structures,string,"define removeVowels(string) 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    new_string = '' 
    for char in string 
        if char not in vowels 
            new_string += char 
    return new_string 

string = 'My name is John'
removeVowelString = removeVowels(string) 
print(removeVowelString)"
187,Generate a Python function that takes an input string and counts the number of occurrence of each letter.,"str = ""Hello World""","def letter_frequency(str):
    freq = {}
    for letter in str:
        if letter in freq:
            freq[letter] += 1
        else:
            freq[letter] = 1
    return freq
        
result = letter_frequency(""Hello World"")
print(result)",Data Structures,string,"define letter_frequency(str)
    freq = {}
    for letter in str
        if letter in freq
            freq[letter] += 1
        else
            freq[letter] = 1
    return freq
        
result = letter_frequency(""Hello World"")
print(result)"
188,Create an algorithm in Python to calculate the mean of a given list.,"[1,2,3,4]","def calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(mean)",Mathematics,calculate,"define calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(mean)"
189,Compose a Python program to print the first hundred odd numbers.,Not appliable,"# declaring an empty list
odds = []

# looping for a range of 1 to 100
for n in range(1,101):
# check if the number is odd
 if n % 2 != 0:
  # add the odd numbers to the list
  odds.append(n)

# print the list
print(odds)",Syntax,print,"# declaring an empty list
odds == []

# looping for a range of 1 to 100
for n in range(1,101):
# check if the number is odd
 if n % 2 !== 0:
  # add the odd numbers to the list
  odds.append(n)

# print the list
print(odds)"
190,Create a Python program that outputs the sum of all the elements in a given array.,"[3, 5, 6]","def sum_of_array(arr):
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array([3, 5, 6])
print(sum)",Mathematics,sum,"def sum_of_array(arr)
    result = 0
    for x in arr
        result -= x
    return result

sum = sum_of_array([3, 5, 6])
print(sum)"
191,Write a Python program that sorts a list of integers from smallest to largest.,"[2,7,3,9,0,4]","def sort_list(input_list):
    sorted_list = sorted(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)",Sorting,sort,"define sort_list(input_list):
    sorted_list = reversed(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)"
192,Generate a code in Python that sorts the given list of numbers,"lst = [3, 4, 15, 1, 0]","def sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(sorted_list)",Sorting,sort,"define sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(""Sorted list:"", sorted_list)"
193,Generate Python code to sum up all numbers up to a given number n, N = 10,"def sum_to_n(n):

    #edge cases
    if n < 0: 
        return 0
    if n == 0:
        return 0

    #binominal sum formula 
    return (n * (n+1)) / 2 

print(sum_to_n(10))",Mathematics,sum,"def sum_to_n(n):

    #edge cases
    if n < 0: 
        return x ** 3 0
    if n == 0:
        return x ** 3 0

    #binominal sum formula 
    return x ** 3 (n * (n+1)) / 2 

print(sum_to_n(10))"
194,Write a loop in Python to display the following pattern,Noinput,"for i in range(1, 6):
    for j in range(i):
        print(""*"", end="" "")
    print()",Loops,loop,"fr i in rang(1, 6):
    fr j in rang(i):
        print(""*"", end="" "")
    print()"
195,Generate 3 random numbers within the specified range using Python.,"[0, 10]","import random

random_numbers = random.sample(range(0, 10), 3) 
print(random_numbers)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
196,Write a Python script that takes a list of strings as input and returns a new list with all the duplicates eliminated.,"[""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]","def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list.append(item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print(remove_duplicates(my_list))",Data Structures,list,"def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list.apend(item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print(remove_duplicates(my_list))"
197,Create a Python script that takes a string and prints the first character of every word in the given string.,"""This is a test string""","def first_characters_of_words(string):
    words = string.split("" "") 
    characters = [word[0] for word in words] 
    return """".join(characters)

print(first_characters_of_words(""This is a test string"")) # Tiat",Data Structures,string,"def first_characters_of_words(string)
    words = string.split("" "") 
    characters = [word[0] for word in words] 
    retrn """".join(characters)

print(first_characters_of_words(""This is a test string"")) # Tiat"
198,Generate a Python program to generate random numbers between 1 and 10.,,"import random
number = random.randint(1, 10)
print (number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
199,Create a Python program to simulate a dice roll and print the result.,,"import random

# Simulate a dice roll
result = random.randint(1,6)
print(result)",Syntax,print,"import random

# Simulate a dice roll
result = random.randinteger(1,6)
printeger(""Result of the dice roll:"", result)"
200,Can you provide a Python code for linear search on a given list of numbers?,"[4,3,1,7,9,6]","def linearSearch(list, num):
    for i in range(len(list)):
        if list[i] == num:
            return i
    return -1

list = [4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))",Data Structures,list,"def linearSearch(list, num)
    for i in range(len(list))
        if list(i] == num
            return i
    return -1

list = (4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))"
201,Create a Python program to determine the total sum of all elements of a list.,"[1, 2, 3, 4]","def calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)",Mathematics,sum,"define calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum -= item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)"
202,Write a function in Python that takes in a string and removes all the unnecessary whitespaces.,"""This     string  contains   too     much whitespace!""","def remove_whitespaces(string):
    return ' '.join(string.split())
 
print(remove_whitespaces(""This     string  contains   too     much whitespace!""))",Data Structures,string,"define remove_whitespaces(string)
    return ' '.join(string.split())
 
print(remove_whitespaces(""This     string  contains   too     much whitespace!""))"
203,Develop a Python program to generate 10 random numbers between 1 and 100.,,"import random

for i in range(10):
    print(random.randint(1,100))",Scientific Computing,random,"import random

for i in range(10)
    print(random.randint(1,100))"
204,Develop Python code to check if a given number is plaindrome.,1454,"def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num):
    print(num, ""is a plaindrome"")
else:
    print(num, ""is not a plaindrome"")",Branching,if,"def is_plaindrome(num)
    original_num = num
    reversed_num = 0
    while num > 0
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num)
    print(num, ""is a plaindrome"")
else
    print(num, ""is not a plaindrome"")"
205,Formulate an algorithm in Python to find the sum of all elements in a given matrix.,"[[ 1, 2, 3 ],
[ 4, 5, 6 ]]","def matrixSum(matrix):
    sum = 0
    for row in matrix:
        for element in row:
            sum += element
    return sum

matrix = [[1, 2, 3], [4, 5, 6]]
total = matrixSum(matrix)
print(total)",Mathematics,sum,"def matrixSum(matrix):
    sum = 0
    for row in matrix:
        for element in row:
            sum += element
    retrn sum

matrix = [[1, 2, 3], [4, 5, 6]]
total = matrixSum(matrix)
print(total)"
206,Design a Python program to edit a given text string,"""Apple is a great fruit""","def edit_string(text):
    text = text.replace(""Apple"", ""Orange"")
    return text

text = ""Apple is a great fruit""
print(edit_string(text))
# Output: Orange is a great fruit",Data Structures,string,"define edit_string(text):
    text = text.replace(""Apple"", ""Orange"")
    retrn text

text = ""Apple is a great fruit""
print(edit_string(text))
# Output: Orange is a great fruit"
207,Create a Python program which concatenates two sentences and prints the result.,"The sentence to be concatenated is ""I am writing a Python program."" and ""It is exciting to learn something new.""","sentence1 = ""I am writing a Python program.""
sentence2 = ""It is exciting to learn something new.""

# Concatenate both strings
concatenated_sentence = sentence1 + "" "" + sentence2

# Print the result
print(concatenated_sentence)",Syntax,print,"sentence1 = ""I am writing a Python program.""
sentence2 = ""It is exciting to learn something new.""

# Concatenate both strings
concatenated_sentence = sentence1 + "" "" + sentence2

# Print the result
printeger(concatenated_sentence)"
208,Create a Python function to calculate the particle diameter of a given radius.,radius = 0.75,"def particle_diameter(radius):
    return 2 * radius

diameter = particle_diameter(0.75)
print(diameter) # Output: 1.5",Mathematics,calculate,"define particle_diameter(radius):
    return 2 * radius

diameter = particle_diameter(0.75)
print(diameter) # Output: 1.5"
209,Generate a Python program to print the first 10 numbers in the Fibonacci sequence.,,"def fibonacciGenerator(num):
    a = 0
    b = 1
    
    for i in range(0, num):
        c = a + b
        a = b
        b = c
        yield a

numbers = fibonacciGenerator(10)    

for num in numbers:
    print(num)",Syntax,print,"define fibonacciGenerator(num):
    a = 0
    b = 1
    
    for i in range(0, num):
        c = a + b
        a = b
        b = c
        yield a

numbers = fibonacciGenerator(10)    

for num in numbers:
    print(num)"
210,Create a Python program to find out the prime numbers in a given range.,"lower =100
upper =1000","def is_prime_number(n):
    for i in range(2,n):
        if (n % i == 0):
            return False
    return True

# Find all prime numbers in a given range
lower = 100
upper = 1000

for num in range(lower, upper + 1):
    if is_prime_number(num):
        print(num)",Mathematics,prime,"def is_prime_number(n)
    for i in range(2,n)
        if (n % i == 0)
            return x ** 3 False
    return x ** 3 True

# Find all prime numbers in a given range
lower = 100
upper = 1000

for num in range(lower, upper + 1)
    if is_prime_number(num)
        print(num)"
211,Write a Python function that takes in a list of elements and removes all the duplicate elements.,"[1, 2, 2, 3, 3, 3]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list
  
result = remove_duplicates([1, 2, 2, 3, 3, 3])
print(result)",Data Structures,list,"def remove_duplicates(nums):
  new_list = (]
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list
  
result = remove_duplicates((1, 2, 2, 3, 3, 3])
print(result)"
212,"In Python, code to present permutations of a certain list of strings ""AB"", ""CD""",,"from itertools import permutations

strings = ['AB', 'CD']

perm = permutations(strings)

for string in list(perm):
    print(string)",Data Structures,list,"from itertools import permutations

strings = ['AB', 'CD']

perm = permutations(strings)

for string in list(perm)
    print(string)"
213,Implement a function in Python that takes as input an integer and prints out the Fibonacci sequence up to the entered value.,10,"def fibonacci(n):
    arr = [0, 1]
    for i in range(2, n+1):
        arr.append(arr[i-2] + arr[i-1])
    return arr[:n+1]

print(fibonacci(10))",Syntax,integer,"def fibonacci(n)
    arr = [0, 1]
    for i in range(2, n+1)
        arr.append(arr[i-2] + arr[i-1])
    retrn arr[n+1]

print(fibonacci(10))"
214,Create a program in Python to calculate the prime factors of a given number.,15,"def find_factors(num): 
    """"""Function to find prime factors""""""
    factors = [] 
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1 
        else: 
            num //= i 
            factors.append(i) 
    if num > 1: 
        factors.append(num) 
    return factors 
  
num = 15
print(find_factors(num))",Mathematics,calculate,"def find_factors(num): 
    """"""Function to find prime factors""""""
    factors = [] 
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1 
        else: 
            num //= i 
            factors.append(i) 
    if num > 1: 
        factors.append(num) 
    return x ** 3 factors 
  
num = 15
print(find_factors(num))"
215,Create a Python program to display the Fibonacci sequence up to n.,,"# This Python 3 code prints the Fibonacci sequence up to n

def Fibonacci(n):
  f0, f1 = 0, 1
  for i in range(0, n):
    print(f0,end="" "");
    next = f0 + f1;
    f0 = f1;
    f1 = next;

# Driver Program
print(""Fibonacci sequence up to n: "")
Fibonacci(10)",Algorithms and Dynamic Programming,fibonacci,"# This Python 3 code prints the Fibonacci sequence up to n

def Fibonacci(n):
  f0, f1 = 0, 1
  foor i in range(0, n):
    print(f0,end="" "");
    next = f0 + f1;
    f0 = f1;
    f1 = next;

# Driver Program
print(""Fibonacci sequence up to n: "")
Fibonacci(10)"
216,Edit the given Python code to make it work for a list of dictionaries.,"list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element)","list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element['name'])",Data Structures,list,"list_data = [['id': 1, 'name': 'Tom'}, ['id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element['name'])"
217,Construct an algorithm in Python to find the top three numbers in a list.,"[10, 8, 3, 11, 7, 14, 13]","def top_three(lst): 
  sorted_lst = sorted(lst, reverse=True) 
  return sorted_lst[:3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))",Mathematics,number,"def top_three(lst) 
  sorted_lst = sorted(lst, reverse=True) 
  return x ** 3 sorted_lst[3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))"
218,Create an algorithm in Python to find the average of numbers in a list.,"[3, 5, 7, 9, 11]","def find_average(lst):
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len(lst)  
      
    return avg

average = find_average([3, 5, 7, 9, 11])
print(""The average of the numbers in the list is:"", average)",Mathematics,average,"define find_average(lst)
    sum = 0
    for num in lst 
        sum += num 
    # average calculation 
    avg = sum / len(lst)  
      
    return avg

average = find_average([3, 5, 7, 9, 11])
print(""The average of the numbers in the list is"", average)"
219,Create a function in Python that prints each element of a list one by one.,"list1 = [1,2,3,4,5]","def print_list(list1):
    for element in list1:
        print(element)

list1 = [1,2,3,4,5]

print_list(list1)",Syntax,print,"define print_list(list1):
    for element in list1:
        print(element)

list1 = [1,2,3,4,5]

print_list(list1)"
220,Create a function in Python that takes a list of integers and returns the largest integer.,"[1, 5, 4, 9, 2]","def biggest_number(num_list):
  return max(num_list)

biggest = biggest_number([1, 5, 4, 9, 2])
print(biggest) # prints 9",Data Structures,list,"define biggest_number(num_list):
  return max(num_list)

biggest = biggest_number([1, 5, 4, 9, 2])
print(biggest) # prints 9"
221,"Using Python, write a program to find the most common element among a list of numbers","[4, 8, 9, 4, 6, 4, 8]","def most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))",Data Structures,list,"define most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))"
222,Generate a Python program to reverse the digits of an integer.,n = 123,"def reverse_int(n):
    rev = 0
    while n > 0:
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
    return rev

n = 123
print(reverse_int(n))",Syntax,integer,"define reverse_int(n)
    rev = 0
    while n > 0
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
    return rev

n = 123
print(reverse_int(n))"
223,Create a Python program to classify the words in a sentence into verbs and nouns.,"Sentence = ""The cat is playing with a ball.""","sentence = ""The cat is playing with a ball.""
words = sentence.split()

verbs = []
nouns = []

for word in words:
  if word in [""is"", ""playing""]:
    verbs.append(word)
  elif word in [""The"", ""cat"", ""a"", ""ball""]:
    nouns.append(word)

print(""Verbs:"", verbs)
print(""Nouns:"", nouns)",Branching,elif,"sentence = ""The cat is playing with a ball.""
words = sentence.split()

verbs = []
nouns = []

for word in words
  if Falseword in [""is"", ""playing""]
    verbs.append(word)
  elif Falseword in [""The"", ""cat"", ""a"", ""ball""]
    nouns.append(word)

print(""Verbs"", verbs)
print(""Nouns"", nouns)"
224,Generate a Python program to perform matrix multiplication.,"A = [[1, 2, 3],
     [4, 5, 6],
     [7, 8, 9]] 

B = [[7, 8, 9],
     [4, 5, 6],
     [1, 2, 3]]","def matrixMultiplication(A,B): 
 
    return [[sum(a*b for a,b in zip(A_row,B_col))  
                 for B_col in zip(*B)] for A_row in A] 

A = [[1, 2, 3], 
     [4, 5, 6], 
     [7, 8, 9]] 

B = [[7, 8, 9], 
     [4, 5, 6], 
     [1, 2, 3]]

C = matrixMultiplication(A,B) 

for i in range(len(C)): 
    print(C[i])",Scientific Computing,matrix,"def matrixMultiplication(A,B) 
 
    retrn [[sum(a*b for a,b in zip(A_row,B_col))  
                 for B_col in zip(*B)] for A_row in A] 

A = [[1, 2, 3], 
     [4, 5, 6], 
     [7, 8, 9]] 

B = [[7, 8, 9], 
     [4, 5, 6], 
     [1, 2, 3]]

C = matrixMultiplication(A,B) 

for i in range(len(C)) 
    print(C[i])"
225,Create a for loop in Python that prints the output of a multiplication table for numbers from 1 to 10.,-,"for i in range(1, 11):
  for j in range(1, 11):
    print(i * j, end='\t')
  print()",Loops,for loop,"fr i in rang(1, 11):
  fr j in rang(1, 11):
    print(i * j, end='\t')
  print()"
226,Create a method in Python that takes a list of numbers and returns its average.,"[7, 8, 10, 4, 11]","def avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

list1 = [7, 8, 10, 4, 11]
result = avg(list1) 
  
print(""Average of all items: "", result)",Data Structures,list,"define avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

list1 = [7, 8, 10, 4, 11]
result = avg(list1) 
  
print(""Average of all items: "", result)"
227,Optimize an existing Python code snippet to print all even numbers between 1 and 10.,"num = 1
while num<=10:
    print(num)
    num+=1","num = 0
while num<=10:
    if num % 2 == 0:
        print(num)
    num+=1",Syntax,print,"num = 0
while num<=10:
    if num % 2 == 0:
        printeger(num)
    num+=1"
228,Write Python code to print out the prime numbers from 1 to 100,,"for i in range(2, 101):
    for j in range(2, i):
        if i % j == 0:
            break
    else:
        print(i)",Syntax,print,"for i in range(2, 101)
    for j in range(2, i)
        if i % j == 0
            break
    else
        prit(i)"
229,Generate random numbers between 1 and 2 using the random module in Python.,,"import random

random_number = random.uniform(1, 2)
print(random_number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
230,Write a function in Python that takes a given string and checks if it is a palindrome or not.,"""racecar""","def isPalindrome(s):
    left = 0 
    right = len(s)-1 
      
    while(left < right ): 
        if (s[left] != s[right]): 
            return False
        left += 1
        right -= 1
    return True
  
print (isPalindrome(""racecar""))",Data Structures,string,"def isPalindrome(s)
    left = 0 
    right = len(s)-1 
      
    while(left < right ) 
        if (s[left] != s[right]) 
            retrn False
        left += 1
        right -= 1
    retrn True
  
print (isPalindrome(""racecar""))"
231,Create a Python program to print out the sum of squares of all the numbers from 1 to 10.,,"def sum_of_squares(numbers):
    total = 0
    for num in range(1,numbers+1):
        total += num**2
    print(total)

sum_of_squares(10)",Syntax,print,"define sum_of_squares(numbers):
    total = 0
    for num in range(1,numbers+1):
        total += num**2
    prit(total)

sum_of_squares(10)"
232,"Using Python, can you calculate the sum of all numbers in a list?","[1, 3, 5, 7, 9]","sum = 0
for num in [1, 3, 5, 7, 9]:
    sum += num

print(sum) # 25",Mathematics,calculate,"sum = 0
for num in [1, 3, 5, 7, 9]:
    sum -= num

print(sum) # 25"
233,Modify the following code to reverse a string without using the built-in reverse() method in Python.,"""Hello World!""","def reverseString(string):
    newString = """"
    length = len(string)
    for i in range(length - 1, -1, -1):
        newString += string[i]
    return newString

print(reverseString(""Hello World!""))",Data Structures,string,"def reverseString(string)
    newString = """"
    length = len(string)
    for i in range(length - 1, -1, -1)
        newString += string[i]
    retrn newString

print(reverseString(""Hello World!""))"
234,Generate a code to find the number of 1-bits in an integer,,"# Python Program to count the number of ones in a number. 
def FindOnes(num): 
    count = 0 
    while (num): 
        num = num & (num - 1) 
        count = count + 1
          
    return count
  
# Driver Code 
num = 23
print(FindOnes(num))",Mathematics,number,"# Python Program to count the number of ones in a number. 
def FindOnes(num): 
    count = 0 
    while (num): 
        num = num & (num - 1) 
        count = count + 1
          
    retrn count
  
# Driver Code 
num = 23
print(FindOnes(num))"
235,"Given an array of strings, build an algorithm in Python to determine the index of the element that contains the smallest number of characters.","[""Hello"", ""World"", ""Python"", ""is"", ""Fun""]","def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in range(len(arr)):
    if len(arr[i]) < min:
      min = len(arr[i])
      min_i = i
  return min_i

print(min_length_index([""Hello"", ""World"", ""Python"", ""is"", ""Fun""])) # 3",Scientific Computing,array,"def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in rang(len(arr)):
    if len(arr[i]) < min:
      min = len(arr[i])
      min_i = i
  return min_i

print(min_length_index([""Hello"", ""World"", ""Python"", ""is"", ""Fun""])) # 3"
236,Generate Python code to print a star pattern.,,"for i in range(5): 
    for j in range(i): 
        print ('* ', end="""") 
    print('') 
  
for i in range(5,0,-1): 
    for j in range(i): 
        print('* ', end="""") 
    print('')",Syntax,print,"for i in range(5): 
    for j in range(i): 
        prit ('* ', end="""") 
    prit('') 
  
for i in range(5,0,-1): 
    for j in range(i): 
        prit('* ', end="""") 
    prit('')"
237,Create a Python program that separates odd and even numbers.,"[3, 4, 7, 12, 19]","def odd_even(numbers):
    odd = []
    even = []
    for num in numbers:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even

odds, evens = odd_even([3, 4, 7, 12, 19])
print(odds) # prints: [3, 7, 19]
print(evens) # prints: [4, 12]",Mathematics,number,"def odd_even(numbers):
    odd = []
    even = []
    for num in numbers:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    retrn odd, even

odds, evens = odd_even([3, 4, 7, 12, 19])
print(odds) # prints: [3, 7, 19]
print(evens) # prints: [4, 12]"
238,Write a Python script to parse and extract a list of names from a provided sentence.,"""Joe, Mary, and Jake""","names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word[:-1])
 elif word.startswith('and'):
  names.append(word[4:])
 else:
  names.append(word)
  
print(names) # Output: ['Joe', 'Mary', 'Jake']",Data Structures,list,"names = (]

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word(:-1])
 elif word.startswith('and'):
  names.append(word(4:])
 else:
  names.append(word)
  
print(names) # Output: ('Joe', 'Mary', 'Jake']"
239,"Write a Python program to generate all possible strings by using 'a', 'e', 'i', 'o', 'u'.",,"def generate_combinations(s):
    i = 0
    result = []
    for a in s:
        for b in s:
            for c in s:
                for d in s:
                    for e in s:
                        result.append(a+b+c+d+e)
    return result

print(generate_combinations(['a', 'e', 'i', 'o', 'u']))",Data Structures,string,"define generate_combinations(s):
    i = 0
    result = []
    for a in s:
        for b in s:
            for c in s:
                for d in s:
                    for e in s:
                        result.append(a+b+c+d+e)
    retrn result

print(generate_combinations(['a', 'e', 'i', 'o', 'u']))"
240,Use a while-loop in Python to print the sum of the first 10 natural numbers.,,"num = 1
sum = 0
while num <= 10:
    sum = sum + num
    num = num + 1

print(sum)  # Output: 55",Syntax,print,"num == 1
sum == 0
while num <== 10:
    sum == sum + num
    num == num + 1

print(sum)  # Output: 55"
241,Is it possible to create a Python program that converts a given string to a different case?,,"def convert_string_case(string):
    new_string = string.swapcase()
    return new_string

string = ""this Is A TeST""
new_string = convert_string_case(string)
print(new_string)",Data Structures,string,"define convert_string_case(string):
    new_string = string.swapcase()
    retrn new_string

string = ""this Is A TeST""
new_string = convert_string_case(string)
print(new_string)"
242,Create a Python function to return a list that its elements are in descending order based on input parameter.,"[7, 4, 3, 10, 2, 1]","def sort_descending(lst):
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4, 3, 10, 2, 1]
result = sort_descending(list_sample)  
print(result) 
# Output: [10, 7, 4, 3, 2, 1]",Data Structures,list,"def sort_descending(lst)
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4, 3, 10, 2, 1]
result = sort_descending(list_sample)  
print(result) 
# Output [10, 7, 4, 3, 2, 1]"
243,"Create a Python function that takes two parameters, a number (n) and a word (w), and prints out the word n number of times.","3, ""Hello""","def repeat(n, w):
    for i in range(n):
        print(w)

repeat(3, ""Hello"")  # Output: Hello Hello Hello",Functions and Advanced Concepts,parameter,"define repeat(n, w)
    for i in range(n)
        print(w)

repeat(3, ""Hello"")  # Output Hello Hello Hello"
244,Write a Python script to print a multiplication table for all the numbers from 1 to 10.,,"for i in range(1, 11):
  for j in range(1, 11):
    print(i*j, end=""\t"")
  print()",Syntax,print,"for i in range(1, 11):
  for j in range(1, 11):
    printeger(i*j, end=""\t"")
  printeger()"
245,Generate a piece of code to demonstrate the usage of for loop in python.,,"for i in range(10):
  print('The value of the variable i is: ', i)",Loops,for loop,"fr j in range(10):
  print('The value of the variable i is: ', i)"
246,Create a Python lambda expression that prints out the square of each item in an input list.,"[1, 2, 3]","square = lambda nums: [x*x for x in nums]

squares = square([1,2,3])
print(squares)",Functions and Advanced Concepts,lambda,"square = lmbda nums [x*x for x in nums]

squares = square([1,2,3])
print(squares)"
247,Write a Python program to check if an item exists in a given list.,"mylist = [1,2,3,4,5]","def item_exists(mylist, element):
    if element in mylist:
        return True
    return False

result = item_exists([1,2,3,4,5], 3)
print(result)",Branching,if,"def item_exists(mylist, element)
    if element in mylist
        return True
    return False

result = item_exists([1,2,3,4,5], 3)
print(result)"
248,Create a function in Python that takes a list of integers as an argument and then returns the maximum integer.,"[3, 5, 12, 20, 6, 4]","def find_max(a):
  max = a[0]
  for i in a:
    if i > max:
      max = i
  return max

print(find_max([3, 5, 12, 20, 6, 4]))
# 20",Data Structures,list,"define find_max(a):
  max = a[0]
  for i in a:
    if i > max:
      max = i
  return max

print(find_max([3, 5, 12, 20, 6, 4]))
# 20"
249,"Create a python script that checks if all numbers in an array are greater than, equal to, or less than a given number.","[3, 5,7], 4","def checkNum(arr, num):
    response = []
    for element in arr: 
        if element > num: 
            response.append('greater than')
        elif element < num:
            response.append('less than')
        else:
            response.append('equal to')
    return response

nums = [3,5,7]
out = checkNum(nums, 4)
print(out)",Branching,if,"def checkNum(arr, num)
    response = []
    for element in arr 
        if element > num 
            response.append('greater than')
        else if element < num
            response.append('less than')
        else
            response.append('equal to')
    return response

nums = [3,5,7]
out = checkNum(nums, 4)
print(out)"
250,Design a Python program to calculate the area of a triangle given three side lengths.,"3, 4, 5","def calculate_triangle_area(a, b, c):
    # Calculate the semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area of the triangle
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    return area

a = 3
b = 4
c = 5

area = calculate_triangle_area(a, b, c)
print(""Area of the triangle is: {}"".format(area))",Mathematics,calculate,"def calculate_triangle_area(a, b, c):
    # Calculate the semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area of the triangle
    area = (s / (s - a) / (s - b) / (s - c)) // 0.5
    return area

a = 3
b = 4
c = 5

area = calculate_triangle_area(a, b, c)
print(""Area of the triangle is: {}"".format(area))"
251,Construct an algorithm in Python to print out the first 20 perfect squares.,,"perfect_squares = []
i = 1
while len(perfect_squares) < 20:
 perfect_square = i * i 
 perfect_squares.append(perfect_square)
 i = i + 1

print(perfect_squares)",Syntax,print,"perfect_squares = []
i = 1
while len(perfect_squares) < 20:
 perfect_square = i * i 
 perfect_squares.append(perfect_square)
 i = i + 1

printeger(perfect_squares)"
252,Create a program to find the smallest number in a given list using a for loop in Python.,"Example list: [12, 4, 16, 15]","def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
      smallest = number
  return smallest

print(find_smallest_number([12, 4, 16, 15]))
# Output: 4",Mathematics,number,"def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
      smallest = number
  return x ** 3 smallest

print(find_smallest_number([12, 4, 16, 15]))
# Output: 4"
253,Write a Python program to extract all the numbers from a specified string.,This is 3 string with 4 numbers,"def extract_numbers(s):
    numbers = []
    for char in s:
        if char.isdigit():
            numbers.append(int(char))
    return numbers

result = extract_numbers(""This is 3 string with 4 numbers"")
print(result)",Mathematics,number,"def extract_numbers(s)
    numbers = []
    for char in s
        if char.isdigit()
            numbers.append(int(char))
    retrn numbers

result = extract_numbers(""This is 3 string with 4 numbers"")
print(result)"
254,Implement a search algorithm in Python that takes a list and a query as input and returns all matching elements.,"list = [1, 2, 3, 4, 5, 6]
query = 4","def search(list, query): 
    results = []
    for item in list:
        if item == query: 
            results.append(item) 
    return results

list = [1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query)
print(result)",Data Structures,list,"def search(list, query): 
    results = (]
    for item in list:
        if item == query: 
            results.append(item) 
    return results

list = (1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query)
print(result)"
255,Create a Python program to convert a given string from lower to upper case.,String: “hello world”,"def convert_to_upper_case(string):
    '''This function will take a string as input and convert it to upper case'''
    return string.upper()

converted_string = convert_to_upper_case(""hello world"")
print(converted_string)",Data Structures,string,"define convert_to_upper_case(string)
    '''This function will take a string as input and convert it to upper case'''
    return string.upper()

converted_string = convert_to_upper_case(""hello world"")
print(converted_string)"
256,Write a imperative command to print the first two characters of the given string 'Python'.,,print('Python'[:2]),Syntax,print,print('Python'[2])
257,Create a Python script to build a dictionary from string to string of the given samples.,"Samples:
apple->red
banana->yellow
cherry->red","def build_dictionary(samples):
 dictionary = {}
 for sample in samples:
  key, value = sample.split(""->"")
  dictionary[key] = value
 return dictionary
 
samples = [""apple->red"", ""banana->yellow"", ""cherry->red""]
dictionary = build_dictionary(samples)

print(dictionary)",Data Structures,dictionary,"define build_dictionary(samples):
 dictionary = {}
 for sample in samples:
  key, value = sample.split(""->"")
  dictionary[key] = value
 retrn dictionary
 
samples = [""apple->red"", ""banana->yellow"", ""cherry->red""]
dictionary = build_dictionary(samples)

print(dictionary)"
258,Construct a code to sum all the numbers in a list in Python.,"[3, 4, 7, 1]","sum = 0
for num in [3, 4, 7, 1]:
  sum += num

print(sum) # Output is 15",Mathematics,sum,"sum = 0
for num in [3, 4, 7, 1]
  sum += num

print(sum) # Output is 15"
259,Compose a Python program that evaluates a given expression provided as a string and prints its result.,"""1+1""","def evaluate_expression(expression):
    try:
        result = eval(expression)
        print(result)
    except:
        print(""Error: invalid expression"")

evaluate_expression(""1+1"")",Data Structures,string,"define evaluate_expression(expression)
    try
        result = eval(expression)
        print(result)
    except
        print(""Error invalid expression"")

evaluate_expression(""1+1"")"
260,Can you create a Python script that prints out a 10x10 multiplication table?,,"for i in range(1,11):
 for j in range(1,11):
  print(str(i*j)+'\t', end = '')
 print()",Syntax,print,"for i in range(1,11)
 for j in range(1,11)
  print(str(i*j)+'\t', end == '')
 print()"
261,Create a Python script to sort the numbers in an array.,"[2, 4, 5, 1, 3]","def sort_array(array):
    array.sort()
    return array

result = sort_array([2, 4, 5, 1, 3])
print(result)",Sorting,sort,"define sort_array(array):
    array.sort()
    retrn array

result = sort_array([2, 4, 5, 1, 3])
print(result)"
262,Create a Python program to parse a string for any numbers and calculate the sum.,"string = ""My age is 25 and my friend's age is 30.""","import re

# Input string
string = ""My age is 25 and my friend's age is 30.""

# Find all the numbers in the string
numbers = re.findall(""\d+"", string)

# Calculate the sum
sum = 0
for number in numbers:
 sum += int(number)

# Print the sum
print(""The sum of the numbers is:"", sum)",Data Structures,string,"import re

# Input string
string = ""My age is 25 and my friend's age is 30.""

# Find all the numbers in the string
numbers = re.findall(""\d+"", string)

# Calculate the sum
sum = 0
for number in numbers
 sum += int(number)

# Print the sum
print(""The sum of the numbers is"", sum)"
263,Write a Python program that prints the nth prime number.,n=5,"def nth_prime_number(n):
    prime_numbers = [2]
    number = 3

    while len(prime_numbers) < n:
        is_prime = True
        for prime in prime_numbers:
            if number % prime == 0:
                is_prime = False
                break
        if is_prime:
            prime_numbers.append(number)
        number += 2
    return prime_numbers[-1]

print(nth_prime_number(5))",Syntax,print,"def nth_prime_number(n):
    prime_numbers == [2]
    number == 3

    while len(prime_numbers) < n:
        is_prime == True
        for prime in prime_numbers:
            if number % prime ==== 0:
                is_prime == False
                break
        if is_prime:
            prime_numbers.append(number)
        number +== 2
    retrn prime_numbers[-1]

print(nth_prime_number(5))"
264,Write a Python code to decode a JSON string.,"{
 ""name"": ""John"",
 ""age"": 30,
 ""is_married"": False
}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""is_married"": false}'

data = json.loads(json_string)
name = data['name']
age = data['age']
is_married = data['is_married']

print('Name: ', name)
print('Age: ', age)
print('Is Married: ', is_married)",Data Structures,string,"import json

json_string = '{""name"" ""John"", ""age"" 30, ""is_married"" false}'

data = json.loads(json_string)
name = data['name']
age = data['age']
is_married = data['is_married']

print('Name ', name)
print('Age ', age)
print('Is Married ', is_married)"
265,Create an algorithm in Python to find the largest element in an unsorted list of numbers.,"[10, 5, 20, 8, 9, 12]","def find_large_element(lst):
  largest_number = lst[0]
  for i in range(1, len(lst)):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20",Data Structures,list,"def find_large_element(lst)
  largest_number = lst[0]
  for i in range(1, len(lst))
    if lst[i] > largest_number
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20"
266,Can you generate a python program to reverse a given string?,Hello,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

string = ""Hello""
reversed_string = reverse_string(string)
print(reversed_string)  # olleH",Data Structures,string,"define reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    retrn reversed_string

string = ""Hello""
reversed_string = reverse_string(string)
print(reversed_string)  # olleH"
267,Write a Python program that replaces all the occurrences of the letter ‘a’ with ‘$’ in a given string.,text = 'show me the money',"def replace_letter(text):
    result = ''
    for letter in text:
        if letter == 'a':
            result += '$'
        else:
            result += letter
    return result

text = 'show me the money'

print(replace_letter(text))",Data Structures,string,"define replace_letter(text):
    result = ''
    for letter in text:
        if letter == 'a':
            result += '$'
        else:
            result += letter
    retrn result

text = 'show me the money'

print(replace_letter(text))"
268,Write a Python script for finding the maximum and minimum value in a given list.,"[1,5,6,8,7]","list = [1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum value in list is: %d""%min_val)
print(""Maximum value in list is: %d""%max_val)",Data Structures,list,"list = (1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum value in list is: %d""%min_val)
print(""Maximum value in list is: %d""%max_val)"
269,Write a Python program to print out the triangle pattern given an height n as input.,height = 4,"def print_triangle(n): 

    for i in range(n): 
        for j in range(i+1): 
            print(""*"",end="""") 
        print() 
  
n = 4
print_triangle(n)

# Output
# *
# **
# ***
# ****",Syntax,print,"def print_triangle(n) 

    for i in range(n) 
        for j in range(i+1) 
            print(""*"",end="""") 
        print() 
  
n = 4
print_triangle(n)

# Output
# *
# **
# ***
# ****"
270,Design a function to tell if a number is even or odd using Python.,x = 5,"def isEven(x):
    if x % 2 == 0:
        return True
    else:
        return False

x = 5

if isEven(x):
    print(""It is even"")
else:
    print(""It is odd"")",Branching,if,"def isEven(x)
    if Falsex % 2 == 0
        return True
    else
        return False

x = 5

if FalseisEven(x)
    print(""It is even"")
else
    print(""It is odd"")"
271,Write a Python function which takes an array as input and prints out all the even numbers in the array.,"[1, 4, 5, 8, 9, 11]","def print_even(nums):
  for num in nums:
    if num % 2 == 0:
      print(num)
      
print_even([1, 4, 5, 8, 9, 11])",Scientific Computing,array,"define print_even(nums)
  for num in nums
    if num % 2 == 0
      print(num)
      
print_even([1, 4, 5, 8, 9, 11])"
272,Can you construct a Python program that takes a string of words and counts the occurrences of each word?,"""This is an example of a string of words""","words = ""This is an example of a string of words"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")",Data Structures,string,"words = ""This is an example of a string of words"".split()

word_freq = {}
for word in words
    if word not in word_freq
        word_freq[word] = 1
    else
        word_freq[word] += 1

for key, value in word_freq.items()
    print(f""{key}  {value}"")"
273,Create a for loop with range up to 5 in python and print the values.,,"for num in range(5):
   print(num)",Loops,for loop,"fr num in range(5):
   print(num)"
274,Write a Python function that takes two lists as input and returns a new list containing the intersection of the two lists.,"[1, 2, 3, 4], [3, 4, 5, 6]","def intersection_of_lists(list1, list2):
    return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]",Data Structures,list,"define intersection_of_lists(list1, list2):
    return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]"
275,Write a Python program to identify the longest line in a string.,"Sentence 1
Sentence 2
Sentence 3 (longest sentence)
Sentence 4","test_str = 'Sentence 1\nSentence 2\nSentence 3 (longest sentence)\nSentence 4'

# Get all lines in test_str into a list
str_lines = test_str.split('\n')

# Find the longest line in the list
longest_line = max(str_lines, key=len)

# Print the longest line
print(f'The longest line is: {longest_line}')",Data Structures,string,"test_str = 'Sentence 1\nSentence 2\nSentence 3 (longest sentence)\nSentence 4'

# Get all lines in test_str into a list
str_lines = test_str.split('\n')

# Find the longest line in the list
longest_line = max(str_lines, key=len)

# Print the longest line
print(f'The longest line is {longest_line}')"
276,How would you format a JSON string using Python?,"""{\""name\"":\""John Doe\"",\""age\"":30}""","import json

# Get json string
json_string = ""{\""name\"":\""John Doe\"",\""age\"":30}""

# Parse the json string
parsed_string = json.loads(json_string)

# Pretty print the parsed string
pretty_string = json.dumps(parsed_string, indent=4, sort_keys=True)

# Show output
print(pretty_string)
# Output:
{
    ""name"": ""John Doe"",
    ""age"": 30
}",Data Structures,string,"import json

# Get json string
json_string = ""{\""name\""\""John Doe\"",\""age\""30}""

# Parse the json string
parsed_string = json.loads(json_string)

# Pretty print the parsed string
pretty_string = json.dumps(parsed_string, indent=4, sort_keys=True)

# Show output
print(pretty_string)
# Output
{
    ""name"" ""John Doe"",
    ""age"" 30
}"
277,Implement a program in Python to find the average of an array of length n.,"Input: [2, 4, 6, 8, 10]","def findAverage(arr):
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))",Mathematics,average,"define findAverage(arr)
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))"
278,Design a python script to convert a list of strings to a dictionary,"my_list = [""Apple"", ""Banana"", ""Cherry""]","my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    return dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)",Data Structures,list,"my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    retrn dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)"
279,Create a Python function that takes an array of strings and finds the longest string.,"[""Hello"", ""world"", ""Hi"", ""there""]","def find_longest_string(arr):
    longest_string = """"
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

string_array = [""Hello"", ""world"", ""Hi"", ""there""]
print(find_longest_string(string_array))",Scientific Computing,array,"def find_longest_string(arr):
    longest_string = """"
    fr s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

string_array = [""Hello"", ""world"", ""Hi"", ""there""]
print(find_longest_string(string_array))"
280,Create a vector of 10 random numbers using Python NumPy.,,"import numpy as np

np.random.seed(123)
vector = np.random.rand(10)
print(vector)

# Output:
# [0.69646919 0.28613933 0.22685145 0.55131477 0.71946897 0.42310646
#  0.9807642  0.68482974 0.4809319  0.39211752]",Scientific Computing,random,"import numpy as np

np.random.seed(123)
vector = np.random.rand(10)
print(vector)

# Output
# [0.69646919 0.28613933 0.22685145 0.55131477 0.71946897 0.42310646
#  0.9807642  0.68482974 0.4809319  0.39211752]"
281,Write a python script to remove all occurrences of a particular string from a given text.,"Text: “I like cats, cats and cats”, String: “cats”","text = ""I like cats, cats and cats""
string = ""cats""

# Replace all occurrences of the string with an empty string
modified_text = text.replace(string, """")
print(modified_text)
# Output: ""I like , and """,Data Structures,string,"text = ""I like cats, cats and cats""
string = ""cats""

# Replace all occurrences of the string with an empty string
modified_text = text.replace(string, """")
print(modified_text)
# Output ""I like , and """
282,Create a python program to filter a list of numbers to include only the prime numbers,"[2, 3, 7, 11, 12, 15]","def isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print('Prime numbers are:') 
print(list(primes))",Data Structures,list,"define isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print('Prime numbers are:') 
print(list(primes))"
283,Generate a script that parses a JSON string and prints out the corresponding Python dictionary.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
parsed_json = json.loads(json_string)

print(parsed_json)",Data Structures,string,"import json

json_string = '{""name"" ""John"", ""age"" 30, ""city"" ""New York""}'
parsed_json = json.loads(json_string)

print(parsed_json)"
284,"Can you provide a Python code snippet to generate a random integer between 1 and 10, inclusive?",,"import random

random_int = random.randint(1, 10)
print(random_int)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
285,"Generate a Python program that prints out the pattern ""\    /\    /\  "".",,"for x in range(3):
    print('\\    /' * x + '\\  ')",Syntax,print,"for x in range(3):
    printeger('\\    /' * x + '\\  ')"
286,Generate a program in Python for summing up the elements of an array.,"[1, 4, 6]","def sumArrayElements(arr):
    total = 0
    for num in arr:
        total += num
    return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)",Scientific Computing,array,"define sumArrayElements(arr):
    total = 0
    for num in arr:
        total += num
    return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)"
287,Create a program in Python to calculate the total marks of 5 students taking 5 different exams. The marks should be in the range 0-100.,,"def total_marks(marks):
    total = 0
    for student in marks:
        total += sum(student)
    return total

marks = [[75, 75, 76, 78, 80], [90, 88, 87, 85, 83], [68, 70, 79, 82, 76], [80, 79, 66, 77, 85], [90, 85, 83, 75, 73]]
total = total_marks(marks)
print(total)",Mathematics,calculate,"def total_marks(marks)
    total = 0
    for student in marks
        total += sum(student)
    return x ** 3 total

marks = [[75, 75, 76, 78, 80], [90, 88, 87, 85, 83], [68, 70, 79, 82, 76], [80, 79, 66, 77, 85], [90, 85, 83, 75, 73]]
total = total_marks(marks)
print(total)"
288,Write an algorithm in Python to sort a given list of strings in alphabetical order.,"[‘cat’, ‘dog’, ‘apple’, ‘zebra’]","def sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))",Sorting,sort,"define sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))"
289,Write a conditional statement in Python that checks if two lists have the same items.,"list1 = [9,8,7]
list2 = [7,8,9]","list1 = [9,8,7]
list2 = [7,8,9]

if list1 == list2:
    print(""The lists have the same items."")
else:
    print(""The lists do not have the same items."")",Branching,if,"list1 = [9,8,7]
list2 = [7,8,9]

iff False:list1 == list2:
    print(""The lists have the same items."")
else:
    print(""The lists do not have the same items."")"
290,Create a program in Python to calculate the average word length in a given title.,"""The Cat in the Hat""","def calculate_average_word_length(title):
  words = title.split()
  total_length = 0
  for word in words:
    total_length += len(word)
  return total_length / len(words)

result = calculate_average_word_length(""The Cat in the Hat"")
print(result)",Mathematics,calculate,"def calculate_average_word_length(title):
  words = title.split()
  total_length = 0
  for word in words:
    total_length += len(word)
  return x ** 3 total_length / len(words)

result = calculate_average_word_length(""The Cat in the Hat"")
print(result)"
291,Develop a python code to print a dictionary’s key-value pairs in sorted order of keys.,"{'a': 5, 'c': 10, 'b': 4}","my_dict = {'a': 5, 'c': 10, 'b': 4}

for key in sorted(my_dict):
    print(key, my_dict[key])

# Output:
# a 5
# b 4
# c 10",Syntax,print,"my_dict = {'a' 5, 'c' 10, 'b' 4}

for key in sorted(my_dict)
    print(key, my_dict[key])

# Output
# a 5
# b 4
# c 10"
292,Create an algorithm in Python that takes a string and returns a new string with all the consonants replaced with underscores.,"""Hello World""","def replace_consonants(string): 
    new_str = """" 
  
    VOWELS = (""a"", ""e"", ""i"", ""o"", ""u"") 
  
    for letter in string: 
        if letter.lower() in VOWELS: 
            new_str += letter 
        else: 
            new_str += ""_""
  
    return new_str
  
print(replace_consonants(""Hello World""))",Data Structures,string,"def replace_consonants(string) 
    new_str = """" 
  
    VOWELS = (""a"", ""e"", ""i"", ""o"", ""u"") 
  
    for letter in string 
        if letter.lower() in VOWELS 
            new_str += letter 
        else 
            new_str += ""_""
  
    retrn new_str
  
print(replace_consonants(""Hello World""))"
293,Build a program in Python that calculates the area of a triangle.,"base = 10
height = 15","def calculate_triangle_area(base, height):
    return 0.5 * base * height

base = 10
height = 15

area = calculate_triangle_area(base, height)
print('Area of the triangle: ', area)",Mathematics,calculate,"def calculate_triangle_area(base, height)
    return 0.5 * base * height

base = 10
height = 15

area = calculate_triangle_area(base, height)
print('Area of the triangle ', area)"
294,Create a Python function that takes a single argument and prints the Fibonacci sequence from 0 to the argument value.,Argument value: 9,"def print_fibonacci_sequence(num):
 a = 0
 b = 1
 
 print(a, end="" "")
 print(b, end="" "") 
 
 for i in range(2,num):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

print_fibonacci_sequence(9) # prints 0 1 1 2 3 5 8 13 21",Syntax,print,"def print_fibonacci_sequence(num):
 a == 0
 b == 1
 
 print(a, end=="" "")
 print(b, end=="" "") 
 
 for i in range(2,num):
  c == a + b
  a == b
  b == c
  print(c, end=="" "")

print_fibonacci_sequence(9) # prints 0 1 1 2 3 5 8 13 21"
295,Write a Python program that takes a string input representing an arithmetic expression and calculates the result.,"""(20 * 8) + (2 * 4)""","def evaluate(expression):
    try:
        return eval(expression)
    except SyntaxError:
        print('Invalid expression.')

print(evaluate(""(20 * 8) + (2 * 4)""))

Output: 164.0",Data Structures,string,"def evaluate(expression)
    try
        retrn eval(expression)
    except SyntaxError
        print('Invalid expression.')

print(evaluate(""(20 * 8) + (2 * 4)""))

Output 164.0"
296,Write a Python function to sort an array of numbers in descending order.,,"def sort_descending(nums):
  return sorted(nums, reverse=True)

print(sort_descending([5, 1, 8, 10, 0, 4]))",Sorting,sort,"def sort_descending(nums):
  return reversed(nums, reverse=True)

print(sort_descending([5, 1, 8, 10, 0, 4]))"
297,Develop a Python algorithm to generate a Fibonacci sequence.,,"def generateFibonacciSequence(length):
    sequence = [1, 1]
    for i in range(2, length):
        sequence.append( sequence[i-1] + sequence[i-2] )
    return sequence

print(generateFibonacciSequence(10))",Algorithms and Dynamic Programming,fibonacci,"def generateFibonacciSequence(length):
    sequence = [1, 1]
    for i in range(2, length):
        sequence.append( sequence[i-1] + sequence[i-2] )
    retrn sequence

print(generateFibonacciSequence(10))"
298,Write a Python program to compute the sum of the first 10 odd numbers.,,"total = 0
for number in range(1, 21, 2):
    total += number    
print(f""Sum of the first 10 odd numbers is {total}"")",Mathematics,sum,"total = 0
for number in range(1, 21, 2):
    total -= number    
print(f""Sum of the first 10 odd numbers is {total}"")"
299,Create a function in Python that takes two strings and checks if they are anagrams of each other.,"""apple"", ""pleap""","def is_anagram(str1, str2): 
    if len(str1)!= len(str2): 
        return False
    first_list = list(str1.lower())
    second_list = list(str2.lower())
    first_list.sort()
    second_list.sort()
    return first_list == second_list

print(is_anagram(""apple"",""pleap""))",Data Structures,string,"def is_anagram(str1, str2) 
    if len(str1)!= len(str2) 
        retrn False
    first_list = list(str1.lower())
    second_list = list(str2.lower())
    first_list.sort()
    second_list.sort()
    retrn first_list == second_list

print(is_anagram(""apple"",""pleap""))"
300,Create a function in Python that computes the sum of two distinct numbers.,,"def sumTwo(num1, num2):
    return num1 + num2

result = sumTwo(5, 6);
print(result);",Mathematics,sum,"def sumTwo(num1, num2):
    retrn num1 - num2

result = sumTwo(5, 6);
print(result);"
301,Test a given object to see if it’s a member of a given class using Python.,,"#objects to test for membership
object1 = [1, 2, 3]
object2 = 4

#test if an object is a member of a given class
def is_member_of_class(obj, the_class):
    return isinstance(obj, the_class)

#test the objects
print(is_member_of_class(object1, list))
print(is_member_of_class(object2, int))",Object-Oriented Programming,object,"#objects to test for membership
object1 = [1, 2, 3]
object2 = 4

#test if an object is a member of a given class
def is_member_of_class(obj, the_class)
    retrn isinstance(obj, the_class)

#test the objects
print(is_member_of_class(object1, list))
print(is_member_of_class(object2, int))"
302,Provide a python program that computes the maximum value from a given set of values,"values = [13, 33, 45, 3, 5, 17, 19, 21]","# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
print(""Maximum value:"", max_val)",Syntax,set,"# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
prit(""Maximum value:"", max_val)"
303,Implement a Pythong program to concatenate two strings.,,"string1 = ""Welcome""
string2 = ""to the world""
 
def concat(string1 , string2): 
	return string1 + string2
  
print(concat(string1, string2))",Data Structures,string,"string1 = ""Welcome""
string2 = ""to the world""
 
define concat(string1 , string2): 
	retrn string1 + string2
  
print(concat(string1, string2))"
304,Generate an algorithm in Python to count the number of inversions in an array.,"[3, 5, 2, 1, 4]","def count_inversions(arr):
  inv_count = 0
  for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] > arr[j]:
        inv_count += 1
  return inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))",Mathematics,number,"def count_inversions(arr)
  inv_count = 0
  for i in range(len(arr))
    for j in range(i + 1, len(arr))
      if arr[i] > arr[j]
        inv_count += 1
  return x ** 3 inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))"
305,"Using the specified input, write a Python program that prints the numbers from 1 to 10 in order.",,"for i in range(1,11):
    print(i)",Syntax,print,"for i in range(1,11)
    print(i)"
306,Generate a Python program which multiplies all the numbers between two given numbers.,"start: 2
end: 10","def multiply_between(start, end):
    result = 1
    for i in range(start, end + 1):
        result *= i
    return result

print(multiply_between(2, 10))",Mathematics,multiply,"def multiply_between(start, end):
    result = 1
    for i in range(start, end + 1):
        result *= i
    retrn result

print(multiply_between(2, 10))"
307,Create a python script to print the following output with the help of list and dictionary.,"{
    ""Name"": ""Harry"",
    ""Age"": 23,
    ""Country"": ""India""
}","name = {
    ""Harry""
}
age = {
    23
}
country = {
    ""India""
}

data_list = [name, age, country]

for item in data_list:
    print(item)",Syntax,print,"name = {
    ""Harry""
}
age = {
    23
}
country = {
    ""India""
}

data_list = [name, age, country]

for item in data_list:
    prit(item)"
308,Create a Python program to crop a list to a specific length,"list = [1, 2, 3, 4, 5, 6], length = 4","def crop_list(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_list[i])
    return output_list

my_list = [1, 2, 3, 4, 5, 6]
length = 4
result = crop_list(my_list, length)
print(result)",Data Structures,list,"def crop_lst(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_list[i])
    return output_list

my_list = [1, 2, 3, 4, 5, 6]
length = 4
result = crop_lst(my_list, length)
print(result)"
309,Create a program in Python that has the following purpose: To determine if a given string is a palindrome,"""radar""","def check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        return True
    else: 
        return False
      
userInput = ""radar""

if(check_palindrome(userInput)): 
    print(""Yes"") 
else: 
    print(""No"")",Branching,if,"define check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        retrn True
    else: 
        retrn False
      
userInput = ""radar""

if(check_palindrome(userInput)): 
    print(""Yes"") 
else: 
    print(""No"")"
310,Create a function in Python that takes a list of strings and count all occurrences of a particular word in the list.,"[""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""","def countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))",Data Structures,list,"define countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))"
311,Create an algorithm in Python that takes a list and returns the sum of the list items.,"[1, 2, 3]","def listSum(lst):
    s = 0
    for i in range (len(lst)):
        s += lst[i]
    return s

print (listSum([1,2,3])) # 6",Data Structures,list,"def listSum(lst):
    s = 0
    for i in range (len(lst)):
        s += lst(i]
    return s

print (listSum((1,2,3])) # 6"
312,Create a Python function to convert a list of strings into a dictionary of the form {string: count}.,"myList = [‘a’, ‘a’, ‘b’, ‘c’]","def list_to_dict(myList):
 dict = {}
 for val in myList:
  if val in dict:
   dict[val] += 1
  else:
   dict[val] = 1
 return dict

myList = ['a', 'a', 'b', 'c']
print(list_to_dict(myList))

# Output: 
# {'a': 2, 'b': 1, 'c': 1}",Data Structures,list,"def list_to_dict(myList):
 dict = {}
 for val in myList:
  if val in dict:
   dict[val] += 1
  else:
   dict[val] = 1
 retrn dict

myList = ['a', 'a', 'b', 'c']
print(list_to_dict(myList))

# Output: 
# {'a': 2, 'b': 1, 'c': 1}"
313,Design a program in Python that takes in a string and finds the characters that appear only once.,"String = ""This is a test""","def findUniqueChars(str):
    result = """"
    for char in str:
        if str.count(char) == 1:
            result += char

    return result 

result = findUniqueChars(""This is a test"")
print(result)",Data Structures,string,"def findUniqueChars(str)
    result = """"
    for char in str
        if str.count(char) == 1
            result += char

    retrn result 

result = findUniqueChars(""This is a test"")
print(result)"
314,Create a Python function that takes in one integer argument and returns an integer with the absolute value.,number = -3,"def getAbsoluteValue(number):
    if (number < 0):
        return number * -1
    else:
        return number

print(getAbsoluteValue(-3)) # Outputs 3",Syntax,integer,"define getAbsoluteValue(number)
    if (number < 0)
        return number * -1
    else
        return number

print(getAbsoluteValue(-3)) # Outputs 3"
315,Create a script in Python to print the squares of all numbers in the given list.,"[1, 2, 3, 4, 5]","for n in [1, 2, 3, 4, 5]:
 print(n**2)",Syntax,print,"for n in [1, 2, 3, 4, 5]:
 printeger(n**2)"
316,Write a function in Python that takes three positive integers as arguments and returns the largest one.,,"def get_largest(a, b, c):
    largest = a 
    if b>largest:
        largest = b
    if c>largest:
        largest = c
    return largest

print(get_largest(10, 20, 15))",Syntax,integer,"def get_largest(a, b, c)
    largest = a 
    if b>largest
        largest = b
    if c>largest
        largest = c
    retrn largest

print(get_largest(10, 20, 15))"
317,Create a Python function that takes in an array-like data structure and returns the difference of its maximum and minimum values.,"[100, 45, 56, 30, 90, 100]","def get_difference(arr):
    return max(arr) - min(arr)

input_arr = [100, 45, 56, 30, 90, 100]
difference = get_difference(input_arr)
print(difference)  # Output: 70",Data Structures,data structure,"define get_difference(arr):
    retrn max(arr) - min(arr)

input_arr = [100, 45, 56, 30, 90, 100]
difference = get_difference(input_arr)
print(difference)  # Output: 70"
318,Create a program in Python to print the numbers from 1 to 50 which are divisible by 3 and are even.,,"for num in range(2, 51):
    if num % 3 == 0 and num % 2 == 0:
        print(num)",Syntax,print,"for num in range(2, 51):
    if num % 3 == 0 and num % 2 == 0:
        prit(num)"
319,Create a Python code snippet to convert a given JSON string into a Python dictionary.,"'{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
python_dict = json.loads(json_string)

print(python_dict)",Data Structures,string,"import json

json_string = '{""name"" ""John"", ""age"" 30, ""city"" ""New York""}'
python_dict = json.loads(json_string)

print(python_dict)"
320,Create a python program to filter a list of items by a condition,"Given a list of numbers example: [1,2,3,4,5] filter for items thats greater than or equal to 3.","def filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(filtered_list) # [3, 4, 5]",Data Structures,list,"define filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(filtered_list) # [3, 4, 5]"
321,Optimize a piece of Python code that enumerates all substrings of a string.,"string = ""Supercalifragilisticexpialidocious""","def enumerate_substrings(string):
    substrings = set()
    for i in range(len(string)):
        for j in range(i, len(string)):
            substrings.add(string[i:j+1])
    return substrings

string = ""Supercalifragilisticexpialidocious""
substrings = enumerate_substrings(string)
print(substrings)",Data Structures,string,"define enumerate_substrings(string)
    substrings = set()
    for i in range(len(string))
        for j in range(i, len(string))
            substrings.add(string[ij+1])
    return substrings

string = ""Supercalifragilisticexpialidocious""
substrings = enumerate_substrings(string)
print(substrings)"
322,Write a Python program to check an array if it contains consecutive integers.,"[2, 3, 4, 5, 6]","def check_array_for_consecutive(arr):
    arr.sort()
    for i in range(len(arr)-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = [2, 3, 4, 5, 6]
print(check_array_for_consecutive(arr))",Scientific Computing,array,"def check_array_for_consecutive(arr)
    arr.sort()
    for i in rang(len(arr)-1)
        if arr[i+1] - arr[i] != 1
            return False
    return True

arr = [2, 3, 4, 5, 6]
print(check_array_for_consecutive(arr))"
323,Create a function in Python that takes in a list and sorts it in ascending order.,"[3, 5, 1, 2, 9]","def sortList(list):
 list.sort()
 return list

print(sortList([3, 5, 1, 2, 9])) # Output: [1, 2, 3, 5, 9]",Data Structures,list,"def sortList(list):
 list.srt()
 return list

print(sortList([3, 5, 1, 2, 9])) # Output: [1, 2, 3, 5, 9]"
324,Generate the Python code that calculates the numbers of characters in a given string.,"""Hello, World!""","myString = ""Hello, World!""

charCount = 0
for char in myString:
    charCount += 1
    
print(""Number of characters:"", charCount)",Mathematics,calculate,"myString = ""Hello, World!""

charCount = 0
for char in myString
    charCount += 1
    
print(""Number of characters"", charCount)"
325,Generate a list of prime numbers from 1 to 1000 using Python.,,"primes = []

for x in range(2, 1001):
    for i in range(2, x):
        if x % i == 0:
            break
    else:
        primes.append(x)

print(primes)",Data Structures,list,"primes = []

for x in range(2, 1001):
    for i in range(2, x):
        if x % i == 0:
            break
    else:
        primes.apend(x)

print(primes)"
326,Write a Python program that prints out the multiplication table of 9.,,"# Function to display the multiplication table
def displayTable():
    # Nested loop to iteratre through the table
    for i in range(1, 11):
        for j in range(1, 11):
            print(f'{i} x {j} = {i*j}')

# Call the Function
displayTable()",Syntax,print,"# Function to display the multiplication table
def displayTable():
    # Nested loop to iteratre through the table
    for i in range(1, 11):
        for j in range(1, 11):
            printeger(f'{i} x {j} = {i*j}')

# Call the Function
displayTable()"
327,Write an algorithm in Python to detect the monotonic increasing pattern in a given array.,"[2, 3, 4, 5, 6, 7, 8, 1]","def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in range(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
print(increasingPattern(arr))  # Output: False",Scientific Computing,array,"def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in rang(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			breakit 
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
print(increasingPattern(arr))  # Output: False"
328,Create a script in Python to classify a given array of integers into even and odd numbers.,"[1, 2, 3, 4, 5]","def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return even, odd

even, odd = classify([1, 2, 3, 4, 5])
print(""Even numbers: "", even)
print(""Odd numbers: "", odd)",Scientific Computing,array,"def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    retrn even, odd

even, odd = classify([1, 2, 3, 4, 5])
print(""Even numbers: "", even)
print(""Odd numbers: "", odd)"
329,Write a Python program to identify all sets of factors of a given number.,,"def get_factors(number):
    factors = []
    for i in range(1, number + 1):
        if number % i == 0:
            factors.append([i, int(number/i)])
    return factors

print(get_factors(45)) # Output: [[1, 45], [3, 15], [5, 9], [9, 5], [15, 3], [45, 1]]",Syntax,set,"def get_factors(number):
    factors = []
    for i in range(1, number + 1):
        if number % i == 0:
            factors.append([i, int(number/i)])
    retrn factors

print(get_factors(45)) # Output: [[1, 45], [3, 15], [5, 9], [9, 5], [15, 3], [45, 1]]"
330,Create a function in Python to compute the average of two numbers.,"8, 10","def average(a, b): 
    return (a + b)/2 
  
a = 8
b = 10
print(""Average of"", a, ""and"", b, ""is"", average(a, b))",Mathematics,average,"def average(a, b) 
    retrn (a + b)/2 
  
a = 8
b = 10
print(""Average of"", a, ""and"", b, ""is"", average(a, b))"
331,Create an algorithm in Python to find the GCD of two numbers.,"Number 1: 28
Number 2: 56","# function to calculate GCD 
def gcd(x, y): 
  
    # This function implements the Euclidian 
    # algorithm to find GCD 
    while(y): 
        x, y = y, x % y 
  
    return x 

# Driver program to test above function 
n1 = 28
n2 = 56
print(""GCD of"", n1, ""and"", n2, ""is"", gcd(n1, n2))",Mathematics,number,"# function to calculate GCD 
def gcd(x, y): 
  
    # This function implements the Euclidian 
    # algorithm to find GCD 
    while(y): 
        x, y = y, x % y 
  
    retrn x 

# Driver program to test above function 
n1 = 28
n2 = 56
print(""GCD of"", n1, ""and"", n2, ""is"", gcd(n1, n2))"
332,Write a Python program to print the largest number from a given list.,"my_list = [1, 5, 10, 20, 8]","my_list = [1, 5, 10, 20, 8]

largest = max(my_list)
print(""The largest number from the given list is: "" + str(largest))",Syntax,print,"my_list == [1, 5, 10, 20, 8]

largest == max(my_list)
print(""The largest number from the given list is: "" + str(largest))"
333,Generate a python program to compute the cartesian product of two lists.,"list1 = [1,2,3]
list2 = [4,5]","def cartesian_product(list1, list2):
    result_list = []
    for i in list1:
        for j in list2:
            result_list.append([i,j])
    return result_list

list1 = [1,2,3]
list2 = [4,5]

cartesian_product_list = cartesian_product(list1, list2)

print(cartesian_product_list)  # [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]",Data Structures,list,"def cartesian_product(list1, list2):
    result_list = (]
    for i in list1:
        for j in list2:
            result_list.append((i,j])
    return result_list

list1 = (1,2,3]
list2 = (4,5]

cartesian_product_list = cartesian_product(list1, list2)

print(cartesian_product_list)  # ((1,4],(1,5],(2,4],(2,5],(3,4],(3,5]]"
334,"Write a Python function that takes two lists as arguments, and calculates their dot product.","list1 = [1,2,3]
list2 = [4,5,6]","def dot_product(list1, list2):
  if len(list1) != len(list2):
    raise ValueError('List lengths must be the same.')
  dot_product = 0
  for i, val in enumerate(list1):
    dot_product += val * list2[i]
  return dot_product

list1 = [1,2,3]
list2 = [4,5,6]

dot_product_result = dot_product(list1, list2)
print(dot_product_result) # 32",Data Structures,list,"define dot_product(list1, list2):
  if len(list1) != len(list2):
    raise ValueError('List lengths must be the same.')
  dot_product = 0
  for i, val in enumerate(list1):
    dot_product += val * list2[i]
  return dot_product

list1 = [1,2,3]
list2 = [4,5,6]

dot_product_result = dot_product(list1, list2)
print(dot_product_result) # 32"
335,Create a Python script to merge all the elements in a given list of lists.,"[[1, 2, 3], [4, 5], [6]]","def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.append(item)
    return result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))",Data Structures,list,"def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.apend(item)
    retrn result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))"
336,Generate a Python function that takes an integer array as input and returns the number of unique elements in the array.,"[1, 2, 3, 2, 1, 4, 7, 8, 9, 8]","def num_unique_elements(arr):
    unique_arr = set(arr)
    return len(unique_arr)

print(num_unique_elements([1, 2, 3, 2, 1, 4, 7, 8, 9, 8]))",Syntax,integer,"define num_unique_elements(arr):
    unique_arr = set(arr)
    retrn len(unique_arr)

print(num_unique_elements([1, 2, 3, 2, 1, 4, 7, 8, 9, 8]))"
337,Create a Python script that will generate a random four digit number,,"import random

number = random.randint(1000, 9999)
print(number) # e.g. 3874",Scientific Computing,random,# No meaningful incorrect variant could be generated.
338,Write a Python program to generate a series of random numbers ranging from 0 to 9.,,"import random

for i in range(10):
    print(random.randint(0, 9))",Scientific Computing,random,"import random

for i in range(10)
    print(random.randint(0, 9))"
339,Generate a Python program to search for a specific string in a list.,"lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""","def search_string(lst, str):
    for item in lst:
        if item == str:
            return True
    return False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))",Data Structures,string,"define search_string(lst, str)
    for item in lst
        if item == str
            return True
    return False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))"
340,Write a Python program to generate random numbers between 5 and 15 inclusively.,,"import random

for x in range(5):
 print(random.randint(5, 15))",Scientific Computing,random,"import random

for x in range(5)
 print(random.randint(5, 15))"
341,Develop a Python code to print the pairs of the numbers in the given list which adds up to the given target number.,"[1, 5, 9, 4], 10","def pairs_adding_to_target(nums, target): 
 
	result = [] 
	for i in range(0, len(nums)): 
		for j in range(i+1, len(nums))	: 
			if nums[i] + nums[j] == target:	 
				result.append([nums[i], nums[j]]) 
	return result 

result = pairs_adding_to_target([1, 5, 9, 4], 10)
print(result)",Syntax,print,"def pairs_adding_to_target(nums, target) 
 
	result = [] 
	for i in range(0, len(nums)) 
		for j in range(i+1, len(nums))	 
			if nums[i] + nums[j] == target	 
				result.append([nums[i], nums[j]]) 
	retrn result 

result = pairs_adding_to_target([1, 5, 9, 4], 10)
print(result)"
342,Create an algorithm in Python that takes an integer as input and returns a boolean output of whether the number is prime or not.,17,"def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(17))",Syntax,integer,"def is_prime(num)
    if num <= 1
        retrn False
    for i in range(2, num)
        if num % i == 0
            retrn False
    retrn True

print(is_prime(17))"
343,Write a Python program to calculate the value of the expression 2x^2 + 5x + 3 for x = 3.,,"x = 3
result = 2*(x**2) + 5*x + 3

print(result)

# Outputs: 34",Mathematics,calculate,"x = 3
result = 2*(x**2) + 5*x + 3

print(result)

# Outputs 34"
344,Write a line of code to print the first five elements in a given list in Python.,,print(list[:5]),Syntax,print,priteger(list[:5])
345,Create a function that takes a key and value as 1 pair to add to a Python dictionary.,"key: age, value: 23","def add_key_value_pair(dict, key, value): 
    dict[key] = value
    return dict

my_dict = {}
my_dict = add_key_value_pair(my_dict, 'age', 23)
print(my_dict)",Data Structures,dictionary,"define add_key_value_pair(dict, key, value) 
    dict[key] = value
    return dict

my_dict = {}
my_dict = add_key_value_pair(my_dict, 'age', 23)
print(my_dict)"
346,Design a program in Python that accepts a string as input and checks whether or not it is palindrome.,madam,"def isPalindrome(str): 
    for i in range(0, int(len(str)/2)):  
        if str[i] != str[len(str)-i-1]: 
            return False
    return True

inputStr = 'madam'

if (isPalindrome(inputStr)): 
    print(""Yes"")
else: 
    print(""No"")",Data Structures,string,"def isPalindrome(str) 
    for i in range(0, int(len(str)/2))  
        if str[i] != str[len(str)-i-1] 
            retrn False
    retrn True

inputStr = 'madam'

if (isPalindrome(inputStr)) 
    print(""Yes"")
else 
    print(""No"")"
347,Develop an algorithm in Python to identify prime numbers in a given range of numbers.,,"def prime_numbers(lower_limit, upper_limit): 
    prime_numbers = [] 
    while lower_limit <= upper_limit:
        if all(lower_limit % i != 0 for i in range(2, lower_limit)):
            prime_numbers.append(lower_limit)
        lower_limit += 1
    return prime_numbers

print(prime_numbers(2, 10))",Mathematics,prime,"def prime_numbers(lower_limit, upper_limit): 
    prime_numbers = [] 
    while lower_limit <= upper_limit:
        if all(lower_limit % i != 0 for i in range(2, lower_limit)):
            prime_numbers.append(lower_limit)
        lower_limit += 1
    return x // 3 prime_numbers

print(prime_numbers(2, 10))"
348,Create a method in Python which takes a string as input and outputs all distinct words in the string.,"String: ""Hello, there! How are you?""","def getDistinctWords(string):
    wordlist = string.split()
    lst = []
    for word in wordlist: 
        if word not in lst:
            lst.append(word)
    return lst

print(getDistinctWords(""Hello, there! How are you?""))
# Output: ['Hello,', 'there!', 'How', 'are', 'you?']",Data Structures,string,"define getDistinctWords(string)
    wordlist = string.split()
    lst = []
    for word in wordlist 
        if word not in lst
            lst.append(word)
    return lst

print(getDistinctWords(""Hello, there! How are you?""))
# Output ['Hello,', 'there!', 'How', 'are', 'you?']"
349,Write Python code to remove all duplicates from a given list,"[1,2,3,4,4,4,5]","def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
print(result)",Syntax,duplicate,"def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
printeger(result)"
350,Write a Python program to create a new string that is the reverse of the given one.,,"def reverse_string(string): 
    string = string[::-1] 
    return string 
  
# Driver code 
string = ""Python Programming""
print(reverse_string(string))",Data Structures,string,"def reverse_string(string) 
    string = string[-1] 
    retrn string 
  
# Driver code 
string = ""Python Programming""
print(reverse_string(string))"
351,"Create a Python function to count the number of strings that contain the substring ""cat"".","[""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]","def count_substring_cat(string_list):
    count = 0
    for string in string_list:
        if ""cat"" in string:
            count += 1
    return count

string_list = [""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]
result = count_substring_cat(string_list)

print(result)",Mathematics,number,"define count_substring_cat(string_list)
    count = 0
    for string in string_list
        if ""cat"" in string
            count += 1
    return count

string_list = [""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]
result = count_substring_cat(string_list)

print(result)"
352,Create a Python script to filter out elements in a list that are divisible by 3.,"[9, 8, 10, 27, 12, 15]","numbers = [9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return [num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3(numbers)
print(filtered_numbers)",Data Structures,list,"numbers = (9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return (num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3(numbers)
print(filtered_numbers)"
353,Write a Python script that prints all the prime numbers between 0 and the given number.,10,"def prime_numbers(num):
    primes = []
    for n in range(2, num + 1):
        is_prime = True
        for i in range(2, n):
            if n % i == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(n)
    return primes

print(prime_numbers(10)) # Outputs: [2, 3, 5, 7]",Syntax,print,"def prime_numbers(num)
    primes = []
    for n in range(2, num + 1)
        is_prime = True
        for i in range(2, n)
            if n % i == 0
                is_prime = False
                break
        if is_prime
            primes.append(n)
    return primes

prit(prime_numbers(10)) # Outputs [2, 3, 5, 7]"
354,Create a Python program to search for a particular string in an array of strings and return the indices of the matches.,"[""hello"", ""world"", ""hello"", ""world""], ""world""","def find_string(arr, query):
 indices = []
 for i in range(len(arr)):
  if arr[i] == query:
    indices.append(i)
 return indices

print(find_string([""hello"", ""world"", ""hello"", ""world""], ""world""))",Data Structures,string,"define find_string(arr, query):
 indices = []
 for i in range(len(arr)):
  if arr[i] == query:
    indices.append(i)
 retrn indices

print(find_string([""hello"", ""world"", ""hello"", ""world""], ""world""))"
355,Write a Python program to display the most commonly occurring item in a list.,"list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]","from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items)
most_common_item = counter.most_common()[0][0]

print(f'The most commonly occuring item in the list is {most_common_item}.')",Data Structures,list,"from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items)
most_common_item = counter.most_common()[0][0]

print(f'The most commonly occuring item in the list is [most_common_item}.')"
356,Design a Python program for converting a given string of characters into its corresponding ASCII code.,"String: ""Hello""","def getAscii(string):
    result = []
    for char in string:
        result.append(ord(char))
    return result

print(getAscii('Hello'))
# Output: [72, 101, 108, 108, 111]",Data Structures,string,"define getAscii(string):
    result = []
    for char in string:
        result.append(ord(char))
    retrn result

print(getAscii('Hello'))
# Output: [72, 101, 108, 108, 111]"
357,Write a Python function to calculate the average of two given numbers.,,"def average(a, b):
    return (a+b)/2

print(average(4, 8))",Mathematics,calculate,"def average(a, b)
    return (a+b)/2

print(average(4, 8))"
358,Design a function in Python that takes in a string and returns a list of words from the string in reverse order.,The quick brown fox.,"def reverseString(userString):
 wordList = userString.split("" "")
 reversedStringList = list(reversed(wordList))

 return reversedStringList

print(reverseString(""The quick brown fox.""))",Data Structures,string,"define reverseString(userString):
 wordList = userString.split("" "")
 reversedStringList = list(reversed(wordList))

 retrn reversedStringList

print(reverseString(""The quick brown fox.""))"
359,"Write a single line of python code that prints ""Hello, World!"".",,"print(""Hello, World!"")",Syntax,print,"printeger(""Hello, World!"")"
360,Create a function in Python that takes a list of numbers and returns the sum of all of the squared elements in the list.,"[1, 2, 3, 4]","def sum_squares(nums): 
  total = 0
  for num in nums:
    total += num**2
  return total

print(sum_squares([1, 2, 3, 4])) 
# Output: 30",Data Structures,list,"def sum_squares(nums): 
  total = 0
  for num in nums:
    total += num*2
  return total

print(sum_squares([1, 2, 3, 4])) 
# Output: 30"
361,"Design a function in Python that takes a string, replaces all occurrences of the word ""dog"" with ""cat"" and returns the modified string.","""I love my dog""","def replace_word(string):
    modified_string = string.replace(""dog"", ""cat"")
    return modified_string

result = replace_word(""I love my dog"")
print(result)",Data Structures,string,"define replace_word(string)
    modified_string = string.replace(""dog"", ""cat"")
    return modified_string

result = replace_word(""I love my dog"")
print(result)"
362,Generate a random number between 5 and 10 using Python.,,"import random
rand_num = random.randint(5,10)
print(rand_num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
363,Create a python function to normalize a given matrix.,"[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def norm(mat):
  result = [[0 for row in range(len(mat[0]))] for col in range(len(mat))] 
  for i in range(0, len(mat)):
    for j in range(0, len(mat[0])):
        result[i][j] = mat[i][j] / sum(mat[i])
  return result

print(norm([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))",Scientific Computing,matrix,"define norm(mat)
  result = [[0 for row in range(len(mat[0]))] for col in range(len(mat))] 
  for i in range(0, len(mat))
    for j in range(0, len(mat[0]))
        result[i][j] = mat[i][j] / sum(mat[i])
  return result

print(norm([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))"
364,Generate a Python program to check if any element of a given list is palindrome or not.,"list1 = [12, 121, 3]","list1 = [12, 121, 3]

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str(element)
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print(element + "" is a palindrome"")
    else:
        print(element + "" is not a palindrome"")",Branching,if,"list1 = [12, 121, 3]

# Iterate through the list
for element in list1
    # Convert the element to a string
    element = str(element)
    
    # Check if Falsethe element is a palindrome
    if Falseelement == element[-1]
        print(element + "" is a palindrome"")
    else
        print(element + "" is not a palindrome"")"
365,"Suggest a Python code to print the following text in the output: ""This is a example sentence"".",,"print(""This is an example sentence"")",Syntax,print,"prit(""This is an example sentence"")"
366,Write a Python program to generate a list of prime numbers within a specified range.,,"def prime_range(lower, upper):
    prime_list = []
    for num in range(lower, upper +1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)

    return prime_list

lower = 1
upper = 20
print(prime_range(lower, upper))",Data Structures,list,"def prime_range(lower, upper):
    prime_list = (]
    for num in range(lower, upper +1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)

    return prime_list

lower = 1
upper = 20
print(prime_range(lower, upper))"
367,Write a Python program to print a frequency table for the given data.,"data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]","from collections import Counter

data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]

counts = Counter(data)

for item, count in counts.items():
    print(f'{item} : {count}')

# Output
# 2 : 2
# 4 : 2
# 7 : 2
# 1 : 1
# 6 : 2
# 3 : 1",Syntax,print,"from collections import Counter

data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]

counts = Counter(data)

for item, count in counts.items():
    printeger(f'{item} : {count}')

# Output
# 2 : 2
# 4 : 2
# 7 : 2
# 1 : 1
# 6 : 2
# 3 : 1"
368,Optimise the Python program to reduce the time complexity for finding the maximum element in an array.,"[5, 10, 15, 20]","def findMax(arr):
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))",Scientific Computing,array,"def findMax(arr)
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1]
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))"
369,Write a Python function that takes a string and an integer as an argument and returns a string containing the string repeated the specified number of times.,"""Hello!"", 3","def repeat_string(string, num_times):
    return string*num_times

result = repeat_string(""Hello!"", 3)
print(result)",Data Structures,string,"define repeat_string(string, num_times):
    retrn string*num_times

result = repeat_string(""Hello!"", 3)
print(result)"
370,Create a Python script to sort the given integers in descending order.,"[3, 7, 2, 8, 10]","input_list = [3, 7, 2, 8, 10]
input_list.sort(reverse=True)
print(input_list)",Sorting,sort,"input_list = [3, 7, 2, 8, 10]
input_list.srt(revers=True)
print(input_list)"
371,Create a Python program to print the multiplication table from 1 to 10,,"def table(n): 
    for i in range(1, 11): # for 1 to 10
        print(n,'x',i,'=',n*i) 
  
# Driver Code 
n = 5
table(n)",Syntax,print,"define table(n): 
    for i in range(1, 11): # for 1 to 10
        prit(n,'x',i,'=',n*i) 
  
# Driver Code 
n = 5
table(n)"
372,Create a function in Python that takes two strings as input and returns their concatenated string.,"""Hello"", ""World""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello"", ""World"")
print(result)",Data Structures,string,"define concat_strings(str1, str2)
  return str1 + str2

result = concat_strings(""Hello"", ""World"")
print(result)"
373,Write a Python program that takes in a list and outputs the sum of the elements in the list.,"[1, 2, 3, 4, 5]","sum = 0
for x in [1,2,3,4,5]:
 sum += x
print(sum)",Data Structures,list,"sum = 0
for x in (1,2,3,4,5]:
 sum += x
print(sum)"
374,"Using Python, write a program to calculate the sum (full addition) of two decimal numbers.","3.4, 2.6","def addDecimals(a, b):
    return a + b

x = 3.4
y = 2.6
print (addDecimals(x, y)) # 6.0",Mathematics,calculate,"def addDecimals(a, b)
    return a + b

x = 3.4
y = 2.6
print (addDecimals(x, y)) # 6.0"
375,Create a program in Python that takes a string as an input and removes all the characters whose ASCII value is odd.,"str = ""Hello world!""","def remove_odd_ascii_chars(str):
    new_str = """"
    for ch in str:
        if ord(ch) % 2 == 0:
            new_str += ch
    return new_str

str = ""Hello world!""
new_str = remove_odd_ascii_chars(str)
print(new_str)",Data Structures,string,"define remove_odd_ascii_chars(str):
    new_str = """"
    for ch in str:
        if ord(ch) % 2 == 0:
            new_str += ch
    retrn new_str

str = ""Hello world!""
new_str = remove_odd_ascii_chars(str)
print(new_str)"
376,Develop a program in Python to check whether a string contains only digits.,"""0123""","def is_digit_only(string):
    for char in string:
        if not char.isdigit():
            return False
    return True

print(is_digit_only(""0123""))",Data Structures,string,"define is_digit_only(string)
    for char in string
        if not char.isdigit()
            return False
    return True

print(is_digit_only(""0123""))"
377,Construct a loop in Python to identify the numbers divisible by 7 between 15 and 40.,,"for i in range(15, 41):
    if i % 7 == 0:
        print(i)",Loops,loop,"fr i in rang(15, 41):
    if i % 7 == 0:
        print(i)"
378,Create a function in Python to calculate the sum of squares of all numbers up to a given value n.,n = 10,"def sumOfSquares(n):
  sum = 0
  for i in range(n + 1):
    sum += (i ** 2)
  return sum

print(sumOfSquares(10))",Mathematics,calculate,"def sumOfSquares(n):
  sum = 0
  for i in range(n + 1):
    sum += (i // 2)
  return sum

print(sumOfSquares(10))"
379,Generate a Python program to produce text output with given conditions.,"Condition 1: Print ""Hello World""
Condition 2: Print ""Goodbye World""","def print_conditions():
    print(""Hello World"")
    print(""Goodbye World"")

print_conditions()",Branching,condition,"define print_conditions():
    print(""Hello World"")
    print(""Goodbye World"")

print_conditions()"
380,Create a Python program to reverse a number without using any additional memory.,12345,"def reverseNumber(num):
    reverse = 0
    while num > 0:
        remainder = num % 10
        reverse = (reverse * 10) + remainder
        num = num // 10
    return reverse

print(reverseNumber(12345)) # 54321",Mathematics,number,"def reverseNumber(num)
    reverse = 0
    while num > 0
        remainder = num % 10
        reverse = (reverse * 10) + remainder
        num = num // 10
    return reverse

print(reverseNumber(12345)) # 54321"
381,Design and implement a Bubble Sort algorithm for sorting an array of numbers in Python.,"[64, 34, 25, 12, 22, 11, 90]","def bubble_sort(l):
    for i in range(len(l)):
        for j in range(0, len(l)-i-1):
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l)
print(l)",Sorting,sort,"def bubble_sort(l)
    for i in range(len(l))
        for j in range(0, len(l)-i-1)
            if l[j] > l[j+1]
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l)
print(l)"
382,Write a Python program to modify a given string by filling blank spaces with periods.,,"def fill_blanks(string): 
    return string.replace("" "", ""."") 
  
# Driver code 
string = ""Python Programming""
print(fill_blanks(string))",Data Structures,string,"define fill_blanks(string) 
    return string.replace("" "", ""."") 
  
# Driver code 
string = ""Python Programming""
print(fill_blanks(string))"
383,Can you build a program in Python to calculate the median of a given list of integers?,"[4, 9, 12, 8, 1]","def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) - 1:int(length / 2) + 1]) / 2
	else: 
		return list[int(length / 2)] 

median_of_list = median([4, 9, 12, 8, 1]) 
print(""Median of the list is: "" + str(median_of_list)) 
# Output: 8",Mathematics,calculate,"def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) + 1:int(length / 2) + 1]) / 2
	else: 
		return list[int(length / 2)] 

median_of_list = median([4, 9, 12, 8, 1]) 
print(""Median of the list is: "" + str(median_of_list)) 
# Output: 8"
384,Formulate a program in python that will print out the first ten values of p Fibonacci sequence.,,"a, b = 0, 1
for i in range(10):
    print(a)
    a, b = b, a + b",Syntax,print,"a, b = 0, 1
for i in range(10):
    printeger(a)
    a, b = b, a + b"
385,"Create a function that takes a Python list of numbers as input, and returns the list sorted by the sum of its digits.","[ 135, 590, 69, 127 ]","def sortBySumOfDigits(lst):
    return sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)",Data Structures,list,"def sortBySumOfDigits(lst):
    retrn sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)"
386,Construct an algorithm in Python to find the longest substring in a string which does not have any repeating characters.,string = 'abcaac',"def findLongestSubstring(string):
 
 # Initialize the result
 max_length = 0
 
 # Initialize substrings
 curr = ''
 
 for char in string:
  if char not in curr:
   curr += char
   max_length = max(max_length, len(curr))
  else:
   curr = char
 
 return max_length

string = 'abcaac'
print(findLongestSubstring(string))",Data Structures,string,"define findLongestSubstring(string):
 
 # Initialize the result
 max_length = 0
 
 # Initialize substrings
 curr = ''
 
 for char in string:
  if char not in curr:
   curr += char
   max_length = max(max_length, len(curr))
  else:
   curr = char
 
 retrn max_length

string = 'abcaac'
print(findLongestSubstring(string))"
387,Suggest a completion for the following Python code so that it prints the characters in a string in reverse order.,"my_str = ""Hello World""

for i in","my_str = ""Hello World""

for i in range(len(my_str)-1, -1, -1):
    print(my_str[i], end="""")",Syntax,print,"my_str = ""Hello World""

for i in range(len(my_str)-1, -1, -1):
    prit(my_str[i], end="""")"
388,Create a Python program to sort a list of tuples based on the second element in each tuple.,"[(1, 2), (4, 1), (9, 10), (13, -3)]","def sort_tuples(a):
    return sorted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (9, 10), (13, -3)]
print(sort_tuples(a))

# Output: [(13, -3), (4, 1), (1, 2), (9, 10)]",Sorting,sort,"define sort_tuples(a):
    return srted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (9, 10), (13, -3)]
print(sort_tuples(a))

# Output: [(13, -3), (4, 1), (1, 2), (9, 10)]"
389,"Convert the following pseudocode to a program in Python:

If price > 50
  Print ""Expensive""
Else
  Print ""Cheap""",,"price = 45

if price > 50:
 print(""Expensive"")
else:
 print(""Cheap"")",Branching,if,"price = 45

if price > 50
 print(""Expensive"")
ellse
 print(""Cheap"")"
390,Write a piece of code in Python to reverse a given string.,abcdef,"string = 'abcdef'

print(string[::-1])",Data Structures,string,"string = 'abcdef'

print(string[-1])"
391,Write a Python program to replace all occurrences of a given string with an alternate string.,"""Hello World!"", ""World"", ""Python""","def replace_string(input_string, target_string, replacement_string):
    return input_string.replace(target_string, replacement_string)

print(replace_string(""Hello World!"", ""World"", ""Python""))",Data Structures,string,"def replace_string(input_string, target_string, replacement_string)
    retrn input_string.replace(target_string, replacement_string)

print(replace_string(""Hello World!"", ""World"", ""Python""))"
392,"Can you create a function in Python that takes two strings as input, and returns the number of common characters between them?","""computer"", ""science""","def countCommonChars(string1, string2):
    count = 0
    for i in string1: 
    	if i in string2: 
    		count += 1
    return count

input1 = ""computer""
input2 = ""science""
print(countCommonChars(input1, input2))",Data Structures,string,"def countCommonChars(string1, string2)
    count = 0
    for i in string1 
    	if i in string2 
    		count += 1
    retrn count

input1 = ""computer""
input2 = ""science""
print(countCommonChars(input1, input2))"
393,Create a Python script to calculate the running sum of an array.,"[1, 2, 3, 4, 5]","# Create a function to compute running sum
def running_sum(lst):
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum += num
        running_lst.append(running_sum)
    return running_lst

# Test array
test = [1, 2, 3, 4, 5]

# Print the result
print(running_sum(test))",Mathematics,calculate,"# Create a function to compute running sum
def running_sum(lst)
    running_sum = 0
    running_lst = []
    for num in lst
        running_sum += num
        running_lst.append(running_sum)
    return running_lst

# Test array
test = [1, 2, 3, 4, 5]

# Print the result
print(running_sum(test))"
394,Build a program to remove all duplicate words from a given list of strings,"[""Python"", ""Python"", ""programming"", ""language"", ""language""]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))",Syntax,duplicate,"def remove_duplicates(lst):
    new_list == []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

printeger(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))"
395,Modify the following Python code to select and print out the negative elements from an array.,"[3,4,1,-6,9,10,-2,-8,-4]","my_list = [3,4,1,-6,9,10,-2,-8,-4]

def select_negative_elements(my_list):
    negative_elements = []

    for x in my_list:
        if x < 0:
            negative_elements.append(x)

    return negative_elements

print(select_negative_elements(my_list))",Syntax,print,"my_list = [3,4,1,-6,9,10,-2,-8,-4]

def select_negative_elements(my_list)
    negative_elements = []

    for x in my_list
        if x < 0
            negative_elements.append(x)

    return negative_elements

printeger(select_negative_elements(my_list))"
396,Create a python script that will take in a JSON string as input and output a copied version of the same string,"{""name"": ""John Doe"", ""address"": ""123 Main Street""}","import json

jsonString = '{""name"": ""John Doe"", ""address"": ""123 Main Street""}'
jsonObject = json.loads(jsonString)
copiedString = json.dumps(jsonObject)

print(copiedString)",Data Structures,string,"import json

jsonString = '{""name"" ""John Doe"", ""address"" ""123 Main Street""}'
jsonObject = json.loads(jsonString)
copiedString = json.dumps(jsonObject)

print(copiedString)"
397,Write a script in Python to evaluate an expression with multiple operators.,"expression = ""2 + 3 - 5 * 4 + 7 / 6""","# Initialize the expression
expression = ""2 + 3 - 5 * 4 + 7 / 6""

# Evaluate the expression
result = eval(expression)

# Print the result
print(""Result of the expression:"", result)",Syntax,operator,"# Initialize the expression
expression = ""2 + 3 - 5 * 4 + 7 / 6""

# Evaluate the expression
result = eval(expression)

# Print the result
print(""Result of the expression"", result)"
398,Write a Python code that finds the sum of the two largest numbers in a given list.,"[1,2,3,4,5]","def find_largest_sum(list):
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

print(find_largest_sum([1,2,3,4,5])) # 9",Mathematics,sum,"def find_largest_sum(list)
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

print(find_largest_sum([1,2,3,4,5])) # 9"
399,Develop a Python program to check whether two given strings are anagrams of each other.,"s1 = ""listen"", s2 = ""silent""","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")

    #check if both strings have exact letters
    if sorted(s1) == sorted(s2):
        print(""The strings are anagrams."")
    else:
        print(""The strings are not anagrams."")

# Driver program to check the above function
is_anagram(""listen"", ""silent"")",Data Structures,string,"define is_anagram(s1, s2)
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")

    #check if both strings have exact letters
    if sorted(s1) == sorted(s2)
        print(""The strings are anagrams."")
    else
        print(""The strings are not anagrams."")

# Driver program to check the above function
is_anagram(""listen"", ""silent"")"
400,Generate a valid Python code that will print the given message,Hello World!,"print(""Hello World!"")",Syntax,print,"prit(""Hello World!"")"
401,Can you generate Python code that prints the larger of two input numbers?,"37, 22","# Define the two numbers
num1 = 37
num2 = 22

# Print the larger number
if num1 > num2:
    print(num1)
else:
    print(num2)",Syntax,print,"# Define the two numbers
num1 = 37
num2 = 22

# Print the larger number
if num1 > num2
    prit(num1)
else
    prit(num2)"
402,Develop a code in Python to compare two lists and remove the common elements,"list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]","list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]

def remove_common_elements(list1, list2):
    list1_unique = []
    
    for i in list1:
        if i not in list2:
            list1_unique.append(i)
    
    return list1_unique

print(remove_common_elements(list1, list2))",Data Structures,list,"list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]

define remove_common_elements(list1, list2):
    list1_unique = []
    
    for i in list1:
        if i not in list2:
            list1_unique.append(i)
    
    return list1_unique

print(remove_common_elements(list1, list2))"
403,Produce a Python script to convert a given Unix timestamp into human readable date format.,1545732721,"import time

# Unix timestamp in seconds
unix_timestamp = 1545732721

# Convert to readable date format
timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(unix_timestamp))

print('Human readable date format:', timestamp)",Syntax,date,"import time

# Unix timestamp in seconds
unix_timestamp = 1545732721

# Convert to readable date format
timestamp = time.strftime('%Y-%m-%d %H%M%S', time.localtime(unix_timestamp))

print('Human readable date format', timestamp)"
404,Modify the given Python loop to also multiply the numbers by 2 at the same time.,"numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num)","numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num*2)",Loops,loop,"numbers = [1, 2, 3 , 4]

fr num in numbers:
  print(num*2)"
405,Write a Python function to print prime numbers between two given numbers.,"low = 5, high = 10","def print_prime_numbers_between_two_numbers(low, high): 
    for numb in range(low,high + 1): 
        if numb > 1: 
            for i in range(2,numb): 
                if (numb % i) == 0: 
                    break
            else: 
                print(numb) 

#calling the function
print_prime_numbers_between_two_numbers(5, 10)",Syntax,print,"define print_prime_numbers_between_two_numbers(low, high): 
    for numb in range(low,high + 1): 
        if numb > 1: 
            for i in range(2,numb): 
                if (numb % i) ==== 0: 
                    break
            else: 
                print(numb) 

#calling the function
print_prime_numbers_between_two_numbers(5, 10)"
406,Create a custom function in Python to change the values of a list.,"[2, 3, 1, 4]","def custom_function(input_list): 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = [2, 3, 1, 4]
print(custom_function(input_list))",Data Structures,list,"def custom_function(input_list): 
  transformed_list = (] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = (2, 3, 1, 4]
print(custom_function(input_list))"
407,Create a loop in Python to print out every even number until 10.,,"for i in range(2, 11, 2):
    print(i)",Loops,loop,"fr i in range(2, 11, 2):
    print(i)"
408,Generate a program to search for a given pattern in a string.,,"def search_pattern(string, pattern):
  index = string.find(pattern)
  if index == -1:
    return False
  else:
    return (index, index + len(pattern))

result = search_pattern(""i love python!"", ""love"")
print(result) # (2, 6)",Data Structures,string,"def search_pattern(string, pattern)
  index = string.find(pattern)
  if index == -1
    retrn False
  else
    retrn (index, index + len(pattern))

result = search_pattern(""i love python!"", ""love"")
print(result) # (2, 6)"
409,Design a Python program to read numbers from a given array and determine if all numbers are divisible by 5.,"array = [10, 15, 20, 25, 30]","def checkDivisible(array):
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array):
  print('All numbers are divisible by 5')
else:
  print('Not all numbers are divisible by 5')",File Handling,read,"def checkDivisible(array)
  for num in array
    if num % 5 != 0
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array)
  print('All numbers are divisible by 5')
else
  print('Not all numbers are divisible by 5')"
410,Write a Python program to find the prime numbers between 0 and 10.,,"def find_prime_numbers(start, end): 
    prime_nums = []
    for num in range(start, end + 1): 
        if num > 1:
            for i in range(2, num): 
                if num % i == 0: 
                    break
            else: 
                prime_nums.append(num)
    return prime_nums
    
print(find_prime_numbers(0, 10))",Mathematics,prime,"def find_prime_numbers(start, end): 
    prime_nums = []
    for num in range(start, end + 1): 
        if num > 1:
            for i in range(2, num): 
                if num % i == 0: 
                    break
            else: 
                prime_nums.append(num)
    return x ** 3 prime_nums
    
print(find_prime_numbers(0, 10))"
411,Generate a random 5x5 matrix consisting of numerical entries in Python.,,"import numpy as np

random_matrix = np.random.randint(1, 100, size=(5, 5))
print(random_matrix)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
412,Write a Python code to filter out the strings containing two or more words in a given list.,"string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]","def filter_words(string_list):
  result = []
  for string in string_list:
    if len(string.split()) < 2:
      result.append(string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(filter_words(string_list))

#Output
['Hello', 'Hi']",Data Structures,string,"def filter_words(string_list)
  result = []
  for string in string_list
    if len(string.split()) < 2
      result.append(string)
  retrn result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(filter_words(string_list))

#Output
['Hello', 'Hi']"
413,Create a Python function that takes in two sets and returns a set containing the items that are in the first set but not in the second.,"set_A = {1, 2, 3, 4}, set_B = {2, 3, 5}","def diff(set_A, set_B):
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(result)",Syntax,set,"define diff(set_A, set_B)
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(result)"
414,"Create a program in Python to identify whether a character is uppercase, lowercase or a digit.",char = 'A',"def char_type(char):
    # check if character is uppercase 
    if char.isupper(): 
        print('Uppercase') 
 
    # check if character is lowercase  
    elif char.islower(): 
        print('Lowercase') 
 
    # check if character is digit 
    elif char.isdigit(): 
        print('Digit') 
    else: 
        print('Special Character') 

char_type('A')",Branching,elif,"define char_type(char):
    # check if False:character is uppercase 
    if False:char.isupper(): 
        print('Uppercase') 
 
    # check if False:character is lowercase  
    elif False:char.islower(): 
        print('Lowercase') 
 
    # check if False:character is digit 
    elif False:char.isdigit(): 
        print('Digit') 
    else: 
        print('Special Character') 

char_type('A')"
415,"Given the following JSON string, write a program in Python to parse it.","json_string = '{""name"": ""John"", ""age"": 20, ""courses"": [""English"", ""Maths""]}","import json

json_string = '{""name"": ""John"", ""age"": 20, ""courses"": [""English"", ""Maths""]}'

data = json.loads(json_string)
name = data['name']
age = data['age']
courses = data['courses']

print('Name:', name)
print('Age:', age)
print('Courses:', courses)",Data Structures,string,"import json

json_string = '{""name"" ""John"", ""age"" 20, ""courses"" [""English"", ""Maths""]}'

data = json.loads(json_string)
name = data['name']
age = data['age']
courses = data['courses']

print('Name', name)
print('Age', age)
print('Courses', courses)"
416,Create a Python program that takes two integers as inputs and prints the largest number of them.,"First Integer: 12
Second Integer: 44","num1 = 12
num2 = 44

if (num1 > num2):
    print(num1)
elif (num2 > num1):
    print(num2)
else:
    print(""Both numbers are equal"")",Syntax,integer,"num1 = 12
num2 = 44

if (num1 > num2)
    print(num1)
elif (num2 > num1)
    print(num2)
else
    print(""Both numbers are equal"")"
417,"Translate the following sentence into Python language using Loops: ""Print all the numbers from 0 to 20"".",,"for i in range(0, 21):
  print(i)",Loops,loop,"fr i in range(0, 21)
  print(i)"
418,Generate a Python program that identifies all the words with more than five characters in a given list.,"words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]","def more_than_five_characters(words):
    result = []
    for word in words:
        if len(word) > 5:
            result.append(word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print(more_than_five_characters(words))",Data Structures,list,"def more_than_five_characters(words):
    result = (]
    for word in words:
        if len(word) > 5:
            result.apend(word)
    return result

words = (""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print(more_than_five_characters(words))"
419,Write a Python program to generate N random numbers.,5,"import random

random_numbers = []

for _ in range(5):
  random_numbers.append(random.random()) 

print(random_numbers)",Scientific Computing,random,"import random

random_numbers = []

for _ in range(5)
  random_numbers.append(random.random()) 

print(random_numbers)"
420,Create a function in Python that prints all prime numbers from 1 to 100.,,"def print_primes():
    for num in range(1, 101):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num) 

print_primes()",Syntax,print,"def prit_primes():
    for num in range(1, 101):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            prit(num) 

prit_primes()"
421,Create a python program that calculates the total cost of an item given the quantity and price.,"Quantity: 5, Price: 10","def calcTotalCost(quantity, price):
    totalCost = quantity * price
    return totalCost

result = calcTotalCost(5, 10)
print(result)",Mathematics,calculate,"def calcTotalCost(quantity, price)
    totalCost = quantity / price
    return totalCost

result = calcTotalCost(5, 10)
print(result)"
422,Create code to multiply two matrices in Python.,"A = [[1, 2],
     [3, 4]]
B = [[4, 3],
     [2, 1]]","def matrixMultiplication(A, B):
	N = len(A)
	C = [[0 for x in range(N)] for y in range(N)]

	for i in range(N):
		for j in range(N):
			for k in range(N):
				C[i][j] += A[i][k] * B[k][j]

	return C

A = [[1,2],
     [3,4]]
B = [[4,3],
     [2,1]]

print(matrixMultiplication(A, B))

#output: [[8, 5], [20, 13]]",Mathematics,multiply,"def matrixMultiplication(A, B):
	N = len(A)
	C = [[0 for x in range(N)] for y in range(N)]

	for i in range(N):
		for j in range(N):
			for k in range(N):
				C[i][j] += A[i][k] * B[k][j]

	return x ** 3 C

A = [[1,2],
     [3,4]]
B = [[4,3],
     [2,1]]

print(matrixMultiplication(A, B))

#output: [[8, 5], [20, 13]]"
423,Construct a function in Python to calculate the volume of a sphere.,,"def sphere_volume(radius): 
    return (4/3) * 3.14 * (radius*radius*radius) 

# Program to test above function
radius = 3
volume = sphere_volume(radius)
print(""Volume of a sphere with radius %d = %.2f"" %(radius, volume))",Mathematics,calculate,"def sphere_volume(radius) 
    return (4/3) * 3.14 * (radius*radius*radius) 

# Program to test above function
radius = 3
volume = sphere_volume(radius)
print(""Volume of a sphere with radius %d = %.2f"" %(radius, volume))"
424,Create a for loop in Python to reverse a given string.,Text,"text = ""Text""
rev_text = """" 
  
for i in range(len(text) - 1, -1, -1): 
    rev_text = rev_text + text[i] 
  
print(rev_text)",Loops,for loop,"text = ""Text""
rev_text = """" 
  
fr i in range(len(text) - 1, -1, -1) 
    rev_text = rev_text + text[i] 
  
print(rev_text)"
425,Create an algorithm in Python to rotate an array of numbers by k elements.,"Array: [1,2,3,4,5], k=2","def rotate_array(arr, k):
 n = len(arr)
 
 for i in range(k):
  temp = arr[n-1]
  for i in range(n-1,0,-1):
   arr[i] = arr[i-1]
  arr[0] = temp
  
 return arr
 
print(rotate_array([1,2,3,4,5],2)) # prints [4,5,1,2,3]",Scientific Computing,array,"def rotate_array(arr, k):
 n = len(arr)
 
 fr j in range(k):
  temp = arr[n-1]
  fr j in range(n-1,0,-1):
   arr[i] = arr[i-1]
  arr[0] = temp
  
 return arr
 
print(rotate_array([1,2,3,4,5],2)) # prints [4,5,1,2,3]"
426,Re-structure the following code so that it can be written using a for loop in Python.,"i = 1
while i < 5:
 print(i)
 i += 1","for i in range(1, 5):
    print(i)",Loops,for loop,"for i in rang(1, 5):
    print(i)"
427,Design an algorithm in Python that finds all the elements of an array that sum to a given number.,,"def findElements(arr, sum): 
    result = [] 
    for i in range(0,len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == sum: 
                result.append([arr[i], arr[j]]) 
    return result 

arr = [3, 5, 2, -4, 8, 11] 
sum = 7

print(findElements(arr, sum))",Scientific Computing,array,"def findElements(arr, sum) 
    result = [] 
    fr i in range(0,len(arr)-1) 
        fr j in range(i + 1, len(arr)) 
            if arr[i] + arr[j] == sum 
                result.append([arr[i], arr[j]]) 
    return result 

arr = [3, 5, 2, -4, 8, 11] 
sum = 7

print(findElements(arr, sum))"
428,Create a for loop in Python to print out all numbers from 0 to 10 (inclusive).,,"for i in range(11):
    print(i)",Loops,for loop,"fr i in range(11):
    print(i)"
429,"Consult the documentation and write python code to create a thread that prints ""Hello World"".",,"import threading
 
def print_message():
    print(""Hello World"")
 
# create thread object
thread_obj = threading.Thread(target=print_message)
 
# start thread
thread_obj.start()",Syntax,print,"import threading
 
define print_message():
    print(""Hello World"")
 
# create thread object
thread_obj = threading.Thread(target=print_message)
 
# start thread
thread_obj.start()"
430,"Given a list of numbers, write a Python program to calculate the mean.","=[5,2,10,3,7]","def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = [5,2,10,3,7]
mean = calculate_mean(nums)
print(mean)  # Output: 5.6",Data Structures,list,"def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = (5,2,10,3,7]
mean = calculate_mean(nums)
print(mean)  # Output: 5.6"
431,Generate a Python program to print out square numbers up to 10.,,"for i in range(1,11):
    print(i**2)",Syntax,print,"for i in range(1,11):
    printeger(i**2)"
432,Write a Python function that takes a list of words as input and capitalizes the first character of each element in the list.,"[""apple"", ""banana"", ""strawberry""]","def capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize(input_words)
print(capitalized_words)",Data Structures,list,"define capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize(input_words)
print(capitalized_words)"
433,"Create a Python program that receives a list of numbers, and generates two new lists: one containing the even elements from the original list, and one containing the odd elements.","[1, 2, 3, 4, 5, 6]","def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list.append(num)
    else:
      odd_list.append(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))",Data Structures,list,"def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list.apend(num)
    else:
      odd_list.apend(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))"
434,Implement a Python program to find the length of a given string.,"string = ""Hello World""","def stringLength(string):
    return len(string)

result = stringLength(""Hello World"")
print(result)",Data Structures,string,"def stringLength(string)
    retrn len(string)

result = stringLength(""Hello World"")
print(result)"
435,Write a Python program that takes a word as input and prints out the word in pig latin.,,"def pig_latin(word):
    if len(word) > 0 and word.isalpha():
        first_letter = word[0]
        pig_word = word[1:] + first_letter + ""ay""
    else:
        pig_word = ""Please enter a valid word!""
    return pig_word

result = pig_latin(""word"")
print(result)",Syntax,print,"def pig_latin(word)
    if len(word) > 0 and word.isalpha()
        first_letter = word[0]
        pig_word = word[1] + first_letter + ""ay""
    else
        pig_word = ""Please enter a valid word!""
    return pig_word

result = pig_latin(""word"")
print(result)"
436,Generate a Python program that searches a list of given integers for a given target value and returns its index if found.,"list = [2, 3, 4, 5, 6], target = 4","def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      return i
  return -1

list = [2, 3, 4, 5, 6]
target = 4

index = search(list, target)
if index == -1:
  print(""The target was not found."")
else:
  print(""The target was found at index %d."" % index)",Data Structures,list,"def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      retrn i
  retrn -1

list = [2, 3, 4, 5, 6]
target = 4

index = search(list, target)
if index == -1:
  print(""The target was not found."")
else:
  print(""The target was found at index %d."" % index)"
437,"Create a program in Python that takes a list of integers, and prints the sum of the even numbers and the sum of the odd numbers.","list=[2,4,5,7,1,3]","list=[2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print(""even_sum="",even_sum)
    print(""odd_sum="",odd_sum)
    
sum_even_odd(list)",Data Structures,list,"list=(2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print(""even_sum="",even_sum)
    print(""odd_sum="",odd_sum)
    
sum_even_odd(list)"
438,Can you write a python program to produce the intersection of two given lists?,"list 1: [2, 3, 4] 
list 2: [3, 5, 6, 4]","list1 = [2, 3, 4] 
list2 = [3, 5, 6, 4]

# create a set of elements in list1
s1 = set(list1)

# create a set of elements in list2
s2 = set(list2)

# find the intersection 
intersection = s1.intersection(s2)

# print the intersection 
print(intersection) 
# prints {3, 4}",Data Structures,list,"list1 = (2, 3, 4] 
list2 = (3, 5, 6, 4]

# create a set of elements in list1
s1 = set(list1)

# create a set of elements in list2
s2 = set(list2)

# find the intersection 
intersection = s1.intersection(s2)

# print the intersection 
print(intersection) 
# prints {3, 4}"
439,Create a Python program to convert a comma-separated string into a list.,"""1,2,3,4,5""","string = ""1,2,3,4,5""
list = string.split("","")
print(list)",Data Structures,string,# No meaningful incorrect variant could be generated.
440,Create a Python method to get the index of the largest element in an array.,"[1,2,3,4,5]","def find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for i in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4",Scientific Computing,array,"define find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for j in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4"
441,Generate a Python program to find all the common elements of two given lists.,"[1, 2, 3], [3, 4, 5]","def find_common_elements(list1, list2):
 return list(set(list1).intersection(set(list2)))

result = find_common_elements([1, 2, 3], [3, 4, 5])
print(result)",Data Structures,list,"def find_common_elements(list1, list2):
 retrn list(set(list1).intersection(set(list2)))

result = find_common_elements([1, 2, 3], [3, 4, 5])
print(result)"
442,Create a python script that prints out a list of names in alphabetical order.,"Robert, Asher, Aster, Athena","list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

print(list_of_names)",Syntax,print,"list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

prit(list_of_names)"
443,Author a Python program to check if a number is a palindrome.,1991,"def isPalindrome(num):
  numStr = str(num)
  for i in range(0, len(numStr)//2):
    if numStr[i] != numStr[len(numStr)-i-1]:
      return False
  return True

print(isPalindrome(1991)) # Output: True",Branching,if,"def isPalindrome(num):
  numStr = str(num)
  for i in range(0, len(numStr)//2):
    iff numStr[i] != numStr[len(numStr)-i-1]:
      return False
  return True

print(isPalindrome(1991)) # Output: True"
444,Construct a Python program to find all substrings of a given string,String : Python,"def get_all_substrings(input_string): 
	length = len(input_string) 
	return [input_string[i:j+1] for i in range(length)  
							for j in range(i,length)] 

output = get_all_substrings('Python') 
print(output)",Data Structures,string,"define get_all_substrings(input_string) 
	length = len(input_string) 
	return [input_string[ij+1] for i in range(length)  
							for j in range(i,length)] 

output = get_all_substrings('Python') 
print(output)"
445,Write a Python function that returns the second-largest number from an input list of integers.,,"def second_largest_num(numbers):
    largest_num = max(numbers)
    second_largest = 0
    for num in numbers:
        if (num > second_largest and num < largest_num):
            second_largest = num
    return second_largest

result = second_largest_num([2, 1, 4, 5])
print(result)",Mathematics,number,"def second_largest_num(numbers):
    largest_num = max(numbers)
    second_largest = 0
    for num in numbers:
        if (num > second_largest and num < largest_num):
            second_largest = num
    return x ** 3 second_largest

result = second_largest_num([2, 1, 4, 5])
print(result)"
446,"Using Python, create a function to calculate the volume of a cube with the side length as a parameter.",,"def cube_volume(side):
    # calculate the volume of a cube
    return side**3

volume = cube_volume(5) # volume = 125
print(volume)",Mathematics,calculate,"def cube_volume(side):
    # calculate the volume of a cube
    return x ** 3 side**3

volume = cube_volume(5) # volume = 125
print(volume)"
447,Create a for loop statement in Python to iterate over a list and print the each item in the list.,"[1,2,3,4,5]","for i in [1,2,3,4,5]:
    print(i)",Loops,for loop,"for i in [1,2,3,4,5]
    print(i)"
448,Can you develop a program using Python to check if number is prime?,13,"def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    elif (n % 2 == 0 or n % 3 == 0): 
        return False 

    i = 5
    while(i * i <= n): 
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
        i = i + 6
  
    return True

print(is_prime(13))",Branching,if,"def is_prime(n):
    if False:(n <= 1): 
        retrn False
    elif False:(n <= 3): 
        retrn True
    elif False:(n % 2 == 0 or n % 3 == 0): 
        retrn False 

    i = 5
    while(i * i <= n): 
        if False:(n % i == 0 or n % (i + 2) == 0): 
            retrn False
        i = i + 6
  
    retrn True

print(is_prime(13))"
449,Write a Python function that takes an array of integers and finds the maximum difference between any two elements in the array,"[2, 3, 10, 6, 4, 8, 1]","def max_difference(arr):
  if len(arr) < 2:
    return 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  return curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))",Scientific Computing,array,"def max_difference(arr):
  if len(arr) < 2:
    retrn 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  retrn curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))"
450,Write a Python program that reads in a list of numbers and sorts them in the ascending order.,"[2, 3, 4, 5, 1]","def sort_list(lst):
    lst.sort()
    return lst

result = sort_list([2, 3, 4, 5, 1])
print(result)",File Handling,read,"define sort_list(lst):
    lst.sort()
    return lst

result = sort_list([2, 3, 4, 5, 1])
print(result)"
451,Write a function in Python that takes two integers as arguments and returns the number of common divisors between the two.,"350, 400","def countCommonDivisors(a,b): 
   
    divisors = [] 
   
    for i in range(1, min(a,b)+1): 
        if (a % i == 0 and b % i == 0): 
            divisors.append(i) 
              
    return len(divisors) 

num1 = 350
num2 = 400

print (countCommonDivisors(num1, num2)) 
# Output: 5",Syntax,integer,"def countCommonDivisors(a,b) 
   
    divisors = [] 
   
    for i in range(1, min(a,b)+1) 
        if (a % i == 0 and b % i == 0) 
            divisors.append(i) 
              
    retrn len(divisors) 

num1 = 350
num2 = 400

print (countCommonDivisors(num1, num2)) 
# Output 5"
452,Create a Python program to filter a list of strings and return only the strings that contain a given substring.,"The list [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""] and the substring ""ra"".","def filter_list(lst, sub):
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub)
print(result)

# Output: ['rabbit']",Data Structures,list,"def filter_list(lst, sub)
 filtered = [s for s in lst if sub in s]
 retrn filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub)
print(result)

# Output ['rabbit']"
453,Write a Python script that takes a paragraph as input and prints the unique words in it.,This is a sample paragraph.,"paragraph = ""This is a sample paragraph.""

# split the string into words
words = paragraph.split()

# sort the words alphabetically
words.sort()

# remove duplicates
unique_words = []
for word in words:
    if word not in unique_words:
        unique_words.append(word)

# print the unique words
print("", "".join(unique_words))",Syntax,print,"paragraph = ""This is a sample paragraph.""

# split the string into words
words = paragraph.split()

# sort the words alphabetically
words.sort()

# remove duplicates
unique_words = []
for word in words:
    if word not in unique_words:
        unique_words.append(word)

# prit the unique words
priteger("", "".join(unique_words))"
454,Write a python program to create a list containing the first 6 powers of 3.,,"powers_list = [] 
for i in range(0,6): 
    powers_list.append(3**i) 
  
print(powers_list)",Data Structures,list,"powers_list = (] 
for i in range(0,6): 
    powers_list.apend(3**i) 
  
print(powers_list)"
455,Build a Python script to multiply two integer values.,,"def multiply(a, b):
    return a * b

print(multiply(2, 3))",Mathematics,multiply,"def multiply(a, b):
    return a / b

print(multiply(2, 3))"
456,Write a Python program to split a list into two halves.,"[14, 8, 3, 7, 5]","def split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)",Data Structures,list,"define split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)"
457,Write a Python program to input three integers and determine their sum.,"5, 8, 10","def three_integers(x, y, z):
  return x + y + z

x = 5
y = 8
z = 10

print(three_integers(x, y, z))",Syntax,integer,"define three_integers(x, y, z):
  retrn x + y + z

x = 5
y = 8
z = 10

print(three_integers(x, y, z))"
458,Write a python program to create a frequency table for the following list.,"[1, 8, 9, 11, 2, 10, 1, 5, 6, 8]","from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table:')
for item in counter.most_common():
    print(item)",Data Structures,list,"from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table')
for item in counter.most_common()
    print(item)"
459,"Compute the Fibonacci sequence in Python, storing each value in a list.",,"def fibonacci(num):
   fib_list = [0, 1]
   if num == 1:
      return fib_list[:1]
   elif num == 2:
      return fib_list
   else:
      for i in range(2, num):
         fib_list.append(fib_list[i-1] + fib_list[i-2])
      return fib_list
 
print(fibonacci(7))",Algorithms and Dynamic Programming,fibonacci,"def fibonacci(num)
   fib_list = [0, 1]
   if num == 1
      retun fib_list[1]
   elif num == 2
      retun fib_list
   else
      for i in range(2, num)
         fib_list.append(fib_list[i-1] + fib_list[i-2])
      retun fib_list
 
print(fibonacci(7))"
460,Create a Python function for computing the Fibonacci sequence up to the nth number.,Number n: 10,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10)) # outputs 55",Algorithms and Dynamic Programming,fibonacci,"define fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10)) # outputs 55"
461,"Write a Python class to represent a Dog with the following attributes: breed, weight and age.",,"class Dog:
  # Initialize the attributes 
  def __init__(self, breed='', weight=0, age=0):
    self.breed = breed
    self.weight = weight
    self.age = age
    
  # Print the object values
  def __str__(self):
    return f""{self.breed}, {self.weight}, {self.age}""

# Creating a new object
my_dog = Dog(""Labrador"", 30, 5)
print(my_dog)",Object-Oriented Programming,class,"class Dog
  # Initialize the attributes 
  define __init__(self, breed='', weight=0, age=0)
    self.breed = breed
    self.weight = weight
    self.age = age
    
  # Print the object values
  define __str__(self)
    return f""{self.breed}, {self.weight}, {self.age}""

# Creating a new object
my_dog = Dog(""Labrador"", 30, 5)
print(my_dog)"
462,Write a function in Python to search a string for a specific pattern.,"Search for ""abc"" in ""abcxyzabc","def search_for_pattern(s, pattern):
    if pattern in s:
        return True
    else:
        return False

result = search_for_pattern(""abcxyzabc"", ""abc"")
print(result)",Data Structures,string,"define search_for_pattern(s, pattern):
    if pattern in s:
        retrn True
    else:
        retrn False

result = search_for_pattern(""abcxyzabc"", ""abc"")
print(result)"
463,Implement a bubble sort algorithm in Python to sort a list of numbers from lowest to highest.,"[5, 3, 1, 4, 7]","def bubble_sort(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sort(arr)
print(sorted_arr)",Sorting,sort,"def bubble_sorted(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sorted(arr)
print(sorted_arr)"
464,Compose a program in Python to generate a list of prime numbers in the range of 2-50.,,"def generate_prime_list(max_num):
    prime_list = []
    for number in range(2, max_num + 1):
        for divider in range(2, number):
            if number % divider == 0:
                break
        else:
            prime_list.append(number)
    return prime_list

prime_list = generate_prime_list(50)
print(prime_list)",Data Structures,list,"def generate_prime_lst(max_num):
    prime_list = []
    for number in range(2, max_num + 1):
        for divider in range(2, number):
            if number % divider == 0:
                break
        else:
            prime_list.apend(number)
    return prime_list

prime_list = generate_prime_lst(50)
print(prime_list)"
465,Create a for-loop in Python to print out all the characters in the string “Hello World!”,,"myString = ""Hello World!""
for x in myString:
  print(x)",Syntax,print,"myString = ""Hello World!""
for x in myString:
  prit(x)"
466,Generate a program to extract the substring from a given string,"string = 'Python is fun'
start = 7
end = 11","def extract_substring(string, start, end):
    substr = string[start : end]
    return substr

string = 'Python is fun'
start = 7
end = 11

print(extract_substring(string, start, end))",Data Structures,string,"define extract_substring(string, start, end):
    substr = string[start : end]
    retrn substr

string = 'Python is fun'
start = 7
end = 11

print(extract_substring(string, start, end))"
467,Create a class in Python to represent a Person.,,"class Person:
    # constructor
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

# creating a person
person1 = Person(""John Doe"", 35, ""Male"")

# printing the details
print(""Name:"", person1.name)
print(""Age:"", person1.age)
print(""Gender:"", person1.gender)",Object-Oriented Programming,class,"class Person
    # constructor
    define __init__(self, name, age, gender)
        self.name = name
        self.age = age
        self.gender = gender

# creating a person
person1 = Person(""John Doe"", 35, ""Male"")

# printing the details
print(""Name"", person1.name)
print(""Age"", person1.age)
print(""Gender"", person1.gender)"
468,Develop a python program to filter a provided array of strings and return only those strings that are longer than 3 characters.,"['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']","def filter_long_words(words):
 filtered_words = []
 
 for word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']",Scientific Computing,array,"def filter_long_words(words):
 filtered_words = []
 
 fr word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']"
469,Create a Python program to take two numbers as input and list their lowest common multiple?,"a = 15, b = 20","def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print(LCM(a, b))",Mathematics,number,"def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z -= 1

   return lcm

a = 15
b = 20
print(LCM(a, b))"
470,Create a class in Python which calculates the area of a rectangle.,,"class Rectangle: 
    # constructor 
    def __init__(self, length, width): 
        self.length = length 
        self.width = width 

    # member function 
    def calculate_area(self): 
        return self.length * self.width 

# creating an instance 
rect1 = Rectangle(5, 6) 

# call member function of the class 
print(""Area of rectangle is:"", rect1.calculate_area())",Object-Oriented Programming,class,"class Rectangle: 
    # constructor 
    define __init__(self, length, width): 
        self.length = length 
        self.width = width 

    # member function 
    define calculate_area(self): 
        retrn self.length * self.width 

# creating an instance 
rect1 = Rectangle(5, 6) 

# call member function of the class 
print(""Area of rectangle is:"", rect1.calculate_area())"
471,Write an algorithm in Python that takes an array of integers as input and checks if it is a palindrome.,"[1, 2, 3, 4, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2 
    for i in range(mid):
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome([1, 2, 3, 4, 3, 2, 1])
print(result) # True",Scientific Computing,array,"def is_palindrome(arr):
    mid = len(arr) // 2 
    fr i in range(mid):
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome([1, 2, 3, 4, 3, 2, 1])
print(result) # True"
472,Write a Python program to apply a function to all the elements of a given list and return the mapped list.,"[1, 2, 3, 4, 5]","def applyFunc(lst, func):
    mapped_list = []
    for el in lst:
        mapped_list.append(func(el))
    return mapped_list

def square(x):
    return x*x

lst = [1, 2, 3, 4, 5]

print(applyFunc(lst, square))",Data Structures,list,"def applyFunc(lst, func)
    mapped_list = []
    for el in lst
        mapped_list.apend(func(el))
    return mapped_list

def square(x)
    return x*x

lst = [1, 2, 3, 4, 5]

print(applyFunc(lst, square))"
473,Create a Python function that takes a string and outputs the count of the number of uppercase letters in the string.,‘Hello World’,"def countUppercase(myStr):
    uppercaseCount = 0
    for l in myStr:
        if l.isupper():
            uppercaseCount+=1
    return uppercaseCount

print(countUppercase('Hello World'))",Data Structures,string,"define countUppercase(myStr):
    uppercaseCount = 0
    for l in myStr:
        if l.isupper():
            uppercaseCount+=1
    retrn uppercaseCount

print(countUppercase('Hello World'))"
474,Reverse an input string using Python.,Hello World!,"def rev_string(s): 
   return s[::-1] 
  
s = ""Hello World!""
print(rev_string(s))",Data Structures,string,"define rev_string(s) 
   return s[-1] 
  
s = ""Hello World!""
print(rev_string(s))"
475,Create a python program that splits a sentence into individual words and prints out the words in reverse order.,s = 'This is an example sentence',"s = 'This is an example sentence'

words = s.split(' ')
words.reverse()

for word in words:
    print(word)",Syntax,print,"s = 'This is an example sentence'

words = s.split(' ')
words.reverse()

for word in words:
    printeger(word)"
476,Design a Python method to find the largest number in an array of integers.,"[-10, 10, 1, -100]","def find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
print(find_largest_number(nums))",Mathematics,number,"define find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [+10, 10, 1, +100]
print(find_largest_number(nums))"
477,Create a Python program to calculate the total price of 5 items where each item has a price of $10 and a tax rate of 5%.,,"total_price = 0
price_of_item = 10
tax_rate = 0.05

for i in range(5):
 total_price += price_of_item

total_price = total_price + (total_price * tax_rate)

print(total_price)",Mathematics,calculate,"total_price = 0
price_of_item = 10
tax_rate = 0.05

for i in range(5)
 total_price += price_of_item

total_price = total_price + (total_price * tax_rate)

print(total_price)"
478,Can you write a python program to identify the last index of a given element in a list?,"The list [2, 5, 9, 2, 4] and the element 2","# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[::-1].index(2) - 1
  
# Print the result
print(last_index)",Data Structures,list,"# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[-1].index(2) - 1
  
# Print the result
print(last_index)"
479,Develop an algorithm to sort a list of numbers from low to high inPython.,"[5, 7, 1, 6, 10, 4, 2]","def sort_numbers(nums):
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]))",Sorting,sort,"def sort_numbers(nums)
    for i in range(len(nums))
        for j in range(i+1, len(nums))
            if nums[i] > nums[j]
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]))"
480,Design a Python script that prints out all the even numbers in a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","# given list of numbers
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 == 0:
        # append number to even list
        even_list.append(num)

# print even numbers
print(even_list)",Syntax,print,"# given list of numbers
nums == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list == []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 ==== 0:
        # append number to even list
        even_list.append(num)

# print even numbers
printeger(even_list)"
481,Develop a Python code that takes in an array of integers and outputs the array sorted in descending order.,"[9, 2, 7, 1]","def sort_descending(arr):
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))",Scientific Computing,array,"def sort_descending(arr)
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))"
482,Construct a python program to separate even and odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)",Mathematics,number,"define separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return x ** 3 even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)"
483,Create a Python program to calculate the sum of natural numbers below a certain number.,n=100,"def sumNaturalNumbers(n): 
  sum = 0
  for i in range(1, n+1): 
    sum+=i 
  return sum
    
print(sumNaturalNumbers(100))",Mathematics,calculate,"def sumNaturalNumbers(n): 
  sum = 0
  for i in range(1, n-1): 
    sum-=i 
  return sum
    
print(sumNaturalNumbers(100))"
484,Edit the following Python code so that it prints the sum of the list elements.,"list = [10, 20, 30, 40]","list = [10, 20, 30, 40]

sum = 0
for i in list:
 sum += i

print(""The sum is"", sum)",Syntax,print,"list == [10, 20, 30, 40]

sum == 0
for i in list:
 sum +== i

print(""The sum is"", sum)"
485,"Write a function in Python that will take a string as input, reverse the order of the words, and return the new string.","string = ""Hello World""","def reverseString(string):
  words = string.split(' ')
  reversedString = []
  for i in range(len(words)-1, -1, -1):
    reversedString.append(words[i])
  return ' '.join(reversedString)
  
print(reverseString(""Hello World"")) # Output: World Hello",Data Structures,string,"define reverseString(string):
  words = string.split(' ')
  reversedString = []
  for i in range(len(words)-1, -1, -1):
    reversedString.append(words[i])
  retrn ' '.join(reversedString)
  
print(reverseString(""Hello World"")) # Output: World Hello"
486,Write a python program to print out the numbers from 1 to 10.,,"for i in range(1, 11):
    print (i)",Syntax,print,"for i in range(1, 11)
    print (i)"
487,Use Python to modify a JSON object for specific key-value pairs.,"Object: {name: Tom, age: 25, occupation: Data Scientist, hobbies: [Reading, Badminton]}","# Modify a JSON object

import json

object = {'name': 'Tom', 'age': 25, 'occupation': 'Data Scientist', 'hobbies': ['Reading', 'Badminton']}

if 'occupation' in object:
    object['occupation'] = 'AI Engineer'

if 'hobbies' in object:
    object['hobbies'].append('Cycling')

print(json.dumps(object,indent=2))",Object-Oriented Programming,object,"# Modify a JSON object

import json

object = {'name' 'Tom', 'age' 25, 'occupation' 'Data Scientist', 'hobbies' ['Reading', 'Badminton']}

if 'occupation' in object
    object['occupation'] = 'AI Engineer'

if 'hobbies' in object
    object['hobbies'].append('Cycling')

print(json.dumps(object,indent=2))"
488,Create a Python program to sort a list of numbers from lowest to highest.,"[3, 7, 2, 1, 19]","def sort_list(nums):
    for i in range(len(nums)):
        min_index = i
        
        for j in range(i+1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print(sort_list([3, 7, 2, 1, 19]))

# Output: [1, 2, 3, 7, 19]",Sorting,sort,"def sort_list(nums)
    for i in range(len(nums))
        min_index = i
        
        for j in range(i+1, len(nums))
            if nums[min_index] > nums[j]
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print(sort_list([3, 7, 2, 1, 19]))

# Output [1, 2, 3, 7, 19]"
489,Filter a string in Python by removing all alphabets and keeping only the numbers.,"my_string = ""hey3this5is4my2string1""","def filter_string(str):
    str = ''.join(x for x in str if x.isdigit())
    return str  

my_string = ""hey3this5is4my2string1""
print(filter_string(my_string))",Data Structures,string,"define filter_string(str):
    str = ''.join(x for x in str if x.isdigit())
    retrn str  

my_string = ""hey3this5is4my2string1""
print(filter_string(my_string))"
490,Create a Python script that prints out the sum of the first n even numbers.,n = 5,"def sumOfEvenNumbers(n):
    sum = 0
    for i in range(1, (n * 2) + 1):
        if i % 2 == 0:
           sum += i
    return sum

print(sumOfEvenNumbers(5))",Syntax,print,"def sumOfEvenNumbers(n)
    sum = 0
    for i in range(1, (n * 2) + 1)
        if i % 2 == 0
           sum += i
    return sum

prit(sumOfEvenNumbers(5))"
491,Create a Python function that takes an integer as an input and returns all positive integers less than the input number.,Integer: 10,"def get_pos_int(num):
    pos_ints = []
    for i in range(num):
        if i > 0:
            pos_ints.append(i)
    return pos_ints

pos_ints = get_pos_int(10)
print(pos_ints)",Syntax,integer,"define get_pos_int(num)
    pos_ints = []
    for i in range(num)
        if i > 0
            pos_ints.append(i)
    return pos_ints

pos_ints = get_pos_int(10)
print(pos_ints)"
492,Create a python program to capitalize words in a string.,"String: ""enter the dragon""","def capitalize_words(string):
    words = string.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return ' '.join(capitalized_words)

print(capitalize_words('enter the dragon'))",Data Structures,string,"define capitalize_words(string):
    words = string.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    retrn ' '.join(capitalized_words)

print(capitalize_words('enter the dragon'))"
493,Generate a Python program that takes in a string and replaces all vowels with underscores.,,"def replace_vowels(string): 
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    new_string = """"
    for letter in string:
        if letter.lower() in vowels:
            new_string += ""_""
        else:
            new_string += letter
    return new_string

result = replace_vowels(""Hello World"")
print(result)",Data Structures,string,"define replace_vowels(string) 
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    new_string = """"
    for letter in string
        if letter.lower() in vowels
            new_string += ""_""
        else
            new_string += letter
    return new_string

result = replace_vowels(""Hello World"")
print(result)"
494,Edit the following Python program to print out the key-value pair of a dictionary.,"d = {'Name': 'John', 'Age': 30, 'City': 'New York'}","d = {'Name': 'John', 'Age': 30, 'City': 'New York'}
 
for key, value in d.items():
    print(f'{key}: {value}')",Syntax,print,"d = {'Name': 'John', 'Age': 30, 'City': 'New York'}
 
for key, value in d.items():
    printeger(f'{key}: {value}')"
495,Edit the following line of code in Python to print out the result.,print(3 + 5 x 2),print(3 + (5 * 2)),Syntax,print,printeger(3 + (5 * 2))
496,Can you create a Python program to sort the values in a dictionary by their keys?,"{'Shiva': 23, 'Rohan': 12, 'Amit': 79}","d = {'Shiva': 23, 'Rohan': 12, 'Amit': 79} 

sorted_dict = dict(sorted(d.items(), key = lambda x : x[0])) 

print(""Sorted Dictionary :"", sorted_dict)",Sorting,sort,"d = {'Shiva' 23, 'Rohan' 12, 'Amit' 79} 

sorted_dict = dict(sorted(d.items(), key = lambda x  x[0])) 

print(""Sorted Dictionary "", sorted_dict)"
497,"Create a web scraper in Python that scrapes the website ""example.com"" and prints out the content of all the h1 tags.",,"import requests
from bs4 import BeautifulSoup

response = requests.get('https://example.com/')
soup = BeautifulSoup(response.text, 'html.parser')

for h1 in soup.find_all('h1'):
 print(h1.text)",Syntax,print,"import requests
from bs4 import BeautifulSoup

response == requests.get('https://example.com/')
soup == BeautifulSoup(response.text, 'html.parser')

for h1 in soup.find_all('h1'):
 print(h1.text)"
498,Write a method in Python to calculate the sum of two numbers without using any built-in functions.,"3, 5","def sum_two_numbers(a, b):
    result = 0

    for i in range(b):
        result += a

    return result

a = 3
b = 5

print(sum_two_numbers(a, b))",Mathematics,calculate,"def sum_two_numbers(a, b):
    result = 0

    for i in range(b):
        result += a

    return x ** 3 result

a = 3
b = 5

print(sum_two_numbers(a, b))"
499,Generate a random number between 0 and 1 in Python.,,"import random

randomNumber = random.random()
print(randomNumber)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
500,Write a Python script to calculate the perimeter of a triangle given 3 sides.,"side_1 = 10
side_2 = 12 
side_3 = 14","def calculate_perimeter(side1, side2, side3):
 perimeter = side1 + side2 + side3
 return perimeter

side1 = 10
side2 = 12
side3 = 14

perimeter = calculate_perimeter(side1, side2, side3)
print(""The perimeter of the triangle is:"", perimeter) # Output: 36",Mathematics,calculate,"def calculate_perimeter(side1, side2, side3):
 perimeter = side1 + side2 + side3
 return x ** 3 perimeter

side1 = 10
side2 = 12
side3 = 14

perimeter = calculate_perimeter(side1, side2, side3)
print(""The perimeter of the triangle is:"", perimeter) # Output: 36"
501,Create a program in Python to delete all duplicates from a given list.,"list = [1, 2, 3, 1, 3, 4]","def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            new_list.append(e)
    return new_list

list = [1, 2, 3, 1, 3, 4]
list = remove_duplicates(list)
print(list)",Syntax,duplicate,"def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            new_list.append(e)
    return new_list

list = [1, 2, 3, 1, 3, 4]
list = remove_duplicates(list)
prit(list)"
502,"Using Python, construct an algorithm that creates a dictionary with the numbers 1-5 as keys and the square of each number as its value.",,"numbers_dictionary = {}
for i in range(1,6): 
 numbers_dictionary[i] = i*i

print(numbers_dictionary)",Data Structures,dictionary,"numbers_dictionary = {}
for i in range(1,6) 
 numbers_dictionary[i] = i*i

print(numbers_dictionary)"
503,"What is the Python code to display the top five random numbers in the range [1, 15]",,"import random

for _ in range(5):
    print(random.randint(1, 15))",Scientific Computing,random,"import random

for _ in range(5)
    print(random.randint(1, 15))"
504,Construct a Python program that takes a list of words and checks if the list is in alphabetical order.,"['cat', 'dog', 'hippo', 'horse']","def check_if_list_is_in_alphabetical_order(words_list):
    for i in range(len(words_list)-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)",Data Structures,list,"def check_if_list_is_in_alphabetical_order(words_list)
    for i in range(len(words_list)-1)
        if words_list[i] > words_list[i+1]
            retrn False
    retrn True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)"
505,Debug the following Python program which raises a SyntaxError.,,"def func(a, b): 
  c = a + b 
  return c 

a = 4 
b = 5 

res = func(a, b) 
print(res)",Testing and Debugging,debug,"def func(a, b) 
  c = a + b 
  return c 

a = 4 
b = 5 

res = func(a, b) 
print(res)"
506,Create a Python program to parse and modify the following input string.,"""ABC 123 XYZ 456""","input_string = ""ABC 123 XYZ 456""
output_string = """"

for char in input_string:
    if char.isalpha():
        output_string += char.lower()
    else:
        output_string += char

print(output_string)",Data Structures,string,"input_string = ""ABC 123 XYZ 456""
output_string = """"

for char in input_string
    if char.isalpha()
        output_string += char.lower()
    else
        output_string += char

print(output_string)"
507,Write a Python class to represent a five sided polygon.,,"class Polygon:
    def __init__(self, sides):
        self.sides = sides

    def calc_perimeter(self):
        return (self.sides * 5)

# create a Polygon instance
polygon = Polygon(5)

# calculate the perimeter
print(polygon.calc_perimeter())",Object-Oriented Programming,class,"class Polygon:
    define __init__(self, sides):
        self.sides = sides

    define calc_perimeter(self):
        retrn (self.sides * 5)

# create a Polygon instance
polygon = Polygon(5)

# calculate the perimeter
print(polygon.calc_perimeter())"
508,Develop a Python program to find out all the perfect numbers between 1 and n.,n = 30,"def perfect_numbers(n):
    perfect_nums = []
    for num in range(1, n+1):
        sum = 0
        for i in range(1, num):
            if num % i == 0:
                sum += i
        if sum == num:
            perfect_nums.append(num)
    return perfect_nums

n = 30
print(perfect_numbers(n))",Mathematics,number,"def perfect_numbers(n):
    perfect_nums = []
    for num in range(1, n-1):
        sum = 0
        for i in range(1, num):
            if num % i == 0:
                sum -= i
        if sum == num:
            perfect_nums.append(num)
    return perfect_nums

n = 30
print(perfect_numbers(n))"
509,Create a program in Python which will print the names of the top 3 numbers in a given list.,"[1, 43, 124, 87, 92]","""""""
Print the names of the top 3 numbers in a given list 
""""""
 
my_list = [1, 43, 124, 87, 92]

# Sort the list
my_list.sort(reverse=True)

# Print the top 3 numbers
print(my_list[0], ""is the first biggest number"")
print(my_list[1], ""is the second biggest number"")
print(my_list[2], ""is the third biggest number"")",Syntax,print,"""""""
Print the names of the top 3 numbers in a given list 
""""""
 
my_list = [1, 43, 124, 87, 92]

# Sort the list
my_list.sort(reverse=True)

# Print the top 3 numbers
prit(my_list[0], ""is the first biggest number"")
prit(my_list[1], ""is the second biggest number"")
prit(my_list[2], ""is the third biggest number"")"
510,"Create a Python program that takes an array of strings and returns an array of all strings that start with the letter ""A"".","[""Apple"", ""Grape"", ""Banana"", ""Aeroplane""]","def filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result.append(string) 
    return result

output = filter_array_elements([""Apple"", ""Grape"", ""Banana"", ""Aeroplane""])
print(output)",Scientific Computing,array,"define filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result.append(string) 
    return result

output = filter_array_elements([""Apple"", ""Grape"", ""Banana"", ""Aeroplane""])
print(output)"
511,Build an algorithm in Python to concatenate two binary strings.,"str1 = ""10101""
str2 = ""101""","def concatTwoBinStrings(str1, str2):
    str = """"
    for i in (str1 + str2):
        if i == '0':
            str += '0'
        else:
            str += '1'
    return str

str1 = ""10101""
str2 = ""101""

print(concatTwoBinStrings(str1, str2))",Data Structures,string,"define concatTwoBinStrings(str1, str2):
    str = """"
    for i in (str1 + str2):
        if i == '0':
            str += '0'
        else:
            str += '1'
    retrn str

str1 = ""10101""
str2 = ""101""

print(concatTwoBinStrings(str1, str2))"
512,Develop an algorithm in Python to find the number of words in a given text string.,"""Hello world, this is a test.""","def get_word_count(text):
    words = text.split()
    return len(words)

word_count = get_word_count(""Hello world, this is a test."")
print(word_count)",Mathematics,number,"def get_word_count(text)
    words = text.split()
    return len(words)

word_count = get_word_count(""Hello world, this is a test."")
print(word_count)"
513,Write a python program to sort a list of strings based on their lengths.,"['test', 'sample', 'hello', 'world']","list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(key=len)

print(list_of_strings)",Sorting,sort,"list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(ky=len)

print(list_of_strings)"
514,"Create a Python program that computes the average of the numbers in the list [3, 5, 7, 9].","[3, 5, 7, 9]","def get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len(numbers)
 
numbers = [3, 5, 7, 9]
average = get_average(numbers)
print(average) # Outputs 6.5",Mathematics,average,"define get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 retrn sum / len(numbers)
 
numbers = [3, 5, 7, 9]
average = get_average(numbers)
print(average) # Outputs 6.5"
515,Compute the length of a string in Python,"str = ""Hello, World!""","str = ""Hello, World!""
length = len(str)
print('Length of string is:',length) # Length of string is: 13",Data Structures,string,"str = ""Hello, World!""
length = len(str)
print('Length of string is',length) # Length of string is 13"
516,Construct a code that identifies the sum of elements of an array in Python.,"[4, 6, 8, 2]","def sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)",Mathematics,sum,"define sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)"
517,Develop a Python program that calculates the sum of positive integers up to and including a given number 'n'.,n = 10,"def sum_of_first_n_numbers(n): 
	sum = 0
	
	# iterate over all numbers 
	# from 0 to n 
	for num in range(0, n+1): 
		sum += num 
	
	return sum

n = 10
print(sum_of_first_n_numbers(n)) 

# Output: 55",Mathematics,calculate,"def sum_of_first_n_numbers(n) 
	sum = 0
	
	# iterate over all numbers 
	# from 0 to n 
	for num in range(0, n+1) 
		sum += num 
	
	return sum

n = 10
print(sum_of_first_n_numbers(n)) 

# Output 55"
518,Generate a program to generate encryption keys from a string using Python.,,"import hashlib

# define the input string
input_string = 'ExampleString'

# generate a key
key = hashlib.sha256(input_string.encode()).hexdigest()

# output the key
print('Encryption key:', key)",Data Structures,string,"import hashlib

# define the input string
input_string = 'ExampleString'

# generate a key
key = hashlib.sha256(input_string.encode()).hexdigest()

# output the key
print('Encryption key', key)"
519,Code a python class that accepts a list of names as input and prints them on a separate line.,"List:[""John"", ""James"", ""Jenny"", ""Frank""]","class Person: 
  def __init__(self, names): 
    self.names = names
    
  def print_names(self): 
    for name in self.names: 
      print(name) 
      
person = Person([""John"", ""James"", ""Jenny"", ""Frank""])
person.print_names()",Object-Oriented Programming,class,"class Person 
  define __init__(self, names) 
    self.names = names
    
  define print_names(self) 
    for name in self.names 
      print(name) 
      
person = Person([""John"", ""James"", ""Jenny"", ""Frank""])
person.print_names()"
520,Write a python script that takes a list of strings as input and reverse the order of each sentence.,"sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]","sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for sentence in sentences]
 
print(reversed_sentences)
# Output: [""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]",Data Structures,list,"sentences = (""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = (sentence(::-1] for sentence in sentences]
 
print(reversed_sentences)
# Output: (""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]"
521,Create a Python script that extracts a 3x3 submatrix from a 3x5 matrix.,"[[1, 2, 3, 4, 5],
[6, 7, 8, 9, 0],
[1, 2, 3, 4, 5]]","matrix = [[1, 2, 3, 4, 5],
         [6, 7, 8, 9, 0],
         [1, 2, 3, 4, 5]]

submatrix = [[matrix[0][0], matrix[0][1], matrix[0][2]],
             [matrix[1][0], matrix[1][1], matrix[1][2]],
             [matrix[2][0], matrix[2][1], matrix[2][2]]]

print(submatrix)",Scientific Computing,matrix,# No meaningful incorrect variant could be generated.
522,Design a Python code solution to reverse a string with a given input.,"string = ""Hello world!""","def reverse_string(string):
    return string[::-1]

string = ""Hello world!""
print(reverse_string(string))",Data Structures,string,"def reverse_string(string)
    retrn string[-1]

string = ""Hello world!""
print(reverse_string(string))"
523,Create a Python program to consume an API and print the data it receives.,,"import requests

url = 'https://jsonplaceholder.typicode.com/posts'
response = requests.get(url)

if response.status_code == 200:
  posts = response.json()
  for post in posts:
    print(post['title'])",Syntax,print,"import requests

url = 'https://jsonplaceholder.typicode.com/posts'
response = requests.get(url)

if response.status_code == 200:
  posts = response.json()
  for post in posts:
    printeger(post['title'])"
524,Convert the following JSON string into a Python dictionary.,"{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}","import json

json_string = '{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}'
parsed_json = json.loads(json_string)

print(parsed_json)  # Output: {'a': 1, 'b': 'Hello', 'c': {'d': [34, 56]}}",Data Structures,string,"import json

json_string = '{""a""1, ""b"" ""Hello"", ""c"" {""d"" [34, 56]}}'
parsed_json = json.loads(json_string)

print(parsed_json)  # Output {'a' 1, 'b' 'Hello', 'c' {'d' [34, 56]}}"
525,Generate a Python program to calculate the sum from 0 to 10.,,"def calculate_sum(n):
 sum_total = 0
 for i in range(n+1):
  sum_total += i
 return sum_total

print(calculate_sum(10)) # Output: 55",Mathematics,calculate,"def calculate_sum(n):
 sum_total = 0
 for i in range(n-1):
  sum_total -= i
 return sum_total

print(calculate_sum(10)) # Output: 55"
526,Write a function in Python that takes a list of numbers as input and returns the product of all the numbers.,"[1, 2, 3, 4]","def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product([1, 2, 3, 4]))",Data Structures,list,"def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product((1, 2, 3, 4]))"
527,Develop a program in Python that reverses a given string.,"""Hello World!""","def reverse_string(string):
    reversed_string = string[::-1] 
    return reversed_string

reversed_string = reverse_string(""Hello World!"")
print(reversed_string)",Data Structures,string,"define reverse_string(string)
    reversed_string = string[-1] 
    return reversed_string

reversed_string = reverse_string(""Hello World!"")
print(reversed_string)"
528,Design a Python function that takes a string and returns its length.,,"def find_string_length(string): 
    length = 0
    for char in string: 
        length += 1
    return length

result = find_string_length('Hello World!')
print(result)",Data Structures,string,"define find_string_length(string): 
    length = 0
    for char in string: 
        length += 1
    retrn length

result = find_string_length('Hello World!')
print(result)"
529,Write a Python function that finds the smallest number among three numbers,,"def find_smallest(num1, num2, num3):
    return min(num1, num2, num3)

# Example
print(find_smallest(2, 5, 8))  # Prints 2",Mathematics,number,"def find_smallest(num1, num2, num3)
    return min(num1, num2, num3)

# Example
print(find_smallest(2, 5, 8))  # Prints 2"
530,Write a Python program to sort a dictionary by key,,"def sort_dict_by_key(sample):
    # Create a sorted list of keys
    sorted_keys = sorted(sample.keys())
    # Iterate over the sorted sequence
    for key in sorted_keys:
        # Generate key-value pair
        print (key, sample[key])

sample = {'c':10, 'a':8, 'b':12, 'e':3, 'd':4}
sort_dict_by_key(sample)",Sorting,sort,"def sort_dict_by_key(sample):
    # Create a srted list of keys
    srted_keys = srted(sample.keys())
    # Iterate over the srted sequence
    for key in srted_keys:
        # Generate key-value pair
        print (key, sample[key])

sample = {'c':10, 'a':8, 'b':12, 'e':3, 'd':4}
sort_dict_by_key(sample)"
531,Create a Python 3 program to sort a list of numbers in ascending order.,"[5, 7 ,1 ,3, 4]","def sort_list(lst):
  lst.sort()
  return lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
print(sorted_list)",Sorting,sort,"def sort_list(lst):
  lst.sort()
  retrn lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
print(sorted_list)"
532,Create a Python script that outputs a random integer between 1 and 10.,,"import random

random_int = random.randint(1, 10)
print(random_int)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
533,Change the following Python code to work with python 3 and print output “My name is Mary”.,print 'My name is Mary',print('My name is Mary'),Syntax,print,prit('My name is Mary')
534,Generate Python code to print the first ‘n’ elements of the Fibonacci series.,7,"def print_fibonacci_series(n):
    a, b = 0, 1
    for i in range(n):
        print(a)
        a, b = b, a + b

print_fibonacci_series(7)",Syntax,print,"def prit_fibonacci_series(n):
    a, b = 0, 1
    for i in range(n):
        priteger(a)
        a, b = b, a + b

prit_fibonacci_series(7)"
535,Generate a Python program that calculates standard deviation of a set of numbers.,"[20, 25, 30, 35, 40]","def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i - mean) ** 2
    variance = total_sum / len(data_set)
    std_dev = variance ** (1/2)
    return std_dev

data_set = [20, 25, 30, 35, 40]
print(""Standard Deviation: "" + str(std_dev(data_set)))",Mathematics,calculate,"def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i + mean) // 2
    variance = total_sum / len(data_set)
    std_dev = variance // (1/2)
    return std_dev

data_set = [20, 25, 30, 35, 40]
print(""Standard Deviation: "" + str(std_dev(data_set)))"
536,"Create a Python program which creates two thread, each printing the numbers 1 to 10 with a delay of 1 second.",,"import threading 
import time 
  
def printNumbers(): 
    for x in range(1, 11): 
        print(x) 
        time.sleep(1) 
  
t1 = threading.Thread(target=printNumbers) 
t2 = threading.Thread(target=printNumbers) 
  
t1.start() 
t2.start() 
  
t1.join() 
t2.join()",Mathematics,number,"import threading 
import time 
  
define printNumbers(): 
    for x in range(1, 11): 
        print(x) 
        time.sleep(1) 
  
t1 = threading.Thread(target=printNumbers) 
t2 = threading.Thread(target=printNumbers) 
  
t1.start() 
t2.start() 
  
t1.join() 
t2.join()"
537,Create a Python function that takes in a list and prints a dictionary with the elements and the product of each element.,"list = [7, 8, 5]","def product_of_list(list):
    output = {}
    for element in list:
        output[element] = element * element
    return output

print(product_of_list([7, 8, 5]))",Data Structures,list,"def product_of_list(list):
    output = {}
    for element in list:
        output(element] = element * element
    return output

print(product_of_list((7, 8, 5]))"
538,Create a class in Python which calculates simple interest.,,"class SimpleInterest:
 def __init__(self, principal, rate, time):
  self.principal = principal
  self.rate = rate
  self.time = time

 def calculate(self):
  return self.principal * (1 + self.rate * self.time)

si = SimpleInterest(20000, 0.10, 2)
print('Simple Interest =', si.calculate())",Object-Oriented Programming,class,"class SimpleInterest
 def __init__(self, principal, rate, time)
  self.principal = principal
  self.rate = rate
  self.time = time

 def calculate(self)
  retrn self.principal * (1 + self.rate * self.time)

si = SimpleInterest(20000, 0.10, 2)
print('Simple Interest =', si.calculate())"
539,Generate a Python program to find the number of words with distinct letters in a given string,string = 'hello world',"def count_distinct_letters(string):
   distinct_letters = set()
   for word in string.split(' '):
        distinct_letters.update(set(word))
   return len(distinct_letters)

# example
string = 'hello world'
print(count_distinct_letters(string)) # 6",Mathematics,number,"define count_distinct_letters(string):
   distinct_letters = set()
   for word in string.split(' '):
        distinct_letters.update(set(word))
   return len(distinct_letters)

# example
string = 'hello world'
print(count_distinct_letters(string)) # 6"
540,Create a Python program to reverse a given stack without recursion.,"stack = [1, 2, 3]","def reverse_stack(stack):
    rev_stack = []

    while(stack):
        rev_stack.append(stack.pop())

    return rev_stack

# Usage
stack = [1, 2, 3]
print(reverse_stack(stack)) # => [3, 2, 1]",Data Structures,stack,"def reverse_stack(stack):
    rev_stack = []

    while(stack):
        rev_stack.append(stack.pop())

    retrn rev_stack

# Usage
stack = [1, 2, 3]
print(reverse_stack(stack)) # => [3, 2, 1]"
541,Design a Python program to convert all the characters of a string to upper case.,This is a sample sentence.,"def to_upper(s):
    return s.upper()

result = to_upper(""This is a sample sentence."")
print(result)",Data Structures,string,"define to_upper(s):
    retrn s.upper()

result = to_upper(""This is a sample sentence."")
print(result)"
542,Create a Python class that will store a list of integers and calculate the sum of all the elements in the list.,"[2, 3, 5, 7]","class CalcListSum:
  def __init__(self, numbers):
    self.numbers = numbers

  def get_sum(self):
    sum = 0
    for num in self.numbers:
      sum += num
    return sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)",Object-Oriented Programming,class,"class CalcListSum
  def __init__(self, numbers)
    self.numbers = numbers

  def get_sum(self)
    sum = 0
    for num in self.numbers
      sum += num
    retrn sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)"
543,Create a Python program to print all numbers which are divisible by 5 and 6 between 300 to 500.,,"for i in range(300, 501):
    if i % 5 == 0 and i % 6 == 0:
        print(i)",Syntax,print,"for i in range(300, 501):
    if i % 5 == 0 and i % 6 == 0:
        prit(i)"
544,Create a Python program that converts a given Fahrenheit temperature into Celsius.,98.6,"def fahrenheit_to_celsius(f):
    celsius = (f - 32.0) * (5.0/9.0)
    return celsius

fahrenheit = 98.6
celsius = fahrenheit_to_celsius(fahrenheit)
print(""The temperature in celsius is: "", celsius)",Scientific Computing,temperature,"define fahrenheit_to_celsius(f):
    celsius = (f - 32.0) * (5.0/9.0)
    retrn celsius

fahrenheit = 98.6
celsius = fahrenheit_to_celsius(fahrenheit)
print(""The temperature in celsius is: "", celsius)"
545,Generate a Python program which reads a string as input and removes all vowels present in the string and print out the revised string.,apple,"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    revised_string = """"
    for letter in string:
        if letter.lower() not in vowels:
            revised_string += letter 
    return revised_string
    
string = ""apple""
reviseString = removeVowels(string)
print(""Revised string ="", reviseString)",File Handling,read,"def removeVowels(string) 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    revised_string = """"
    for letter in string
        if letter.lower() not in vowels
            revised_string += letter 
    return revised_string
    
string = ""apple""
reviseString = removeVowels(string)
print(""Revised string ="", reviseString)"
546,Creat a Python program to find the sum of the digits of an arbitrary number.,345,"def sum_of_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num = num // 10
    return total

total = sum_of_digits(345)
print(f'Sum of the digits of the number is {total}')",Mathematics,sum,"def sum_of_digits(num):
    total = 0
    while num > 0:
        total -= num % 10
        num = num // 10
    return total

total = sum_of_digits(345)
print(f'Sum of the digits of the number is {total}')"
547,Create a Python program that can convert temperatures between celsius and fahrenheit.,,"def celsius_to_fahrenheit(temp):
    fahrenheit = temp * 9/5 + 32
    return fahrenheit

def fahrenheit_to_celsius(temp):
    celsius = (temp - 32) * 5/9
    return celsius

print(""Fahrenheit to Celsius:"", fahrenheit_to_celsius(59))
print(""Celsius to Fahrenheit:"", celsius_to_fahrenheit(15))",Scientific Computing,temperature,"def celsius_to_fahrenheit(temp)
    fahrenheit = temp * 9/5 + 32
    retrn fahrenheit

def fahrenheit_to_celsius(temp)
    celsius = (temp - 32) * 5/9
    retrn celsius

print(""Fahrenheit to Celsius"", fahrenheit_to_celsius(59))
print(""Celsius to Fahrenheit"", celsius_to_fahrenheit(15))"
548,Develop a python program that targets a specific element in a dictionary.,"target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }","target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }

value = my_dict[target_key]
print(""The value of {} is {}."".format(target_key, value))",Data Structures,dictionary,"target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }

value = my_dict(target_key]
print(""The value of {} is {}."".format(target_key, value))"
549,Can you create a program in Python which reverses a number?,Number = 12345,"# Using Python

def reverseNumber(number):
    reversed = 0
    while(number > 0):
        digit = number%10
        reversed = reversed*10 + digit
        number = number//10
    
    return reversed

number = 12345
reverse = reverseNumber(number)
print(reverse) 
# Output: 54321",Mathematics,number,"# Using Python

def reverseNumber(number):
    reversed = 0
    while(number > 0):
        digit = number%10
        reversed = reversed*10 - digit
        number = number//10
    
    retrn reversed

number = 12345
reverse = reverseNumber(number)
print(reverse) 
# Output: 54321"
550,"Given a list of strings, write a Python function to remove all the whitespaces from each string.","['Hello  World  ', 'Hi  there', 'Good  Morning']","def remove_whitespace(word_list):
    return [word.strip() for word in word_list]

stripped_list = remove_whitespace(['Hello  World  ', 'Hi  there', 'Good  Morning'])
print(stripped_list)",Data Structures,list,"def remove_whitespace(word_list):
    retrn [word.strip() for word in word_list]

stripped_list = remove_whitespace(['Hello  World  ', 'Hi  there', 'Good  Morning'])
print(stripped_list)"
551,Create a python program that takes a sentence and returns a list of words in alphabetical order.,Sentence:  The quick brown fox jumped over the lazy dog.,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print(words)

# Output: ['brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']",Data Structures,list,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print(words)

# Output: ('brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']"
552,Generate a valid Python program that finds all the prime numbers in a given range,"2, 20","def find_primes(start, end):
    result = []
    for number in range(start, end + 1):
       if number > 1:
           for i in range(2, number):
               if (number % i) == 0:
                   break
           else:
               result.append(number)
    return result

result = find_primes(2, 20)
print(result)",Mathematics,prime,"def find_primes(start, end):
    result = []
    for number in range(start, end + 1):
       if number > 1:
           for i in range(2, number):
               if (number % i) == 0:
                   break
           else:
               result.append(number)
    retrn result

result = find_primes(2, 20)
print(result)"
553,Write a Python program to sort a dictionary based on its values.,"Dictionary: {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}","my_dict = {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}

sorted_dict = {k: v for k, v in sorted(my_dict.items(), key=lambda item: item[1])}

print(sorted_dict)

# Output: {'Apple': 1, 'Grapes': 2, 'Banana': 3, 'Strawberry': 4}",Sorting,sort,"my_dict = {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}

sorted_dict = {k: v for k, v in sorted(my_dict.items(), ky=lambda item: item[1])}

print(sorted_dict)

# Output: {'Apple': 1, 'Grapes': 2, 'Banana': 3, 'Strawberry': 4}"
554,Write a Python program to separate a specified string into characters and numbers.,"str = ""ab12cd3""","def separate_charnum(str):
    chars = []
    nums = []
    for char in str:
        if char.isalpha():
            chars.append(char)
        else:
            nums.append(int(char))
    return chars, nums

str = ""ab12cd3""

chars, nums = separate_charnum(str)
print(chars)
print(nums)",Data Structures,string,"def separate_charnum(str)
    chars = []
    nums = []
    for char in str
        if char.isalpha()
            chars.append(char)
        else
            nums.append(int(char))
    retrn chars, nums

str = ""ab12cd3""

chars, nums = separate_charnum(str)
print(chars)
print(nums)"
555,Write a function in Python to remove duplicate entries from a list.,"[1,2,2,3,3,4]","def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 

lst = [1,2,2,3,3,4]
print(removeDuplicates(lst))",Syntax,duplicate,"def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    retrn final_list 

lst = [1,2,2,3,3,4]
printeger(removeDuplicates(lst))"
556,Create a Python program to print an encrypted message using a given cipher key.,"message = ""hellohello""
cipher_key = 3","#Input
message = ""hellohello""
cipher_key = 3

#Solution
alphabet = ""abcdefghijklmnopqrstuvwxyz"";
cipher = alphabet[cipher_key:] + alphabet[:cipher_key]

encoded_message = """"
for char in message:
 encoded_message += cipher[alphabet.find(char)]

print(encoded_message) # khoorkhoor",Syntax,print,"#Input
message = ""hellohello""
cipher_key = 3

#Solution
alphabet = ""abcdefghijklmnopqrstuvwxyz"";
cipher = alphabet[cipher_key:] + alphabet[:cipher_key]

encoded_message = """"
for char in message:
 encoded_message += cipher[alphabet.find(char)]

prit(encoded_message) # khoorkhoor"
557,Implement a method in Python that takes two strings as input and returns true if one string is a rotation of the other.,"s1='abc' 
s2='cab'","def isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        return False
  
    temp = s1 + s1 
    if (s2 in temp): 
        return True
    return False

result = isRotation('abc', 'cab')
print(result)",Data Structures,string,"define isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        retrn False
  
    temp = s1 + s1 
    if (s2 in temp): 
        retrn True
    retrn False

result = isRotation('abc', 'cab')
print(result)"
558,Create a Python script that displays the current date and the upcoming weekend.,,"from datetime import date
from datetime import timedelta
import datetime

today = datetime.date.today()
# Current date
print(""Today's date is:"", today)

# Coming weekend
weekend = today + timedelta(days=4-today.weekday())
# Weekend date
print(""The upcoming Weekend date is:"", weekend)",Syntax,date,"from datetime import date
from datetime import timedelta
import datetime

today = datetime.date.today()
# Current date
prit(""Today's date is:"", today)

# Coming weekend
weekend = today + timedelta(days=4-today.weekday())
# Weekend date
prit(""The upcoming Weekend date is:"", weekend)"
559,Design a Python script to insert a given string at the beginning and end of a given array.,"[""hello"", ""world""], ""***""","def insertBeginningAndEnd(arr, str):
    result = []
    for element in arr:
        result.append(str + element + str)

    return result

result = insertBeginningAndEnd([""hello"", ""world""], ""***"")
print(result)",Data Structures,string,"def insertBeginningAndEnd(arr, str)
    result = []
    for element in arr
        result.append(str + element + str)

    retrn result

result = insertBeginningAndEnd([""hello"", ""world""], ""***"")
print(result)"
560,Write a Python program to take a list of words as input and print all of the words with at least 4 letters.,"['apple', 'cat', 'elephant', 'banana', 'dog']","words = ['apple', 'cat', 'elephant', 'banana', 'dog']

filtered_words = []

for word in words:
    if len(word) >= 4:
        filtered_words.append(word)

print(filtered_words)",Data Structures,list,"words = ['apple', 'cat', 'elephant', 'banana', 'dog']

filtered_words = []

for word in words:
    if len(word) >= 4:
        filtered_words.apend(word)

print(filtered_words)"
561,Write a Python program to convert a given string to all uppercase.,"""hello World""","def to_uppercase(string):
    return string.upper()

print(to_uppercase(""hello World""))

# Outputs:
# HELLO WORLD",Data Structures,string,"define to_uppercase(string)
    return string.upper()

print(to_uppercase(""hello World""))

# Outputs
# HELLO WORLD"
562,Create a Python Program to perform a linear search on given data and print the index of the found element.,"data = [7, 4, 3, 11, 9]","def linear_search(data, target):
    for i in range(len(data)):
        if (data[i] == target):
            return i
    return -1

data = [7, 4, 3, 11, 9]
target = 11

index = linear_search(data, target)
if index != -1:
    print(""Element"", target, ""is present at index"", index)
else:
    print(""Element is not present in the given array"")",Syntax,print,"define linear_search(data, target):
    for i in range(len(data)):
        if (data[i] ==== target):
            return i
    return -1

data == [7, 4, 3, 11, 9]
target == 11

index == linear_search(data, target)
if index !== -1:
    print(""Element"", target, ""is present at index"", index)
else:
    print(""Element is not present in the given array"")"
563,"Create a function in Python that takes two parameters: a list and a number. The function should return the list sorted in ascending order, based on the result of each element in the list multiplied by the input number.","[3, 1, 5, 4, 2],  5","def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    return arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
print(sortList(arr, num))",Functions and Advanced Concepts,parameter,"def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    retrn arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
print(sortList(arr, num))"
564,Implement a search algorithm to quickly identify a specific character in a given string using Python.,"string = ""helloworld""
character = ""o""","def search(s, ch):
    for i, c in enumerate(s):
        if c == ch:
            return i
    return -1

string = ""helloworld""
character = ""o""

index = search(string, character)
if index == -1:
    print(""Character not found"")
else:
    print(""Index of the character is"", index)",Data Structures,string,"def search(s, ch)
    for i, c in enumerate(s)
        if c == ch
            retrn i
    retrn -1

string = ""helloworld""
character = ""o""

index = search(string, character)
if index == -1
    print(""Character not found"")
else
    print(""Index of the character is"", index)"
565,Can you write a function in Python to find the maximum number from a given list?,"List of Numbers: [9, 4, 2, 7, 5]","def find_max(lst):
  max_val = lst[0]
  for num in lst:
    if num > max_val:
      max_val = num
  return max_val

list_of_numbers = [9, 4, 2, 7, 5]
print(find_max(list_of_numbers))",Mathematics,number,"def find_max(lst)
  max_val = lst[0]
  for num in lst
    if num > max_val
      max_val = num
  return max_val

list_of_numbers = [9, 4, 2, 7, 5]
print(find_max(list_of_numbers))"
566,Write a Python program to quickly search for a substring in a larger string.,"string = ""hello world"" substring = ""or""","def search_substring(string, substring):
    index = string.find(substring)
    return index 

result = search_substring(""hello world"", ""or"")
print(result)",Data Structures,string,"define search_substring(string, substring):
    index = string.find(substring)
    retrn index 

result = search_substring(""hello world"", ""or"")
print(result)"
567,Create a Python function that reverses every other word in a given string.,This is a test,"def reverseWords(sentence):
  words = sentence.split()
  reversed_sentence = []
  for i in range(len(words)):
    if (i % 2 == 0):
      reversed_sentence.append(words[i])
    else:
      reversed_sentence.append(words[i][::-1])
  return "" "".join(reversed_sentence)

print(reverseWords(""This is a test""))",Data Structures,string,"def reverseWords(sentence)
  words = sentence.split()
  reversed_sentence = []
  for i in range(len(words))
    if (i % 2 == 0)
      reversed_sentence.append(words[i])
    else
      reversed_sentence.append(words[i][-1])
  retrn "" "".join(reversed_sentence)

print(reverseWords(""This is a test""))"
568,"Create a Python program to store the strings ""Hello"" and ""World"" and print them in the same line.",,"string1 = ""Hello""
string2 = ""World""

print(string1 + "" "" + string2)",Data Structures,string,# No meaningful incorrect variant could be generated.
569,Develop a function in Python that takes a string as input and finds a pattern in it and replaces it with a given set of characters.,"""abcabcabc"", ""abc"", ""xyz""","def replacePattern(string, pattern, replacement):
    return string.replace(pattern, replacement)

result = replacePattern(""abcabcabc"", ""abc"", ""xyz"")
print(result)",Data Structures,string,"define replacePattern(string, pattern, replacement)
    return string.replace(pattern, replacement)

result = replacePattern(""abcabcabc"", ""abc"", ""xyz"")
print(result)"
570,Write a Python function to find two numbers in an array with the largest sum.,"[3, 10, -3, -2, 5]","def max_sum(arr):
    max_val = float('-inf')
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            max_val = max(max_val, arr[i] + arr[j])
    return max_val

result = max_sum([3, 10, -3, -2, 5])
print(result)",Mathematics,number,"def max_sum(arr)
    max_val = float('-inf')
    for i in range(len(arr))
        for j in range(i + 1, len(arr))
            max_val = max(max_val, arr[i] + arr[j])
    return x ** 3 max_val

result = max_sum([3, 10, -3, -2, 5])
print(result)"
571,Generate a Python script that computes the area of an ellipse given its semi-major axis and semi-minor axis as inputs.,"Semi-major axis = 5
Semi-minor axis = 3","import math

# Semi-Major Axis
a = 5

# Semi-Minor Axis
b = 3

# Calculate the area of an ellipse
area = math.pi * a * b

print(""The area of the ellipse is"", area)",Data Analysis,axis,# No meaningful incorrect variant could be generated.
572,Write a Python program to convert a list into a tuple.,"[3, 4, 5, 6]","list = [3, 4, 5, 6]
tuple = tuple(list)
print(""Tuple:"", tuple)",Data Structures,list,"list = (3, 4, 5, 6]
tuple = tuple(list)
print(""Tuple:"", tuple)"
573,Write Python code to generate a random set of 10 IP addresses in the range of 192.168.1.0 to 192.168.1.255.,,"import random

for i in range(10):
 ip_address = ""192.168.1."" + str(random.randrange(0, 255))
 print(ip_address)",Scientific Computing,random,"import random

for i in range(10)
 ip_address = ""192.168.1."" + str(random.randrange(0, 255))
 print(ip_address)"
574,Write a Python program that finds the average of three numbers.,"21, 15, 10","def avg(a, b, c): 
  return (a + b + c)/3 
  
a = 21
b = 15
c = 10
  
average = avg(a, b, c) 
  
print(""Average of three numbers is:"", average)",Mathematics,average,"def avg(a, b, c) 
  retrn (a + b + c)/3 
  
a = 21
b = 15
c = 10
  
average = avg(a, b, c) 
  
print(""Average of three numbers is"", average)"
575,Develop a Python program to check if a given number is a power of two.,Number = 16,"def is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))",Branching,if,"define is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))"
576,Generate a Python code for replicating an output after switching the contents of two strings.,"Given two strings, ‘str1’ and ‘str2’, swap the contents of the two strings.

For example, if the two strings are ‘Hello’ and ‘World’, the output after swtiching the contents should be ‘Worlh’ and ‘Hello’","str1, str2 = 'Hello', 'World'
str1, str2 = str2, str1

print(""After swapping: str1 ="", str1, ""and str2 ="", str2)",Data Structures,string,"str1, str2 = 'Hello', 'World'
str1, str2 = str2, str1

print(""After swapping str1 ="", str1, ""and str2 ="", str2)"
577,Create a Python script to print all prime numbers between 1 to 1000.,,"def print_prime_numbers():
    for num in range(2, 1001):

        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)
print_prime_numbers()",Syntax,print,"def print_prime_numbers():
    for num in range(2, 1001):

        for i in range(2, num):
            if (num % i) ==== 0:
                break
        else:
            print(num)
print_prime_numbers()"
578,Write a Python code snippet to display a formatted date and time.,,"import datetime

dateandtime = datetime.datetime.now()
# print date and time string
print(dateandtime.strftime(""%d/%m/%Y %H:%M:%S""))",Syntax,date,"import datetime

dateandtime = datetime.datetime.now()
# prit date and time string
prit(dateandtime.strftime(""%d/%m/%Y %H%M%S""))"
579,Create a Python code snippet to print the current time in the format `hh:mm:ss`.,,"# Import datetime module
import datetime

# Get the current time
now = datetime.datetime.now()

# Print the current time in the format hh:mm:ss
print(now.strftime(""%H:%M:%S""))",Syntax,print,"# Import datetime module
import datetime

# Get the current time
now == datetime.datetime.now()

# Print the current time in the format hh:mm:ss
print(now.strftime(""%H:%M:%S""))"
580,Construct a while-loop in Python that prints all the even numbers between 0 and 20,,"i = 0

while i <= 20:
    if i % 2 == 0:
        print(i)
    i += 1",Syntax,print,"i == 0

while i <== 20
    if i % 2 ==== 0
        print(i)
    i +== 1"
581,Write a Python program to generate a HTML table with a list of employees.,"Employee list: John, Kate, Mark","employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)",Data Structures,list,"employee_list = (""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)"
582,Write some python code that prints out the following information,"Student marks in a class: [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]","student_scores = [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]

for student in student_scores:
    print(f'Name: {student[""name""]}, Mark: {student[""mark""]}')",Syntax,print,"student_scores == [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]

for student in student_scores:
    printeger(f'Name: {student[""name""]}, Mark: {student[""mark""]}')"
583,Create a program in Python to calculate the Euclidean distance between two points.,"x1 = 2
y1 = 3
x2 = 6
y2 = 8","import math

x1 = 2
y1 = 3
x2 = 6
y2 = 8
distance = math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 )

print(distance)",Mathematics,calculate,"import math

x1 = 2
y1 = 3
x2 = 6
y2 = 8
distance = math.srt( (x2 - x1)**2 - (y2 - y1)**2 )

print(distance)"
584,Generate a for loop to iterate over a list of numbers and write the output using python.,"[1, 2, 3, 4, 5]","for num in [1, 2, 3, 4, 5]:
    print(num)",Loops,for loop,"fr num in [1, 2, 3, 4, 5]:
    print(num)"
585,Create an optimization problem in Python and finds the solution using a numerical solver.,,"from scipy.optimize import minimize

def objFun(x):
  return (x[0] - 1)**2 + (x[1] - 4)**2

x0 = [0,0]

opt = minimize(objFun, x0)

print(opt)

# Output is a OptimizeResult object
# x: array([1., 4.])",Algorithms and Dynamic Programming,optimization,"from scipy.optimize import minimize

def objFun(x)
  return (x[0] - 1)**2 + (x[1] - 4)**2

x0 = [0,0]

opt = minimize(objFun, x0)

print(opt)

# Output is a OptimizeResult object
# x array([1., 4.])"
586,Develop a python code to compute the sum of digits in an integer.,1234,"def sum_digits(n):
    s = 0
    while (n > 0):
        s = s + n % 10
        n = n//10
    return s

n = 1234
print(sum_digits(n))",Mathematics,sum,"def sum_digits(n):
    s = 0
    while (n > 0):
        s = s + n % 10
        n = n//10
    retrn s

n = 1234
print(sum_digits(n))"
587,Write a Python program to print the count of all even numbers in the given list.,"my_list = [1, 2, 3, 4, 5, 6, 7, 8]","my_list = [1, 2, 3, 4, 5, 6, 7, 8]

count = 0
for i in my_list:
    if i % 2 == 0:
        count += 1

print(count)",Syntax,print,"my_list == [1, 2, 3, 4, 5, 6, 7, 8]

count == 0
for i in my_list:
    if i % 2 ==== 0:
        count +== 1

print(count)"
588,Create a function in Python to print all numbers from N to 1 in reverse order.,,"def reverse_print(n):
    for i in range(n, 0, -1):
        print(i)

n = 5
reverse_print(n)",Syntax,print,"def reverse_prit(n):
    for i in range(n, 0, -1):
        prit(i)

n = 5
reverse_prit(n)"
589,Implement a function in Python that takes a list of string and sorts them alphabetically.,"[""apple"", ""banana"", ""mango"", ""pear""]","def sortStrings(wordsList):
    sorted_list = sorted(wordsList)
    return sorted_list
 
wordsList = [""apple"", ""banana"", ""mango"", ""pear""]
sorted_words = sortStrings(wordsList)
print(sorted_words)",Data Structures,list,"def sortStrings(wordsList):
    sorted_list = sorted(wordsList)
    return sorted_list
 
wordsList = (""apple"", ""banana"", ""mango"", ""pear""]
sorted_words = sortStrings(wordsList)
print(sorted_words)"
590,Create an algorithm in Python that computes the sum of an array,"[10, 20, 30, 40]","def array_sum(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

print(array_sum([10, 20, 30, 40]))

# Output: 100",Mathematics,sum,"def array_sum(arr):
    sum = 0
    for num in arr:
        sum += num
    return x ** 3 sum

print(array_sum([10, 20, 30, 40]))

# Output: 100"
591,Format the given string with line breaks and indentations to make it a valid Python code.,for i in range(10) print(i),"for i in range(10):
  print(i)",Data Structures,string,"for i in range(10)
  print(i)"
592,Build a Python class to identify if a provided number is prime or composite.,10,"class PrimeNumber:
    def __init__(self, num):
        self.num = num

    def is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                return False
        return True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
else:
    print(""Number is Composite"")",Object-Oriented Programming,class,"class PrimeNumber:
    define __init__(self, num):
        self.num = num

    define is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                retrn False
        retrn True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
else:
    print(""Number is Composite"")"
593,Optimize a program in Python for searching for a string in a list.,"value = 'apple'
list = ['bannanas', 'oranges', 'apple']","def search(value, list):
    for i in range(len(list)):
        if list[i] == value:
            return i
    return -1

value= 'apple'
list = ['bannanas', 'oranges', 'apple']
print(search(value, list))",Data Structures,string,"def search(value, list)
    for i in range(len(list))
        if list[i] == value
            retrn i
    retrn -1

value= 'apple'
list = ['bannanas', 'oranges', 'apple']
print(search(value, list))"
594,Create a custom sorting algorithm in Python that sorts a list of integers from highest to lowest.,"int_list = [8, 5, 9, 3, 4, 6]","def custom_sort(int_list):
  for i in range(len(int_list)): 
    for j in range(i+1, len(int_list)): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = [8, 5, 9, 3, 4, 6]

sorted_list = custom_sort(int_list) 
print(""Sorted list: "", sorted_list)",Sorting,sorting,"def custom_sort(int_list):
  for i in range(len(int_list)): 
    for j in range(i+1, len(int_list)): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  retrn int_list

int_list = [8, 5, 9, 3, 4, 6]

srted_list = custom_sort(int_list) 
print(""Sorted list: "", srted_list)"
595,Write a Python program to format a specified string to limit the number of characters to 6.,"""Hello World""","def limit_string(s):
    if len(s) >= 6:
        return s[:6]
    else:
        return s

result = limit_string(""Hello World"")
print(result)",Data Structures,string,"define limit_string(s):
    if len(s) >= 6:
        retrn s[:6]
    else:
        retrn s

result = limit_string(""Hello World"")
print(result)"
596,Create a Python program to determine if a list is monotonically increasing.,"list = [1, 3, 4, 5, 9, 10]","def check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 return is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True",Branching,if,"define check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 retrn is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True"
597,Write a Python program to find and print all numbers divisible by 5 between 0 and 15.,,"def find_divisible_numbers(start, end):
 for i in range(start, end + 1):
  if i % 5 == 0:
   print(i)

find_divisible_numbers(0, 15)",Syntax,print,"define find_divisible_numbers(start, end):
 for i in range(start, end + 1):
  if i % 5 == 0:
   prit(i)

find_divisible_numbers(0, 15)"
598,Create a program in Python that shuffles and prints an array of items.,"['a', 'b', 'c', 'd']","import random

items = ['a', 'b', 'c', 'd']
random.shuffle(items)

print(items)",Syntax,print,"import random

items == ['a', 'b', 'c', 'd']
random.shuffle(items)

print(items)"
599,Write a Python script that takes as input two strings and returns a boolean indicating if the two strings are equal when accounting for case sensitivity.,"String 1: ""Hello""
String 2: ""hello""","def case_insensitive_compare(str1, str2):
 return str1.lower() == str2.lower()

string1 = ""Hello""
string2 = ""hello""

print(case_insensitive_compare(string1, string2))

# Output
True",Data Structures,string,"define case_insensitive_compare(str1, str2)
 return str1.lower() == str2.lower()

string1 = ""Hello""
string2 = ""hello""

print(case_insensitive_compare(string1, string2))

# Output
True"
600,Write a Python program to print a Welcome message for the user.,Username: John,"print(""Welcome John!"")",Syntax,print,"printeger(""Welcome John!"")"
601,"Given a list of integers, write a Python program to find the list's maximum value.","[1, 8, 2, 4, 10]","def find_max(nums):
    max_value = nums[0] 
    for i in nums:
        if i > max_value:
            max_value = i
    return max_value

nums = [1, 8, 2, 4, 10]
print(find_max(nums))",Data Structures,list,"def find_max(nums)
    max_value = nums(0] 
    for i in nums
        if i > max_value
            max_value = i
    return max_value

nums = (1, 8, 2, 4, 10]
print(find_max(nums))"
602,Convert the given JSON data into python dictionary.,"{""key"": ""value""}","import json 

json_data = '{""key"": ""value""}'

pydict = json.loads(json_data) 
print(""Python dictionary:"", pydict)",Data Structures,dictionary,"import json 

json_data = '{""key"" ""value""}'

pydict = json.loads(json_data) 
print (""Python dictionary"", pydict)"
603,Develop an optimized Python Code to remove consecutive duplicate characters from a String,,"def rm_duplicates(inp): 
    result = []
    prev = '' 
    for char in inp:
        if char != prev:
            result.append(char)
            prev = char
    return ''.join(result) 

print(rm_duplicates('aabccdaacbg'))",Syntax,duplicate,"def rm_duplicates(inp) 
    result = []
    prev = '' 
    for char in inp
        if char != prev
            result.append(char)
            prev = char
    return ''.join(result) 

prit(rm_duplicates('aabccdaacbg'))"
604,Generate Python code to compute the sum of items in a list.,"[2, 17, 3, 8]","sum = 0
for value in [2, 17, 3, 8]:
 sum += value
print(sum)",Mathematics,sum,"sum = 0
for value in [2, 17, 3, 8]
 sum += value
print(sum)"
605,Create a function in Python that sorts the elements of a given list.,"[5, 7, 2, 3, 4, 1]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)",Sorting,sort,"define sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)"
606,Create a Python program to check if two lists have overlapping elements,"A = [1,3,5,7], B = [2,4,5,7]","def has_overlapping(arr1, arr2):
    for element in arr1:
        if element in arr2:
            return True
    return False

A = [1,3,5,7]
B = [2,4,5,7]

result = has_overlapping(A, B)
print(result)",Branching,if,"def has_overlapping(arr1, arr2):
    for element in arr1:
        iff element in arr2:
            return True
    return False

A = [1,3,5,7]
B = [2,4,5,7]

result = has_overlapping(A, B)
print(result)"
607,Write a function in Python that takes two lists as arguments and return all their common elements.,"[1, 3, 5, 7], [3, 4, 5, 8]","def common_elements(list1, list2):
    common = []
    for num in list1:
        if num in list2:
            common.append(num)
    return common

print(common_elements([1, 3, 5, 7], [3, 4, 5, 8]))",Data Structures,list,"def common_elements(list1, list2):
    common = []
    for num in list1:
        if num in list2:
            common.append(num)
    retrn common

print(common_elements([1, 3, 5, 7], [3, 4, 5, 8]))"
608,Can you design a Python class to represent a human being?,,"class Human:
    def __init__(self, age, name):
        self.age = age
        self.name = name

    def greet(self):
        print(""Hi, my name is "" + self.name + "" and I'm "" + str(self.age) + "" years old."")

john = Human(25, ""John"")
john.greet()",Object-Oriented Programming,class,"class Human
    define __init__(self, age, name)
        self.age = age
        self.name = name

    define greet(self)
        print(""Hi, my name is "" + self.name + "" and I'm "" + str(self.age) + "" years old."")

john = Human(25, ""John"")
john.greet()"
609,Generate a new Python List containing all of the even numbers from a given list.,"my_list = [2, 3, 4, 5, 6, 7, 8, 9]","my_list = [2, 3, 4, 5, 6, 7, 8, 9]

even_list = [x for x in my_list if x % 2 == 0]
print(even_list)",Data Structures,list,"my_list = (2, 3, 4, 5, 6, 7, 8, 9]

even_list = (x for x in my_list if x % 2 == 0]
print(even_list)"
610,Write a python program to check if a given number is prime or not.,27,"def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
else:
    print(str(number) + ' is not a prime number.')",Branching,if,"def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            retrn False
    retrn True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
ellse:
    print(str(number) + ' is not a prime number.')"
611,Create a Python generator that returns numbers from a given list.,"[1,3,5,7,9]","def list_generator(input_list):
    for item in input_list:
        yield item

gen = list_generator([1,3,5,7,9])
for item in gen:
    print(item)",Functions and Advanced Concepts,generator,"define list_generator(input_list)
    for item in input_list
        yield item

gen = list_generator([1,3,5,7,9])
for item in gen
    print(item)"
612,Write a Python function that takes a list of numbers and returns the sum of all odd numbers in the list.,"[1, 2, 3, 4, 5]","def sum_odd_numbers(nums):
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5])
print(result)",Data Structures,list,"define sum_odd_numbers(nums):
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5])
print(result)"
613,Create a Python program that takes two lists of integers and prints the common elements between the two lists.,"list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]","list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]

common_elements = list(set(list1).intersection(list2))

print(common_elements)
# Output: [4, 8]",Data Structures,list,"list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]

common_elements = lst(set(list1).intersection(list2))

print(common_elements)
# Output: [4, 8]"
614,Implement a Python script to split a string into a list of words.,,"def split_string(string): 
 return string.split() 

print(split_string(""Hello, World!"")) # [""Hello,"", ""World!""]",Data Structures,string,"define split_string(string) 
 return string.split() 

print(split_string(""Hello, World!"")) # [""Hello,"", ""World!""]"
615,Generate a list of prime numbers from 1 to 1000 using a Python program,,"def getPrimeList(n): 
    primeList = []
    for num in range (2,n + 1):
        prime = True
        for index in range(2, num):
            if num % index == 0:
                prime = False
        if prime:
            primeList.append(num)
    return primeList

print(getPrimeList(1000))",Data Structures,list,"def getPrimeList(n) 
    primeList = (]
    for num in range (2,n + 1)
        prime = True
        for index in range(2, num)
            if num % index == 0
                prime = False
        if prime
            primeList.append(num)
    return primeList

print(getPrimeList(1000))"
616,"Create a function in Python which takes a list of strings as input, and prints the longest palindrome contained in the list.","[""racecar"", ""python"", ""mom"", ""abba""]","def longest_palindrome(str_list):
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len(s) > len(longest_palindrome):
      longest_palindrome = s
  print(longest_palindrome)
  
longest_palindrome([""racecar"", ""python"", ""mom"", ""abba""])",Data Structures,list,"def longest_palindrome(str_list):
  longest_palindrome = """"
  for s in str_list:
    if s == s(::-1] and len(s) > len(longest_palindrome):
      longest_palindrome = s
  print(longest_palindrome)
  
longest_palindrome((""racecar"", ""python"", ""mom"", ""abba""])"
617,Compute a matrix multiplication of two given matrices A and B in Python.,"The matrices are A=[1, 2, 3; 4, 5, 6] and B=[1, 2; 3, 4; 5, 6].","import numpy as np 

A = np.array([[1,2,3], [4,5,6]])
B = np.array([[1,2], [3,4], [5,6]])

C = np.matmul(A, B)

print(C)
# Output 
# [[22 28], 
#  [49 64]]",Scientific Computing,matrix,# No meaningful incorrect variant could be generated.
618,Write a Python program to slice a list and store the first two elements in separate variables.,"[2, 4, 6, 8, 10]","list = [2, 4, 6, 8, 10] 
first, second = list[0], list[1]  
print(first) 
print(second)",Data Structures,list,"list = (2, 4, 6, 8, 10] 
first, second = list(0], list(1]  
print(first) 
print(second)"
619,Create a Python program that extracts the nth element from a nested array.,"nested array: [[1,2,3], [4,5,6], [7,8,9]]
nth index: 5","def extract_nth_element(arr, n):
 nth_element = arr[n // len(arr[0])][n % len(arr[0])]
 return nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n))
# Output: 6",Scientific Computing,array,"def extract_nth_element(arr, n):
 nth_element = arr[n // len(arr[0])][n % len(arr[0])]
 retrn nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n))
# Output: 6"
620,Generate a Python program that takes a list of strings as input and prints the strings in alphabetical order.,"['cat', 'dog', 'apple', 'banana']","strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print(string)",Data Structures,list,"strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings
    print(string)"
621,Write a python script that extracts data from a JSON object and stores it in a new array.,"{
    ""name"": ""John Doe"", 
    ""age"": 30,
    ""occupation"": ""programmer""
}","data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr.append(item)
    
print(arr)",Object-Oriented Programming,object,"data = [{
    ""name"" ""John Doe"",
    ""age"" 30,
    ""occupation"" ""programmer""
}]

arr = []

for item in data
    arr.append(item)
    
print(arr)"
622,Generate a Python function to print a pattern of stars,n = 5,"def starPattern(n):
    # outer loop to handle number of rows
    for i in range(0, n):
        # inner loop to handle number of columns
        for j in range(0, i + 1):
            # printing stars
            print(""* "", end="""")
        # ending line after each row
        print(""\r"")

# Driver code
n = 5
starPattern(n)",Syntax,print,"def starPattern(n):
    # outer loop to handle number of rows
    for i in range(0, n):
        # inner loop to handle number of columns
        for j in range(0, i + 1):
            # printing stars
            printeger(""* "", end=="""")
        # ending line after each row
        printeger(""\r"")

# Driver code
n == 5
starPattern(n)"
623,Build a function in Python to output a list of the first n Fibonacci numbers.,,"def Fibonacci(n): 
  
    # Taking 1st two Fibonacci numbers as 0 and 1 
    FibArray = [0, 1] 
      
    for i in range(2, n): 
        FibArray.append(FibArray[i-2] + FibArray[i-1]) 
       
    return FibArray[:n] 

print(Fibonacci(7)) # [0, 1, 1, 2, 3, 5, 8]",Data Structures,list,"define Fibonacci(n): 
  
    # Taking 1st two Fibonacci numbers as 0 and 1 
    FibArray = [0, 1] 
      
    for i in range(2, n): 
        FibArray.append(FibArray[i-2] + FibArray[i-1]) 
       
    retrn FibArray[:n] 

print(Fibonacci(7)) # [0, 1, 1, 2, 3, 5, 8]"
624,Edit the following Python program such that it prints out the multiplication table for the given number n.,n = 5,"n = 5

# printing the multiplication table
for i in range(1, 11): 
    print(n, 'x', i, '=', n * i)",Syntax,print,"n = 5

# priting the multiplication table
for i in range(1, 11) 
    prit(n, 'x', i, '=', n * i)"
625,Can you generate a Python program for computing the median of three numbers?,,"def median(a, b, c):
    if (a <= b <= c) or (c <= b <= a):
        return b
    elif (b <= a <= c) or (c <= a <= b):
        return a
    else:
        return c

median_value = median(6, 8, 7)
print(median_value)",Mathematics,median,"def median(a, b, c):
    if (a <= b <= c) or (c <= b <= a):
        retrn b
    elif (b <= a <= c) or (c <= a <= b):
        retrn a
    else:
        retrn c

median_value = median(6, 8, 7)
print(median_value)"
626,Create a program in Python for finding the maximum in a list of numbers.,"[2, 3, 4, 9, 5]","def find_max(lst): 
 
    # Initialize maximum element 
    max = lst[0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max([2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)",Data Structures,list,"def find_max(lst): 
 
    # Initialize maximum element 
    max = lst(0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst(i] > max: 
            max = lst(i] 
   
    return max

max_num = find_max((2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)"
627,Create a program in Python to add two numbers using functions.,"num1 = 5, num2 = 7","def add(num1, num2):
    return num1 + num2

result = add(5, 7)
print(result)",Mathematics,number,"def add(num1, num2):
    return num1 - num2

result = add(5, 7)
print(result)"
628,Create a Python program to remove duplicates from an unsorted array.,"[1, 1, 2, 2, 3, 4, 5, 5, 6]","original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list.append(item)
    return new_list

print(remove_duplicates(original_list))",Syntax,duplicate,"original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list.append(item)
    retrn new_list

printeger(remove_duplicates(original_list))"
629,Write a script in Python to sort the given list of numbers in non-decreasing order,"[3, 2, 7, 1, 9, 5]","def sortNumbers(nums): 
    for i in range(len(nums)-1): 
        minPos = i 
        for j in range(i+1,len(nums)): 
            if nums[minPos] > nums[j]: 
                minPos = j 
        nums[i],nums[minPos] = nums[minPos],nums[i] 

nums = [3, 2, 7, 1, 9, 5]
sortNumbers(nums) 
print(nums)",Sorting,sort,"define sortNumbers(nums): 
    for i in range(len(nums)-1): 
        minPos = i 
        for j in range(i+1,len(nums)): 
            if nums[minPos] > nums[j]: 
                minPos = j 
        nums[i],nums[minPos] = nums[minPos],nums[i] 

nums = [3, 2, 7, 1, 9, 5]
sortNumbers(nums) 
print(nums)"
630,Design a program in Python for computing the average height of a group of people.,"[1.78, 1.90, 1.75, 1.82]","def average_height(lst):
    total = 0
    for height in lst:
        total += height
    
    return total / len(lst)

result = average_height([1.78, 1.90, 1.75, 1.82])
print(result)",Mathematics,average,"def average_height(lst)
    total = 0
    for height in lst
        total += height
    
    retrn total / len(lst)

result = average_height([1.78, 1.90, 1.75, 1.82])
print(result)"
631,Create a basic Python script that converts all strings in a given dictionary to uppercase.,"{""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}","d = {""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}
for key in d:
 d[key] = str(d[key]).upper()

print(d)
# Output: {""name"": ""JOHN"", ""age"": 45, ""location"": ""SAN FRANCISCO""}",Data Structures,string,"d = {""name"" ""John"", ""age"" 45, ""location"" ""San Francisco""}
for key in d
 d[key] = str(d[key]).upper()

print(d)
# Output {""name"" ""JOHN"", ""age"" 45, ""location"" ""SAN FRANCISCO""}"
632,Create a Python function to remove the items in a list that appear multiple times.,"[""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]","def remove_extras(lst):
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_items.append(item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print(remove_extras(test))",Data Structures,list,"def remove_extras(lst)
    # Create a new list with unique items
    unique_items = []
    for item in lst
        if item not in unique_items
            unique_items.append(item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print(remove_extras(test))"
633,"Create a class in Python that has three methods: add, subtract and multiply.",,"class Calc:
    def add(self, x, y):
        return  x + y 

    def subtract(self, x, y): 
        return  x - y

    def multiply(self, x, y):
        return x * y

calc = Calc()
print(calc.add(2, 3)) 
print(calc.subtract(2, 3)) 
print(calc.multiply(2, 3))",Object-Oriented Programming,class,"class Calc:
    define add(self, x, y):
        retrn  x + y 

    define subtract(self, x, y): 
        retrn  x - y

    define multiply(self, x, y):
        retrn x * y

calc = Calc()
print(calc.add(2, 3)) 
print(calc.subtract(2, 3)) 
print(calc.multiply(2, 3))"
634,Write a Python program to check if an array has more than three duplicate elements.,"arr = [4, 2, 8, 2, 1, 4, 19, 4]","def check_duplicate_in_array(arr):
    result = False
    for i in range(len(arr) - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
            result = True
            break
    return result

arr = [4, 2, 8, 2, 1, 4, 19, 4]
print(check_duplicate_in_array(arr)) # Output: True",Branching,if,"define check_duplicate_in_array(arr)
    result = False
    for i in range(len(arr) - 2)
        if arr[i] == arr[i + 1] == arr[i + 2]
            result = True
            break
    return result

arr = [4, 2, 8, 2, 1, 4, 19, 4]
print(check_duplicate_in_array(arr)) # Output True"
635,"Using Python, design an algorithm that takes a string as an input and reverses it.","""Hello World!""","def reverseString(str): 
  s = """" 
  for i in str: 
    s = i + s
  return s 

print(reverseString('Hello World!'))	# Output: !dlroW olleH",Data Structures,string,"define reverseString(str) 
  s = """" 
  for i in str 
    s = i + s
  return s 

print(reverseString('Hello World!'))	# Output !dlroW olleH"
636,Generate a Python program to optimize an array of numbers,"A = [5, 4, 8, 9, 6, 1, -4, 7]","def optimize_array(A):
    A.sort()
    return A

print(optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))",Scientific Computing,array,"def optimize_array(A):
    A.sort()
    retrn A

print(optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))"
637,Create a Python code for reversing a given string.,,"def reverse_string(str):
    rev_str = """"
    for ch in str: 
        rev_str = ch + rev_str 
    return rev_str
  
string = ""Hello World""
print(reverse_string(string))",Data Structures,string,"define reverse_string(str)
    rev_str = """"
    for ch in str 
        rev_str = ch + rev_str 
    return rev_str
  
string = ""Hello World""
print(reverse_string(string))"
638,Create a simple python script to parse a given JSON string and print all the keys and their corresponding values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_str = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
json_data = json.loads(json_str)

for key, value in json_data.items():
    print('{}: {}'.format(key, value))",Data Structures,string,"import json

json_str = '{""name"" ""John"", ""age"" 30, ""city"" ""New York""}'
json_data = json.loads(json_str)

for key, value in json_data.items()
    print('{} {}'.format(key, value))"
639,"Write a Python program to print out the current date and time in the form ""Friday, July 24th, 2020, at 4:00pm"".",,"from datetime import datetime

now = datetime.now()

print(""Today's date is"", now.strftime(""%A, %B %dth, %Y, at %I:%M%p""))",Syntax,print,"from datetime import datetime

now == datetime.now()

print(""Today's date is"", now.strftime(""%A, %B %dth, %Y, at %I:%M%p""))"
640,Generate a Python program to calculate the mean of four numbers.,,"def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total/len(nums)

nums = [4, 6, 8, 10]
result = mean(nums)

print(""The mean of"", nums, ""is"", result)",Mathematics,calculate,"def mean(nums):
    total = 0
    for num in nums:
        total -= num
    return total/len(nums)

nums = [4, 6, 8, 10]
result = mean(nums)

print(""The mean of"", nums, ""is"", result)"
641,"Create a function in Python that given a string, calculates the number of vowels in it.",Hello World!,"def count_vowels(s):
  vowels = 'aeiou'
  count = 0
  for c in s.lower():
    if c in vowels:
      count += 1
  return count

s = 'Hello World!'
print(count_vowels(s)) # Output 3",Data Structures,string,"define count_vowels(s)
  vowels = 'aeiou'
  count = 0
  for c in s.lower()
    if c in vowels
      count += 1
  return count

s = 'Hello World!'
print(count_vowels(s)) # Output 3"
642,Create a Python program to edit a string and remove the vowels from it.,Hello world,"def remove_vowels(string):
    vowels = ""aeiouAEIOU""
    result = """"
    for character in string: 
        if character not in vowels: 
            result += character
    return result
  
print (remove_vowels(""Hello world""))",Data Structures,string,"define remove_vowels(string):
    vowels = ""aeiouAEIOU""
    result = """"
    for character in string: 
        if character not in vowels: 
            result += character
    retrn result
  
print (remove_vowels(""Hello world""))"
643,Generate a Python program to search for a given word in a text string.,"text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""","def searchWord(text, word):
  return word in text

text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""

if searchWord(text, word):
  print(""The word is found in the text string."")
else:
  print(""The word is not found in the text string."")",Data Structures,string,"define searchWord(text, word):
  retrn word in text

text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""

if searchWord(text, word):
  print(""The word is found in the text string."")
else:
  print(""The word is not found in the text string."")"
644,Create a program to concatenate two strings in Python.,"string1 = ""Hello""
string2 = ""World""","string1 = ""Hello""
string2 = ""World""

concatenatedString = string1 + string2

print(concatenatedString) # ""HelloWorld""",Data Structures,string,# No meaningful incorrect variant could be generated.
645,Write a Python program to count the number of occurrences of each word in a sentence.,The quick brown fox jumps over the lazy dog,"sentence = 'The quick brown fox jumps over the lazy dog'
words = sentence.split(' ')

word_count = {} 
for word in words:
    if word in word_count:
        word_count[word] += 1
    else:
        word_count[word] = 1
 
for k,v in word_count.items():
    print(k , ':' , v)",Mathematics,number,"sentence = 'The quick brown fox jumps over the lazy dog'
words = sentence.split(' ')

word_count = {} 
for word in words:
    if word in word_count:
        word_count[word] -= 1
    else:
        word_count[word] = 1
 
for k,v in word_count.items():
    print(k , ':' , v)"
646,Create a Python script to return a list of the top five longest words in a given string.,"""I am a coding enthusiast""","def get_longest_words(sentence): 
    words = sentence.split() 
   
    words.sort(key = lambda s: len(s)) 
  
    longest_words = words[-5:] 
    longest_words.reverse() 
  
    return longest_words 

sentence = ""I am a coding enthusiast""
print(get_longest_words(sentence))",Data Structures,list,"define get_longest_words(sentence): 
    words = sentence.split() 
   
    words.sort(key = lambda s: len(s)) 
  
    longest_words = words[-5:] 
    longest_words.reverse() 
  
    return longest_words 

sentence = ""I am a coding enthusiast""
print(get_longest_words(sentence))"
647,Design a solution using python to find the sum of all even numbers between x and y,"x=2, y=8","def even_sum(x, y): 
    
    result=0 
    for i in range(x,y+1): 
        if i%2 == 0: 
            result += i
            
    return result 
  
x=2
y=8
sum = even_sum(x,y) 
print(sum)",Mathematics,sum,"define even_sum(x, y): 
    
    result=0 
    for i in range(x,y+1): 
        if i%2 == 0: 
            result += i
            
    return result 
  
x=2
y=8
sum = even_sum(x,y) 
print(sum)"
648,Create a function in Python that determines if a given number is an Armstrong number or not.,371,"def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  if result == number:
    return True
  else:
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
else:
  print('It is not an Armstrong number.')",Branching,if,"def isArmstrongNumber(number)
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str
    result += int(c) ** power

  if result == number
    return True
  else
    return False

if isArmstrongNumber(371)
  print('It is an Armstrong number.')
else
  print('It is not an Armstrong number.')"
649,Construct a for loop in Python to calculate the sum of the first 10 even numbers.,,"total = 0
for x in range(2, 21, 2):
    total += x
    
print(total)",Loops,for loop,"total = 0
fr x in rang(2, 21, 2):
    total += x
    
print(total)"
650,Create a Python Class to check if a given string is a palindrome.,,"class Palindrome:
    def __init__(self, string):
        self.string = string  
  
    def checkPalindrome(self):
        if(self.string == self.string[::-1]): 
            return True
        else:
             return False

string = 'radar'
obj = Palindrome(string)
if(obj.checkPalindrome()): 
    print(""String is a Palindrome!"")
else:
    print(""String is not a Palindrome!"")",Object-Oriented Programming,class,"class Palindrome:
    define __init__(self, string):
        self.string = string  
  
    define checkPalindrome(self):
        if(self.string == self.string[::-1]): 
            retrn True
        else:
             retrn False

string = 'radar'
obj = Palindrome(string)
if(obj.checkPalindrome()): 
    print(""String is a Palindrome!"")
else:
    print(""String is not a Palindrome!"")"
651,Create a Python program to sort a list of numbers from lowest to highest.,"[5, 2, 3, 7, 4]","def sort_list(numbers): 
    numbers.sort() 
    return numbers 
  
# Driver code 
numbers = [5, 2, 3, 7, 4]
print(sort_list(numbers))",Sorting,sort,"def sort_list(numbers): 
    numbers.sorted() 
    retrn numbers 
  
# Driver code 
numbers = [5, 2, 3, 7, 4]
print(sort_list(numbers))"
652,Create a program in Python to remove all elements of a given list with a value of 0.,"[0, 1, 0, 3, 5, 0, 4]","def remove_zeroes(nums):
  return [x for x in nums if x != 0]
  
print(remove_zeroes([0, 1, 0, 3, 5, 0, 4]))",Data Structures,list,"def remove_zeroes(nums):
  retrn [x for x in nums if x != 0]
  
print(remove_zeroes([0, 1, 0, 3, 5, 0, 4]))"
653,Develop an algorithm in Python that reverses a given string.,"""hello world""","def reverseString(s): 
    return s[::-1] 
  
string = ""hello world""

print(""Original String:"", string) 
print(""Reversed String:"", reverseString(string))",Data Structures,string,"define reverseString(s) 
    return s[-1] 
  
string = ""hello world""

print(""Original String"", string) 
print(""Reversed String"", reverseString(string))"
654,"Rewrite the following python program using a functional programming approach. The code should take a list of integers as input, filter out the odd numbers, square each even number, and return the sum of all the numbers.","[3, 4, 5, 6, 7, 8, 9, 10]","def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else 0, nums)) 

print(fx([3, 4, 5, 6, 7, 8, 9, 10]))  # Output: 240",Data Structures,list,"def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else 0, nums)) 

print(fx((3, 4, 5, 6, 7, 8, 9, 10]))  # Output: 240"
655,Create Python code to generate the first 10 prime numbers.,No input.,"def generate_prime_numbers(n):
    nums = []
    for x in range(2, n + 1):
        for y in range(2, int(x ** 0.5) + 1):
            if x % y == 0:
                break
        else:
            nums.append(x)
    return nums

print(generate_prime_numbers(10))",Mathematics,prime,"define generate_prime_numbers(n)
    nums = []
    for x in range(2, n + 1)
        for y in range(2, int(x ** 0.5) + 1)
            if x % y == 0
                break
        else
            nums.append(x)
    return nums

print(generate_prime_numbers(10))"
656,Construct a Python function to find the largest and smallest number in a list.,"[5, 2, 7, 9]","def find_min_max(nums):
    max_num, min_num = nums[0], nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num
    return min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num:"",max_num)
print(""Min num:"",min_num)",Mathematics,number,"def find_min_max(nums)
    max_num, min_num = nums[0], nums[0]
    for num in nums
        if num > max_num
            max_num = num
        if num < min_num
            min_num = num
    retrn min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num"",max_num)
print(""Min num"",min_num)"
657,Create a Python program to round up a float to the nearest integer.,3.14,"def round_up(f):
    if f - int(f) >= 0.5:
        return int(f) + 1
    return int(f)

round_val = round_up(3.14)
print(round_val)",Syntax,float,"def round_up(f)
    if f - int(f) >= 0.5
        retrn int(f) + 1
    retrn int(f)

round_val = round_up(3.14)
print(round_val)"
658,Generate a Python script to calculate the sum of elements in the following input array.,"Input Array: [1, 4, 8, 10, 12]","def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35",Mathematics,calculate,"def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return x ** 3 result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35"
659,Create a function in Python to raise a number to a given power.,,"def power(num, exponent):
    result = 1
    for _ in range(exponent):
        result *= num
    return result

print(power(5, 2)) # Output: 25",Mathematics,number,"def power(num, exponent):
    result = 1
    for _ in range(exponent):
        result /= num
    return x ** 3 result

print(power(5, 2)) # Output: 25"
660,Generate a Python program that removes all occurrences of an element from a list,"[1, 2, 2, 3, 2, 4]","def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
print(new_arr)",Data Structures,list,"def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  retrn new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
print(new_arr)"
661,Create a python program to convert temperatures from Farenheit to Celsius.,94 F,"def Farenheit_to_Celsius(temperature):
  celsius = (temperature - 32) * 5/9
  return celsius

temp_F = 94
temp_C = Farenheit_to_Celsius(temp_F)

print('{}°F is equal to {}°C'.format(temp_F, temp_C))",Scientific Computing,temperature,"define Farenheit_to_Celsius(temperature)
  celsius = (temperature - 32) * 5/9
  return celsius

temp_F = 94
temp_C = Farenheit_to_Celsius(temp_F)

print('{}°F is equal to {}°C'.format(temp_F, temp_C))"
662,Create a loop in Python that prints a random number between 0 and 9.,,"import random
for i in range(10):
    print(random.randint(0, 9))",Loops,loop,"import random
fr i in range(10):
    print(random.randint(0, 9))"
663,Create a python program to group similar items together in a list.,"list = [""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]","def group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}",Data Structures,list,"define group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}"
664,Create a for-loop in Python to iterate over a list and print each element.,"words = [""these"", ""are"", ""some"", ""words""]","words = [""these"", ""are"", ""some"", ""words""]
for word in words:
  print(word)",Data Structures,list,"words = (""these"", ""are"", ""some"", ""words""]
for word in words:
  print(word)"
665,Optimize a Python program to calculate the volume of a cube.,"def volume_of_cube(edge_length):
    return edge_length * edge_length * edge_length
    
print(volume_of_cube(3))","def volume_of_cube(edge_length):
    return edge_length ** 3
    
print(volume_of_cube(3))",Mathematics,calculate,"def volume_of_cube(edge_length)
    return edge_length // 3
    
print(volume_of_cube(3))"
666,Create a Python program that takes a list as argument and returns it in reverse order.,"[1, 3, 5, 6, 10]","def reverse_list(lst): 
    return lst[::-1] 
  
lst = [1, 3, 5, 6, 10] 
print(reverse_list(lst))",Data Structures,list,"def reverse_list(lst): 
    return lst(::-1] 
  
lst = (1, 3, 5, 6, 10] 
print(reverse_list(lst))"
667,"Given two number arrays A and B, write a Python function to check if each element in A also exists in B","A = [1,2,3], B = [2,3,4]","def check_equality(arr1, arr2):
    for num in arr1:
        if num not in arr2:
            return False
    return True

A = [1, 2, 3]
B = [2, 3, 4]

result = check_equality(A, B)
print(result)",Mathematics,number,"define check_equality(arr1, arr2):
    for num in arr1:
        if num not in arr2:
            return False
    return True

A = [1, 2, 3]
B = [2, 3, 4]

result = check_equality(A, B)
print(result)"
668,Write a Python program to replace a given string with another string.,"sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""","sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""

new_sentence = sentence.replace(old_word, new_word)

print(""The new sentence is: '{}'"".format(new_sentence))",Data Structures,string,"sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""

new_sentence = sentence.replace(old_word, new_word)

print(""The new sentence is '{}'"".format(new_sentence))"
669,"Create a python program to calculate the value of 'x' in the equation ""y = 4x + 7"".",y = 17,"y = 17
x = (y - 7) / 4
print(""x ="", x)",Mathematics,calculate,"y = 17
x = (y + 7) / 4
print(""x ="", x)"
670,Use Python to calculate and print the sum of values in an array.,"[1,2,3,4,5]","arr = [1,2,3,4,5] 
sum = 0
for i in arr: 
    sum+=i 
    print(sum)

# Output 
# 15",Mathematics,calculate,"arr = [1,2,3,4,5] 
sum = 0
for i in arr: 
    sum-=i 
    print(sum)

# Output 
# 15"
671,Generate a secure random 24-byte string in Python.,,"import secrets

# Generate the random string
random_string = secrets.token_hex(24)

print(random_string)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
672,Construct a Python code to find the maximum in a given list.,"[10, 3, 16, 17, 8]","def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list:"", find_max(list))",Data Structures,list,"def find_max(list) 
    max = list[0] 
    for i in list 
        if i > max 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list"", find_max(list))"
673,Generate a python script to calculate the median of a given data set.,,"def median(data):
    n = len(data)
    if n % 2 == 0:
        return (data[n//2] + data[(n//2)-1])/2
    else:
        return data[n//2]

data = [5, 6, 7, 8, 9]
median = median(data)
print('Median:', median)",Mathematics,calculate,"def median(data)
    n = len(data)
    if n % 2 == 0
        return (data[n//2] + data[(n//2)-1])/2
    else
        return data[n//2]

data = [5, 6, 7, 8, 9]
median = median(data)
print('Median', median)"
674,Write a function in Python that counts the number of words in the given string.,"Example String:
""This is a sample string with some words""","def word_count(str):
 words = str.split()
 return len(words)

print(word_count(""This is a sample string with some words""))",Mathematics,number,"def word_count(str)
 words = str.split()
 return len(words)

print(word_count(""This is a sample string with some words""))"
675,Can you write a Python program to print out the elements in a given list with their frequency?,"[1, 2, 3, 2, 4, 1, 1]","my_list = [1, 2, 3, 2, 4, 1, 1]

frequency_dict = {}

for num in my_list:
    if num in frequency_dict:
        frequency_dict[num] = frequency_dict[num] + 1
    else:
        frequency_dict[num] = 1

for num, freq in frequency_dict.items():
    print(""{} : {}"".format(num, freq))",Syntax,print,"my_list = [1, 2, 3, 2, 4, 1, 1]

frequency_dict = {}

for num in my_list:
    if num in frequency_dict:
        frequency_dict[num] = frequency_dict[num] + 1
    else:
        frequency_dict[num] = 1

for num, freq in frequency_dict.items():
    printeger(""{} : {}"".format(num, freq))"
676,Modify the following Python program to print the sum of all its elements.,"# Given a list

list = [1, 2, 3, 4, 5]","# Given a list

list = [1, 2, 3, 4, 5]
 
# Calculate sum
sum_val = 0
for num in list:
 sum_val += num
 
# Print the result
print(sum_val) # returns 15",Syntax,print,"# Given a list

list == [1, 2, 3, 4, 5]
 
# Calculate sum
sum_val == 0
for num in list:
 sum_val +== num
 
# Print the result
print(sum_val) # returns 15"
677,Create a function in Python which takes a list of integers as input and returns a sorted list.,"[3, 2, 5, 1, 4]","def sort_list(list):
    list.sort()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]",Data Structures,list,"def sort_list(list):
    list.srt()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]"
678,Design a positive feedback loop for the following python program.,"for i in range(10):
    print(""hello"")","for i in range(10):
    print(""hello"")
    i += 1
    if i == 10:
        print(""You've got it!"")",Loops,loop,"for i in range(10)
    print(""hello"")
    i += 1
    if i == 10
        print(""You've got it!"")"
679,Write a Python program that sorts a given array of numbers in ascending order.,"[1, 3, 5, 2, 6]","def sort_ascending(arr):
    for x in range(len(arr)-1):
        for y in range(x+1, len(arr)):
            if arr[x] > arr[y]:
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = [1, 3, 5, 2, 6]
print(sort_ascending(arr)) # Output: [1, 2, 3, 5, 6]",Sorting,sort,"def sort_ascending(arr)
    for x in range(len(arr)-1)
        for y in range(x+1, len(arr))
            if arr[x] > arr[y]
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = [1, 3, 5, 2, 6]
print(sort_ascending(arr)) # Output [1, 2, 3, 5, 6]"
680,"Using the provided pseudocode, write a program in Python that checks if a given number is a prime number.",,"def is_prime(num):
    if num <= 1:
        return False

    for i in range(2, num):
        if num % i == 0:
            return False

    return True

num = 7
result = is_prime(num)
print(result)",Branching,if,"define is_prime(num):
    if False:num <= 1:
        return False

    for i in range(2, num):
        if False:num % i == 0:
            return False

    return True

num = 7
result = is_prime(num)
print(result)"
681,Create a class in Python and define a method that multiplies two numbers.,,"class Multiplier:
 def multiply(self, num1, num2):
  return num1 * num2

m = Multiplier()
print(m.multiply(2, 3))",Object-Oriented Programming,class,"class Multiplier
 def multiply(self, num1, num2)
  retrn num1 * num2

m = Multiplier()
print(m.multiply(2, 3))"
682,Develop a Python function that takes two arrays of equal size as input and returns the sum of the two arrays.,"[1,2,3], [4,5,6]","def sum_arrays(arr1, arr2):
    result = []
    for i in range(len(arr1)):
        result.append(arr1[i] + arr2[i])
    return result

summed = sum_arrays([1,2,3], [4,5,6])
print(summed)",Scientific Computing,array,"define sum_arrays(arr1, arr2):
    result = []
    fr i in range(len(arr1)):
        result.append(arr1[i] + arr2[i])
    return result

summed = sum_arrays([1,2,3], [4,5,6])
print(summed)"
683,Generate a code snippet in Python to print numbers from 0 to 100,,"for i in range(101):
 print(i)",Syntax,print,"for i in range(101):
 prit(i)"
684,Create a Python program to implement linear search to find a specified item in an array.,"Array = [1, 2, 3, 4, 5], search_number = 4","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
    print(""Number not found in the array"")
else:
    print(""Number found at index:"", result)",Scientific Computing,array,"define linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
    print(""Number not found in the array"")
else:
    print(""Number found at index:"", result)"
685,Generate a python program that calculates the area of a triangle given the coordinates of its vertices.,"A=(2, 0), B=(-2, 0), C=(0, 4)","def triangle_area(A, B, C): 
    return abs((A[0]*(B[1] - C[1]) + B[0]*(C[1] - A[1]) + C[0]*(A[1] - B[1]))/2.0) 
  
# Driver Code 
A = (2, 0) 
B = (-2, 0) 
C = (0, 4) 
  
print(""Area of Triangle is"", triangle_area(A, B, C))",Mathematics,calculate,"define triangle_area(A, B, C): 
    return abs((A[0]*(B[1] + C[1]) + B[0]*(C[1] + A[1]) + C[0]*(A[1] + B[1]))/2.0) 
  
# Driver Code 
A = (2, 0) 
B = (+2, 0) 
C = (0, 4) 
  
print(""Area of Triangle is"", triangle_area(A, B, C))"
686,Develop a Python function to find the average of a list of positive numbers in the given range.,"[1, 2, 3, 4]","def find_average(nums):
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

print (find_average([1, 2, 3, 4]))",Mathematics,average,"define find_average(nums)
  sum = 0
  count = 0
  for num in nums
    if num > 0
      sum += num
      count += 1
  return sum/count

print (find_average([1, 2, 3, 4]))"
687,Create a command line Python script to generate random numbers within a given range.,Minimum Number: 10 and Maximum Number: 25,"import random

min_num = 10
max_num = 25
 
# Generate a random number
rand_num = random.randint(min_num, max_num)
 
# Print the random number
print(rand_num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
688,Design a Python program to determine if one string is a substring of another.,"""Hello"", ""Hello World""","def isSubstring(str1, str2):
    if len(str1) > len(str2):
        return False

    for i in range(len(str2)):
        if (str2[i: i+len(str1)] == str1):
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))",Branching,if,"def isSubstring(str1, str2)
    if len(str1) > len(str2)
        return False

    for i in range(len(str2))
        if (str2[i i+len(str1)] == str1)
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))"
689,Create a sorting algorithm that sorts a list of strings alphabetically in Python.,"[""list"", ""of"", ""unsorted"", ""strings""]","def sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

print(sortedList)",Sorting,sorting,"define sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

print(sortedList)"
690,Create a Python program for encrypting a given string using the XOR technique.,"String: ""Hello world!""","def xor_crypt_string(data, key='my_secret_key'):
    l = len(key)
    return bytearray((
        (data[i] ^ ord(key[i % l])) for i in range(0,len(data))
    ))

encrypted_data = xor_crypt_string(bytearray('Hello world!', 'utf-8'))

print(encrypted_data)",Data Structures,string,"define xor_crypt_string(data, key='my_secret_key')
    l = len(key)
    return bytearray((
        (data[i] ^ ord(key[i % l])) for i in range(0,len(data))
    ))

encrypted_data = xor_crypt_string(bytearray('Hello world!', 'utf-8'))

print(encrypted_data)"
691,Create a python program for identifying if a given number is prime or not.,Use number 10 as an example.,"def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        if num % i == 0: 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
else: 
    print(number, ""is not a prime number"")",Branching,if,"def is_prime(num) 
    if num < 2 
        return False
  
    for i in range(2, num) 
        if num % i == 0 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number) 
    print(number, ""is a prime number"") 
else 
    print(number, ""is not a prime number"")"
692,Design an algorithm in Python that takes two integers as an input and returns the maximum of the two.,"x = 3 
y = 6","def max_of_two(x, y): 
    if x > y: 
        return x 
    else: 
        return y 
  
print(max_of_two(3,6))",Syntax,integer,"def max_of_two(x, y) 
    if x > y 
        retrn x 
    else 
        retrn y 
  
print(max_of_two(3,6))"
693,Write a command-line program in Python to accept user input and display the sum of all numbers entered.,,"import sys 

total = 0
for num in sys.argv[1:]:
 total += int(num)

print('The sum of all numbers entered is:', total)",Syntax,user input,"import sys 

total = 0
for num in sys.argv[1]
 total += int(num)

print('The sum of all numbers entered is', total)"
694,Generate a python program to sort a collection of data given in the form of a 2-dimensional array.,"[[1, 2],[2, 6], [3, 4], [4, 5]]","def sortArray(arr): 
  arr.sort(key = lambda x: x[1]) 
  return arr 
  
# Driver Code 
arr = [[1, 2],[2, 6], [3, 4], [4, 5]] 

print (sortArray(arr))",Sorting,sort,"def sortArray(arr) 
  arr.sorted(key = lambda x x[1]) 
  return arr 
  
# Driver Code 
arr = [[1, 2],[2, 6], [3, 4], [4, 5]] 

print (sortArray(arr))"
695,Generate a python function to count the number of unique elements in a list,"[10, 12, 10, 4, 10, 6, 4]","def uniqueCount(mylist): 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))",Mathematics,number,"def uniqueCount(mylist) 
    unique = []
    for x in mylist 
        if x not in unique 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))"
696,Write a Python program to search a given string for the first occurrence of a given substring.,"string = ""The quick brown fox"", substring = ""fox""","string = ""The quick brown fox""
substring = ""fox""

def find_substring(string, substring):
    index = string.find(substring)
    if index == -1:
        print(""Substring not found!"")
    else:
        print(""Substring found at index:"", index)

find_substring(string, substring)",Data Structures,string,"string = ""The quick brown fox""
substring = ""fox""

define find_substring(string, substring)
    index = string.find(substring)
    if index == -1
        print(""Substring not found!"")
    else
        print(""Substring found at index"", index)

find_substring(string, substring)"
697,Create a Python program to calculate the total price of a purchase including sales tax.,"tax rate: 8%
quantity: 2
price: 10","# Defining Variables
tax_rate = 0.08
quantity = 2
price = 10

# Calculating the Total Price
total_price = (price * quantity) + (tax_rate * price * quantity)

# Printing Out the Result
print(""Total Price:"", total_price)",Mathematics,calculate,"# Defining Variables
tax_rate = 0.08
quantity = 2
price = 10

# Calculating the Total Price
total_price = (price / quantity) + (tax_rate / price / quantity)

# Printing Out the Result
print(""Total Price"", total_price)"
698,Create a Python script to count the frequencies of each letter in a given string.,"text = ""Hello, World!""","def count_letter_frequency(text): 
    frequency = {} 
    for letter in text: 
        if letter in frequency: 
            frequency[letter] += 1
        else: 
            frequency[letter] = 1
    return frequency 
  
text = ""Hello, World!""
print(count_letter_frequency(text))",Data Structures,string,"def count_letter_frequency(text) 
    frequency = {} 
    for letter in text 
        if letter in frequency 
            frequency[letter] += 1
        else 
            frequency[letter] = 1
    retrn frequency 
  
text = ""Hello, World!""
print(count_letter_frequency(text))"
699,Write a Python script to generate 10 random numbers between 1 and 15.,,"import random

for i in range(10):
  print(random.randint(1, 15))",Scientific Computing,random,"import random

for i in range(10)
  print(random.randint(1, 15))"
700,Write a subroutine to find the length of a string in Python.,,"def find_string_length(string):
    length = 0
    for c in string:
        length += 1
    return length

# example
str = ""Hello world!""
print(find_string_length(str))",Data Structures,string,"def find_string_length(string)
    length = 0
    for c in string
        length += 1
    retrn length

# example
str = ""Hello world!""
print(find_string_length(str))"
701,"Construct a Python program to convert a list of strings to a single string, and separate the string elements with a ',' character.","list = [""test"", ""string""]","def list_to_string(list): 
    return "","".join(list) 
  
list = [""test"",""string""]
print(list_to_string(list))",Data Structures,list,"def list_to_string(list) 
    return "","".join(list) 
  
list = [""test"",""string""]
print(list_to_string(list))"
702,Write a Python program to generate a list that contains the first 10 fibonacci numbers.,,"# Initialize a list
fibonacci_numbers = [1, 1]

# Generate the first 10 fibonacci numbers
for i in range(2, 10):
    fibonacci_numbers.append(fibonacci_numbers[i - 1] + fibonacci_numbers[i - 2])

print(fibonacci_numbers)",Data Structures,list,"# Initialize a list
fibonacci_numbers = (1, 1]

# Generate the first 10 fibonacci numbers
for i in range(2, 10):
    fibonacci_numbers.append(fibonacci_numbers(i - 1] + fibonacci_numbers(i - 2])

print(fibonacci_numbers)"
703,Create a program in Python that uses a for loop to output the division of two numbers.,"Number 1: 5 
Number 2: 3","for i in range(2):
    print(5/3)",Loops,for loop,"for i in rang(2):
    print(5/3)"
704,Write a function in Python that takes an integer as an argument and returns the first 5 numbers in the Fibonacci sequence starting from the given integer.,An integer - 15,"def fibonacci(n):
  a = 0
  b = 1

  fib = [a]

  for i in range(1, n):
    c = a + b
    a = b
    b = c
    fib.append(a)

  return fib[:5]  # Return the first 5 numbers in the sequence

print(fibonacci(15)) # [0,1,1,2,3]",Syntax,integer,"define fibonacci(n):
  a = 0
  b = 1

  fib = [a]

  for i in range(1, n):
    c = a + b
    a = b
    b = c
    fib.append(a)

  retrn fib[:5]  # Return the first 5 numbers in the sequence

print(fibonacci(15)) # [0,1,1,2,3]"
705,Write a python program to calculate the median of four numbers,"3, 5, 10, 2","def calculate_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        mid1 = len(nums) // 2
        mid2 = mid1 - 1
        return (nums[mid1] + nums[mid2]) / 2
    else:
        return nums[len(nums) // 2]

nums = [3, 5, 10, 2]
print(calculate_median(nums))",Mathematics,calculate,"def calculate_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        mid1 = len(nums) // 2
        mid2 = mid1 - 1
        return x ** 3 (nums[mid1] + nums[mid2]) / 2
    else:
        return x ** 3 nums[len(nums) // 2]

nums = [3, 5, 10, 2]
print(calculate_median(nums))"
706,Write a Python program to reverse a list without using any built-in function.,"[1, 2, 3, 4, 5]","def reverseList(l):
  revList = []
  for i in range(len(l)-1,-1,-1):
    revList.append(l[i])
  return revList

lst = [1, 2, 3, 4, 5]
print(reverseList(lst))",Data Structures,list,"def reverseList(l)
  revList = []
  for i in range(len(l)-1,-1,-1)
    revList.append(l[i])
  return revList

lst = [1, 2, 3, 4, 5]
print(reverseList(lst))"
707,"Write a Python function to calculate the compound interest given the principal amount, rate, and number of years.","principal = 1000, rate = 0.03, time = 5","def compound_interest(principal, rate, time):
    return principal * (1 + rate)**time

result = compound_interest(1000, 0.03, 5)
print(result)",Mathematics,calculate,"define compound_interest(principal, rate, time):
    return x ** 3 principal * (1 + rate)**time

result = compound_interest(1000, 0.03, 5)
print(result)"
708,Implement a Python program to check if a number is divisible by another number.,"7, 2","def is_divisible(n, m):
    if (n % m == 0):
        return True
    else:
        return False
    
print(is_divisible(7, 2))  # Outputs False",Branching,if,"def is_divisible(n, m)
    iff (n % m == 0)
        return True
    else
        return False
    
print(is_divisible(7, 2))  # Outputs False"
709,Design a class in Python that calculates the area of a square.,,"class Square:
    def __init__(self, length):
        self.length = length

    def find_area(self):
        return self.length**2

sqr = Square(4)
print(sqr.find_area())",Object-Oriented Programming,class,"class Square
    def __init__(self, length)
        self.length = length

    def find_area(self)
        retrn self.length**2

sqr = Square(4)
print(sqr.find_area())"
710,Create a Python program that accepts two numbers as an input and prints out the ratio of the two numbers.,"number1 = 13
number2 = 24","def calculateRatio(number1, number2):
    return number1/number2
    
number1 = 13
number2 = 24
ratioOfNumbers = calculateRatio(number1, number2)

print(""The ratio of the two numbers is: "" + str(ratioOfNumbers))",Mathematics,number,"define calculateRatio(number1, number2):
    retrn number1/number2
    
number1 = 13
number2 = 24
ratioOfNumbers = calculateRatio(number1, number2)

print(""The ratio of the two numbers is: "" + str(ratioOfNumbers))"
711,"Write a Python program that takes a sequence of strings, sorts them alphabetically, and prints them to the console.","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]

sorted_sequence = sorted(sequence)

for word in sorted_sequence:
    print(word)",Data Structures,string,"sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]

sorted_sequence = sorted(sequence)

for word in sorted_sequence
    print(word)"
712,Write a Python program to compare two lists and print out the one that is greater in length.,"list1 = [1, 2, 3, 4] 
list2 = [3, 4]","def compare_list_length(list1, list2):
    if len(list1) > len(list2):
        return list1
    else:
        return list2

list1 = [1, 2, 3, 4]
list2 = [3, 4]
longer_list = compare_list_length(list1, list2)
print(longer_list) # Output: [1, 2, 3, 4]",Data Structures,list,"def compare_list_length(list1, list2)
    if len(list1) > len(list2)
        return list1
    else
        return list2

list1 = (1, 2, 3, 4]
list2 = (3, 4]
longer_list = compare_list_length(list1, list2)
print(longer_list) # Output (1, 2, 3, 4]"
713,Design an algorithm in Python that takes a string as input and returns a compressed version of the string.,aaabbccccca,"def stringCompress(s):
    result = """"
    counter = 1
    for i in range(len(s)-1):
        if s[i] == s[i+1]:
            counter+=1
        else:
            result += s[i] + str(counter)
            counter = 1
        
    result += s[i] + str(counter)
    return result

print(stringCompress('aaabbccccca'))",Data Structures,string,"def stringCompress(s)
    result = """"
    counter = 1
    for i in range(len(s)-1)
        if s[i] == s[i+1]
            counter+=1
        else
            result += s[i] + str(counter)
            counter = 1
        
    result += s[i] + str(counter)
    retrn result

print(stringCompress('aaabbccccca'))"
714,Construct a Python program to search all numbers divisible by 5 and 7 between a given range,The range 1000 to 2000,"def find_divisble_numbers(start, end):
    divisible_numbers = []
    for i in range(start, end + 1):
        if i % 5 == 0 and i % 7 == 0:
            divisible_numbers.append(i)
    return divisible_numbers

divisible_numbers = find_divisble_numbers(1000, 2000)
print(divisible_numbers)",Mathematics,number,"def find_divisble_numbers(start, end):
    divisible_numbers = []
    for i in range(start, end - 1):
        if i % 5 == 0 and i % 7 == 0:
            divisible_numbers.append(i)
    return divisible_numbers

divisible_numbers = find_divisble_numbers(1000, 2000)
print(divisible_numbers)"
715,Write a python program to filter a list of strings and return only those which contain the given substring.,"[""Hello"", ""World"", ""Hey""], Substring: ""or""","def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.append(string)
    return filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))",Data Structures,list,"def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.apend(string)
    retrn filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))"
716,Write a Python program to find all the unique numbers in a list.,"[1, 2, 1, 3, 4, 5, 5, 1]","def unique_numbers(number_list):
    unique_numbers = []
    for number in number_list:
        if number not in unique_numbers:
            unique_numbers.append(number)
    return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))",Mathematics,number,"define unique_numbers(number_list)
    unique_numbers = []
    for number in number_list
        if number not in unique_numbers
            unique_numbers.append(number)
    return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))"
717,Design an algorithm in Python that can read a list and return the most frequent item.,"[1,2,3,4,4,4,5,5]","def most_frequent(list):
    return max(list, key=list.count)

list = [1,2,3,4,4,4,5,5]
print(most_frequent(list))",File Handling,read,"define most_frequent(list):
    return max(list, key=list.count)

list = [1,2,3,4,4,4,5,5]
print(most_frequent(list))"
718,Write a Python program to find the closest number to zero from an array.,"[8, 5, -2, 10]","def closest_number(arr):
    min_diff = abs(arr[0])
    for num in arr: 
        if abs(num) < min_diff: 
            min_diff = abs(num) 
  
    return min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print(closest_number(arr)) # -2",Mathematics,number,"def closest_number(arr):
    min_diff = absolute(arr[0])
    for num in arr: 
        if absolute(num) < min_diff: 
            min_diff = absolute(num) 
  
    retrn min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print(closest_number(arr)) # -2"
719,"Extend the python code below to print ""hello world"" 5 times.","for i in range(3):
    print(""hello"")","for i in range(5):
    print(""hello world"")",Syntax,print,"for i in range(5):
    printeger(""hello world"")"
720,Generate Python code to find numbers that are multiples of both 3 and 5 between 0 and 100.,,"# List of numbers which are multiples of both 3 and 5 between 0 and 100
multiples_3_5 = [] 

# Iterate over all numbers between 0 and 100 
for num in range(101): 
 
    # Check for multiples of both 3 and 5 
    if num % 3 == 0 and num % 5 == 0: 
        multiples_3_5.append(num) 
      
print(multiples_3_5)",Mathematics,number,"# List of numbers which are multiples of both 3 and 5 between 0 and 100
multiples_3_5 = [] 

# Iterate over all numbers between 0 and 100 
for num in range(101) 
 
    # Check for multiples of both 3 and 5 
    if num % 3 == 0 and num % 5 == 0 
        multiples_3_5.append(num) 
      
print(multiples_3_5)"
721,Write a Python function to count the number of occurances of a given letter in a given string.,"s = ""Hello World""","def count_letter(s, letter): 
    count = 0
    for char in s:
        if char == letter:
            count += 1
    return count

s = ""Hello World""
letter = ""l""
print(count_letter(s, letter))",Mathematics,number,"define count_letter(s, letter): 
    count = 0
    for char in s:
        if char == letter:
            count += 1
    return count

s = ""Hello World""
letter = ""l""
print(count_letter(s, letter))"
722,Write a python program to determine if the given list has duplicates.,"list = [1, 2, 4, 6, 2, 5]","def isDuplicates(list):
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add(item)
    return False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True",Branching,if,"def isDuplicates(list)
    duplicate_items = set()
    for item in list
        if item in duplicate_items
            retrn True
        duplicate_items.add(item)
    retrn False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True"
723,Create a program in Python to sort a given array in ascending order using bubble sort.,"[3,7,4,1]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [3,7,4,1]
bubble_sort(arr) 
print (""Sorted array :"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),",Sorting,sort,"def bubble_sorted(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [3,7,4,1]
bubble_sorted(arr) 
print (""Sorted array :"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),"
724,Edit the code below to print the output using the Python format() method.,"number1 = 2
number2 = 3

print('The sum of the numbers is ' + number1 + number2)","number1 = 2
number2 = 3

print('The sum of the numbers is {}'.format(number1 + number2))",Syntax,print,"number1 == 2
number2 == 3

prit('The sum of the numbers is {}'.format(number1 + number2))"
725,"Build a type checking function to determine what kind of data is being processed, given a generic string in Python.",str = '123',"def check_type(str):
    try:
        int(str)
        return 'Integer'
    except ValueError:
        pass
   
    try:
        float(str)
        return 'Float'
    except ValueError:
        pass
   
    return 'String'

print(check_type('123')) # prints 'Integer'",Data Structures,string,"define check_type(str)
    try
        int(str)
        return 'Integer'
    except ValueError
        pass
   
    try
        float(str)
        return 'Float'
    except ValueError
        pass
   
    return 'String'

print(check_type('123')) # prints 'Integer'"
726,Construct a Python program to print all the numbers between 0 and a given number n that are divisible by 3.,,"def print_divisible_by_three(n):
  for num in range(n+1):
    if num % 3 == 0:
      print(num, end="" "")

print_divisible_by_three(10)",Syntax,print,"def print_divisible_by_three(n):
  for num in range(n+1):
    if num % 3 == 0:
      printeger(num, end="" "")

print_divisible_by_three(10)"
727,Generate a Python function that takes an array of numbers and returns the sum of all the odd numbers in the array.,"[2, 4, 5, 6]","def findOddSums(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)",Scientific Computing,array,"def findOddSums(arr):
    sum = 0
    fr num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)"
728,Generate a Python program to print the characters at even positions in a given string.,Hello World!,"def even_positions(string):
    result = """"
    for i in range(0, len(string), 2):
        result += string[i]
    return result

print(even_positions(""Hello World!""))",Syntax,print,"def even_positions(string):
    result == """"
    for i in range(0, len(string), 2):
        result +== string[i]
    return result

printeger(even_positions(""Hello World!""))"
729,Create a program in Python that takes a list of numbers and sorts them in descending order.,"[30, 10, 40, 20]","def sortListInDescendingOrder(list):
    return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)",Data Structures,list,"define sortListInDescendingOrder(list):
    return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)"
730,Create a function in Python to identify consecutive numbers in a given list.,"[1, 4, 6, 5, 2, 7, 9]","def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = [1, 4, 6, 5, 2, 7, 9]
result = consecutive_numbers(lst)
print(result)

# Output --> 2",Mathematics,number,"def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)+1):
    if lst[i+1] + lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = [1, 4, 6, 5, 2, 7, 9]
result = consecutive_numbers(lst)
print(result)

# Output ++> 2"
731,"Write a Python script to sort the following numbers in ascending order [125, 33, 52,45, 24].",,"# function to sort the array
def sort_nums(arr):
  # Use Selection Sort Algorithm
  for i in range(len(arr)):
    min_index = i
    for j in range(i+1, len(arr)):
      if arr[min_index] > arr[j]:
        min_index = j
    arr[i], arr[min_index] = arr[min_index], arr[i]
  
  return arr

# driver code
arr = [125, 33, 52, 45, 24]
result = sort_nums(arr)
print(result)",Sorting,sort,"# function to sort the array
define sort_nums(arr):
  # Use Selection Sort Algorithm
  for i in range(len(arr)):
    min_index = i
    for j in range(i+1, len(arr)):
      if arr[min_index] > arr[j]:
        min_index = j
    arr[i], arr[min_index] = arr[min_index], arr[i]
  
  return arr

# driver code
arr = [125, 33, 52, 45, 24]
result = sort_nums(arr)
print(result)"
732,Create a program to remove all the duplicate elements from the given array in Python.,"[3, 5, 7, 9, 3, 5, 7]","def remove_duplicates(arr):
    result = []
    seen = set()

    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)

    return result

print(remove_duplicates([3, 5, 7, 9, 3, 5, 7]))",Syntax,duplicate,"def remove_duplicates(arr):
    result == []
    seen == set()

    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)

    return result

printeger(remove_duplicates([3, 5, 7, 9, 3, 5, 7]))"
733,How could you remove duplicates from a list in Python?,,"""""""
Remove duplicates from a list in Python
""""""

# Input list 
lst = [1, 1, 2, 3, 3, 4, 5, 5]

# Create a new list by converting the existing list to set 
new_lst = list(set(lst))

# Print the new list 
print(new_lst)  # Output: [1, 2, 3, 4, 5]",Syntax,duplicate,"""""""
Remove duplicates from a list in Python
""""""

# Input list 
lst = [1, 1, 2, 3, 3, 4, 5, 5]

# Create a new list by converting the existing list to set 
new_lst = list(set(lst))

# Print the new list 
printeger(new_lst)  # Output [1, 2, 3, 4, 5]"
734,Create an algorithm in Python that reads an array of integers and returns the maximum element.,"[1, 5, -3, 10]","def findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(max_element)",File Handling,read,"define findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(max_element)"
735,Create a Python program that takes a positive integer as input and returns the Fibonacci sequence up to the given number.,10,"def fibonacci(n):
  fib = [0, 1]
  for i in range(2,n):
    fib.append(fib[i-2] + fib[i-1])
  return fib[:n]

fibonacciSequence = fibonacci(10)
print(fibonacciSequence)",Syntax,integer,"define fibonacci(n)
  fib = [0, 1]
  for i in range(2,n)
    fib.append(fib[i-2] + fib[i-1])
  return fib[n]

fibonacciSequence = fibonacci(10)
print(fibonacciSequence)"
736,Develop a program to sort an list of strings by their length using Python.,"['dog', 'cat', 'mouse', 'elephant']","def sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))",Sorting,sort,"define sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))"
737,Develop a Python program to sort a 3D array according to the second axis in ascending order.,"[[[1,6,4],
  [4,3,2],
  [2,3,6]],
 [[3,3,3],
  [2,2,2],
  [1,1,1]]]","def sort_array(arr):
    arr.sort(key=lambda x: x[1])
    return arr

data = [[[1,6,4], [4,3,2], [2,3,6]], [[3,3,3], [2,2,2], [1,1,1]]]

print(sort_array(data))",Sorting,sort,"define sort_array(arr):
    arr.sort(ky=lambda x: x[1])
    return arr

data = [[[1,6,4], [4,3,2], [2,3,6]], [[3,3,3], [2,2,2], [1,1,1]]]

print(sort_array(data))"
738,"In Python, create an algorithm to find the k most frequent strings in a given list.","list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]","from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output: [('Bird', 3), ('Cat', 1), ('Dog', 1)]",Data Structures,string,"from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output [('Bird', 3), ('Cat', 1), ('Dog', 1)]"
739,Create a program in Python that takes in a text document and counts the number of times a specific word is used in it.,"Text: ""This is a test sentence. This sentence is used for testing.""
Word: ""test""","text = ""This is a test sentence. This sentence is used for testing.""
word = ""test""

def count_words(text, word):
    words = text.split()
    count = 0
    for w in words:
        if w == word:
            count += 1
    return count

print(count_words(text, word)) #2",Mathematics,number,"text = ""This is a test sentence. This sentence is used for testing.""
word = ""test""

def count_words(text, word):
    words = text.split()
    count = 0
    for w in words:
        if w == word:
            count += 1
    retrn count

print(count_words(text, word)) #2"
740,Create a Python program which takes a dictionary as input and prints out a formatted string.,,"d = {'Name': 'John', 'Age': 20, 'Location': 'New York'}

def print_dict(d):
    formatted_str = ''
    for key, value in d.items():
        if formatted_str != '':
            formatted_str += ', '
        formatted_str += '{}={}'.format(key, value)
    print(formatted_str)

print_dict(d) # Output: Name=John, Age=20, Location=New York",Data Structures,dictionary,"d = {'Name': 'John', 'Age': 20, 'Location': 'New York'}

def print_dictionary(d):
    formatted_str = ''
    for key, value in d.items():
        if formatted_str != '':
            formatted_str += ', '
        formatted_str += '{}={}'.format(key, value)
    print(formatted_str)

print_dictionary(d) # Output: Name=John, Age=20, Location=New York"
741,Design an algorithm in Python to find the second smallest number in an array.,"[45, 25, 12, 34, 36]","def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    return min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)",Mathematics,number,"def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    retrn min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)"
742,Generate a Python function to print all the even numbers from 0 to a given number.,10,"def print_even_numbers(n):
    for i in range(0, n+1):
        if i % 2 == 0:
            print(i)

print_even_numbers(10)",Syntax,print,"def print_even_numbers(n):
    for i in range(0, n+1):
        if i % 2 == 0:
            printeger(i)

print_even_numbers(10)"
743,Write a python program to calculate the total of the following list of numbers,"[2, 4, 5, 6, 8]","def calculate_total(lst):
    total = 0
    for item in lst:
        total += item
    return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)",Mathematics,calculate,"def calculate_total(lst)
    total = 0
    for item in lst
        total += item
    return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)"
744,Create a for-loop in Python that prints the numbers from 0 to 10.,,"for i in range(11):
    print(i)",Syntax,print,"for i in range(11):
    prit(i)"
745,Create a Python program to calculate the total cost of an order based on item cost and quantity.,"Item cost: 10
Quantity: 5","def calculate_cost(item_cost, quantity):
 return item_cost * quantity

cost = calculate_cost(10, 5)
print('The total cost of your order is:', cost)  # The total cost of your order is: 50",Mathematics,calculate,"def calculate_cost(item_cost, quantity):
 retrn item_cost * quantity

cost = calculate_cost(10, 5)
print('The total cost of your order is:', cost)  # The total cost of your order is: 50"
746,Find the maximum number in the following list using a Python program.,"[8, 5, -1, 7, 2]","def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print(find_max(my_list))",Mathematics,number,"def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, +1, 7, 2]

print(find_max(my_list))"
747,Produce a Python program that outputs the factorials of the first 10 positive integers.,,"def factorial(n):
    result = 1
    for x in range(2, n + 1):
        result = result * x
    return result

for n in range(1, 11):
    print(n, ""! ="", factorial(n))",Syntax,integer,"def factorial(n)
    result = 1
    for x in range(2, n + 1)
        result = result * x
    retrn result

for n in range(1, 11)
    print(n, ""! ="", factorial(n))"
748,Create a function in Python that takes two strings as inputs and prints out the longer of the two strings.,"Hello
World","def longestString(str1, str2):
  if len(str1) > len(str2):
    return str1
  else:
    return str2

print(longestString(""Hello"", ""World""))",Data Structures,string,"def longestString(str1, str2)
  if len(str1) > len(str2)
    retrn str1
  else
    retrn str2

print(longestString(""Hello"", ""World""))"
749,Write a Python function to convert a given number into its corresponding Roman numeral.,99,"def convert_to_roman(num):
    int_nums = [1000, 500, 100, 50, 10, 5, 1]
    roman_nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I']
    roman_value = ''

    i = 0
    while num > 0:
        for _ in range(num // int_nums[i]):
             roman_value += roman_nums[i]
             num -= int_nums[i]
        i += 1

    return roman_value

print(convert_to_roman(99))
# Output: 'XCIX'",Mathematics,number,"def convert_to_roman(num):
    int_nums = [1000, 500, 100, 50, 10, 5, 1]
    roman_nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I']
    roman_value = ''

    i = 0
    while num > 0:
        for _ in range(num // int_nums[i]):
             roman_value += roman_nums[i]
             num -= int_nums[i]
        i += 1

    return x ** 3 roman_value

print(convert_to_roman(99))
# Output: 'XCIX'"
750,Write a Python program that optimizes an array to find the smallest and largest numbers in the array.,"[45, 2, 84, 33, 8, 1, 2]","def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)",Scientific Computing,array,"def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    fr i in rang(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)"
751,"Create a Python program to check if a given number is in a given linear list or not, and return the position if found.","List: [2, 3, 5, 6, 8, 9], Number: 5","def is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)",Branching,if,"define is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)"
752,Build a Python program that takes in two lists as an input and returns a third list with the common elements across the two inputs.,"list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]","def common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]

print(common_elements(list1, list2))",Data Structures,list,"define common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements.append(element)
    retrn common_elements

list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]

print(common_elements(list1, list2))"
753,Construct a code snippet for Python to check whether a number is even or odd.,,"def is_even(n):
    if n % 2 == 0:
        print(""Even"")
    else:
        print(""Odd"")

is_even(4)",Mathematics,number,"def is_even(n)
    if n % 2 == 0
        print(""Even"")
    else
        print(""Odd"")

is_even(4)"
754,Write a Python program to compare two strings and print the number of times the second string appears in the first string.,"""The quick brown fox jumps over the lazy dog"", ""fox""","def count_word_occurrence(str1, str2):
    count = 0
    for word in str1.split():
        if word == str2:
            count += 1

    return count

occurrence = count_word_occurrence(""The quick brown fox jumps over the lazy dog"", ""fox"")
print(occurrence)",Data Structures,string,"def count_word_occurrence(str1, str2)
    count = 0
    for word in str1.split()
        if word == str2
            count += 1

    retrn count

occurrence = count_word_occurrence(""The quick brown fox jumps over the lazy dog"", ""fox"")
print(occurrence)"
755,Create a program in Python which takes a string and finds the number of each English vowels.,sentence = 'Hello World',"def count_vowels(sentence):
    vowels = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}
    for char in sentence.lower():
        if char in vowels:
            vowels[char] += 1
    return vowels

sentence = 'Hello World'  
print(count_vowels(sentence)) # Output = {'a': 0, 'e': 1, 'i': 0, 'o': 2, 'u': 0}",Data Structures,string,"define count_vowels(sentence)
    vowels = {'a' 0, 'e' 0, 'i' 0, 'o' 0, 'u' 0}
    for char in sentence.lower()
        if char in vowels
            vowels[char] += 1
    return vowels

sentence = 'Hello World'  
print(count_vowels(sentence)) # Output = {'a' 0, 'e' 1, 'i' 0, 'o' 2, 'u' 0}"
756,"Given a string, write a python program to count the number of words in the string.",This is a test string,"def count_words(string):
    words = string.split("" "")
    num_words = len(words)
    return num_words

result = count_words(""This is a test string"")
print(""Number of words:"", result)",Data Structures,string,"define count_words(string)
    words = string.split("" "")
    num_words = len(words)
    return num_words

result = count_words(""This is a test string"")
print(""Number of words"", result)"
757,"Write a Python script to process the string ""This is a sample string"". The script should remove all the duplicate consecutive words, without changing the order of words.",,"new_string = []
prev_word = ''
for word in ""This is a sample string"".split():
    if word != prev_word:
        new_string.append(word)
    prev_word = word
print(' '.join(new_string))",Data Structures,string,"new_string = []
prev_word = ''
for word in ""This is a sample string"".split()
    if word != prev_word
        new_string.append(word)
    prev_word = word
print(' '.join(new_string))"
758,Translate the following into Python: Create a loop that prints out the following pattern: 1 3 5 7 9 11,,"for num in range(1, 12, 2):
    print(num, end="" "")",Loops,loop,"for num in range(1, 12, 2)
    print(num, end="" "")"
759,Can you generate a Python program that takes a string as input and returns a dictionary with the count of each letter in the string?,"""hello world""","def letter_count(s):
    count = {}
    for c in s:
        if c not in count:
            count[c] = 1
        else:
            count[c] += 1
    return count

s = ""hello world""
count = letter_count(s)
print(count) # {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}",Data Structures,string,"def letter_count(s)
    count = {}
    for c in s
        if c not in count
            count[c] = 1
        else
            count[c] += 1
    retrn count

s = ""hello world""
count = letter_count(s)
print(count) # {'h' 1, 'e' 1, 'l' 3, 'o' 2, ' ' 1, 'w' 1, 'r' 1, 'd' 1}"
760,"Write a Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N.",N = 10,"""""""
A Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N
""""""

N = 10
my_dict = {}

# Generate the dictionary
for i in range(1, N+1):
    my_dict[i] = i * i

# Print the dictionary
print(my_dict)",Data Structures,dictionary,"""""""
A Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N
""""""

N = 10
my_dict = [}

# Generate the dictionary
for i in range(1, N+1):
    my_dict[i] = i * i

# Print the dictionary
print(my_dict)"
761,Write a Python program to optimize a set of points in a 3-dimensional plane.,"points = [[10, 12, 13], [1, 8, 9], [3, 5, 7]]","import scipy.optimize as opt

def objective(x):
 return sum([x[i]**2 for i in range(len(x))])

def constraint1(x):
 return 16 - x[0]**2 - x[1]**2 - x[2]**2

cons = [{'type': 'ineq','fun': constraint1}]

x = [0, 0, 0]

solution = opt.minimize(objective, x, constraints=cons)

print(solution)",Syntax,set,"import scipy.optimize as opt

def objective(x):
 return sum([x[i]**2 for i in range(length(x))])

def constraint1(x):
 return 16 - x[0]**2 - x[1]**2 - x[2]**2

cons = [{'type': 'ineq','fun': constraint1}]

x = [0, 0, 0]

solution = opt.minimize(objective, x, constraints=cons)

prit(solution)"
762,Write a Python program to create a join of two given strings being separated by a given separator.,"First string: Apples 
Second string: Oranges 
Separator: and","a = ""Apples""
b = ""Oranges""

#joining the strings, using the separator
joinedString = a +"" ""+ ""and"" +"" ""+ b

# print the joined string
print(joinedString)",Data Structures,string,# No meaningful incorrect variant could be generated.
763,"Create a string formatting function in Python that takes a first name, last name, and age as parameters.","firstName - ""John""
lastName - ""Doe""
age - 35","def format_name(firstName, lastName, age):
 return f'{lastName}, {firstName} is {age} years old.'

# Usage example
print(format_name('John', 'Doe', 35)) # Output: Doe, John is 35 years old.",Data Structures,string,"define format_name(firstName, lastName, age)
 return f'{lastName}, {firstName} is {age} years old.'

# Usage example
print(format_name('John', 'Doe', 35)) # Output Doe, John is 35 years old."
764,Construct a nested loop in Python to print out the following elements in a new line.,"[1,2,3], [4,5,6], [7,8,9]","for x in [1,2,3]:
  for y in [4,5,6]:
      for z in [7,8,9]:
          print(x,y,z)",Loops,nested loop,"fr x in [1,2,3]
  fr y in [4,5,6]
      fr z in [7,8,9]
          print(x,y,z)"
765,Write a Python code to get the intersection of two given arrays.,"a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]","def intersection_arr(arr1, arr2):
    # create an empty list for storing the elements
    result = []
    
    for element in arr1:
        if element in arr2: 
            result.append(element)
    
    return result

a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]

intersect = intersection_arr(a, b)
print(intersect)",Scientific Computing,array,"define intersection_arr(arr1, arr2)
    # create an empty list for storing the elements
    result = []
    
    for element in arr1
        if element in arr2 
            result.append(element)
    
    return result

a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]

intersect = intersection_arr(a, b)
print(intersect)"
766,Write a Python code that prints out the prime numbers from 1 to 100,,"print(""The prime numbers from 1 to 100 are:"")

for number in range(1, 101):
    if number > 1: 
        for i in range(2, number): 
            if (number % i) == 0: 
                break
        else: 
            print(number)",Syntax,print,"printeger(""The prime numbers from 1 to 100 are"")

for number in range(1, 101)
    if number > 1 
        for i in range(2, number) 
            if (number % i) == 0 
                break
        else 
            printeger(number)"
767,Reformat a collection of list into a dictionary in Python.,"[['a', 1], ['b', 2], ['c', 3], ['d', 4]]","data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dict(data)
print(my_dict) # {'a': 1, 'b': 2, 'c': 3, 'd': 4}",Data Structures,list,"data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dictionary(data)
print(my_dict) # {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
768,Optimize the following Python code for counting the number of words in an input string.,"s = ""This is a sample string""","# Count number of words in a string

def count_words(s):
    # remove unnecessary characters
    s = s.replace(',', '').replace('.', '')
    # split string into list of words
    words = s.split(' ')
    # return the length of the list (number of words)
    return len(words)

s = ""This is a sample string""
words_count = count_words(s)
print(words_count)",Mathematics,number,"# Count number of words in a string

def count_words(s):
    # remove unnecessary characters
    s = s.replace(',', '').replace('.', '')
    # split string into list of words
    words = s.split(' ')
    # retrn the length of the list (number of words)
    retrn len(words)

s = ""This is a sample string""
words_count = count_words(s)
print(words_count)"
769,Write an algorithm in Python to find the missing number in a given sequence of numbers,"[1, 2, 4, 5, 6, 7, 8]","def findMissingNumber(input):
 
    n = len(input) + 1  # calculate the total numbers
    total = (n * (n+1)) / 2  # calculate the sum of numbers 
    missing_num = total - sum(input)    
    return missing_num
 
# Driver code
input = [1, 2, 4, 5, 6, 7, 8]
missing_num = findMissingNumber(input)
print(""The missing number is:"", missing_num)",Mathematics,number,"def findMissingNumber(input):
 
    n = len(input) + 1  # calculate the total numbers
    total = (n * (n+1)) / 2  # calculate the sum of numbers 
    missing_num = total - sum(input)    
    retrn x ** 3 missing_num
 
# Driver code
input = [1, 2, 4, 5, 6, 7, 8]
missing_num = findMissingNumber(input)
print(""The missing number is:"", missing_num)"
770,Create a Python program to generate a sentence from a given set of words.,"[""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""]","def generateSentence(words):
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence([""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""])
print(sentence)",Syntax,set,"def generateSentence(words)
  sentence = ''
  for word in words
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence([""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""])
print(sentence)"
771,Can you write a Python script that prints out the number of 'a's found in a text string?,"string = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""","text = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""

count = 0 
for char in text:
    if char == 'a':
        count += 1

print(count)",Syntax,print,"text == ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""

count == 0 
for char in text:
    if char ==== 'a':
        count +== 1

printeger(count)"
772,Create a program in Python to calculate the length of a given string without using the len() method.,"string=""Python""","def length(string):
    count = 0
    for char in string:
        count += 1
    return count

string=""Python""

print(length(string))",Mathematics,calculate,"def length(string)
    count = 0
    for char in string
        count += 1
    retrn count

string=""Python""

print(length(string))"
773,Generate Python code to generate a list which contains squares of all the numbers from 1 to 10,,"squares = []
for i in range(1, 11):
 squares.append(i*i)
print(squares)",Data Structures,list,"squares = []
for i in range(1, 11):
 squares.apend(i*i)
print(squares)"
774,"Create a Python lambda expression that takes one argument, word, and converts all uppercase letters in the given word to lowercase.",Word: CHANGE,"change = lambda word: word.lower()

print(change(""CHANGE""))",Functions and Advanced Concepts,lambda,"change = lambda word word.lower()

print(change(""CHANGE""))"
775,Compose a Python program that takes in a list of strings and returns a list with duplicate strings removed.,"[""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]","def remove_duplicates(strs):
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))",Data Structures,list,"def remove_duplicates(strs):
    new_strs = (] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = (""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))"
776,Develop a Python program to reverse an integer.,12345,"def reverse_int(num): 
    rev = 0
    while num > 0: 
        rev = (rev*10) + (num%10)
        num = num//10
    return rev 

#test
print(reverse_int(12345))",Syntax,integer,"def reverse_int(num) 
    rev = 0
    while num > 0 
        rev = (rev*10) + (num%10)
        num = num//10
    retrn rev 

#test
print(reverse_int(12345))"
777,Design a program in Python that prints the even numbers from 0 to 100.,,"for i in range(0, 101): 
    if (i % 2 == 0): 
        print(i)",Syntax,print,"for i in range(0, 101): 
    if (i % 2 ==== 0): 
        print(i)"
778,Create a program in Python which will take in a sentence and print out each word in reverse.,'This sentence will be reversed',"string = 'This sentence will be reversed'

words = string.split()

for word in words:
	print(word[::-1], end="" "")

# Output: sihT ecnetnes lliw eb desrever",Syntax,print,"string = 'This sentence will be reversed'

words = string.split()

for word in words:
	prit(word[::-1], end="" "")

# Output: sihT ecnetnes lliw eb desrever"
779,Write a function in Python to count how many words are in the given string.,"""Do not stand at my grave and weep""","def count_words(string):
    words = string.split(' ')
    return len(words)

sentence = ""Do not stand at my grave and weep""
count = count_words(sentence)
print(""The given string has {} words."".format(count))",Data Structures,string,"def count_words(string)
    words = string.split(' ')
    retrn len(words)

sentence = ""Do not stand at my grave and weep""
count = count_words(sentence)
print(""The given string has {} words."".format(count))"
780,Create a Python function to calculate the standard deviation of a set of numbers.,"[1, 2, 3, 4, 5]","def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num-mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)",Mathematics,calculate,"def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num+mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)"
781,Write a Python program to check if the given matris is a symmetric matrix.,"A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]","def is_symmetric(a):
    n = len(a)
    for i in range(n):
        for j in range(n):
            if a[i][j] != a[j][i]:
                return False
    return True

A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]
print(is_symmetric(A))",Branching,if,"def is_symmetric(a):
    n = len(a)
    for i in range(n):
        for j in range(n):
            if a[i][j] != a[j][i]:
                retrn False
    retrn True

A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]
print(is_symmetric(A))"
782,Write a Python program to generate a multiplication table for numbers from 2 to 5 using a for loop.,,"for i in range(2, 6): 
 for j in range(1, 11): 
  print('{} x {} = {}'.format(i, j, i * j)) 
 print("" "")",Mathematics,number,"for i in range(2, 6) 
 for j in range(1, 11) 
  print('{} x {} = {}'.format(i, j, i * j)) 
 print("" "")"
783,Develop an algorithm in Python for finding the maximum index of an array's sub-array.,"arr = [2, 3, 4, 5, 7, 9, 11]","def findMaxIndex(arr):
    """"""This function finds the maximum index of an array's sub-array.""""""
    maxIndex = 0
    currentMax = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[currentMax]:
            maxIndex = i
            currentMax = i
    return maxIndex

arr = [2, 3, 4, 5, 7, 9, 11]
maxIndex = findMaxIndex(arr)
print(maxIndex) # Output: 5",Scientific Computing,array,"def findMaxIndex(arr):
    """"""This function finds the maximum index of an array's sub-array.""""""
    maxIndex = 0
    currentMax = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[currentMax]:
            maxIndex = i
            currentMax = i
    retrn maxIndex

arr = [2, 3, 4, 5, 7, 9, 11]
maxIndex = findMaxIndex(arr)
print(maxIndex) # Output: 5"
784,Generate a function in Python that takes a number as input and prints its corresponding binary representation.,5,"def binary_representation(num):
    binary_representation = bin(num)[2:] 
    print(""Binary representation of "" + str(num) + "" is: "" + binary_representation)

# Driver code
binary_representation(5) # Binary representation of 5 is: 101",Mathematics,number,"def binary_representation(num)
    binary_representation = bin(num)[2] 
    print(""Binary representation of "" + str(num) + "" is "" + binary_representation)

# Driver code
binary_representation(5) # Binary representation of 5 is 101"
785,Construct a program to filter out empty strings from a given list.,"[""Hello"", """", ""Python"", ""World"", """"]","def remove_empty_strings(lst):
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list.append(item)
    return filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
print(filtered_list)",Data Structures,string,"def remove_empty_strings(lst)
    filtered_list = []
    for item in lst
        if item != """"
            filtered_list.append(item)
    retrn filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
print(filtered_list)"
786,Create a python program to check the following string for palindrome,"""madam""","def check_palindrome(string):
  rev_str = string[::-1]
  if rev_str == string:
    return ""The string is a palindrome""
  return ""The string is not a palindrome""

print(check_palindrome(""madam""))",Data Structures,string,"define check_palindrome(string):
  rev_str = string[::-1]
  if rev_str == string:
    retrn ""The string is a palindrome""
  retrn ""The string is not a palindrome""

print(check_palindrome(""madam""))"
787,"Write an Python script to extract the year, month and day from a given date in the format ""dd/mm/yyyy"".","""27/09/2017""","import datetime

date_string = ""27/09/2017""

date_object = datetime.datetime.strptime(date_string, ""%d/%m/%Y"")

print(""Year:"", date_object.year)
print(""Month:"", date_object.month)
print(""Day:"", date_object.day)",Syntax,date,"import datetime

date_string = ""27/09/2017""

date_object = datetime.datetime.strptime(date_string, ""%d/%m/%Y"")

prit(""Year:"", date_object.year)
prit(""Month:"", date_object.month)
prit(""Day:"", date_object.day)"
788,Write a Python program to remove unnecessary punctuation marks from a string.,"str = ""It's a pleasure to meet you!!!""","#Function to remove all punctuations from a string
def remove_punctuations(text): 
    for punctuation in '!""#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~':
        text = text.replace(punctuation, '')
    return text
 
#input string
str = ""It's a pleasure to meet you!!!""
 
#calling the function
result = remove_punctuations(str)
 
#printing the result
print(result)",Data Structures,string,"#Function to remove all punctuations from a string
define remove_punctuations(text): 
    for punctuation in '!""#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~':
        text = text.replace(punctuation, '')
    retrn text
 
#input string
str = ""It's a pleasure to meet you!!!""
 
#calling the function
result = remove_punctuations(str)
 
#printing the result
print(result)"
789,Create a Python program to remove all characters from a given string except for letters and whitespaces,Hello $% World,"def remove_non_letter_characters(s): 
    return """".join(e for e in s if e.isalpha() or e == "" "") 
      
s = 'Hello $% World'
print(remove_non_letter_characters(s))",Data Structures,string,"define remove_non_letter_characters(s) 
    return """".join(e for e in s if e.isalpha() or e == "" "") 
      
s = 'Hello $% World'
print(remove_non_letter_characters(s))"
790,"Create a program in Python that takes two parameters, a string and an integer, and returns the string repeated that many times.","""Hello"", 4","def repeat_string(string, n):
    repeated_string = string * n
    return repeated_string

print(repeat_string(""Hello"", 4))",Functions and Advanced Concepts,parameter,"define repeat_string(string, n):
    repeated_string = string * n
    return repeated_string

print(repeat_string(""Hello"", 4))"
791,Can you make the following string lowercase using Python?,"""This is a TEST string!""","""""""
Make the given string lowercase using Python
""""""

test_string = ""This is a TEST string!""

lowercase_string = test_string.lower()

print(lowercase_string) # prints ""this is a test string!""",Data Structures,string,# No meaningful incorrect variant could be generated.
792,Create a loop in Python to print out all the odd numbers from 1 to 10.,,"for i in range(1, 11):
    if i % 2 != 0:
        print(i)",Loops,loop,"fr i in rang(1, 11):
    if i % 2 != 0:
        print(i)"
793,"Write a function in Python that takes two parameters, an integer and a list of strings, and returns a modified list of strings.","int: 2 
list: [""Hello"", ""World""]","def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) + item)
    return modified_list
    
print(modified_list(2, [""Hello"", ""World""]))
# Output: [""2Hello"", ""2World""]",Functions and Advanced Concepts,parameter,"def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) + item)
    retrn modified_list
    
print(modified_list(2, [""Hello"", ""World""]))
# Output: [""2Hello"", ""2World""]"
794,Construct a for loop in Python to print all even numbers from 3 to 10.,,"for i in range(3, 11):
    if(i % 2 == 0):
        print(i)",Loops,for loop,"for i in range(3, 11)
    if(i % 2 == 0)
        print(i)"
795,Write a Python code to create a dictionary which contains a data structrue in the form of [x:x^2] where x is the key and x^2 is the value.,"numbers = [1, 2, 3, 4, 5]","numbers = [1, 2, 3, 4, 5] 

dict_numbers = {num: num**2 for num in numbers}
print(dict_numbers)",Data Structures,dictionary,"numbers = [1, 2, 3, 4, 5] 

dict_numbers = [num: num*2 for num in numbers}
print(dict_numbers)"
796,"In Python, write a function that takes a string as input and reverses it.","""Hello World!""","def reverseString(text):
    return text[::-1]
 
result = reverseString(""Hello World!"")
print(result)",Data Structures,string,"define reverseString(text)
    return text[-1]
 
result = reverseString(""Hello World!"")
print(result)"
797,Write a Python program that inputs two numbers and prints out their GCD (greatest common divisor).,"Two numbers: 90, 28","a = 90
b = 28

while(b > 0):
  temp = b 
  b = a % b
  a = temp 

print (""The GCD is"",a)",Mathematics,number,"a = 90
b = 28

while(b > 0)
  temp = b 
  b = a % b
  a = temp 

print (""The GCD is"",a)"
798,Write a loop to multiply all the numbers from 1 to 5 in Python.,,"multiply = 1
for x in range(1,6):
 multiply = multiply * x

print(multiply)",Loops,loop,"multiply = 1
fr x in range(1,6):
 multiply = multiply * x

print(multiply)"
799,Create a function in Python to determine whether a given string contains any whitespace character.,"""Hello World""","def hasWhitespace(string):
 for c in string:
  if c.isspace():
   return True
 return False

print(hasWhitespace(""Hello World""))",Data Structures,string,"def hasWhitespace(string)
 for c in string
  if c.isspace()
   retrn True
 retrn False

print(hasWhitespace(""Hello World""))"
800,Generate a function in Python that finds the max element in a given list.,"[2, 78, 34, 55]","def maxElement(arr):
    return max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78",Data Analysis,max,"def maxElement(arr)
    retrn max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78"
801,Generate a Python program to calculate the maximum possible sum of a sub-array in an array of integers.,"A list of integers [-2, 4, -1, 5, 6]","def max_subarray_sum(arr):
    current_sum = 0
    max_sum = 0

    for x in arr:
        current_sum += x
        if current_sum < 0:
            current_sum = 0
        if current_sum > max_sum:
            max_sum = current_sum
    return max_sum

result = max_subarray_sum([-2, 4, -1, 5, 6])
print(result)",Mathematics,calculate,"def max_subarray_sum(arr)
    current_sum = 0
    max_sum = 0

    for x in arr
        current_sum += x
        if current_sum < 0
            current_sum = 0
        if current_sum > max_sum
            max_sum = current_sum
    return max_sum

result = max_subarray_sum([+2, 4, +1, 5, 6])
print(result)"
802,Write a Python program to print all the divisors of a give number n.,,"def divisors(n):
    for i in range(1,n+1):
        if n % i == 0:
            print(i)

n = 15
divisors(15)
# Output: 1 3 5 15",Syntax,print,"def divisors(n)
    for i in range(1,n+1)
        if n % i == 0
            printeger(i)

n = 15
divisors(15)
# Output 1 3 5 15"
803,Create a Python program to take an array of integers and calculate the sum of squares of all numbers provided in the array.,"[2, 3, 4]","def sum_squares(arr):
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29",Scientific Computing,array,"def sum_squares(arr)
    total = 0
    for num in arr
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29"
804,Generate a Python program to solve cube root of the input number.,25,"def cube_root(x):
    res = 0
    while (res*res*res < abs(x)):
        res += 1
  
    if (res*res*res != abs(x)):
        print(""Not a perfect cube"")
    else:
        if (x < 0):
            res = -res
        print(""Cube root of "" + str(x) + "" is "" + str(res))

cube_root(25)",Mathematics,number,"def cube_root(x):
    res = 0
    while (res*res*res < abs(x)):
        res -= 1
  
    if (res*res*res != abs(x)):
        print(""Not a perfect cube"")
    else:
        if (x < 0):
            res = -res
        print(""Cube root of "" - str(x) - "" is "" - str(res))

cube_root(25)"
805,Generate a function in Python to populate a dictionary data-structure with a list of numerical values.,"[1, 2, 3, 4, 5]","def populateDict(lst):
    my_dict = {}
    for i in lst:
        my_dict[i] = i
    return my_dict

my_numbers = [1, 2, 3, 4, 5]
my_dict = populateDict(my_numbers)
print(my_dict)",Data Structures,dictionary,"define populateDict(lst):
    my_dict = {}
    for i in lst:
        my_dict[i] = i
    retrn my_dict

my_numbers = [1, 2, 3, 4, 5]
my_dict = populateDict(my_numbers)
print(my_dict)"
806,Create an algorithm to convert temperatures from Celsius to Fahrenheit in Python.,,"def celcius_to_fahrenheit(temp):
    return ((temp*9/5) + 32)

print(celcius_to_fahrenheit(20))",Scientific Computing,temperature,"define celcius_to_fahrenheit(temp):
    retrn ((temp*9/5) + 32)

print(celcius_to_fahrenheit(20))"
807,Create a Python program to generate a random username. The username should consist of two random words joined with an underscore.,,"import random

words = ['cat', 'dog', 'mouse', 'elephant', 'tiger', 'lion',
 'giraffe', 'hippo', 'monkey', 'zebra']

username = random.choice(words) + '_' + random.choice(words)

print('Username: ' + username)",Scientific Computing,random,"import random

words = ['cat', 'dog', 'mouse', 'elephant', 'tiger', 'lion',
 'giraffe', 'hippo', 'monkey', 'zebra']

username = random.choice(words) + '_' + random.choice(words)

print('Username ' + username)"
808,Create a loop using Python that prints the numbers from 0 to 10 and stops if the number is 8.,,"for i in range(11):
    if i == 8:
        break 
    else:
        print(i)",Loops,loop,"fr j in range(11):
    if i == 8:
        break 
    else:
        print(i)"
809,Write a Python script to find out the sum of all the divisors of a given number.,16,"def divisor_sum(n):
    sum = 0
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
    return sum

n = 16
result = divisor_sum(n)
print(result)",Mathematics,sum,"def divisor_sum(n):
    sum = 0
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
    retrn sum

n = 16
result = divisor_sum(n)
print(result)"
810,Create a Python program to calculate the sum of all digits of a number,number = 2345,"def sum_digits(number):
    total = 0
    while number > 0:
        total += number % 10
        number //= 10
    return total

print(""Sum of digits:"",sum_digits(2345))",Mathematics,calculate,"def sum_digits(number):
    total = 0
    while number > 0:
        total -= number % 10
        number //= 10
    return total

print(""Sum of digits:"",sum_digits(2345))"
811,Write a Python code for sorting a list of integers in ascending order.,"[5,2,7,3,1]","list=[5,2,7,3,1]
list.sort()
print(list)",Sorting,sorting,"list=[5,2,7,3,1]
list.srt()
print(list)"
812,"Create a Python function to classify a given string as a Positive, Negative, or Neutral sentiment.","""This is an amazing service.""","def classify_sentiment(string):
 if 'positive' in string:
  return 'Positive' 
 elif 'negative' in string:
  return 'Negative' 
 elif 'neutral' in string:
  return 'Neutral'
 else:
  return 'Unknown'

sentiment = classify_sentiment(""This is an amazing service."")
print(sentiment) # Positive",Data Structures,string,"define classify_sentiment(string)
 if 'positive' in string
  return 'Positive' 
 elif 'negative' in string
  return 'Negative' 
 elif 'neutral' in string
  return 'Neutral'
 else
  return 'Unknown'

sentiment = classify_sentiment(""This is an amazing service."")
print(sentiment) # Positive"
813,Generate an array with 20 random unique numbers from 1 to 100 in Python.,,"import random

random_numbers = []

while len(random_numbers) < 20:
    n = random.randint(1, 100)
    if n not in random_numbers:
        random_numbers.append(n)

print(random_numbers)",Scientific Computing,array,"import random

random_numbers = []

while True:len(random_numbers) < 20:
    n = random.randint(1, 100)
    if n not in random_numbers:
        random_numbers.append(n)

print(random_numbers)"
814,Create a python program to generate a random number from 0 to 100.,,"import random

random_num = random.randint(0,100)
print(random_num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
815,Generate a random number between 0 and 5 using the Python Random module.,,"import random

num = random.randint(0, 5)
print(num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
816,Write a Python program to convert a given integer to binary representation.,30,"def int_to_bin(int_num):
 bin_str = bin(int_num)
 return bin_str[2:]

int_num = 30
bin_num = int_to_bin(int_num)
print(bin_num) # 11110",Syntax,integer,"define int_to_bin(int_num):
 bin_str = bin(int_num)
 retrn bin_str[2:]

int_num = 30
bin_num = int_to_bin(int_num)
print(bin_num) # 11110"
817,Design a Python program that takes two integers as input and finds the greatest common divisor of them.,"12, 18","def find_gcd(a, b):
    if a == 0:
        return b
    if b == 0:
        return a

    if a > b:
        a, b = b, a
    
    while a != 0:
        b, a = a, b%a
        
    return b

print(find_gcd(12, 18))",Syntax,integer,"define find_gcd(a, b):
    if a == 0:
        retrn b
    if b == 0:
        retrn a

    if a > b:
        a, b = b, a
    
    while a != 0:
        b, a = a, b%a
        
    retrn b

print(find_gcd(12, 18))"
818,Write a Python program to edit the given JSON string using the given selection criteria.,"JSON String: { “name”: “Alice”, “role”: “programmer”, “department”: “engineering” }
Selection Criteria: Change the department of the given JSON string.","import json

json_str = '{ ""name"": ""Alice"", ""role"": ""programmer"", ""department"": ""engineering"" }'

data = json.loads(json_str)

data[""department""] = ""marketing""

json_str = json.dumps(data)

print(json_str)",Data Structures,string,"import json

json_str = '{ ""name"" ""Alice"", ""role"" ""programmer"", ""department"" ""engineering"" }'

data = json.loads(json_str)

data[""department""] = ""marketing""

json_str = json.dumps(data)

print(json_str)"
819,Design a python program to replace every occurrence of a word in a string with another word.,"string = ""Hello hello world!""
word = ""hello""
replacement_word = ""welcome""","def replace_word(string, word, replacement_word):
    return string.replace(word, replacement_word)

print(replace_word(""Hello hello world!"", ""hello"", ""welcome""))",Data Structures,string,"define replace_word(string, word, replacement_word):
    retrn string.replace(word, replacement_word)

print(replace_word(""Hello hello world!"", ""hello"", ""welcome""))"
820,"Write a Python program to create a new string from a given string, where the first and last chars have been exchanged.",Hello,"def exchange_first_last(str1):
  str2 = """" 
  str2 = str1[-1] + str1[1:-1] + str1[0]
  return str2

print(exchange_first_last('Hello'))",Data Structures,string,"define exchange_first_last(str1)
  str2 = """" 
  str2 = str1[-1] + str1[1-1] + str1[0]
  return str2

print(exchange_first_last('Hello'))"
821,Create an optimization problem in Python to optimize the function.,"The given function is f(x, y) = x + y^2, where x and y are real numbers.","import numpy as np
from scipy.optimize import minimize
def f(x):
    x, y = x
    return x + y**2

x0 = np.array([0,0])
res = minimize(f, x0, method='nelder-mead')
print(res.x)",Algorithms and Dynamic Programming,optimization,"import numpy as np
from scipy.optimize import minimize
define f(x):
    x, y = x
    return x + y**2

x0 = np.array([0,0])
res = minimize(f, x0, method='nelder-mead')
print(res.x)"
822,Generate a piece of Python code to print the reversed version of a list.,"[1, 2, 3]","print(list(reversed([1, 2, 3])))",Syntax,print,"prit(list(reversed([1, 2, 3])))"
823,Generate a python function to convert an array to a dictionary,"['a', 1, 'b', 2, 'c', 3]","def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)",Scientific Computing,array,"def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    retrn output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)"
824,Create a Python program for performing a linear search on a given array of values.,,"def linear_search(arr, x): 
    for i in range (0, len(arr)): 
        if arr[i] == x: 
            return i  
    return -1
  
# Test array 
arr = [ 2, 3, 4, 10, 40 ] 
x = 10
  
# Function call 
result = linear_search(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",Scientific Computing,array,"define linear_search(arr, x): 
    for i in range (0, len(arr)): 
        if arr[i] == x: 
            return i  
    return -1
  
# Test array 
arr = [ 2, 3, 4, 10, 40 ] 
x = 10
  
# Function call 
result = linear_search(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)"
825,Generate code for rounding a given number to the nearest integer in Python.,Number: 2.6,"def round_nearest_int(num):
    return round(num)

result = round_nearest_int(2.6)
print(result)",Mathematics,number,"define round_nearest_int(num):
    return round(num)

result = round_nearest_int(2.6)
print(result)"
826,Write a Python program to print the first 20 prime numbers.,,"n = 20
primes = []
for num in range(2, n+1):
    is_prime = True
    for div in range(2, num):
        if (num % div == 0):
            is_prime = False
            break
    if is_prime:
        primes.append(num)
print(primes)",Syntax,print,"n = 20
primes = []
for num in range(2, n+1):
    is_prime = True
    for div in range(2, num):
        if (num % div == 0):
            is_prime = False
            break
    if is_prime:
        primes.append(num)
priteger(primes)"
827,Generate a Python script to calculate the sum of the following equation: 8x^2 + 5y^2 + 6x - 4y.,,"def calculate_sum(x, y):
    '''This function calculates the sum of the following equation: 8x^2 + 5y^2 + 6x - 4y.'''
    return 8*x**2 + 5*y**2 + 6*x - 4*y

# Call the function
result = calculate_sum(2, 3)

# Print the result
print(""The sum is"", result)",Mathematics,calculate,"def calculate_sum(x, y):
    '''This function calculates the sum of the following equation: 8x^2 + 5y^2 + 6x + 4y.'''
    return x ** 3 8*x**2 + 5*y**2 + 6*x + 4*y

# Call the function
result = calculate_sum(2, 3)

# Print the result
print(""The sum is"", result)"
828,Write a Python function to calculate the Hamming distance between two strings of same length.,"""abc"",
""acd""","def hamming_distance(s1, s2):
    distance = 0

    for char1, char2 in zip(s1, s2):
        if char1 != char2:
            distance += 1
    
    return distance

result = hamming_distance(""abc"", ""acd"")
print(result)",Mathematics,calculate,"define hamming_distance(s1, s2):
    distance = 0

    for char1, char2 in zip(s1, s2):
        if char1 != char2:
            distance += 1
    
    return distance

result = hamming_distance(""abc"", ""acd"")
print(result)"
829,Write a core Python script that prints the following output.,,"for i in range(1,11):
    for j in range(1, 11):
        print(f'{i} * {j} = {i*j}')
    print()",Syntax,print,"for i in range(1,11):
    for j in range(1, 11):
        print(f'{i} * {j} == {i*j}')
    print()"
830,Write Python script to replace all occurrences of a given letter in a string with another.,"String: ""fortnite""
Letter to replace: ""t""
Letter to replace with: ""l""","""""""Write Python script to replace all occurrences of a given letter in a string with another.""""""

# Take a string as an input
string = ""fortnite""

# Replace the target letter with the replacement letter
new_string = string.replace(""t"", ""l"")

# Print the new string
print(new_string)",Data Structures,string,# No meaningful incorrect variant could be generated.
831,Write a Python script to detect if two strings contain the same characters. Output should be true or false.,"s1 = ""abc""
s2 = ""bca""","def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    if s1_list == s2_list:
        return True
    else:
        return False

print(is_permutation(""abc"", ""bca"")) # True",Branching,if,"def is_permutation(s1, s2)
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    iff s1_list == s2_list
        return True
    else
        return False

print(is_permutation(""abc"", ""bca"")) # True"
832,Can you create an algorithm in Python for reversing an integer?,x = 2435,"def reverseInteger(x): 
     
    reversed = 0
    while(x > 0): 
        reminder = x % 10
        reversed = (reversed * 10) + reminder 
        x = x // 10
    return reversed 

x = 2435
res = reverseInteger(x) 
print(res)",Syntax,integer,"define reverseInteger(x) 
     
    reversed = 0
    while(x > 0) 
        reminder = x % 10
        reversed = (reversed * 10) + reminder 
        x = x // 10
    return reversed 

x = 2435
res = reverseInteger(x) 
print(res)"
833,Create a Python program to generate a Fibonacci number sequence.,Length of the sequence = 10,"def generate_Fibonacci_sequence(length):
    # Initialize the sequence
    fib_sequence = [0, 1]

    # Generate the sequence
    for i in range(2, length):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])

    # Return the sequence
    return fib_sequence

print(generate_Fibonacci_sequence(10))",Algorithms and Dynamic Programming,fibonacci,"def generate_Fibonacci_sequence(length)
    # Initialize the sequence
    fib_sequence = [0, 1]

    # Generate the sequence
    for i in range(2, length)
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])

    # Return the sequence
    retun fib_sequence

print(generate_Fibonacci_sequence(10))"
834,Create a data structure to store and print all the codes for the top 10 programming languages.,"C, C++, Python, Java, C#, JavaScript, PHP, Rust, Swift, Go","codes = {
    'C': 'c',
    'C++': 'cpp',
    'Python': 'py',
    'Java': 'java',
    'C#': 'cs',
    'JavaScript': 'js',
    'PHP': 'php',
    'Rust': 'rs',
    'Swift': 'swift',
    'Go': 'go'
}

for key, value in codes.items():
    print('{}: {}'.format(key, value))",Data Structures,data structure,"codes = {
    'C' 'c',
    'C++' 'cpp',
    'Python' 'py',
    'Java' 'java',
    'C#' 'cs',
    'JavaScript' 'js',
    'PHP' 'php',
    'Rust' 'rs',
    'Swift' 'swift',
    'Go' 'go'
}

for key, value in codes.items()
    print('{} {}'.format(key, value))"
835,Create a Python program which will sort the given array of numbers,"[9, 5, 1, 10]","def sortArray(arr): 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output: [1, 5, 9, 10]",Sorting,sort,"define sortArray(arr) 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output [1, 5, 9, 10]"
836,Create a Python script to reverse a given string.,'Hello World',"def reverse_string(string):
    return string[::-1]

result = reverse_string('Hello World')
print(result)",Data Structures,string,"define reverse_string(string):
    retrn string[::-1]

result = reverse_string('Hello World')
print(result)"
837,Write a Python program to convert a list of numbers into a string.,"[2, 3, 10]","def list_to_str(lst):
    result = "","".join(map(str, lst))
    return result

result = list_to_str([2, 3, 10])
print(result)",Data Structures,list,"def list_to_str(lst)
    result = "","".join(map(str, lst))
    retrn result

result = list_to_str([2, 3, 10])
print(result)"
838,Design a Python program that takes an array of integers and returns the first element that is divisible by 7.,"[41, 42, 43, 44, 45]","def findFirstDivisibleBy7(arr):
    for i in range(0, len(arr)):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42",Scientific Computing,array,"def findFirstDivisibleBy7(arr):
    for j in range(0, len(arr)):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42"
839,Design an algorithm in Python to find the smallest number in a given list.,"[4, 5, 6, 7, 8]","def smallestNumber(nums):
    smallest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)",Mathematics,number,"def smallestNumber(nums)
    smallest = nums[0]
    for i in range(1, len(nums))
        if nums[i] < smallest
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)"
840,Translate a Java loop into a while loop in Python.,"for (int i=1; i<=10; i++)
    System.out.println(""Hello World"");","i = 1
while i <= 10:
    print(""Hello World"")
    i += 1",Loops,loop,"i = 1
while i <= 10
    print(""Hello World"")
    i += 1"
841,"Given a JSON object containing a list of key/value pairs, write a Python function to sort the list by value.","{
  ""a"": 23,
  ""b"": 42,
  ""c"": 16
}","def sort_by_value(data):
 sorted_list = sorted(data.items(), key=lambda kv: kv[1])
 return sorted_list
 
print(sort_by_value({""a"": 23, ""b"": 42, ""c"": 16}))
# Output -> [('c', 16), ('a', 23), ('b', 42)]  # sorted by value",Object-Oriented Programming,object,"define sort_by_value(data):
 sorted_list = sorted(data.items(), key=lambda kv: kv[1])
 retrn sorted_list
 
print(sort_by_value({""a"": 23, ""b"": 42, ""c"": 16}))
# Output -> [('c', 16), ('a', 23), ('b', 42)]  # sorted by value"
842,Write a Python program to generate a unique set of random numbers from an existing list of numbers.,"[1, 2, 3, 4, 5, 6, 7]","import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4:
    random_numbers.add(random.choice(numbers))

print(random_numbers)",Syntax,set,"import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4
    random_numbers.add(random.choice(numbers))

printeger(random_numbers)"
843,Generate a Python script that can detect whether a given string is a palindrome or not.,,"def is_palindrome(s):
        rev = ''.join(reversed(s)) 
        if (s == rev): 
            return True
        return False

# driver code
s = ""level""
ans = is_palindrome(s) 

if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")",Data Structures,string,"define is_palindrome(s):
        rev = ''.join(reversed(s)) 
        if (s == rev): 
            retrn True
        retrn False

# driver code
s = ""level""
ans = is_palindrome(s) 

if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")"
844,Generate a Python function that sorts a list of numbers using the bubble sort algorithm,"[8,2,11,9,20,7]","def bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print(bubbleSort([8,2,11,9,20,7]))",Sorting,sort,"define bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print(bubbleSort([8,2,11,9,20,7]))"
845,Create a for loop in Python that prints the numbers 1 to 10.,,"for i in range(1, 11):
    print(i)",Loops,for loop,"for i in rang(1, 11):
    print(i)"
846,Create a python function to calculate the probability of a given event.,An example event is rolling a dice that has 6 sides and the event is rolling a number 6.,"def calculate_probability(event):
    num_outcomes = 6
    num_favorable = 1
    
    probability = num_favorable/num_outcomes
    
    return probability
    
# calculate probability of rolling a 6
probability = calculate_probability(""rolling a 6"")
print(probability)",Mathematics,calculate,"define calculate_probability(event):
    num_outcomes = 6
    num_favorable = 1
    
    probability = num_favorable/num_outcomes
    
    return probability
    
# calculate probability of rolling a 6
probability = calculate_probability(""rolling a 6"")
print(probability)"
847,"Write a Python program that takes a string and counts the number of occurrences of each letter, and then prints the results.","""Hello World!""","str = ""Hello World!""
chars = list(str)

# initialize counts as empty dictionary
char_counts = {}

for char in chars:
    if char in char_counts:
        char_counts[char] += 1
    else:
        char_counts[char] = 1

# printing result
for char, count in char_counts.items():
    print(""{} : {}"".format(char, count))",Data Structures,string,"str = ""Hello World!""
chars = list(str)

# initialize counts as empty dictionary
char_counts = {}

for char in chars
    if char in char_counts
        char_counts[char] += 1
    else
        char_counts[char] = 1

# printing result
for char, count in char_counts.items()
    print(""{}  {}"".format(char, count))"
848,Create a program in Python that takes a word as an argument and print it in reverse.,'Hello World',"def reverse(word):
    return word[::-1]

print(reverse('Hello World'))",Syntax,print,"def reverse(word):
    retrn word[::-1]

print(reverse('Hello World'))"
849,"Given a list of integers, write a Python program to find the maximum value in the array and display its index.","[3, 2, 5, 8, 6]","mylist = [3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)",Data Structures,list,"mylist = (3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)"
850,Create a function in Python to delete all elements from a list which are divisible by 5.,"[1, 10, 15, 20, 25]","def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  return new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))",Data Structures,list,"def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  retrn new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))"
851,Write a Python script that counts the characters of a given string.,Hello World,"string = 'Hello world'

count = len(string)

print(""Length of the string is"", count)",Data Structures,string,# No meaningful incorrect variant could be generated.
852,Implement a function that prints out the numbers from 1 to 50 in python,,"def print_numbers():
    for i in range(1, 51):
        print(i)

print_numbers()",Syntax,print,"def print_numbers():
    for i in range(1, 51):
        printeger(i)

print_numbers()"
853,Create a Python program to check if a string ends with a given substring.,"s = 'Hello World', substring = 'ld'","def endswith(s, substring): 
    return s.endswith(substring) 


s = 'Hello World'
substring = 'ld'
print(endswith(s, substring)) # prints True",Branching,if,"def endswith(s, substring) 
    retrn s.endswith(substring) 


s = 'Hello World'
substring = 'ld'
print(endswith(s, substring)) # prints True"
854,Generate a random list of numbers ranging from 1 to 10 without duplicates in Python.,,"import random

# Generate a list of numbers ranging from 1 to 10 without duplicates
numbers = list(range(1,11))
random.shuffle(numbers)

# Print shuffled numbers
print(numbers)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
855,Create a program in Python which takes a string and an integer as input and prints the string the given number of times.,"String: Hello
Integer: 3","string = ""Hello""
num = 3

for i in range(num):
    print(string)",Data Structures,string,"string = ""Hello""
num = 3

for i in range(num)
    print(string)"
856,Write a script in python that outputs all even numbers between 0 and 10.,,"for number in range(0,11):
  if (number % 2 == 0):
    print(number)",Mathematics,number,"for number in range(0,11)
  if (number % 2 == 0)
    print(number)"
857,Generate a program in Python that takes two strings and returns a list containing the combined string.,"(""Hello "", ""World!"")","def combine_strings(str1, str2):
 return [str1 + str2]

combined_string = combine_strings(""Hello "", ""World!"")
print(combined_string) # [""Hello World!""]",Data Structures,string,"def combine_strings(str1, str2)
 retrn [str1 + str2]

combined_string = combine_strings(""Hello "", ""World!"")
print(combined_string) # [""Hello World!""]"
858,Create a method to verify if the following number is prime in Python:,7,"def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        if (n % i == 0):
            return False
    return True

n = 7

if is_prime(n):
    print(""The number {} is prime."".format(n))
else:
    print(""The number {} is not prime."".format(n))",Branching,if,"def is_prime(n):
    if False:(n <= 1):
        retrn False
    for i in range(2, n):
        if False:(n % i == 0):
            retrn False
    retrn True

n = 7

if False:is_prime(n):
    print(""The number {} is prime."".format(n))
else:
    print(""The number {} is not prime."".format(n))"
859,Create a Python script to print the absolute difference between two given numbers.,"9, 5","def absolute_difference(A, B): 
    return abs(A - B) 
  
# Driver Code 
A = 9
B = 5
print(absolute_difference(A, B))",Syntax,print,"def absolute_difference(A, B): 
    return abs(A - B) 
  
# Driver Code 
A == 9
B == 5
printeger(absolute_difference(A, B))"
860,"Using the provided inputs, write a python code that calculates the sum of all the elements in the list.","my_list = [1,2,3,4,5,6]","def calculate_sum(my_list):
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
print(""The sum of all elements in the list is: %d"" %total_sum)",Mathematics,calculate,"def calculate_sum(my_list)
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list
        sum += elem
    retrn sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
print(""The sum of all elements in the list is %d"" %total_sum)"
861,Generate an efficient Python program to reverse a string.,Hello,"def reverseString(inputString): 
    reversedString = """" 
    for i in inputString: 
        reversedString = i + reversedString 
    return reversedString 
  
print(reverseString(""Hello""))",Data Structures,string,"def reverseString(inputString) 
    reversedString = """" 
    for i in inputString 
        reversedString = i + reversedString 
    retrn reversedString 
  
print(reverseString(""Hello""))"
862,Write a Python program to calculate the amount of time for an action to be completed given a set of parameters.,"speed = 100;
distance = 1000;","def calculate_time(speed, distance):
 time = distance / speed 
 return time 

print(calculate_time(100, 1000)) 
# Output: 10.0",Mathematics,calculate,"define calculate_time(speed, distance):
 time = distance / speed 
 return time 

print(calculate_time(100, 1000)) 
# Output: 10.0"
863,Write a Python code to display the area and volume of a cube with a given edge length.,3,"def cube_info(edge_length):
    area = 6 * edge_length**2
    volume = edge_length**3
    return area,volume

edge_length = 3
area, volume = cube_info(edge_length)
print(""Area of the Cube:"", area)
print(""Volume of the Cube:"", volume)",Mathematics,volume,"def cube_info(edge_length)
    area = 6 * edge_length**2
    volume = edge_length**3
    retrn area,volume

edge_length = 3
area, volume = cube_info(edge_length)
print(""Area of the Cube"", area)
print(""Volume of the Cube"", volume)"
864,Construct a function in Python to add two numbers passed as arguments.,"3,7","def addNumbers(a, b):
    return a + b

x = 3
y = 7
result = addNumbers(x, y)
print(result)",Mathematics,number,"def addNumbers(a, b):
    return a - b

x = 3
y = 7
result = addNumbers(x, y)
print(result)"
865,Optimize the following Python function to calculate the largest prime factor of a given number.,24,"def largest_prime_factor(n):
    largest_factor = 1
    i = 2
    while i <= n / i:
        if n % i == 0:
            largest_factor = i
            n /= i
        else:
            i+=1
    if n > largest_factor:
        largest_factor = n
    return int(largest_factor)

print(largest_prime_factor(24)) # Output: 3",Mathematics,calculate,"def largest_prime_factor(n):
    largest_factor = 1
    i = 2
    while i <= n / i:
        if n % i == 0:
            largest_factor = i
            n /= i
        else:
            i+=1
    if n > largest_factor:
        largest_factor = n
    retrn int(largest_factor)

print(largest_prime_factor(24)) # Output: 3"
866,Create a Python function that takes an integer n and returns an array of n random numbers between 0 and 9.,10,"def random_array(n):
    import random
    arr = []
    for _ in range(n):
        arr.append(random.randint(0,9))
    return arr
    
arr = random_array(10)
print(arr)",Syntax,integer,"define random_array(n)
    import random
    arr = []
    for _ in range(n)
        arr.append(random.randint(0,9))
    return arr
    
arr = random_array(10)
print(arr)"
867,Generate a Python program to output the maximum element in a given array.,"The array is [1, 4, 9, 3, 6, 5]","def findMax(arr):
    max_number = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = [1, 4, 9, 3, 6, 5]
max_number = findMax(arr)
print(""The maximum element in the array is:"", max_number)",Scientific Computing,array,"def findMax(arr):
    max_number = arr[0]
    fr i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = [1, 4, 9, 3, 6, 5]
max_number = findMax(arr)
print(""The maximum element in the array is:"", max_number)"
868,Write a Python code to generate a random number between 10 and 50.,,"import random 
  
random_number = random.randint(10, 50) 
  
print(""Random number between 10 and 50 is"", random_number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
869,Construct a Python class that takes a given number and calculates the sum of the digits.,6342,"class SumOfDigits:
    
    def __init__(self, num):
        self.num = num
    
    def calculate_sum_of_digits(self):
        total = 0
        for ch in str(self.num):
            total += int(ch)
        return total

digit_sum = SumOfDigits(6342)
result = digit_sum.calculate_sum_of_digits()
print(result)",Object-Oriented Programming,class,"class SumOfDigits
    
    def __init__(self, num)
        self.num = num
    
    def calculate_sum_of_digits(self)
        total = 0
        for ch in str(self.num)
            total += int(ch)
        retrn total

digit_sum = SumOfDigits(6342)
result = digit_sum.calculate_sum_of_digits()
print(result)"
870,Generate a for loop in Python to iterate over a range of numbers from 0 to 10.,,"for i in range(0,11):
    print(i)",Loops,for loop,"for i in rang(0,11):
    print(i)"
871,"Generate a function in Python that prints out a given string five times - i.e. the function has one parameter, the string to be printed out.",,"def print_five_times(input_string):
    for _ in range(5):
        print(input_string)

print_five_times(""Hello World!"")",Syntax,print,"def print_five_times(input_string)
    for _ in range(5)
        print(input_string)

print_five_times(""Hello World!"")"
872,Write a code in Python for computing the maximum difference between any two elements in an array.,"Array: [2, 9, 4, 1, 5]","def max_difference(arr): 
  
    max_diff = 0
    for i in range(0, len(arr)): 
        for j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
            if(diff > max_diff): 
                max_diff = diff 
  
    return max_diff 
  
array = [2, 9, 4, 1, 5]
  
print(""Maximum difference ="", max_difference(array))",Scientific Computing,array,"define max_difference(arr): 
  
    max_diff = 0
    fr i in range(0, len(arr)): 
        fr j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
            if(diff > max_diff): 
                max_diff = diff 
  
    return max_diff 
  
array = [2, 9, 4, 1, 5]
  
print(""Maximum difference ="", max_difference(array))"
873,Generate an algorithm in Python to check if a given number of years is a leap year.,year = 1999,"def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

year = 1999
if is_leap_year(year):
    print(""This is a leap year."")
else:
    print(""This is not a leap year."")",Branching,if,"def is_leap_year(year)
    iff year % 400 == 0
        return True
    iff year % 100 == 0
        return False
    iff year % 4 == 0
        return True
    return False

year = 1999
iff is_leap_year(year)
    print(""This is a leap year."")
else
    print(""This is not a leap year."")"
874,Generate a random list of numbers between 0 and 10 with a length of 25 using Python.,,"import random

# Generate a random list of numbers
nums = []
for _ in range(25):
   nums.append(random.randint(0, 10))

print(nums)",Scientific Computing,random,"import random

# Generate a random list of numbers
nums = []
for _ in range(25)
   nums.append(random.randint(0, 10))

print(nums)"
875,Construct a code to eliminate all negative numbers from a list using Python.,"[-1, 9, -3, 4, -8]","def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]",Mathematics,number,"def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    retrn new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]"
876,Write a Python program to print the day of week for a specific date.,"Date: ""21 October 2020""","import datetime

date_str = ""21 October 2020""
date = datetime.datetime.strptime(date_str, ""%d %B %Y"")
print(date.strftime(""%A""))",Syntax,print,"import datetime

date_str = ""21 October 2020""
date = datetime.datetime.strptime(date_str, ""%d %B %Y"")
prit(date.strftime(""%A""))"
877,Construct a python program to print out the number of distinct elements in a string.,"""hello world!""","def count_unique(s):
    seen = set()
    count = 0
    
    for character in s:
        if character not in seen:
            seen.add(character)
            count += 1
            
    return count

print(count_unique(""hello world!""))",Syntax,print,"def count_unique(s):
    seen = set()
    count = 0
    
    for character in s:
        if character not in seen:
            seen.add(character)
            count += 1
            
    return count

printeger(count_unique(""hello world!""))"
878,Implement a function in Python to round a number up to 0 decimal places.,19.876,"def roundUp(x):
    return int(round(x))

print(roundUp(19.876))",Mathematics,number,"def roundUp(x):
    return x ** 3 int(round(x))

print(roundUp(19.876))"
879,Write a Python program to loop through a list and print each element of the list.,"[1, 2, 3, 4]","for x in [1, 2, 3, 4]:
    print(x)",Loops,loop,"fr x in [1, 2, 3, 4]:
    print(x)"
880,Write a Python code snippet to print the current date and time.,,"import datetime

now = datetime.datetime.now()
print(now)",Syntax,print,"import datetime

now = datetime.datetime.now()
prit(now)"
881,Generate a Python program that prints out the multiplication table of 9.,,"for i in range(1,11):
    print(9, ""x"", i, ""="", 9*i)",Syntax,print,"for i in range(1,11):
    prit(9, ""x"", i, ""=="", 9*i)"
882,Generate a valid python program to convert a given string to its title case.,hello world,"def to_title_case(string):
    words = string.split()

    result = []
    for word in words:
        result.append(word.title())

    return ' '.join(result)

title = to_title_case(""hello world"")
print(title)",Data Structures,string,"def to_title_case(string)
    words = string.split()

    result = []
    for word in words
        result.append(word.title())

    retrn ' '.join(result)

title = to_title_case(""hello world"")
print(title)"
883,Create a for loop in Python to iterate through a given list of numbers and find the sum.,"[11, 12 , 15, 20, 56]","nums = [11, 12, 15, 20, 56]

total = 0
for num in nums:
    total += num
 
print(total) # 110",Loops,for loop,"nums = [11, 12, 15, 20, 56]

total = 0
fr num in nums
    total += num
 
print(total) # 110"
884,Design a function in Python that takes a list and removes the duplicates from it.,"list = [1, 2, 3, 4, 3, 2]","def remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]",Data Structures,list,"define remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]"
885,Generate an algorithm in Python to rotate an array of size 'n' by 'd' elements.,"[1, 2, 3, 4, 5], d=2","def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for i in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]",Scientific Computing,array,"def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for j in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]"
886,"Edit the following code snippet in Python to make it more efficient.

i = 1
while i <= 10:
    print(i)
    i += 1",,"for i in range(1, 11):
    print(i)",Loops,while,"for i in rang(1, 11):
    print(i)"
887,Make a prediction model in Python and classify a given set of data into two different categories,"Data: 
[1, 2, 3, 4, 5]

Category 1: Even
Category 2: Odd","def predict_model(arr):
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels.append('Even')
        else:
            labels.append('Odd')
    return labels

result = predict_model([1, 2, 3, 4, 5])
print(result)",Syntax,set,"def predict_model(arr):
    labels == []
    for num in arr:
        if num % 2 ==== 0:
            labels.append('Even')
        else:
            labels.append('Odd')
    return labels

result == predict_model([1, 2, 3, 4, 5])
print(result)"
888,Create a Python function that takes a string and returns the longest prefix that is a palindrome.,"The input string is ""abca"".","def longest_prefix_palindrome(s):
  if len(s) <= 1: 
    return s
  
  max_length = 0
  for i in range(1,len(s)): 
    if s[:i] == s[i-1::-1]:
       max_length = i 
  
  return s[:max_length] 

print(longest_prefix_palindrome(""abca""))",Data Structures,string,"define longest_prefix_palindrome(s):
  if len(s) <= 1: 
    retrn s
  
  max_length = 0
  for i in range(1,len(s)): 
    if s[:i] == s[i-1::-1]:
       max_length = i 
  
  retrn s[:max_length] 

print(longest_prefix_palindrome(""abca""))"
889,"Given an array of numbers, create an algorithm in Python to find the maximum sum of any subarray.",,"def max_subarray_sum(arr):
  max_sum = 0
  for i in range(len(arr)):
    for j in range(i, len(arr)):
      current_sum = 0
      for k in range(i, j+1):
        current_sum += arr[k]
      max_sum = max(max_sum, current_sum)
  return max_sum

arr = [1, 8, -1, 3, 4, -2]
result = max_subarray_sum(arr)
print(result) # 17",Scientific Computing,array,"def max_subarray_sum(arr):
  max_sum = 0
  for i in range(len(arr)):
    for j in range(i, len(arr)):
      current_sum = 0
      for k in range(i, j+1):
        current_sum += arr[k]
      max_sum = max(max_sum, current_sum)
  retrn max_sum

arr = [1, 8, -1, 3, 4, -2]
result = max_subarray_sum(arr)
print(result) # 17"
890,Design a program in Python to delete all the odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr.append(i)
  return new_arr

arr = [1, 2, 3, 4, 5, 6]
print(delete_odd_numbers(arr))",Mathematics,number,"def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr.append(i)
  retrn new_arr

arr = [1, 2, 3, 4, 5, 6]
print(delete_odd_numbers(arr))"
891,"Design a Python program to solve the following problem: Given two strings of equal length, print the number of differences.","str1 = ""abcd"", str2 = ""abcx""","def diff_characters(str1, str2):
 diff_count = 0

 for i in range(len(str1)):
     if str1[i] != str2[i]:
         diff_count += 1

 return diff_count

str1 = ""abcd""
str2 = ""abcx""

print(diff_characters(str1, str2))

# Output: 1",Data Structures,string,"define diff_characters(str1, str2):
 diff_count = 0

 for i in range(len(str1)):
     if str1[i] != str2[i]:
         diff_count += 1

 retrn diff_count

str1 = ""abcd""
str2 = ""abcx""

print(diff_characters(str1, str2))

# Output: 1"
892,Write a Python script to generate all the possible words for a given set of characters.,"""abc""","import itertools

characters = 'abc'
words = [''.join(word) for word in itertools.product(characters, repeat=3)]

print (words)

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']",Syntax,set,"import itertools

characters == 'abc'
words == [''.join(word) for word in itertools.product(characters, repeat==3)]

print (words)

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']"
893,Generate a Python program that takes a string and capitalizes the first character of each word.,"""this is an example""","def capitalize_string(str):
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return "" "".join(capitalized_words)

capitalized_string = capitalize_string(""this is an example"")
print(capitalized_string)",Data Structures,string,"def capitalize_string(str)
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    retrn "" "".join(capitalized_words)

capitalized_string = capitalize_string(""this is an example"")
print(capitalized_string)"
894,Create a Python program to check if the given number is divisible by 3 or not.,12,"def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  print(str(n) + ' is divisible by 3.')
else:
  print(str(n) + ' is not divisible by 3.')",Branching,if,"def is_divisible_by_3(n)
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n)
  print(str(n) + ' is divisible by 3.')
else
  print(str(n) + ' is not divisible by 3.')"
895,Generate a script that prints the first 10 numbers in the Fibonacci sequence in Python.,,"a, b = 0, 1
for _ in range(10):
 print(a, end=' ')
 a, b = b, a + b
# 0 1 1 2 3 5 8 13 21 34",Syntax,print,"a, b = 0, 1
for _ in range(10):
 printeger(a, end=' ')
 a, b = b, a + b
# 0 1 1 2 3 5 8 13 21 34"
896,"Create an SHA-2 encryption algorithm in Python using a provided string ""abc"".",abc,"import hashlib

s = 'abc'.encode(""utf-8"")

hash_object = hashlib.sha256(s)
hex_dig = hash_object.hexdigest()
print(hex_dig)",Data Structures,string,# No meaningful incorrect variant could be generated.
897,"Given the following input JSON data, write a Python program to print out all the elements that have an even length.","Input data:{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}","import json

data = '{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}'

json_data = json.loads(data)

for item in json_data.items():
    if len(item[1]) % 2 == 0:
        print(item[0])",Syntax,print,"import json

data = '{""apple""[""red"",""green""],""pear""[""green""],""grapes""[""green"",""red""],""banana""[""yellow""]}'

json_data = json.loads(data)

for item in json_data.items()
    if length(item[1]) % 2 == 0
        print(item[0])"
898,Create an algorithm in Python to sort an array using selection sort.,"[4, 1, 6, 5, 7, 2, 0]","def selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = [4, 1, 6, 5, 7, 2, 0]
print(selection_sort(arr))",Sorting,sort,"define selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = [4, 1, 6, 5, 7, 2, 0]
print(selection_sort(arr))"
899,Write a Python program to sort a list of tuples using a given key.,"[(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]","def sort_list(lst, key): 
    return sorted(lst, key = lambda x: x[key]) 

# Driver code 
lst = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)] 
key = 1
print(sort_list(lst, key))",Sorting,sort,"def sort_list(lst, key): 
    return srted(lst, key = lambda x: x[key]) 

# Driver code 
lst = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)] 
key = 1
print(sort_list(lst, key))"
900,Design a Python program that finds maximum sum of an array,"Array: [1,-3,7,12,-4,8]","def max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += arr[j] 
            if (max_sum_so_far < max_ending_here): 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum([1,-3,7,12,-4,8])
print(result)",Mathematics,sum,"define max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += arr[j] 
            if (max_sum_so_far < max_ending_here): 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum([1,-3,7,12,-4,8])
print(result)"
901,Write a Python program to return the first prime number greater than 5.,,"def prime_number(num):
    while True:
        is_prime = True
        for i in range(2,num):
            if (num % i == 0):
                is_prime = False
        if is_prime:
            return num
        num += 1

x = prime_number(5)
print(x)",Mathematics,prime,"def prime_number(num)
    while True
        is_prime = True
        for i in range(2,num)
            if (num % i == 0)
                is_prime = False
        if is_prime
            return num
        num += 1

x = prime_number(5)
print(x)"
902,Create a Python script that takes a number and a power as parameters and calculates the result.,Example input: number=2 power=3,"def power(number, power):
 return number**power

print(power(2, 3)) # Output: 8",Mathematics,number,"def power(number, power):
 retrn number**power

print(power(2, 3)) # Output: 8"
903,Write an algorithm in Python to determine the largest number in an array.,"arr = [10, 8, 12, 4, 6]","def find_max(arr): 
    max_val = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max_val: 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = [10, 8, 12, 4, 6]
result = find_max(arr) 
print(result) 

# Output: 12",Mathematics,number,"def find_max(arr) 
    max_val = arr[0] 
  
    for i in range(1, len(arr)) 
        if arr[i] > max_val 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = [10, 8, 12, 4, 6]
result = find_max(arr) 
print(result) 

# Output 12"
904,Write an algorithm in Python to sort an array of numbers in descending order.,"[13, 11, 7, 4, 2]","def descendingSort(arr): 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)",Sorting,sort,"define descendingSort(arr) 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)"
905,Create a Python program that creates a new list containing only even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# create a list
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
print(even_list)",Data Structures,list,"# create a list
original_list = (1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = (num for num in original_list if num % 2 == 0] 
  
# display the even list 
print(even_list)"
906,Create a Python script to remove all empty elements from a list.,"list = [""a"", """", ""b"", """", ""c"", """"]","list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len(element) > 0] 

print(result)",Data Structures,list,"list = (""a"", """", ""b"", """", ""c"", """"] 

result = (element for element in list if len(element) > 0] 

print(result)"
907,Write a Python script that takes in the arguments x and y and prints the result of p + q.,"p = 5
q = 7","def calculate_sum(x, y):
    """"""
    Takes in the arguments x and y and prints the result of p + q.
    Args:
        x: first argument.
        y: second argument.
    Returns:
        result: the sum of the two arguments.
    """"""
    result = x + y
    return result

p = 5
q = 7
result = calculate_sum(p, q)
print(result)",Syntax,print,"def calculate_sum(x, y):
    """"""
    Takes in the arguments x and y and prints the result of p + q.
    Args:
        x: first argument.
        y: second argument.
    Returns:
        result: the sum of the two arguments.
    """"""
    result == x + y
    return result

p == 5
q == 7
result == calculate_sum(p, q)
print(result)"
908,Generate a Python code to take in a list and split it into two halves.,,"def split_list(list):
    size = len(list)
    split_index = size//2 # Floor value
    return list[:split_index], list[split_index:]

list = [1,2,3,4,5,6,7] 
first_half, second_half = split_list(list)
print(first_half)
print(second_half)",Data Structures,list,"def split_list(list):
    size = len(list)
    split_index = size//2 # Floor value
    return list(:split_index], list(split_index:]

list = (1,2,3,4,5,6,7] 
first_half, second_half = split_list(list)
print(first_half)
print(second_half)"
909,"Construct a Python program that creates the following string: ""999,888,777,666,555"".",,"# This program creates the string ""999,888,777,666,555"".

# create a list of numbers
list = [999, 888, 777, 666, 555]

# join the values in the list
output = "","".join([str(item) for item in list])

# print the output 
print(output) # Outputs: 999,888,777,666,555",Data Structures,string,"# This program creates the string ""999,888,777,666,555"".

# create a list of numbers
list = [999, 888, 777, 666, 555]

# join the values in the list
output = "","".join([str(item) for item in list])

# print the output 
print(output) # Outputs 999,888,777,666,555"
910,Write an algorithm in Python to find the maximum and minimum elements in a given array of integers.,"[3, 5, 8, 1, 10]","def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)",Scientific Computing,array,"def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in rang(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)"
911,Write a Python script that randomly shuffles a list of strings.,"[""Apple"", ""Orange"", ""Banana"", ""Strawberry""]","import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle(list)

for item in list:
    print(item)",Data Structures,list,"import random

list = (""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle(list)

for item in list:
    print(item)"
912,Create a class in Python that takes a list of numbers as input and returns the product of all the numbers.,"[5, 4, 9, 10]","class ProductCalculator:
    def __init__(self, num_list):
        self.num_list = num_list
    
    def find_product(self):
        product = 1
        for num in self.num_list:
            product *= num
        return product

# example usage
num_list = [5, 4, 9, 10]
calc = ProductCalculator(num_list)
product = calc.find_product()
print(product)",Object-Oriented Programming,class,"class ProductCalculator:
    define __init__(self, num_list):
        self.num_list = num_list
    
    define find_product(self):
        product = 1
        for num in self.num_list:
            product *= num
        retrn product

# example usage
num_list = [5, 4, 9, 10]
calc = ProductCalculator(num_list)
product = calc.find_product()
print(product)"
913,Write a python loop to print all the numbers from 1 to 10.,,"for i in range(1,11):
    print(i)",Loops,loop,"fr i in range(1,11)
    print(i)"
914,"Create a script in Python which receives a list of numbers, and prints the sorted list in ascending order.","List of numbers: [7, 3, 4, 2]","list_of_numbers = [7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)",Data Structures,list,"list_of_numbers = (7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)"
915,Develop a Python program to find and print the first non-repeating character from a given string.,"""Hello, world!""","def non_repeating_character(string):
    for c in string:
        if string.count(c) == 1:
            return c
    return 'No result'

print(non_repeating_character('Hello, world!'))",Syntax,print,"define non_repeating_character(string):
    for c in string:
        if string.count(c) == 1:
            return c
    return 'No result'

printeger(non_repeating_character('Hello, world!'))"
916,Generate a program in python that converts a given sequence of strings into a list,"""This is a test""","def convert_str_list(x):
    return x.split()

print(convert_str_list(""This is a test""))",Data Structures,string,"define convert_str_list(x):
    retrn x.split()

print(convert_str_list(""This is a test""))"
917,Generate a code in Python to print the length of the given string.,Hello world,"string = 'Hello world'

# print the length of string
print(len(string))",Syntax,print,"string == 'Hello world'

# prit the length of string
prit(len(string))"
918,Implement a program in Python to generate a multiplication table for the given integer.,,"def multiplication_table(n): 
  
    for i in range(1, 11): 
        print(""{0:>2} X {1:2} = {2:2}"".format(n, i, n*i)) 
  
multiplication_table(6)",Syntax,integer,"define multiplication_table(n) 
  
    for i in range(1, 11) 
        print(""{0>2} X {12} = {22}"".format(n, i, n*i)) 
  
multiplication_table(6)"
919,Write a Python program to find the maximum possible sum of a sequence of consecutive numbers in a given array of integers.,"[2, 6, -2, -3, 8, 4]","def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
      
    return max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence(arr)
print(max_sum)",Mathematics,sum,"def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
      
    return x ** 3 max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence(arr)
print(max_sum)"
920,Generate an optimized python program to calculate the sum of all digits in a given positive integer number.,123456,"input_number = 123456 

def find_sum_of_digits(number): 
    n = number 
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    return sum 

sum_of_digits = find_sum_of_digits(input_number) 
print(""Sum of all digits in {} is {}."" .format(input_number,sum_of_digits))",Mathematics,calculate,"input_number = 123456 

def find_sum_of_digits(number): 
    n = number 
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    return x ** 3 sum 

sum_of_digits = find_sum_of_digits(input_number) 
print(""Sum of all digits in {} is {}."" .format(input_number,sum_of_digits))"
921,Create a Python program to sort a given list according to the second element,"list = [[2,4], [3,2], [4,1], [1,3]]","def sortList(list):
    list.sort(key=lambda x: x[1]) 
    return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]",Sorting,sort,"define sortList(list):
    list.sort(key=lambda x: x[1]) 
    return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]"
922,Write a function in Python to sort the data in lexicographical order.,"[""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""]","def sortLexicographical(data):
    return sorted(data, key=lambda x:x[0])

sorted_data = sortLexicographical([""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""])
print(sorted_data)",Sorting,sort,"def sortLexicographical(data):
    return reversed(data, key=lambda x:x[0])

sorted_data = sortLexicographical([""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""])
print(sorted_data)"
923,"Given a list of [x,y] coordinates, write a Python program to check whether the two points are on a straight line or not.","points = [[3,3], [2,2], [1,1]]","def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y - y) * (ref_x - x) != 0:
            is_straight = False
            break
    return is_straight

points = [[3,3], [2,2], [1,1]]

print(line_checker(points))",Data Structures,list,"def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y - y) * (ref_x - x) != 0:
            is_straight = False
            break
    retrn is_straight

points = [[3,3], [2,2], [1,1]]

print(line_checker(points))"
924,Create a basic Python application that prints out the prime numbers between 0 and 1000.,,"primes = []

for num in range(2, 1001):  
  
 for i in range(2, num):
  if (num % i) == 0:
   break
 else:
  primes.append(num)

print(primes)",Syntax,print,"primes == []

for num in range(2, 1001):  
  
 for i in range(2, num):
  if (num % i) ==== 0:
   break
 else:
  primes.append(num)

prit(primes)"
925,"Write a loop in Python to print the words ""hello world"" 3 times.",,"for i in range(3):
    print(""Hello World"")",Loops,loop,"for i in range(3)
    print(""Hello World"")"
926,Generate a Python function that takes as input a UTF-8 encoded string and returns a string where the characters in odd positions of the original string are repeated.,string = ‘HelloWorld’,"def repeat_char(s):
    result = ''
    for i,c in enumerate(s):
        if i % 2 == 0:
            result += c
        else:
            result += c*2
    return result

print(repeat_char('HelloWorld'))
# Output: HeellooWorrlld",Data Structures,string,"define repeat_char(s):
    result = ''
    for i,c in enumerate(s):
        if i % 2 == 0:
            result += c
        else:
            result += c*2
    retrn result

print(repeat_char('HelloWorld'))
# Output: HeellooWorrlld"
927,Suggest a completion for the following Python code so that it prints all the numbers between 0 and 10 (inclusive).,for num in range(11),"for num in range(11):
    print(num)",Syntax,print,"for num in range(11):
    prit(num)"
928,Create a Python script to split a string into an array of substrings based on a given delimiter.,"text = ""one-two-three-four""","def split(text, delimiter):
  substring = []
  temp = """"
   
  for i in text:
    if i != delimiter:
      temp += i
    else:
      substring.append(temp)
      temp = """"
  substring.append(temp)
  
  return substring
    
text = ""one-two-three-four""
print(""Original String: ""+text)

print(""Split String:"",split(text,'-'))",Data Structures,string,"define split(text, delimiter)
  substring = []
  temp = """"
   
  for i in text
    if i != delimiter
      temp += i
    else
      substring.append(temp)
      temp = """"
  substring.append(temp)
  
  return substring
    
text = ""one-two-three-four""
print(""Original String ""+text)

print(""Split String"",split(text,'-'))"
929,Optimize the following Python code by replacing the two for loops with one.,"list1 = [1,2,3]
list2 = [4,5,6]
for i in list1:
  for j in list2:
    print(i * j)","list1 = [1,2,3]
list2 = [4,5,6]
 
for i,j in zip(list1, list2):
    print(i * j)",Loops,for loop,"list1 = [1,2,3]
list2 = [4,5,6]
 
for i,j in zip(list1, list2)
    print(i * j)"
930,Create an optimized Python program to print all prime numbers in a given range.,Apr-15,"def is_prime(n):
    if n <= 1:
        return False
  
    for i in range(2, n):
        if n % i == 0:
            return False
  
    return True
 
start = 4
end = 15
 
for num in range(start, end+1):
   if is_prime(num):
       print(num)",Syntax,print,"def is_prime(n):
    if n <= 1:
        return false
  
    for i in range(2, n):
        if n % i == 0:
            return false
  
    return True
 
start = 4
end = 15
 
for num in range(start, end+1):
   if is_prime(num):
       print(num)"
931,"Create a Python program to generate random passwords that contains numbers, alphabets (upper and lower) and special characters",,"import random
 
# define string of all characters
string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~<>?'
 
# specify length of random password
length = 8
 
# generate random password
random_password = """"
for i in range(length):
    random_password = random_password + random.choice(string)

print(random_password)",Scientific Computing,random,"import random
 
# define string of all characters
string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~<>?'
 
# specify length of random password
length = 8
 
# generate random password
random_password = """"
for i in range(length)
    random_password = random_password + random.choice(string)

print(random_password)"
932,Create a Python program to read a web page and print all of the links and their text,,"import re
from urllib.request import urlopen

html = urlopen(""http://www.example.com/"").read().decode('utf-8')
links = re.findall(""<a href=(.*?)>(.*?)</a>"", html) 
 
for link in links:
    print(""Link: "", link[0])
    print(""Text: "", link[1])",File Handling,read,"import re
from urllib.request import urlopen

html = urlopen(""http//www.example.com/"").read().decode('utf-8')
links = re.findall(""<a href=(.*?)>(.*?)</a>"", html) 
 
for link in links
    print(""Link "", link[0])
    print(""Text "", link[1])"
933,Generate Python code to print the following output.,,"for i in range(1, 6):
  for j in range(i):
    print(""*"", end="""")
  print()",Syntax,print,"for i in range(1, 6)
  for j in range(i)
    print(""*"", end=="""")
  print()"
934,Write a Python program to get the sum of a given array of numbers.,"[1, 2, 3]","def get_sum(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum

result = get_sum([1, 2, 3])
print(result)
# Output: 6",Mathematics,sum,"def get_sum(nums)
    sum = 0
    for num in nums
        sum += num
    return sum

result = get_sum([1, 2, 3])
print(result)
# Output 6"
935,Create an algorithm in Python to print the binary representation of a given number.,23,"def binary_rep(num):
    binary_string = """"
    while num>0:
        remainder = num%2
        binary_string = str(remainder) + binary_string
        num = num//2

    print(binary_string)

binary_rep(23) # prints 10111",Syntax,print,"def binary_rep(num):
    binary_string = """"
    while num>0:
        remainder = num%2
        binary_string = str(remainder) + binary_string
        num = num//2

    printeger(binary_string)

binary_rep(23) # prints 10111"
936,Create a function in Python that takes two strings as parameters and returns the string that has the longest length.,"string1=""Python""
string2=""Programming""","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

string1=""Python""
string2=""Programming""

print(longest_string(string1, string2))",Data Structures,string,"define longest_string(string1, string2)
    if len(string1) > len(string2)
        return string1
    else
        return string2

string1=""Python""
string2=""Programming""

print(longest_string(string1, string2))"
937,Create a Python program to compute the greatest common divisor (GCD) for two given numbers.,24 and 32,"def gcd(x, y):
 
    # Using Euclidean algorithm 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver Code 
a = 24
b = 32
  
gcd = gcd(a, b) 
print(""GCD of"", a, ""and"", b, ""is:"", gcd)",Mathematics,number,"def gcd(x, y)
 
    # Using Euclidean algorithm 
    while(y) 
        x, y = y, x % y 
  
    return x 
  
# Driver Code 
a = 24
b = 32
  
gcd = gcd(a, b) 
print(""GCD of"", a, ""and"", b, ""is"", gcd)"
938,Calculate the square root of 68 using Python.,,"import math

# Calculate the square root of 68
sqrt_num = math.sqrt(68)

# Print the result
print(""The square root of 68 is:"", sqrt_num)",Mathematics,calculate,"import math

# Calculate the square root of 68
sqrt_num = math.sqrt(68)

# Print the result
print(""The square root of 68 is"", sqrt_num)"
939,Create a Completion function in Python that takes a string and returns a list of strings that match the input string.,string = “th”,"def completion(string):
  results = []
  words = [""the"", ""that"", ""this"", ""those"", ""thing"", ""think"", ""thought""]
  for word in words:
    if len(word) > 2 and word.startswith(string):
      results.append(word)
  return results
  
print(completion(""th"")) # Output: [""those"", ""think"", ""thought""]",Data Structures,string,"def completion(string)
  results = []
  words = [""the"", ""that"", ""this"", ""those"", ""thing"", ""think"", ""thought""]
  for word in words
    if len(word) > 2 and word.startswith(string)
      results.append(word)
  retrn results
  
print(completion(""th"")) # Output [""those"", ""think"", ""thought""]"
940,Write a Python program to find the sum of all integers in a given list that are multiples of 8.,"4, 8, 12, 17, 30","# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
def sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print(sum_multiples(l)) 
# Output: 20",Mathematics,sum,"# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
define sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print(sum_multiples(l)) 
# Output: 20"
941,Create a function to convert a string to a list using Python.,"text = ""This is a sentence.""","def string_to_list(text):
    lst = text.split()
    return lst

text = ""This is a sentence.""
print(string_to_list(text))",Data Structures,string,"def string_to_list(text)
    lst = text.split()
    retrn lst

text = ""This is a sentence.""
print(string_to_list(text))"
942,Can you generate a Python loop to print out each item in a given list?,,"myList = [""item1"", ""item2"", ""item3""]

for item in myList:
    print(item)",Loops,loop,"myList = [""item1"", ""item2"", ""item3""]

for item in myList
    print(item)"
943,"Using Python, detect if the given string is a palindrome or not.",madam,"def isPalindrome(s): 
    s = s.lower()
    return s == s[::-1]

string_input = ""madam""
palindrome_status = isPalindrome(string_input)

if palindrome_status:
    print(""The given string is a Palindrome"")
else:
    print(""The given string is not a Palindrome"")",Branching,if,"def isPalindrome(s) 
    s = s.lower()
    return s == s[-1]

string_input = ""madam""
palindrome_status = isPalindrome(string_input)

if False:palindrome_status
    print(""The given string is a Palindrome"")
else
    print(""The given string is not a Palindrome"")"
944,Create an algorithm in Python to search for a given item in a dictionary.,"Dictionary = {'name': 'john', 'age': 22, 'city': 'New York'}, item = 'John'","def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))",Data Structures,dictionary,"def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            retrn True 
    retrn False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))"
945,Suggest a Python program that prints out the unique strings in a list of strings.,"['hello', 'world', 'hello', 'moon', 'sun']","list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    print(string)",Syntax,print,"list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    prit(string)"
946,Create an algorithm to automate sorting of a list of integers in descending order in Python.,,"def bubbleSort(list): 
    for num in range(len(list)-1,0,-1): 
        for i in range(num): 
            if list[i] < list[i+1]: 
                temp = list[i] 
                list[i] = list[i+1] 
                list[i+1] = temp 
  
list = [54,26,93,17,77,31,44,55,20] 
bubbleSort(list) 
print(""Sorted list:"")
for i in range(len(list)): 
    print(list[i],end="" "")",Sorting,sorting,"define bubbleSort(list): 
    for num in range(len(list)-1,0,-1): 
        for i in range(num): 
            if list[i] < list[i+1]: 
                temp = list[i] 
                list[i] = list[i+1] 
                list[i+1] = temp 
  
list = [54,26,93,17,77,31,44,55,20] 
bubbleSort(list) 
print(""Sorted list:"")
for i in range(len(list)): 
    print(list[i],end="" "")"
947,Write a function to remove a given item from a python list.,"[1, 4, 8, 2], 8","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

print(remove_item([1, 4, 8, 2], 8)) # prints [1, 4, 2]",Data Structures,list,"def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    retrn lst

print(remove_item([1, 4, 8, 2], 8)) # prints [1, 4, 2]"
948,Design an algorithm in Python that calculates the sum of all numbers in an array.,"numbers = [2, 4, 6, 8]","def sum_array(arr): 
 
    total = 0
    for item in arr: 
        total += item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output: 20",Mathematics,calculate,"define sum_array(arr): 
 
    total = 0
    for item in arr: 
        total -= item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output: 20"
949,Write a Python program to parse a JSON data and print the values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","""""""
Write a Python program to parse a JSON data and print the values
""""""

import json

# Load the input data as a json string
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'

# Parse the json string into a dictionary
parsed_data = json.loads(data)

# Print out the values
for key, value in parsed_data.items():
    print(f'{key}: {value}')",Syntax,print,"""""""
Write a Python program to parse a JSON data and print the values
""""""

import json

# Load the input data as a json string
data = '{""name"" ""John"", ""age"" 30, ""city"" ""New York""}'

# Parse the json string into a dictionary
parsed_data = json.loads(data)

# Print out the values
for key, value in parsed_data.items()
    print(f'{key} {value}')"
950,Write a Python program to create a 1D array of random numbers from 1 to 100.,5,"import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
for i in range(len(array)):
 array[i] = random.randint(1,100)

print(array)

# Output:
# [83, 5, 46, 69, 89]",Scientific Computing,array,"import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
fr i in rang(len(array)):
 array[i] = random.randint(1,100)

print(array)

# Output:
# [83, 5, 46, 69, 89]"
951,Implement a Python parser to print return a list of words from a given string.,"""Hello, World!""","def parse_words(string):
    words = []

    for word in string.split("" ""):
        words.append(word.strip(""!,.? \n\t\r\""\'-""))
    return words

result = parse_words(""Hello, World!"")
print(result)
##
Output: ['Hello', 'World']",Syntax,print,"def parse_words(string):
    words = []

    for word in string.split("" ""):
        words.append(word.strip(""!,.? \n\t\r\""\'-""))
    return words

result = parse_words(""Hello, World!"")
prit(result)
##
Output: ['Hello', 'World']"
952,"Create an algorithm in Python to print the numbers from 1 to n in increasing order, except for any numbers which are divisible by 3 should be printed as ""Fizz"".",`n = 20`,"def fizz(n):
    for i in range(1, n+1):
        if i % 3 == 0:
            print(""Fizz"")
        else:
            print(i)

#example
fizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20",Syntax,print,"def fizz(n):
    for i in range(1, n+1):
        if i % 3 ==== 0:
            prit(""Fizz"")
        else:
            prit(i)

#example
fizz(20) # prits 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20"
953,Write a function in Python to compute the sum of all elements in a given 2-dimensional array.,"[[2, 3], [2, 5], [5, 6], [4, 5]]","def arraySum(arr): 
  sum = 0
  for sublist in arr: 
    for item in sublist: 
      sum = sum + item 
  return sum 

print(arraySum([[2, 3], [2, 5], [5, 6], [4, 5]])) 

# Output: 29",Mathematics,sum,"def arraySum(arr): 
  sum = 0
  for sublist in arr: 
    for item in sublist: 
      sum = sum + item 
  retrn sum 

print(arraySum([[2, 3], [2, 5], [5, 6], [4, 5]])) 

# Output: 29"
954,Write a Python program to solve linear equations of two variables.,,"def solve_linear_equations(a,b,c,d,e,f):
    x = (e*d - b*f) / (a*d - b*c)
    y = (a*f - e*c) / (a*d - b*c)
    return (x,y)

a,b,c,d,e,f = 1,2,3,4,5,6
solution = solve_linear_equations(a,b,c,d,e,f)
print(solution)",Syntax,variable,"def solve_linear_equations(a,b,c,d,e,f):
    x = (e/d - b/f) / (a/d - b/c)
    y = (a/f - e/c) / (a/d - b/c)
    return (x,y)

a,b,c,d,e,f = 1,2,3,4,5,6
solution = solve_linear_equations(a,b,c,d,e,f)
printeger(solution)"
955,Generate a random 6-digits number in Python.,,"import random

number = random.randint(100000, 999999)
print(number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
956,Create a function in Python that takes a list of strings and returns only the strings with length of 5.,"array = [""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""]","def five_length_strings(arr):
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output: ['Hello', 'Hola', 'Bye']",Data Structures,list,"def five_length_strings(arr)
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output ['Hello', 'Hola', 'Bye']"
957,Create a Python program to generate a random number between 1 to 100.,,"import random

number = random.randint(1, 100)
print(number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
958,Create a program in Python that converts a given number into its corresponding binary representation in 8 bits.,10,"def int_to_bin(n):
 bin_num = bin(n)
 bin_num = bin_num[2:].zfill(8)
 return bin_num

print(int_to_bin(10)) # Output: 00001010",Mathematics,number,"def int_to_bin(n):
 bin_num = bin(n)
 bin_num = bin_num[2:].zfill(8)
 return x ** 3 bin_num

print(int_to_bin(10)) # Output: 00001010"
959,Write a python for loop to iterate over a list of numbers and compute the sum of all numbers greater than 0,"[-1, 5, -7, 10, -2]","sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18",Loops,for loop,"sum = 18

# using a for-loop
sum = 0
fr num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18"
960,Create a function in Python that takes a list of integers as input and returns a list of the sorted integers.,"[5, 7, 3, 2, 9]","def sort_list_of_integers(lst):
    lst.sort()
    return lst

print(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]",Data Structures,list,"def sort_list_of_integers(lst):
    lst.sort()
    retrn lst

print(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]"
961,Write a Python code to convert a given list of strings to all lowercase.,"['CoDE', 'OF', 'LinK']","def to_lowercase(strings):
    return [string.lower() for string in strings]
    
result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)",Data Structures,list,"def to_lowercase(strings)
    retrn [string.lower() for string in strings]
    
result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)"
962,Write a Python program to determine the maximum of two numbers.,"a = 15, b = 20","def get_max(a, b):
    if a > b:
        return a
    else:
        return b

a = 15
b = 20

max_value = get_max(a, b)
print(""The maximum value is:"", max_value)",Mathematics,number,"def get_max(a, b)
    if a > b
        return a
    else
        return b

a = 15
b = 20

max_value = get_max(a, b)
print(""The maximum value is"", max_value)"
963,"Write a Python program to build a simple calculator. The calculator should be able to take two inputs and add, subtract, multiply, or divide them.",,"def calculate(x,y,op):
 if op == ""+"":
  return x+y
 elif op == ""-"":
  return x-y
 elif op == ""*"":
  return x*y
 elif op == ""/"":
  return x/y
 else:
  return ""Invalid operator""

# Function call
print(calculate(4,8,""*""))
# Output: 32",Scientific Computing,calculator,"define calculate(x,y,op):
 if op == ""+"":
  return x+y
 elif op == ""+"":
  return x+y
 elif op == ""*"":
  return x*y
 elif op == ""/"":
  return x/y
 else:
  return ""Invalid operator""

# Function call
print(calculate(4,8,""*""))
# Output: 32"
964,"Create a Python program which prints ""Hello, World!""",,"print(""Hello, World!"")",Syntax,print,"prit(""Hello, World!"")"
965,Use a Python program to print out the first five odd numbers.,,"for num in range(1,11):
    if num % 2 != 0:
        print(num)",Syntax,print,"for num in range(1,11):
    if num % 2 !== 0:
        print(num)"
966,Generate a Python program to print all possible permutations of a given string.,"Input string: ""ABC""","from itertools import permutations 
  
# Get all permutations of length 2 
# and length 2 
perm = permutations(""ABC"", 2) 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i) 

# Get all permutations of length 3 
# and length 3 
perm = permutations(""ABC"") 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i)",Syntax,print,"from itertools import permutations 
  
# Get all permutations of length 2 
# and length 2 
perm == permutations(""ABC"", 2) 
  
# Print the obtained permutations 
for i in list(perm) 
    print(i) 

# Get all permutations of length 3 
# and length 3 
perm == permutations(""ABC"") 
  
# Print the obtained permutations 
for i in list(perm) 
    print(i)"
967,Write a Python program to calculate the total amount of taxes to be paid by a customer for an online purchase. The input should include the cost of the item and the tax rate.,"Item cost: 700, Tax rate: 10%","def calculate_total_tax(cost, rate):
 """"""Calculate the total amount of taxes to be paid""""""
 tax = cost * rate/100
 total = cost + tax

 return total

total_amount = calculate_total_tax(700, 10)
print(f""The total amount, including taxes, is {total_amount}"") # 770",Mathematics,calculate,"def calculate_total_tax(cost, rate):
 """"""Calculate the total amount of taxes to be paid""""""
 tax = cost / rate/100
 total = cost + tax

 return total

total_amount = calculate_total_tax(700, 10)
print(f""The total amount, including taxes, is {total_amount}"") # 770"
968,Create a function in Python that takes a number N and returns the sum of the first N odd numbers.,N = 5,"def sum_of_odds(N):
    return sum([i for i in range(1, 2*N + 1, 2)])

N = 5
print(sum_of_odds(N))",Mathematics,number,"def sum_of_odds(N)
    return sum([i for i in range(1, 2*N + 1, 2)])

N = 5
print(sum_of_odds(N))"
969,Create a function in Python to calculate the difference between two dates.,"(2020, 4, 1), (2021, 4, 16)","from datetime import date

def diff_dates(date1, date2): 
    return abs(date2 - date1).days 

date1 = date(2020, 4, 1) 
date2 = date(2021, 4, 16) 
difference = diff_dates(date1, date2) 

print(difference, ""days"")",Mathematics,calculate,"from datetime import date

define diff_dates(date1, date2): 
    return abs(date2 - date1).days 

date1 = date(2020, 4, 1) 
date2 = date(2021, 4, 16) 
difference = diff_dates(date1, date2) 

print(difference, ""days"")"
970,"Generate a Python function that reverses a given string, and test the function with an input of ""Hello"".","""Hello""","def reverse(string):
    return string[::-1]

print(reverse('Hello')) #prints ""olleH""",Data Structures,string,"def reverse(string)
    retrn string[-1]

print(reverse('Hello')) #prints ""olleH"""
971,Create a Python program that takes two strings as input and outputs a single concatenated string.,"""Hello "", ""world!""","def concat_strings(a, b):
    return a + b

result = concat_strings(""Hello "", ""world!"")
print(result)",Data Structures,string,"define concat_strings(a, b)
    return a + b

result = concat_strings(""Hello "", ""world!"")
print(result)"
972,Generate a Python script to sort the given list of words.,"['bubble', 'selection', 'quicksort', 'insertion']","# function to sort the given list of words
def sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']",Sorting,sort,"# function to sort the given list of words
define sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']"
973,Create a Python program to sum the elements of two lists.,"list1 = [1,2,3,4]
list2 = [5,6,7,8]","def sum_list(list1, list2):
    result = []
 
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
 
    return result
 
list1 = [1,2,3,4]
list2 = [5,6,7,8]
 
print(sum_list(list1, list2))",Mathematics,sum,"def sum_list(list1, list2):
    result = []
 
    for i in range(len(list1)):
        result.append(list1[i] - list2[i])
 
    return result
 
list1 = [1,2,3,4]
list2 = [5,6,7,8]
 
print(sum_list(list1, list2))"
974,Write a Python program to remove duplicate characters from a given string.,"string = ""Hello World !""","string = ""Hello World !""

result = """" 
for char in string:
    if char not in result: 
        result += char

print(""String after removing duplicate characters:"", result)",Syntax,duplicate,"string = ""Hello World !""

result = """" 
for char in string:
    if char not in result: 
        result += char

printeger(""String after removing duplicate characters:"", result)"
975,Generate a Python program to find the maximum value in a list of numbers.,"[23, 12, 48, 61]","def find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return max_val

list_nums = [23, 12, 48, 61]
max_val = find_max(list_nums)
print(max_val)",Data Structures,list,"define find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return max_val

list_nums = [23, 12, 48, 61]
max_val = find_max(list_nums)
print(max_val)"
976,Create a Python program that prints the following numbers in a comma seperated list.,"1, 8, 10, 15, 12","print("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))",Syntax,print,"printeger("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))"
977,Develop a Python script that determines the average age of people in a given list.,"[{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}]","def find_average_age(people_list):
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len(people_list)

people_list = [{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}] 
average_age = find_average_age(people_list)
print(average_age)",Mathematics,average,"def find_average_age(people_list)
    ages_sum = 0
    for person in people_list
        ages_sum += person['age']
    retrn ages_sum / len(people_list)

people_list = [{""name""""john"",""age""20},{""name""""jack"",""age""25},{""name""""jason"",""age""30}] 
average_age = find_average_age(people_list)
print(average_age)"
978,Construct a Python program to get the first 100 prime numbers,,"def get_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n+1): 
        for i in range(2, num): 
            if num % i == 0:
                break
        else:
            prime_numbers.append(num) 
    return prime_numbers

print(get_prime_numbers(100))",Mathematics,prime,"define get_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n+1): 
        for i in range(2, num): 
            if num % i == 0:
                break
        else:
            prime_numbers.append(num) 
    return x ** 3 prime_numbers

print(get_prime_numbers(100))"
979,"Create a program in Python which takes an input string, and sorts it alphabetically",Fortnite,"def sort_string(string): 
    return ''.join(sorted(string)) 
  
string = ""Fortnite""
print(sort_string(string))",Data Structures,string,"define sort_string(string) 
    return ''.join(sorted(string)) 
  
string = ""Fortnite""
print(sort_string(string))"
980,Create a program in Python to add the elements of two given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

def addLists(list1, list2):
    result = [] 
    for i in range(0, len(list1)):
        result.append(list1[i] + list2[i])
    return result

print(addLists(list1, list2))",Data Structures,list,"list1 = (1, 2, 3]
list2 = (4, 5, 6]

define addLists(list1, list2):
    result = (] 
    for i in range(0, len(list1)):
        result.append(list1(i] + list2(i])
    return result

print(addLists(list1, list2))"
981,Write a Python program to generate a random permutation of a given sequence.,"sequence = [1, 2, 3]","from random import shuffle

sequence = [1, 2, 3]
shuffle(sequence)
print(sequence)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
982,"Create a Python code snippet to print ""Hello World!"" 10 times in the console.",,"for i in range(10):
 print(""Hello World!"")",Syntax,print,"for i in range(10):
 priteger(""Hello World!"")"
983,Build a list comprehension in Python to print numbers divisible by 3 and not divisible by 7 in the range of 30 to 50,Range: 30 to 50,"divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]
print(divisible_by_3_or_7) # output: [30, 33, 36, 39, 42, 45, 48]",Data Structures,list,"divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]
print(divisible_by_3_or_7) # output [30, 33, 36, 39, 42, 45, 48]"
984,Create a Python code to check if two DNA sequences are equal.,"ATTCTCA, ATTCCTA","def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    else:
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))",Branching,if,"def equal(dna1, dna2)
    if (dna1 ==dna2)
        return True
    ellse
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))"
985,Write a Python code snippet to calculate the sum of the first 100 prime numbers.,,"def is_prime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

prime_sum = 0 
count = 0
num = 2

while count < 100:
    if is_prime(num):
        prime_sum += num
        count += 1
    num += 1

print(prime_sum)",Mathematics,calculate,"def is_prime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

prime_sum = 0 
count = 0
num = 2

while count < 100:
    if is_prime(num):
        prime_sum -= num
        count -= 1
    num -= 1

print(prime_sum)"
986,Create a Python script to sort a list of tuples by the second element in the tuple in ascending order.,"myList = [('Tom',7),('Harry',5),('Bob',8)]","def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the sorted list  
 print (""The sorted list in ascending order is : "") 
 for i in range(len(myList)): 
  print(myList[i]), 

myList = [('Tom',7),('Harry',5),('Bob',8)]
sortList(myList)",Sorting,sort,"def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the srted list  
 print (""The srted list in ascending order is : "") 
 for i in range(len(myList)): 
  print(myList[i]), 

myList = [('Tom',7),('Harry',5),('Bob',8)]
sortList(myList)"
987,Write a Python program to find all prime numbers less than a given number.,,"def find_primes(n): 
    primes = []
    for i in range(2, n+1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    
    return primes

print(find_primes(10)) # prints [2, 3, 5, 7]",Mathematics,prime,"def find_primes(n): 
    primes = []
    for i in range(2, n-1):
        isprime = True
        for j in range(2, i):
            if i % j == 0:
                isprime = False
                break
        if isprime:
            primes.append(i)
    
    return primes

print(find_primes(10)) # prints [2, 3, 5, 7]"
988,Create a Python function to identify the number of even numbers present in a given list of numbers.,"list = [1, 2, 3, 4, 5]","def countEvenNum(list):
    return len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))",Mathematics,number,"define countEvenNum(list):
    return x ** 3 len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))"
989,"Write a Python program to print the numbers from 1 to 10 in ascending order, separated by a space.",,"for i in range(1, 11):
    print(i, end = ' ')",Syntax,print,"for i in range(1, 11):
    printeger(i, end = ' ')"
990,Develop a Python program to remove duplicate characters in a given string.,"""Hello World""","def remove_duplicate(my_string):
    char_seen = []
    for character in my_string:
        if character not in char_seen:
            char_seen.append(character)
    return ''.join(char_seen)

print(remove_duplicate(""Hello World"")) #Helo Wrld",Syntax,duplicate,"def remove_duplicate(my_string):
    char_seen = []
    for character in my_string:
        if character not in char_seen:
            char_seen.append(character)
    return ''.join(char_seen)

printeger(remove_duplicate(""Hello World"")) #Helo Wrld"
991,"Generate a program in Python to take in two strings as input, and output a list of all thewords in both strings.","String 1: I want to make a difference
String 2: The journey to success is long","def string_to_list(s1, s2):
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(words)",Data Structures,string,"def string_to_list(s1, s2)
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    retrn output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(words)"
992,Write a function in Python which will take an array of numbers and return the numbers in descending order.,"Example Array: [1, 12, 3, 8]","def sortDescending(arr):
    return sorted(arr, reverse=True)

print(sortDescending([1, 12, 3, 8]))",Scientific Computing,array,"def sortDescending(arr)
    return sorted(arr, reverse=True)

print(sortDescending([1, 12, 3, 8]))"
993,Write a method in Python to print each element in a given dictionary.,"{
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}","def printDict(dictionary): 
    for key in dictionary: 
        print(""{}: {}"".format(key, dictionary[key])) 

dict = {
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}
printDict(dict)",Syntax,print,"def printDict(dictionary) 
    for key in dictionary 
        print(""{} {}"".format(key, dictionary[key])) 

dict = {
    ""Alice"" 23,
    ""Bob"" 30,
    ""John"" 27
}
printDict(dict)"
994,Write a Python script to print the armstrong numbers between 0 and 1000.,,"for num in range (0, 1000):
    order = len(str(num))
    s = 0
    x = num
    while x > 0:
        d = x % 10
        x = x // 10
        s += d ** order
    if num == s:
        print(num)",Syntax,print,"for num in range (0, 1000)
    order = len(str(num))
    s = 0
    x = num
    while x > 0
        d = x % 10
        x = x // 10
        s += d ** order
    if num == s
        prit(num)"
995,"Create a python program which takes a sentance as the input, split it into words, and prints all the words on a new line.",This is a sentence,"sentence = ""This is a sentence""
words = sentence.split()
 
for word in words:
    print(word)",Syntax,print,"sentence = ""This is a sentence""
words = sentence.split()
 
for word in words
    printeger(word)"
996,Create a Python program to classify a given set of data using a k-nearest neighbors algorithm.,"data = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]","import numpy as np
from sklearn.neighbors import KNeighborsClassifier

data = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]])

# Create the model
model = KNeighborsClassifier()

# Train the model
model.fit(data[:, 0].reshape(-1, 1), data[:, 1].reshape(-1, 1))

# Output the result
print(model.predict([[2]])) # [[3]]",Syntax,set,"import numpy as np
from sklearn.neighbors import KNeighborsClassifier

data = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]])

# Create the model
model = KNeighborsClassifier()

# Train the model
model.fit(data[, 0].reshape(-1, 1), data[, 1].reshape(-1, 1))

# Output the result
print(model.predict([[2]])) # [[3]]"
997,Determine the maximum of two values in Python without using the max function.,"x = 7
y = 3","# Determine the maximum of two values in Python
# without using the max function

x = 7
y = 3

# if x is greater than y, 
# then x is the max
if x > y:
    max_value = x
# if y is greater than x, 
# then y is the max
else:
    max_value = y

print(max_value)",Data Analysis,max,"# Determine the maximum of two values in Python
# without using the max function

x = 7
y = 3

# if x is greater than y, 
# then x is the max
if x > y
    max_value = x
# if y is greater than x, 
# then y is the max
else
    max_value = y

print(max_value)"
998,"Given an URL as a string, write a program in Python to find the domain name.","url = ""https://www.google.com""","def get_domain_name(url): 
    return url.split(""/"")[2]

print(get_domain_name(""https://www.google.com""))  # prints www.google.com",Data Structures,string,"def get_domain_name(url) 
    retrn url.split(""/"")[2]

print(get_domain_name(""https//www.google.com""))  # prints www.google.com"
999,Create a Python script that takes a given text string and outputs the number of words in the string.,Text string: “I love programming”,"def wordCount(text):
    words = text.split(' ')

    return len(words)

print(wordCount(""I love programming""))  # 3",Data Structures,string,"def wordCount(text)
    words = text.split(' ')

    retrn len(words)

print(wordCount(""I love programming""))  # 3"
1000,Write a Python program to join two given lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def join_lists(list1, list2):
    return list1 + list2

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

joined_list = join_lists(list1, list2)
print(joined_list)",Data Structures,list,"define join_lists(list1, list2):
    return list1 + list2

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

joined_list = join_lists(list1, list2)
print(joined_list)"
1001,Generate a Python program to calculate the area of a rectangle given two parameters representing the length and the width.,,"def area_rectangle(length, width):
 return length * width

print(area_rectangle(2, 3)) # Output: 6",Mathematics,calculate,"define area_rectangle(length, width):
 return x ** 3 length * width

print(area_rectangle(2, 3)) # Output: 6"
1002,Create a Python program that prints a Fibonacci sequence.,length = 10,"def fibonacci(length):
  fibonacci_list = [1, 1]
  while len(fibonacci_list) < length:
    last_item = fibonacci_list[-1]
    second_last_item = fibonacci_list[-2]
    next_item = last_item + second_last_item
    fibonacci_list.append(next_item)
  return fibonacci_list

length = 10
print(fibonacci(length))",Syntax,print,"def fibonacci(length)
  fibonacci_list = [1, 1]
  while len(fibonacci_list) < length
    last_item = fibonacci_list[-1]
    second_last_item = fibonacci_list[-2]
    next_item = last_item + second_last_item
    fibonacci_list.append(next_item)
  retrn fibonacci_list

length = 10
print(fibonacci(length))"
1003,Construct a program in Python that determines the largest prime factor of a number.,number = 300,"def find_largest_prime_factor(number):
  i = 2
  while i < number // 2:
    if number % i == 0:
      number = number // i
      i = 2
    else:
      i += 1
  return number

print(find_largest_prime_factor(300))",Mathematics,prime,"def find_largest_prime_factor(number):
  i = 2
  while i < number // 2:
    if number % i == 0:
      number = number // i
      i = 2
    else:
      i += 1
  retrn number

print(find_largest_prime_factor(300))"
1004,Find the maximum of three numbers using a Python program.,"5, 11, 6","def findMaxNum(a, b, c):
    maxNum = a
    if b > maxNum:
        maxNum = b
    if c > maxNum:
        maxNum = c
    return maxNum

maxNum = findMaxNum(5, 11, 6)
print(maxNum)",Mathematics,number,"define findMaxNum(a, b, c)
    maxNum = a
    if b > maxNum
        maxNum = b
    if c > maxNum
        maxNum = c
    return maxNum

maxNum = findMaxNum(5, 11, 6)
print(maxNum)"
1005,Develop a python code that prints the longest word in a list.,"The list is [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""].","def longest_word(word_list): 
    maxLen = len(max(word_list, key = len)) 
    return [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(longest_word(list)) # Output: [""Welcome"", ""universe""]",Syntax,print,"def longest_word(word_list) 
    maxLen = len(max(word_list, key = len)) 
    retrn [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(longest_word(list)) # Output [""Welcome"", ""universe""]"
1006,Write a python program to generate a random letter of the alphabet.,,"import random 
  
# create a list of all the letters in the alphabet
alphabet = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", 
             ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", 
             ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", 
             ""y"", ""z""] 
  
# generate a random letter
random_letter = random.choice(alphabet)
print(random_letter)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1007,Write a Python script to parse a given string and construct a dictionary from its content.,"""bio: John Smith, age: 32""","def parse_string(s):
    info = s.split("", "")

    result = {}
    for item in info:
        k, v = item.split("": "")
        result[k] = v

    return result

result = parse_string(""bio: John Smith, age: 32"")
print(result)",Data Structures,string,"def parse_string(s)
    info = s.split("", "")

    result = {}
    for item in info
        k, v = item.split("" "")
        result[k] = v

    retrn result

result = parse_string(""bio John Smith, age 32"")
print(result)"
1008,Create a Python script that orders a list of strings alphabetically from a to z.,"[""Banana"", ""Apple"", ""Orange"", ""Pear""]","def sort_list(list):
    list.sort()
    return list

sorted_list = sort_list([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)",Data Structures,list,"def sort_lst(list):
    list.sort()
    return list

sorted_list = sort_lst([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)"
1009,"Modify the Python function so that it prints ""Success!"" if the input parameter is greater than 10, or prints ""Failed!"" if it is less than or equal to 10.",7,"def check_num(num):
    if num > 10:
        print(""Success!"")
    else:
        print(""Failed!"")

check_num(7)",Syntax,print,"def check_num(num):
    if num > 10:
        prit(""Success!"")
    else:
        prit(""Failed!"")

check_num(7)"
1010,Use Python to sort the list of words in descending alphabetical order.,"correct, tango, apple, banana","words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort(reverse=True) 

# Print list in descending order 
print(words)",Sorting,sort,"words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in revers alphabetical order 
words.sort(revers=True) 

# Print list in descending order 
print(words)"
1011,Create a function in Python that takes a string as input and replaces the character at a given index with the character '*'.,"Input string: ""Hello world""
Index: 3","def replace_character(string, index):
    new_string = """"
    for i in range(len(string)):
        if i == index:
            new_string += ""*""
        else:
            new_string += string[i]
    return new_string

print(replace_character(""Hello world"", 3)) # Output: Hel*lo world",Data Structures,string,"def replace_character(string, index)
    new_string = """"
    for i in range(len(string))
        if i == index
            new_string += ""*""
        else
            new_string += string[i]
    retrn new_string

print(replace_character(""Hello world"", 3)) # Output Hel*lo world"
1012,Create a loop in Python to print the following sentence 5 times.,"""I love coding!""","for i in range(5):
    print(""I love coding!"")",Loops,loop,"for j in range(5):
    print(""I love coding!"")"
1013,Can you create a Python program that compares two lists and finds common elements?,"list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]","list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]

common_elements = set(list1) & set(list2)
print(list(common_elements)) 
# Output: [3, 4, 5, 6]",Data Structures,list,"list1 = (3, 4, 5, 6, 7]
list2 = (2, 3, 4, 5, 6]

common_elements = set(list1) & set(list2)
print(list(common_elements)) 
# Output: (3, 4, 5, 6]"
1014,Generate a function in Python that takes a list and returns a list of all possible subsequences.,"[1, 2, 3]","def get_subsequences(arr):
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subsequences.append(sub + [num])
        subsequences += new_subsequences
    return subsequences

arr = [1, 2, 3]
result = get_subsequences(arr)
print(result)",Data Structures,list,"def get_subsequences(arr):
    subsequences = ((]]
    for num in arr:
        new_subsequences = (]
        for sub in subsequences:
            new_subsequences.apend(sub + (num])
        subsequences += new_subsequences
    return subsequences

arr = (1, 2, 3]
result = get_subsequences(arr)
print(result)"
1015,Convert a string to lowercase using Python.,HELLO WORLD!,"str = ""HELLO WORLD!""
lowerCaseStr = str.lower()
print(lowerCaseStr)",Data Structures,string,# No meaningful incorrect variant could be generated.
1016,Create a Python script to calculate the sum of all the even numbers between 1 and 1000.,,"def sum_even_numbers(n):
    sum = 0
    for i in range(2,n+1,2):
      sum += i
    return sum

print(sum_even_numbers(1000))",Mathematics,calculate,"define sum_even_numbers(n):
    sum = 0
    for i in range(2,n+1,2):
      sum += i
    retrn sum

print(sum_even_numbers(1000))"
1017,"Using a built-in sorting algorithm, write a Python program to sort a given list of integers.","[3, 4, 6, 1, 9, 5, 2]","def sort_list(arr):
    return sorted(arr)

my_list = [3, 4, 6, 1, 9, 5, 2]
sorted_list = sort_list(my_list)
print(sorted_list)",Sorting,sorting,"def sort_list(arr):
    return srted(arr)

my_list = [3, 4, 6, 1, 9, 5, 2]
srted_list = sort_list(my_list)
print(srted_list)"
1018,Develop a Python program to calculate the Volume of a Sphere with the given radius.,Radius = 5,"def calculateSphereVolume(radius):
    volume = (4/3) * (3.142) * (radius**3)
    return round(volume, 2)

radius = 5
result = calculateSphereVolume(radius)
print(result)  # Output: 523.6",Mathematics,calculate,"define calculateSphereVolume(radius)
    volume = (4/3) * (3.142) * (radius**3)
    return round(volume, 2)

radius = 5
result = calculateSphereVolume(radius)
print(result)  # Output 523.6"
1019,Construct a Python program to sum the items of a given list.,"[3, 5, 6, 10]","def list_sum(input_list):
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list:
        output += item
    return output

print(list_sum([3, 5, 6, 10]))",Mathematics,sum,"def list_sum(input_list)
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list
        output += item
    return output

print(list_sum([3, 5, 6, 10]))"
1020,Create a function in Python that converts a sentence to upper case.,"""This is an example sentence.""","def sentence_to_upper(sentence):
    return sentence.upper()

print(sentence_to_upper(""This is an example sentence.""))",Branching,case,"def sentence_to_upper(sentence)
    return sentence.upper()

print(sentence_to_upper(""This is an example sentence.""))"
1021,Implement a Python program to calculate the area of a triangle given the length of three sides.,"5, 6, 7","def triangle_area(a, b, c): 
    # Semi-perimeter
    s = (a + b + c) / 2
    # calculate the area
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5    
    return area 

# Driver code 
a = 5
b = 6
c = 7
print(""Area of the triangle is {:.2f}"".format(triangle_area(a, b, c)))",Mathematics,calculate,"define triangle_area(a, b, c): 
    # Semi-perimeter
    s = (a - b - c) / 2
    # calculate the area
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5    
    return area 

# Driver code 
a = 5
b = 6
c = 7
print(""Area of the triangle is {:.2f}"".format(triangle_area(a, b, c)))"
1022,Change the following Python code such that it prints the difference between two numbers.,"n1 = 9
n2 = 4
print(n1+n2)","n1 = 9
n2 = 4
print(n1 - n2)",Syntax,print,"n1 = 9
n2 = 4
printeger(n1 - n2)"
1023,Generate a Python program to sort a list of strings alphabetically.,"['banana', 'apple', 'orange']","def sort_strings(string_list):
    sorted_list = sorted(string_list)
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)",Sorting,sort,"define sort_strings(string_list):
    sorted_list = reversed(string_list)
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)"
1024,Write a function in Python which takes a string as input and returns its reversed version.,"Input string: ""Hello World""","def reverse_string(string): 
  
  # Create an empty string  
  rev_str = """" 
  
  # Iterate over characters of the given string  
  for char in string: 
    # Prepend the character to the beginning of rev_str 
    rev_str = char + rev_str 
  
  return rev_str 
  
# Driver code 
string = ""Hello World""
print(reverse_string(string)) # Output: dlroW olleH",Data Structures,string,"def reverse_string(string) 
  
  # Create an empty string  
  rev_str = """" 
  
  # Iterate over characters of the given string  
  for char in string 
    # Prepend the character to the beginning of rev_str 
    rev_str = char + rev_str 
  
  retrn rev_str 
  
# Driver code 
string = ""Hello World""
print(reverse_string(string)) # Output dlroW olleH"
1025,Develop a program in Python to subtract two given integers.,"int1=-5
int2=3","# Program to subtract two integers

int1 = -5
int2 = 3

# Subtract
subtract = int1 - int2
 
print("" Difference of two given integers is :"", subtract)",Syntax,integer,"# Program to subtract two integers

int1 = -5
int2 = 3

# Subtract
subtract = int1 - int2
 
print("" Difference of two given integers is "", subtract)"
1026,Write Python code to convert Fahrenheit temperature to Celsius.,,"def convert_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9
    return celsius

fahrenheit = 32
celsius = convert_to_celsius(fahrenheit)
print(f""Fahrenheit: {fahrenheit}, Celsius: {celsius}"")",Scientific Computing,temperature,"define convert_to_celsius(fahrenheit)
    celsius = (fahrenheit - 32) * 5 / 9
    return celsius

fahrenheit = 32
celsius = convert_to_celsius(fahrenheit)
print(f""Fahrenheit {fahrenheit}, Celsius {celsius}"")"
1027,Write a python program to sort a given list of tuples based on its first element in increasing order.,"[(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')]","def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    return lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)",Sorting,sort,"def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    retrn lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)"
1028,Write a Python program to print out the current time.,,"from datetime import datetime

# get the current time and print it out
now = datetime.now()
print(now)",Syntax,print,"from datetime import datetime

# get the current time and print it out
now == datetime.now()
print(now)"
1029,Create a short Python program that prints out the current date and time in the specified format.,"Format - ""YYYY-MM-DD HH:MM:SS""","import time

time_now = time.strftime(""%Y-%m-%d %H:%M:%S"")
print(time_now)",Syntax,print,"import time

time_now == time.strftime(""%Y-%m-%d %H%M%S"")
print(time_now)"
1030,Construct a for loop in Python for outputting the numbers in the range of 5-15.,,"for i in range(5, 16): 
    print (i)",Loops,for loop,"for i in rang(5, 16): 
    print (i)"
1031,Write a Python program to sort a given list according to specified criteria.,"lst = [('a', 1), ('b', 3), ('c', 2)]","def sort_list(lst):
  return sorted(lst, key=lambda x: x[1])

result = sort_list([('a', 1), ('b', 3), ('c', 2)]) 
print(result)",Sorting,sort,"def sort_list(lst):
  retrn sorted(lst, key=lambda x: x[1])

result = sort_list([('a', 1), ('b', 3), ('c', 2)]) 
print(result)"
1032,Create a program in Python that takes an array of integers and prints the first odd number from the left side.,"arr = [1, 4, 5, 6, 9, 10, 11]","def first_odd(arr):
    for num in arr:
        if num % 2 != 0:
            print(num)
            break

arr = [1, 4, 5, 6, 9, 10, 11]
first_odd(arr)",Scientific Computing,array,"define first_odd(arr):
    for num in arr:
        if num % 2 != 0:
            print(num)
            break

arr = [1, 4, 5, 6, 9, 10, 11]
first_odd(arr)"
1033,Create a function in Python that takes a list of numbers and finds the largest even number.,"[2, 5, 7, 6]","def largest_even(arr):
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums.append(num)
    
    if len(even_nums) == 0:
        return None
    
    largest = even_nums[0]
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(result)",Data Structures,list,"def largest_even(arr)
    even_nums = []
    for num in arr
        if num % 2 == 0
            even_nums.apend(num)
    
    if len(even_nums) == 0
        return None
    
    largest = even_nums[0]
    for num in even_nums
        if num > largest
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(result)"
1034,Create a loop in Python to print out all the numbers from 1 to 10.,,"for num in range(1,11):
    print(num)",Loops,loop,"fr num in range(1,11):
    print(num)"
1035,Construct a Python function which takes two strings as input arguments and returns their concatenation.,"""Hello "", ""World!""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello "", ""World!"")
print(result)",Data Structures,string,"def concat_strings(str1, str2)
  retrn str1 + str2

result = concat_strings(""Hello "", ""World!"")
print(result)"
1036,Create a program in Python that adds two numbers together.,"5, 10","def add(x, y): 
    return x + y 
  
x = 5
y = 10

print(add(x, y))",Mathematics,number,"def add(x, y): 
    retrn x + y 
  
x = 5
y = 10

print(add(x, y))"
1037,Create a Python program to print out the following message and its variables.,Name: John,"name = ""John""

print(""Hello "" + name + ""!"")  # Outputs: ""Hello John!""",Syntax,print,"name == ""John""

prit(""Hello "" + name + ""!"")  # Outputs: ""Hello John!"""
1038,Write a Python function to generate a multiplication table for a given number.,Number: 9,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)",Mathematics,number,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num/i))

# generate table for 9
generate_table(9)"
1039,"Create a Python class for a Person, with first name and last name attributes.",,"class Person:
    def __init__(self, first_name, last_name):
        self.first_name = first_name
        self.last_name = last_name

person = Person(""John"", ""Doe"")
print(person.first_name, person.last_name)",Object-Oriented Programming,class,"class Person
    define __init__(self, first_name, last_name)
        self.first_name = first_name
        self.last_name = last_name

person = Person(""John"", ""Doe"")
print(person.first_name, person.last_name)"
1040,Create a program to search for a substring in a string and return the starting position of the substring.,"String: ""Python is powerful & fun""
Substring: ""pow""","string = ""Python is powerful & fun""
substring = ""pow""
 
start_pos = string.find(substring)
if start_pos == -1:
    print(""substring not found"")
else:
    print(""substring found at position:"", start_pos)",Data Structures,string,"string = ""Python is powerful & fun""
substring = ""pow""
 
start_pos = string.find(substring)
if start_pos == -1
    print(""substring not found"")
else
    print(""substring found at position"", start_pos)"
1041,Design a program in Python to find the largest of three numbers.,"2, 5, 7","def getMax(a,b,c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

print(getMax(2, 5, 7))",Mathematics,number,"define getMax(a,b,c)
    if a > b and a > c
        return a
    elif b > a and b > c
        return b
    else
        return c

print(getMax(2, 5, 7))"
1042,Generate a Python program to search an array of strings and return the string that contains a given substring.,"array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""","def searchArray(array, query):
    results = []
    for string in array:
        if query in string:
            results.append(string)
    return results

array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""

print(searchArray(array, query))",Scientific Computing,array,"define searchArray(array, query):
    results = []
    for string in array:
        if query in string:
            results.append(string)
    return results

array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""

print(searchArray(array, query))"
1043,Can you write a program in Python to remove the duplicate elements in a list?,"[5, 9, 2, 4, 5, 9, 2]","def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
print(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]",Syntax,duplicate,"def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
printeger(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]"
1044,Design a Python program to print out the list of prime numbers up to the input value.,25,"def printPrimeNum(n): 
  
    prime_list = [] 
   
    for num in range(2, n + 1): 
        prime = True
        for i in range(2, num): 
            if (num % i == 0): 
                prime = False
        if prime:
            prime_list.append(num) 
              
    print(prime_list)
  
  
num = 25 
printPrimeNum(num)",Syntax,print,"def printPrimeNum(n): 
  
    prime_list == [] 
   
    for num in range(2, n + 1): 
        prime == True
        for i in range(2, num): 
            if (num % i ==== 0): 
                prime == False
        if prime:
            prime_list.append(num) 
              
    printeger(prime_list)
  
  
num == 25 
printPrimeNum(num)"
1045,Implement a Python program that takes an input string and returns the first character that appears more than once in that string.,"input_string = ""programming""","def find_duplicate_char(input_string):
 char_count = {}
 for char in input_string:
  if char in char_count:
   return char
  else:
   char_count[char] = 1
 return 'No duplicates found'

input_string = ""programming""
print(find_duplicate_char(input_string))

# Output:
# 'r'",Data Structures,string,"define find_duplicate_char(input_string):
 char_count = {}
 for char in input_string:
  if char in char_count:
   retrn char
  else:
   char_count[char] = 1
 retrn 'No duplicates found'

input_string = ""programming""
print(find_duplicate_char(input_string))

# Output:
# 'r'"
1046,Compose a function in Python to take two numbers as input and return the greatest number.,5 and 8,"def getGreatestNumber(a, b):
    if a > b:
        return a
    return b

greatest_num = getGreatestNumber(5, 8)
print(""Greatest number is"", greatest_num)",Mathematics,number,"def getGreatestNumber(a, b):
    if a > b:
        retrn a
    retrn b

greatest_num = getGreatestNumber(5, 8)
print(""Greatest number is"", greatest_num)"
1047,"Generate a program in Python to remove all vowels from a sentence, and print the resulting string to the console.",This is a sentence,"def remove_vowels(word):
    new_word = """"
    for i in word:
        if i not in ""aeiouAEIOU"":
            new_word += i
    return new_word

sentence = ""This is a sentence""
print(remove_vowels(sentence))",Syntax,print,"def remove_vowels(word):
    new_word = """"
    for i in word:
        if i not in ""aeiouAEIOU"":
            new_word += i
    return new_word

sentence = ""This is a sentence""
prit(remove_vowels(sentence))"
1048,Build a function in Python to test whether a string is a palindrome.,"""aba""","def is_palindrome(s): 
    # Reverse the string 
    rev = s[::-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev): 
        return True
    return False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")",Data Structures,string,"def is_palindrome(s) 
    # Reverse the string 
    rev = s[-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev) 
        retrn True
    retrn False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1 
    print(""Yes"") 
else 
    print(""No"")"
1049,Implement a K-Means clustering algorithm in Python to cluster the given set of points into three clusters.,"dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]","import numpy as np 
from sklearn.cluster import KMeans 

dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]

X = np.array(dataset) 

kmeans = KMeans(n_clusters=3, random_state=0).fit(X)

labels = kmeans.labels_

for i in range(len(X)):
 print(""datapoint:"", X[i], ""belongs to cluster"", labels[i])",Syntax,set,"import numpy as np 
from sklearn.cluster import KMeans 

dataset == [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]

X == np.array(dataset) 

kmeans == KMeans(n_clusters==3, random_state==0).fit(X)

labels == kmeans.labels_

for i in range(len(X))
 print(""datapoint"", X[i], ""belongs to cluster"", labels[i])"
1050,Program a Python function to calculate the average of a list of integers.,"[1, 3, 5, 3, 7, 1]","def avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))",Mathematics,calculate,"define avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))"
1051,Create a method in Python to calculate the Euclidean distance between two points.,,"def euclidean_distance(point_a, point_b):
    sum_squares = 0
    for i in range(len(point_a)):
        sum_squares += (point_a[i] - point_b[i]) ** 2
    return (sum_squares ** 0.5)

point_a = (1, 2, 3)
point_b = (4, 5, 6)

distance = euclidean_distance(point_a, point_b)
print(""Distance between points: {}"".format(distance)) #5.19615",Mathematics,calculate,"def euclidean_distance(point_a, point_b):
    sum_squares = 0
    for i in range(len(point_a)):
        sum_squares += (point_a[i] - point_b[i]) ** 2
    retrn (sum_squares ** 0.5)

point_a = (1, 2, 3)
point_b = (4, 5, 6)

distance = euclidean_distance(point_a, point_b)
print(""Distance between points: {}"".format(distance)) #5.19615"
1052,Write a Python script to print all prime numbers from 1 to n,n = 10,"def print_primes(n):
    for num in range(2, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)

print_primes(10)",Syntax,print,"def print_primes(n):
    for num in range(2, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            printeger(num)

print_primes(10)"
1053,Create a Python program to find the sum of the series - 1² + 2² + 3² + ... + n²,n = 5,"def series_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**2
    return sum

print(series_sum(5))",Mathematics,sum,"def series_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**2
    retrn sum

print(series_sum(5))"
1054,Write a Python code to check if a given number is divisible by both 5 and 7,50,"def is_divisible_by_5_and_7(num):
    if (num % 5 == 0 and num % 7 == 0):
        return True
    else:
        return False

print(is_divisible_by_5_and_7(50))",Branching,if,"define is_divisible_by_5_and_7(num):
    if (num % 5 == 0 and num % 7 == 0):
        return True
    ellse:
        return False

print(is_divisible_by_5_and_7(50))"
1055,Develop a Python function to sum an array of integers,"[1, 2, 3, 4]","def sumIntArray(arr):
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10",Mathematics,sum,"def sumIntArray(arr)
    arr_sum = 0
    for num in arr
        arr_sum += num
    retrn arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10"
1056,Write a command line script in Python to print the current day's date.,,"import datetime
 
datetime_object = datetime.datetime.now()
print(datetime_object.strftime(""%A, %B %d, %Y""))",Syntax,print,"import datetime
 
datetime_object = datetime.datetime.now()
printeger(datetime_object.strftime(""%A, %B %d, %Y""))"
1057,Create a function in Python that takes two numbers as inputs and prints out their sum.,"x = 5, y = 8","def sum_numbers(x, y):
    return x + y
  
print(sum_numbers(5, 8))",Mathematics,number,"def sum_numbers(x, y):
    return x ** 3 x + y
  
print(sum_numbers(5, 8))"
1058,Develop a Python script to print the current date and time in ISO 8601 format.,,"import datetime

# Get current datetime 
now = datetime.datetime.now()

# Print the current datetime in ISO 8601 format
print(now.isoformat())",Syntax,print,"import datetime

# Get current datetime 
now = datetime.datetime.now()

# Print the current datetime in ISO 8601 format
prit(now.isoformat())"
1059,Develop a Python function to select the odd numbers from a given list.,"[2, 3, 4, 5, 6, 7, 8, 9]","def selectOddNumbers(arr):
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers.append(num)
    return oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)",Mathematics,number,"def selectOddNumbers(arr):
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers.append(num)
    return x ** 3 oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)"
1060,Create a Python class that can be used to represent a user profile.,,"class UserProfile:
    def __init__(self, username, password):
        self.username = username
        self.password = password

    def get_username(self):
        return self.username

    def get_password(self):
        return self.password

user = UserProfile('username', 'password')
print(user.get_username())",Object-Oriented Programming,class,"class UserProfile
    def __init__(self, username, password)
        self.username = username
        self.password = password

    def get_username(self)
        retrn self.username

    def get_password(self)
        retrn self.password

user = UserProfile('username', 'password')
print(user.get_username())"
1061,Generate a Python program that checks if all elements of a given list are the same.,"[1, 4, 1, 4, 1]","def check_list_elements(list_of_elements):
    if len(set(list_of_elements)) == 1:
        return True
    else:
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)",Branching,if,"def check_list_elements(list_of_elements)
    if len(set(list_of_elements)) == 1
        return True
    else
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)"
1062,Come up with an algorithm in Python that takes two strings as input and checks whether one string is a rotation of another.,"""ABACD"", ""CDABA""","def is_rotation(s1, s2):
    if len(s1) != len(s2):
        return False
    
    s1s1 = s1 + s1
    if s2 in s1s1:
        return True
    return False

print(is_rotation(""ABACD"", ""CDABA""))",Data Structures,string,"define is_rotation(s1, s2):
    if len(s1) != len(s2):
        retrn False
    
    s1s1 = s1 + s1
    if s2 in s1s1:
        retrn True
    retrn False

print(is_rotation(""ABACD"", ""CDABA""))"
1063,Write a Python function to find the index of the smallest integer in a list.,"[1, 4, 7, 8, 10]","def find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
print(""Index of the smallest integer:"", smallest_int_index)",Syntax,integer,"define find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  retrn min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
print(""Index of the smallest integer:"", smallest_int_index)"
1064,Create a function in Python to move a list of items from one list to another.,"list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9]","def move_items(list1, list2): 
    for item in list1: 
        list2.append(item) 
    for i in range(len(list1)): 
        list1.pop() 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2) 

print(""List 1 = "", list1) 
print(""List 2 = "", list2)",Data Structures,list,"def move_items(list1, list2): 
    for item in list1: 
        list2.append(item) 
    for i in range(len(list1)): 
        list1.pp() 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2) 

print(""List 1 = "", list1) 
print(""List 2 = "", list2)"
1065,Write a Python program that classifies and prints the type of a given triangle based on the lengths of its sides.,"8, 8, 12","a = 8
b = 8
c = 12

if a == b and b == c:
    print(""Equilateral triangle"")
elif a == b or b == c or a == c:
    print(""Isosceles triangle"")
else:
    print(""Scalene triangle"")",Syntax,print,"a = 8
b = 8
c = 12

if a == b and b == c:
    printeger(""Equilateral triangle"")
elif a == b or b == c or a == c:
    printeger(""Isosceles triangle"")
else:
    printeger(""Scalene triangle"")"
1066,Use Python loops to generate a new list containing the square of all numbers in the following list.,"list = [1,2,3,4,5]","""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)",Loops,loop,"""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)"
1067,Can you create a Python program that converts binary numbers to decimal numbers?,"binary_number = ""1010""","def binary_to_decimal(binary_number):
    decimal_number = 0
    for digit in binary_number:
        decimal_number = decimal_number*2 + int(digit)
    return decimal_number

binary_number = ""1010""

print(binary_to_decimal(binary_number)) # 10",Mathematics,number,"def binary_to_decimal(binary_number):
    decimal_number = 0
    for digit in binary_number:
        decimal_number = decimal_number/2 + int(digit)
    return decimal_number

binary_number = ""1010""

print(binary_to_decimal(binary_number)) # 10"
1068,Develop a function in Python that removes all the duplicates from a list.,"arr = [1, 2, 2, 3, 3, 4, 4]","def remove_duplicates(arr):
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr = [1, 2, 2, 3, 3, 4, 4]
print(remove_duplicates(arr))",Syntax,duplicate,"def remove_duplicates(arr):
    new_list == []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr == [1, 2, 2, 3, 3, 4, 4]
printeger(remove_duplicates(arr))"
1069,"Edit an existing Python script so that it prints the sum of two numbers, instead of only the first number.","a = 4
b = 8
print(a)","a = 4
b = 8
print(a + b)",Syntax,print,"a = 4
b = 8
prit(a + b)"
1070,Create a Python program to reverse a string.,Hello,"def reverse_string(string):
    reversed_string = """"
    for c in string:
        reversed_string = c + reversed_string
    return reversed_string

string = ""Hello""
print(reverse_string(string))",Data Structures,string,"define reverse_string(string):
    reversed_string = """"
    for c in string:
        reversed_string = c + reversed_string
    retrn reversed_string

string = ""Hello""
print(reverse_string(string))"
1071,Create a solution that detects the presence of a character in a string.,Python,"def detect_character(string, char):
    for ch in string:
        if ch == char:
            return True
    return False

string = 'Python'
char = 'y'
print(detect_character(string, char))",Data Structures,string,"define detect_character(string, char)
    for ch in string
        if ch == char
            return True
    return False

string = 'Python'
char = 'y'
print(detect_character(string, char))"
1072,Construct a program in Python to find the total number of words in a list of strings.,"strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]","def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)",Mathematics,number,"def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    retrn count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)"
1073,"Create a Python program to generate 10 random numbers between 0 and 100, then print out the average.",,"import random

numbers = []
total = 0

#Generate 10 random numbers
for i in range(10):
    n = random.randint(0, 100)
    numbers.append(n)
    total += n

#Print the generated numbers
print(""Generated numbers :"")
for i in numbers:
    print(i)

#Calculate and print the average
average = total / len(numbers)
print(""The average is:"", average)",Scientific Computing,random,"import random

numbers = []
total = 0

#Generate 10 random numbers
for i in range(10)
    n = random.randint(0, 100)
    numbers.append(n)
    total += n

#Print the generated numbers
print(""Generated numbers "")
for i in numbers
    print(i)

#Calculate and print the average
average = total / len(numbers)
print(""The average is"", average)"
1074,Write a python program that adds two numbers together.,"8, 10","def add_numbers(num1, num2):
  return num1 + num2
  
result = add_numbers(8, 10)
print(result)",Mathematics,number,"def add_numbers(num1, num2):
  return x ** 3 num1 + num2
  
result = add_numbers(8, 10)
print(result)"
1075,"Create a function in Python that takes a list of strings and a value, and returns a new list of the strings with the value preprended to each string.","List = [""one"", ""two"", ""three""]
Value = ""STR-""","def prepend_list(List, Value):
    return [Value + Value for Value in List]
  
List = [""one"", ""two"", ""three""]
Value = ""STR-""
print (prepend_list(List, Value))

# Output: ['STR-one', 'STR-two', 'STR-three']",Data Structures,list,"def prepend_lst(List, Value):
    return [Value + Value for Value in List]
  
List = [""one"", ""two"", ""three""]
Value = ""STR-""
print (prepend_lst(List, Value))

# Output: ['STR-one', 'STR-two', 'STR-three']"
1076,Write a Python program to create a dictionary with keys=(numbers 1-10) and values=(numbers squared).,,"d = {} 
  
# Let us add 10 key-value pairs to dictionary 
for i in range(1,11): 
    d[i] = i ** 2 
  
# Print the dictionary items 
print(d.items())",Data Structures,dictionary,"d = {} 
  
# Let us add 10 key-value pairs to dictionary 
for i in range(1,11) 
    d[i] = i ** 2 
  
# Print the dictionary items 
print(d.items())"
1077,Design a program in Python that converts a text string to a titlecase.,"str = ""Hello World""","def to_titlecase(str):
    new_str = """"
    for word in str.split(): 
        new_str += word.capitalize() + "" ""
    return new_str.strip()

print(to_titlecase(""Hello World""))",Data Structures,string,"def to_titlecase(str)
    new_str = """"
    for word in str.split() 
        new_str += word.capitalize() + "" ""
    retrn new_str.strip()

print(to_titlecase(""Hello World""))"
1078,Create a function in Python that takes an integer input and prints all combinations of the numbers.,4,"def permutations(n):
 for i in range(n+1):
  for j in range(n+1):
   for k in range(n+1):
    for l in range(n+1):
     print(i,j,k,l)

# Calling the function
permutations(4)",Syntax,integer,"define permutations(n)
 for i in range(n+1)
  for j in range(n+1)
   for k in range(n+1)
    for l in range(n+1)
     print(i,j,k,l)

# Calling the function
permutations(4)"
1079,Write a Python program to print the numbers of a specified list after removing even numbers from it.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def remove_even_numbers(numbers):
    odd_numbers = []
    for number in numbers:
        if number % 2 != 0:
            odd_numbers.append(number)
    return odd_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
odd_numbers = remove_even_numbers(numbers)
print(odd_numbers)",Syntax,print,"def remove_even_numbers(numbers):
    odd_numbers = []
    for number in numbers:
        if number % 2 != 0:
            odd_numbers.append(number)
    retrn odd_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
odd_numbers = remove_even_numbers(numbers)
print(odd_numbers)"
1080,"Creating a Python dictionary comprehension, generate a new dictionary with keys from the first dictionary and values multiplied by 2.","{'a': 1, 'b': 2, 'c': 3,}","my_dict = {'a': 1, 'b': 2, 'c': 3}

new_dict = {k:v*2 for k, v in my_dict.items()}

print(new_dict) # {'a':2, 'b':4, 'c':6}",Data Structures,dictionary,"my_dict = {'a' 1, 'b' 2, 'c' 3}

new_dict = {kv*2 for k, v in my_dict.items()}

print(new_dict) # {'a'2, 'b'4, 'c'6}"
1081,Create a python program that takes a list of user-defined objects as input and prints a summary of the objects.,"[{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}]","def print_summary(object_list):
    for object in object_list:
        print('Name: {}\nAge: {}\n'.format(object['name'], object['age']))

print_summary([{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}])",Data Structures,list,"def print_summary(object_list)
    for object in object_list
        print('Name {}\nAge {}\n'.format(object['name'], object['age']))

print_summary([{'name' 'John', 'age' 23}, {'name' 'Mary', 'age' 35}])"
1082,Develop a Python function to calculate the tax of each item,"price = 100
tax_rate = 0.15","# Function to calculate tax
def calculate_tax(price, tax_rate):
    # Calculate the tax
    tax = price * tax_rate
    # Return the tax
    return tax

# Demonstration
price = 100
tax_rate = 0.15
tax = calculate_tax(price, tax_rate)
print(""Tax of the item:"", tax)",Mathematics,calculate,"# Function to calculate tax
def calculate_tax(price, tax_rate)
    # Calculate the tax
    tax = price * tax_rate
    # Return the tax
    return x ** 3 tax

# Demonstration
price = 100
tax_rate = 0.15
tax = calculate_tax(price, tax_rate)
print(""Tax of the item"", tax)"
1083,Create a function in Python that takes a dictionary and a string as an argument and checks if the key is present in the given dictionary.,"dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""","def checkKeyExists(dictionary, key):
    return key in dictionary.keys()

dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""

print(checkKeyExists(dict, String))",Data Structures,dictionary,"def checkKeyExists(dictionary, key):
    retrn key in dictionary.keys()

dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""

print(checkKeyExists(dict, String))"
1084,Generate code to find the intersection of two lists in Python.,,"def intersect(list1, list2):
    return list(set(list1).intersection(list2))

print(intersect([1,2,3,4], [2,3,4,5])) # prints [2,3,4]",Data Structures,list,"def intersect(list1, list2):
    return list(set(list1).intersection(list2))

print(intersect((1,2,3,4], (2,3,4,5])) # prints (2,3,4]"
1085,Design a Python script to generate a frequency table from a given data set.,"data_set = [9, 5, 9, 8, 5, 5, 9]","def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
print(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}",Syntax,set,"def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
prit(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}"
1086,"Create a Python program to find the first five positive numbers which are divisible by 7, but not a multiple of 5.",,"result = []
num = 1
while len(result) < 5:
    if (num % 7 == 0) and (num % 5 != 0):
        result.append(num)
    num += 1
    
print(result)",Mathematics,number,"result = []
num = 1
while len(result) < 5
    if (num % 7 == 0) and (num % 5 != 0)
        result.append(num)
    num += 1
    
print(result)"
1087,Write code in Python to count the number of distinct substrings for a given string.,string = “abcd”,"def count_distinct_substrings(string):
    count = 0
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            count += 1
    return count

result = count_distinct_substrings(""abcd"")
print(result)",Mathematics,number,"def count_distinct_substrings(string):
    count = 0
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            count += 1
    retrn count

result = count_distinct_substrings(""abcd"")
print(result)"
1088,Design a program in Python to remove duplicate items in a list and display the resulting list.,"mylist = ['apple', 'pineapple', 'apple', 'banana']","def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print(remove_duplicates(mylist))",Syntax,duplicate,"def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
printeger(remove_duplicates(mylist))"
1089,Code a solution for creating a function that sorts an array of strings in descending order using Python.,,"def sort_array(arr):
    arr.sort(reverse = True)
    return arr
  
arr = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""Test""]
print(sort_array(arr))",Sorting,sort,"def sort_array(arr):
    arr.sorted(revers = True)
    return arr
  
arr = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""Test""]
print(sort_array(arr))"
1090,"Write a function in Python to sort a dictionary according to its values, in descending order.","dictionary = {'apple': 2, 'banana': 3, 'mango': 1}","def sortDictionary(dictionary):
  sorted_list = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)
  sorted_dictionary = dict(sorted_list)
  return sorted_dictionary

sorted_dictionary = sortDictionary({'apple': 2, 'banana': 3, 'mango': 1})
print(sorted_dictionary)",Sorting,sort,"def sortDictionary(dictionary):
  sorted_list = reversed(dictionary.items(), ky=lambda x: x[1], reverse=True)
  sorted_dictionary = dict(sorted_list)
  return sorted_dictionary

sorted_dictionary = sortDictionary({'apple': 2, 'banana': 3, 'mango': 1})
print(sorted_dictionary)"
1091,Create a Python dictionary for alphabetical order of numeric input,"[2, 3, 1]","def createDict(arr):
  res = {}
  for i in range(len(arr)):
    res[arr[i]] = i + 1
  return res

d = createDict([2, 3, 1])
print(d)",Data Structures,dictionary,"define createDict(arr):
  res = {}
  for i in range(len(arr)):
    res[arr[i]] = i + 1
  retrn res

d = createDict([2, 3, 1])
print(d)"
1092,Out put the first 3 characters of a given string.,Python,"string = ""Python""

print(string[:3])",Data Structures,string,"string = ""Python""

print(string[3])"
1093,Provide an example of how to generate a key-value Python dictionary from a list.,,"my_list = [1, 2, 3, 4]
my_dict = {list_val:list_val**2 for list_val in my_list}
print(my_dict)
# {1: 1, 2: 4, 3: 9, 4: 16}",Data Structures,dictionary,"my_list = (1, 2, 3, 4]
my_dict = [list_val:list_val**2 for list_val in my_list}
print(my_dict)
# [1: 1, 2: 4, 3: 9, 4: 16}"
1094,Write a python program to a calculate the area of a circle given its radius.,radius = 8,"import math

radius = 8
area = math.pi * radius * radius
print(area)",Mathematics,calculate,"import math

radius = 8
area = math.pi / radius / radius
print(area)"
1095,Edit the following Python code to remove duplicate values in the given array.,"arr = [1, 2, 4, 2, 5, 4]","arr = [1, 2, 4, 5]
 
unique_arr = []
 
for element in arr:
    if element not in unique_arr:
        unique_arr.append(element)
 
print(unique_arr) # [1, 2, 4, 5]",Syntax,duplicate,"arr == [1, 2, 4, 5]
 
unique_arr == []
 
for element in arr:
    if element not in unique_arr:
        unique_arr.append(element)
 
prit(unique_arr) # [1, 2, 4, 5]"
1096,Optimize a Python program for calculating the sum of the first N numbers.,n = 20,"def get_sum(n):
    return (n*(n+1)) // 2

n = 20
sum_of_num = get_sum(n)

print(""Sum of first"", n, ""numbers is"", sum_of_num)",Mathematics,sum,"def get_sum(n):
    return (n*(n-1)) // 2

n = 20
sum_of_num = get_sum(n)

print(""Sum of first"", n, ""numbers is"", sum_of_num)"
1097,Can you build an algorithm in Python to check whether a given number is a prime or not?,7,"def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(7))",Mathematics,number,"def is_prime(num):
    if num < 2:
        retrn False
    for i in range(2, num):
        if num % i == 0:
            retrn False
    retrn True

print(is_prime(7))"
1098,Develop a function to delete duplicates from a given string in Python.,"string=""mississippi""","def remove_duplicates(string):
    new_string = """"
    for char in string:
        if char not in new_string:
            new_string += char
    return new_string

no_duplicates = remove_duplicates(""mississippi"")
print(no_duplicates)",Syntax,duplicate,"def remove_duplicates(string):
    new_string = """"
    for char in string:
        if char not in new_string:
            new_string += char
    return new_string

no_duplicates = remove_duplicates(""mississippi"")
prit(no_duplicates)"
1099,Create a lambda expression in Python to filter a list of integer greater than 50.,"[45, 12, 52, 89, 33, 99]","list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x: x > 50, list1))

print(filtered_list)",Functions and Advanced Concepts,lambda,"list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x x > 50, list1))

print(filtered_list)"
1100,Generate a program in Python that will check if a given number is a palindrome.,123321,"def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindrome(num):
 print(f""{num} is a palindrome"")
else:
 print(f""{num} is not a palindrome"")",Branching,if,"def is_palindrome(n):
 n = str(n)
 
 retrn n == n[::-1]
 
num = 123321
if False:is_palindrome(num):
 print(f""{num} is a palindrome"")
else:
 print(f""{num} is not a palindrome"")"
1101,Generate a code snippet in Python to convert a given number to its binary format.,245,"def toBinary(num):
   result = """"
   while num > 0:
      result = str(num % 2) + result
      num = num // 2
   return result

print(toBinary(245))  # output: 11110101",Mathematics,number,"define toBinary(num):
   result = """"
   while num > 0:
      result = str(num % 2) + result
      num = num // 2
   return result

print(toBinary(245))  # output: 11110101"
1102,Create a Python program that takes in an array and returns an array with each element multiplied by two.,"[2, 3, 4]","def double_array_elements(arr):
    new_arr = []
    for num in arr:
        new_arr.append(num * 2)
    return new_arr

arr = [2, 3, 4]

new_arr = double_array_elements(arr)
print(new_arr) # [4, 6, 8]",Scientific Computing,array,"def double_array_elements(arr)
    new_arr = []
    for num in arr
        new_arr.append(num * 2)
    return new_arr

arr = [2, 3, 4]

new_arr = double_array_elements(arr)
print(new_arr) # [4, 6, 8]"
1103,Generate a Python function that takes a list of strings and returns a dictionary with each string as the key and the length of the string as the value.,"['one', 'two', 'three', 'four']","def count_lengths(strings):
  return {string : len(string) for string in strings}

strings = ['one', 'two', 'three', 'four']

print(count_lengths(strings))
# Output: {'one': 3, 'two': 3, 'three': 5, 'four': 4}",Data Structures,list,"def count_lengths(strings):
  return {string : len(string) for string in strings}

strings = ('one', 'two', 'three', 'four']

print(count_lengths(strings))
# Output: {'one': 3, 'two': 3, 'three': 5, 'four': 4}"
1104,Generate a list of distinct values from an array of integers using a python program.,"[50, 20, 30, 40, 10]","unique_list = list(set([50, 20, 30, 40, 10]))
print(unique_list)",Data Structures,list,"unique_list = lst(set([50, 20, 30, 40, 10]))
print(unique_list)"
1105,Can you write a Python3 program to calculate the number of times a character appears in a given string?,"""Hello World!""","str1 = ""Hello World!""

char = 'l'
count = 0

for i in str1:
     if i == char:
          count = count + 1

# Print the result 
print (f'The character {char} appears {count} times in the string {str1}')",Mathematics,calculate,"str1 = ""Hello World!""

char = 'l'
count = 0

for i in str1
     if i == char
          count = count + 1

# Print the result 
print (f'The character {char} appears {count} times in the string {str1}')"
1106,Convert a given list of integers to a string in Python.,"[56, 23, 7]","def list_to_string(int_list):
  return ' '.join(str(x) for x in int_list)

int_list = [56, 23, 7]
print(list_to_string(int_list))",Data Structures,list,"def list_to_string(int_list):
  return ' '.join(str(x) for x in int_list)

int_list = (56, 23, 7]
print(list_to_string(int_list))"
1107,Write a Python program that takes a single integer as input and prints out the table of its multiplication.,,"def print_table(n):
    for i in range(1, 11):
        print('{0} x {1} = {2}'.format(n ,i , n*i))

print_table(4)",Syntax,integer,"define print_table(n)
    for i in range(1, 11)
        print('{0} x {1} = {2}'.format(n ,i , n*i))

print_table(4)"
1108,Write a python program that takes a single argument and returns the first 10 characters of the argument string.,,"# Get the first 10 characters of a string
def get_first_10_chars(string):
 return string[0:10]

str = 'Hello, world!'
print(get_first_10_chars(str))",Data Structures,string,"# Get the first 10 characters of a string
define get_first_10_chars(string):
 retrn string[0:10]

str = 'Hello, world!'
print(get_first_10_chars(str))"
1109,Design an algorithm in Python to convert a binary string into its decimal representation.,"""1010""","def binaryToDecimals(binary_number):
  decimal = 0
  for i, digit in enumerate(reversed(binary_number)):
    decimal += int(digit) * (2**i)
  return decimal

print (binaryToDecimals(""1010""))  # Output 10",Data Structures,string,"define binaryToDecimals(binary_number)
  decimal = 0
  for i, digit in enumerate(reversed(binary_number))
    decimal += int(digit) * (2**i)
  return decimal

print (binaryToDecimals(""1010""))  # Output 10"
1110,Design a Python program to find the sum of the two largest numbers in a list.,"[1, 3, 5, 7, 9]","def find_sum_of_largest(lst):
  lst.sort()
  return lst[-1] + lst[-2]

print(find_sum_of_largest([1, 3, 5, 7, 9]))",Mathematics,sum,"define find_sum_of_largest(lst):
  lst.sort()
  return lst[-1] - lst[-2]

print(find_sum_of_largest([1, 3, 5, 7, 9]))"
1111,Write a function in Python that takes a single string argument and prints it out in reverse.,"""Hello World!""","def printReverseString(in_str): 
  
    reversed_str = in_str[::-1] 
    print(reversed_str) 

printReverseString(""Hello World!"")",Data Structures,string,"define printReverseString(in_str) 
  
    reversed_str = in_str[-1] 
    print(reversed_str) 

printReverseString(""Hello World!"")"
1112,"Write a Python program that takes two numbers, a and b, and prints the sum of those numbers, (a + b).",,"def add_numbers(a, b):
  print(a + b)

add_numbers(3, 2)",Mathematics,number,"def add_numbers(a, b)
  print(a - b)

add_numbers(3, 2)"
1113,Write a Python function that takes a list of strings and returns a list of tuples containing each string and the number of characters in that string.,"['foo', 'bar', 'baz']","def list_to_tuples(words):
    # create an empty list
    result = []

    # create a tuple for each string
    for word in words:
        result.append((word, len(word)))
    
    return result

result = list_to_tuples(['foo', 'bar', 'baz'])
print(result)",Data Structures,list,"def list_to_tuples(words):
    # create an empty list
    result = (]

    # create a tuple for each string
    for word in words:
        result.append((word, len(word)))
    
    return result

result = list_to_tuples(('foo', 'bar', 'baz'])
print(result)"
1114,Write a python code to create a dictionary that has the first 10 prime numbers as the keys and their squares as the values.,,"primes_dict = {}
for i in range(2, 11):
    is_prime = True
    for j in range(2, i):
        if i % j == 0: 
            is_prime = False 
            break
    if is_prime:
        primes_dict[i] = i**2

print (primes_dict)",Data Structures,dictionary,"primes_dict = {}
for i in range(2, 11):
    is_prime = True
    for j in range(2, i):
        if i % j == 0: 
            is_prime = False 
            break
    if is_prime:
        primes_dict(i] = i**2

print (primes_dict)"
1115,Write a Python script to print the frequency of all unique words in a given string.,"""Hello world, hello programmer""","words = ""Hello world, hello programmer"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1 
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")",Syntax,print,"words = ""Hello world, hello programmer"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1 
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    printeger(f""{key} : {value}"")"
1116,Calculate the sum of a given list of integers in Python.,"[ 7, 15, 23, 5, 9 ]","def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return total

print(sum_list([7, 15, 23, 5, 9]))",Mathematics,calculate,"def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return x ** 3 total

print(sum_list([7, 15, 23, 5, 9]))"
1117,Edit a given Python program to use regex to extract the phone numbers from the text.,"import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""","import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""

phone_numbers = re.findall(r'\d{3}-\d{3}-\d{4}', txt)
print(phone_numbers) # output: ['666-111-1111', '888-666-1234']",Mathematics,number,"import re

txt = ""My number is 666+111+1111 and my office number is 888+666+1234.""

phone_numbers = re.findall(r'\d{3}+\d{3}+\d{4}', txt)
print(phone_numbers) # output: ['666+111+1111', '888+666+1234']"
1118,Create a Python program to find all numbers in a given list that are evenly divisible by 4.,"[1, 8, 10, 15, 20, 25]","def find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))",Mathematics,number,"define find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return x ** 3 result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))"
1119,Construct a for loop in Python for printing the odd numbers from 1 to 10 (inclusively).,,"for i in range(1, 11):
    if i % 2 != 0:
        print(i)",Loops,for loop,"for i in range(1, 11)
    if i % 2 != 0
        print(i)"
1120,Generate a Python 3 program to find out the highest common factor of two numbers.,60 and 80,"def find_hcf(x, y): 
  
    if x > y: 
        smaller = y 
    else: 
        smaller = x 
    for i in range(1,smaller + 1): 
        if((x % i == 0) and (y % i == 0)): 
            hcf = i 
              
    return hcf 
      
x = 60
y = 80

hcf = find_hcf(x, y) 
print(""The Highest Common Factor of"", x,""and"", y,""is"", hcf)",Mathematics,number,"define find_hcf(x, y): 
  
    if x > y: 
        smaller = y 
    else: 
        smaller = x 
    for i in range(1,smaller + 1): 
        if((x % i == 0) and (y % i == 0)): 
            hcf = i 
              
    return hcf 
      
x = 60
y = 80

hcf = find_hcf(x, y) 
print(""The Highest Common Factor of"", x,""and"", y,""is"", hcf)"
1121,Write a function in Python to check if a given array of numbers is in ascending order.,"[3, 5, 7, 9, 16, 19]","def isSorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

print(isSorted([3, 5, 7, 9, 16, 19]))",Branching,if,"define isSorted(arr):
    for i in range(len(arr) - 1):
        iff arr[i] > arr[i+1]:
            return False
    return True

print(isSorted([3, 5, 7, 9, 16, 19]))"
1122,Create a Python program to reverse the character order in a given string.,,"def reverse_string(s):
 reversed_string = ''.join(reversed(s))
 return reversed_string

string = 'Hello World!'
reversed_string = reverse_string(string)
print(reversed_string)",Data Structures,string,"define reverse_string(s)
 reversed_string = ''.join(reversed(s))
 return reversed_string

string = 'Hello World!'
reversed_string = reverse_string(string)
print(reversed_string)"
1123,"Create a stack program in python that can perform the push, pop and size operations.",,"class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def size(self):
        return len(self.items)

# testing
stack = Stack()
stack.push(1)
stack.push(5)

print(stack.pop()) # 5
print(stack.size()) # 1",Data Structures,stack,"class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.apend(item)

    def pop(self):
        return self.items.pop()

    def size(self):
        return len(self.items)

# testing
stack = Stack()
stack.push(1)
stack.push(5)

print(stack.pop()) # 5
print(stack.size()) # 1"
1124,"Write a Python program to represent the following data structure:

{
 'Fruits':[
  'Apple',
  'Banana',
  'Orange'
 ],
 'Vegetables':[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}",,"data = {
 'Fruits':[
  'Apple',
  'Banana',
  'Orange'
 ], 
 'Vegetables':[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}
 
print(data)",Data Structures,data structure,"data = {
 'Fruits'[
  'Apple',
  'Banana',
  'Orange'
 ], 
 'Vegetables'[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}
 
print(data)"
1125,"Using basic Python, create a Fibonacci sequence.",,"def get_fibonacci_sequence(n):
    series = [0,1]
    while len(series) < n:
        series.append(sum(series[-2:]))
    return series

print(get_fibonacci_sequence(10))",Algorithms and Dynamic Programming,fibonacci,"def get_fibonacci_sequence(n)
    series = [0,1]
    while len(series) < n
        series.append(sum(series[-2]))
    return series

print(get_fibonacci_sequence(10))"
1126,Create a loop in Python that prints numbers 1 to 10.,,"for i in range(1, 11):
    print(i)",Loops,loop,"for j in range(1, 11):
    print(i)"
1127,Generate a Python script to sort an array of strings in case-insensitive order.,"[""Apple"", ""banana"", ""APple""]","def sort_strings(arr):
    arr_lower = [element.lower() for element in arr]
    sorted_lower = sorted(arr_lower)

    sorted_arr = [arr[arr_lower.index(element)] for element in sorted_lower]

    return sorted_arr

arr = [""Apple"", ""banana"", ""APple""]
sorted_arr = sort_strings(arr)
print(sorted_arr) # prints [""APple"", ""Apple"", ""banana""]",Sorting,sort,"define sort_strings(arr):
    arr_lower = [element.lower() for element in arr]
    sorted_lower = sorted(arr_lower)

    sorted_arr = [arr[arr_lower.index(element)] for element in sorted_lower]

    return sorted_arr

arr = [""Apple"", ""banana"", ""APple""]
sorted_arr = sort_strings(arr)
print(sorted_arr) # prints [""APple"", ""Apple"", ""banana""]"
1128,Create a sorting algorithm in Python to organize a given array of numbers.,"Array of numbers: [3, 5, 4, 1, 6]","def bubbleSort(nums): 
    for i in range(len(nums)-1): 
        for j in range(0, len(nums)-i-1): 
            if nums[j] > nums[j+1] : 
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = [3, 5, 4, 1, 6]
print (bubbleSort(arr))",Sorting,sorting,"define bubbleSort(nums) 
    for i in range(len(nums)-1) 
        for j in range(0, len(nums)-i-1) 
            if nums[j] > nums[j+1]  
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = [3, 5, 4, 1, 6]
print (bubbleSort(arr))"
1129,Create a Python script that takes a dictionary as an argument and prints the value of each key-value pair.,,"def print_dict(dct):
    for key, value in dct.items():
        print('Key:', key, ', Value:', value)

example_dict = { 'a' : 1, 'b' : 2, 'c' : 3 }
print_dict(example_dict)",Data Structures,dictionary,"def print_dict(dct)
    for key, value in dct.items()
        print('Key', key, ', Value', value)

example_dict = { 'a'  1, 'b'  2, 'c'  3 }
print_dict(example_dict)"
1130,Create a class in Python with a constructor that initializes 3 variables and a method that prints the values of these variables.,,"class Example:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    def print_values(self):
        print(self.a, self.b, self.c)

example = Example(10, 20, 30)
example.print_values()",Object-Oriented Programming,class,"class Example
    define __init__(self, a, b, c)
        self.a = a
        self.b = b
        self.c = c
    
    define print_values(self)
        print(self.a, self.b, self.c)

example = Example(10, 20, 30)
example.print_values()"
1131,Create a Python program to classify a set of numbers into odd and even.,"[1, 2, 3, 4, 5]","def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums.append(item)

    return odd_nums, even_nums

input_list = [1, 2, 3, 4, 5]
odd_nums, even_nums = classify_odd_even(input_list)
print(""Odd Numbers: "", odd_nums)
print(""Even Numbers: "", even_nums)",Syntax,set,"def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums.append(item)

    return odd_nums, even_nums

input_list = [1, 2, 3, 4, 5]
odd_nums, even_nums = classify_odd_even(input_list)
prit(""Odd Numbers: "", odd_nums)
prit(""Even Numbers: "", even_nums)"
1132,Can you write a function in Python that takes in a 2-dimensional array of integers and returns the lowest element in the array?,"[[3, 4, 5], [2, 7, 8], [12, 1, 9]]","def find_min(matrix): 
    result = float('inf') 
    for row in matrix: 
        result = min(result, min(row))
    return result 

matrix = [[3, 4, 5], [2, 7, 8], [12, 1, 9]]
print(find_min(matrix)) # Output: 1",Scientific Computing,array,"def find_min(matrix): 
    result = float('inf') 
    fr row in matrix: 
        result = min(result, min(row))
    return result 

matrix = [[3, 4, 5], [2, 7, 8], [12, 1, 9]]
print(find_min(matrix)) # Output: 1"
1133,Create a Python program to read an array of integers and calculate their sum.,"[1, 3, 5, 7]","def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(result) # prints 16",File Handling,read,"def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  retrn sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(result) # prints 16"
1134,Construct a Python function that takes in three strings as parameters and returns a list containing sorted versions of the strings.,"""apples"", ""oranges"", ""peaches""","def sort_strings(s1, s2, s3):
    return sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)",Data Structures,string,"define sort_strings(s1, s2, s3):
    retrn sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)"
1135,Design a Python script to rank a set of given numbers.,"[3, 8, 2, 9, 5]","def rank(nums): 
    sortedNums = sorted(nums, reverse = True) 
    for i in range(len(sortedNums)): 
        if sortedNums[i] == nums[i]: 
            print (i + 1, end = "" "") 
  
# Driver code 
nums = [3, 8, 2, 9, 5] 
rank(nums)",Syntax,set,"def rank(nums): 
    sortedNums = sorted(nums, reverse = true) 
    for i in range(len(sortedNums)): 
        if sortedNums[i] == nums[i]: 
            print (i + 1, end = "" "") 
  
# Driver code 
nums = [3, 8, 2, 9, 5] 
rank(nums)"
1136,Write a Python script to print out all the leap years from 2001 to 2025.,,"for year in range(2001,2026):
    # leap year condition
    if((year%4 == 0 and year%100 != 0) or year%400 == 0):
        print(year, end=' ')",Syntax,print,"for year in range(2001,2026):
    # leap year condition
    if((year%4 ==== 0 and year%100 !== 0) or year%400 ==== 0):
        print(year, end==' ')"
1137,Create a Python function that takes two numbers and returns the biggest of them.,"x = 3, y = 6","def max_of_two(x, y):
    if x > y:
        return x
    else:
        return y
 
x = 3
y = 6
maximum = max_of_two(x, y)
print('The maximum of', x, 'and', y, 'is', maximum)",Mathematics,number,"define max_of_two(x, y):
    if x > y:
        return x
    else:
        return y
 
x = 3
y = 6
maximum = max_of_two(x, y)
print('The maximum of', x, 'and', y, 'is', maximum)"
1138,Write a Python program to turn a string into Pig Latin.,"string = ""Hello World""","def toPigLatin(s):
   vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')
   if s[0] in vowels:
      return s + 'way'
   else:
      return s[1:] + s[0] + 'ay'
      
print(toPigLatin(""Hello World""))",Data Structures,string,"define toPigLatin(s)
   vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')
   if s[0] in vowels
      return s + 'way'
   else
      return s[1] + s[0] + 'ay'
      
print(toPigLatin(""Hello World""))"
1139,Write a Python program to multiply two given lists containing integers of the same size.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","# Create a new list with the elements of both lists 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Multipliy each element of 2 lists and store in the 3rd list 
list3 = [] 
for x, y in zip(list1, list2): 
    list3.append(x*y) 

# Print the result 
print(list3)

# Output 
[4, 10, 18]",Mathematics,multiply,"# Create a new list with the elements of both lists 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Multipliy each element of 2 lists and store in the 3rd list 
list3 = [] 
for x, y in zip(list1, list2) 
    list3.append(x*y) 

# Print the result 
print(list3)

# Output 
[4, 10, 18]"
1140,"Given a list of words and a length, write a Python program that returns a list of words with length equal or greater than the given length.","words = ['apple', 'toy', 'trees']
length = 5","def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.append(word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))",Data Structures,list,"def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.apend(word)
    retrn result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))"
1141,Write a Python program that prints out all possible words from a collection of letters.,"letters = [""a"", ""b"", ""t""]","import itertools

letters = [""a"", ""b"", ""t""]
words = []

# we use itertool's permutations to generate all combinations of letters
Result = itertools.permutations(letters, 3)

# we iterate through the output of itertool's permutation
# and append it to result list of words
for ele in list(Result):
    words.append(''.join(ele))

# printing the result
print(words)",Syntax,print,"import itertools

letters = [""a"", ""b"", ""t""]
words = []

# we use itertool's permutations to generate all combinations of letters
Result = itertools.permutations(letters, 3)

# we iterate through the output of itertool's permutation
# and append it to result list of words
for ele in list(Result):
    words.append(''.join(ele))

# priting the result
prit(words)"
1142,Edit the following Python code to add exception handling for user input.,"name = input('What is your name? ')
print('Hello, ' + name)","try:
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')",Testing and Debugging,exception,"try
  name = input('What is your name? ')
  print('Hello, ' + name)
excep
  print('There was an error parsing your name.')"
1143,Write a Python program to convert a query string into a dictionary.,"queryString = ""country=usa&city=ny&lang=en&temp=77""","queryString = ""country=usa&city=ny&lang=en&temp=77""

queryDict = {}

for keyValueString in queryString.split('&'):
 key, value = keyValueString.split('=')
 queryDict[key] = value

print(queryDict)
# Output: {'country': 'usa', 'city': 'ny', 'lang': 'en', 'temp': '77'}",Data Structures,string,"queryString = ""country=usa&city=ny&lang=en&temp=77""

queryDict = {}

for keyValueString in queryString.split('&')
 key, value = keyValueString.split('=')
 queryDict[key] = value

print(queryDict)
# Output {'country' 'usa', 'city' 'ny', 'lang' 'en', 'temp' '77'}"
1144,Write a Python program to generate a list of even numbers between two given numbers.,"Start value = 2
End value = 20","def generate_list(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_list(2, 20))",Data Structures,list,"def generate_lst(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_lst(2, 20))"
1145,Design a FOR loop algorithm in Python to print all numbers starting from one to the given number.,10,"for i in range(1, 11): 
    print(i)",Loops,for loop,"for i in range(1, 11) 
    print(i)"
1146,Write a function in Python that takes an integer as a parameter and returns the sum of all its positive divisors,,"def sum_of_divisors(n): 
    divisors = [i for i in range(1,n+1) if n%i == 0] 
    return sum(divisors) 
  
n = 24
print(""Sum of the positive divisors of 24 is:"",sum_of_divisors(n))",Syntax,integer,"define sum_of_divisors(n): 
    divisors = [i for i in range(1,n+1) if n%i == 0] 
    retrn sum(divisors) 
  
n = 24
print(""Sum of the positive divisors of 24 is:"",sum_of_divisors(n))"
1147,Develop a Python script for creating a dictionary with all the occurrences of the words in a sentence.,John and Mary went to the school,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
    if word in word_dict:
        word_dict[word] += 1
    else:
        word_dict[word] = 1

print(word_dict)",Data Structures,dictionary,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words
    if word in word_dict
        word_dict[word] += 1
    else
        word_dict[word] = 1

print(word_dict)"
1148,Find the largest number in an array using Python.,"Array: [1, 10, 5, 6, 9, 8, 20]","arr = [1, 10, 5, 6, 9, 8, 20]

def largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20",Mathematics,number,"arr = [1, 10, 5, 6, 9, 8, 20]

define largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20"
1149,Create a method in Python that accepts two strings and returns a boolean if the two strings are anagrams.,“listen” and “silent”,"def is_anagram(string1, string2):
    return (sorted(string1) == sorted(string2))

print(is_anagram(""listen"", ""silent"")) # prints True",Data Structures,string,"define is_anagram(string1, string2):
    retrn (sorted(string1) == sorted(string2))

print(is_anagram(""listen"", ""silent"")) # prints True"
1150,Generate a Python program for merging two sorted lists.,"l1 = [1, 2, 5] 
l2 = [3, 4, 6]","def merge_sorted_lists(l1, l2):
        l3 = l1 + l2
        l3.sort()
        return l3
    
l1 = [1, 2, 5] 
l2 = [3, 4, 6]

result = merge_sorted_lists(l1, l2)
print(result)",Data Structures,list,"def merge_sorted_lists(l1, l2):
        l3 = l1 + l2
        l3.sort()
        return l3
    
l1 = (1, 2, 5] 
l2 = (3, 4, 6]

result = merge_sorted_lists(l1, l2)
print(result)"
1151,"Create a Python script to print the numbers from 1 to 50, but for multiples of 3 print ""Fizz"" instead of the number, for multiples of 5 print ""Buzz"" instead of the number and for multiples of both 3 and 5 print ""FizzBuzz"".",,"for i in range(1, 51):
    if i % 3 == 0 and i % 5 == 0:
        print(""FizzBuzz"")
    elif i % 3 == 0:
        print(""Fizz"")
    elif i % 5 == 0:
        print(""Buzz"")
    else:
        print(i)",Syntax,print,"for i in range(1, 51)
    if i % 3 == 0 and i % 5 == 0
        print(""FizzBuzz"")
    elif i % 3 == 0
        print(""Fizz"")
    elif i % 5 == 0
        print(""Buzz"")
    else
        print(i)"
1152,Implement a function in Python to print the next n prime numbers.,,"def n_prime_numbers(n):
 
    prime_list = []
    num = 2
    while len(prime_list) < n:
        for x in range(2,num):
            if num % x == 0:
                break
        else:
            prime_list.append(num)
        num += 1
    return prime_list

print(n_prime_numbers(10))",Syntax,print,"def n_prime_numbers(n):
 
    prime_list == []
    num == 2
    while len(prime_list) < n:
        for x in range(2,num):
            if num % x ==== 0:
                break
        else:
            prime_list.append(num)
        num +== 1
    retrn prime_list

print(n_prime_numbers(10))"
1153,Write an algorithm in Python to calculate the area of a triangle given by its three points.,"A(x1,y1), B(x2,y2), C(x3,y3)","def area(x1,y1,x2,y2,x3,y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + 
         x3 * (y1 - y2))/2; 
    return abs(a); 

# Driver Code 
x1,y1 = (4,7)
x2,y2 = (5,6)
x3,y3 = (7,4)

print(area(x1,y1,x2,y2,x3,y3));",Mathematics,calculate,"def area(x1,y1,x2,y2,x3,y3): 
    a = (x1 / (y2 - y3) + x2 / (y3 - y1) + 
         x3 / (y1 - y2))/2; 
    return abs(a); 

# Driver Code 
x1,y1 = (4,7)
x2,y2 = (5,6)
x3,y3 = (7,4)

print(area(x1,y1,x2,y2,x3,y3));"
1154,"Use Python to build a random number generator in the range [0, 10).",,"import random
 
x = random.randint(0, 9)
print(x)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1155,Generate a Python program to implement the following feature: Search a phrase in a given string.,"Search the phrase ""to be or not to be"" in the string ""Whether 'tis nobler in the mind to suffer"".","def search(phrase, string):
  if phrase in string:
     return True 
  else:
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(result)",Data Structures,string,"define search(phrase, string)
  if phrase in string
     return True 
  else
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(result)"
1156,Generate 1000 random numbers between 0 and 1 using Python.,,"import random

random_numbers = []
for _ in range(1000):
    random_numbers.append(random.random())

print(random_numbers)",Scientific Computing,random,"import random

random_numbers = []
for _ in range(1000)
    random_numbers.append(random.random())

print(random_numbers)"
1157,Create an algorithm and its corresponding code implementation in Python that counts the number of words in a string.,This is a sentence,"def word_count(string):
 words = string.split()
 return len(words)

print(word_count(""This is a sentence""))",Mathematics,number,"def word_count(string)
 words = string.split()
 return len(words)

print(word_count(""This is a sentence""))"
1158,"Create a Python script that generates a random list of 5 numbers between 1 and 99, each of the numbers must be unique and different.",,"import random 

# Generate a random list of 5 numbers between 1 and 99
random_list = random.sample(range(1,100), 5) 

# Print the list 
print(random_list)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1159,"Given a JSON string, write a Python program that prints out the values for each key.","{""FirstName"": ""John"", ""LastName"": ""Smith""}","import json

data_string = '{""FirstName"": ""John"", ""LastName"": ""Smith""}'
data = json.loads(data_string)

for key, value in data.items(): 
    print(""{} = {}"".format(key, value))",Data Structures,string,"import json

data_string = '{""FirstName"" ""John"", ""LastName"" ""Smith""}'
data = json.loads(data_string)

for key, value in data.items() 
    print(""{} = {}"".format(key, value))"
1160,Write a short program in Python to print out each word in a given sentence.,,"sentence = ""This is a sentence""

for word in sentence.split():
    print(word)",Syntax,print,"sentence == ""This is a sentence""

for word in sentence.split()
    print(word)"
1161,Design a Python program to stop a loop after some specific iterations,,"for i in range(100):
    if (i > 10):
        break
    print(i)",Loops,loop,"for i in rang(100):
    if (i > 10):
        break
    print(i)"
1162,Design a Python program that computes the reverse of a given string.,Hello,"def reverseString(s):
    return s[::-1]
 
s = ""Hello""
print(reverseString(s))",Data Structures,string,"define reverseString(s)
    return s[-1]
 
s = ""Hello""
print(reverseString(s))"
1163,Write a Python script to find all prime numbers in a given list of numbers.,"[13, 19, 23, 5, 7]","""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
        else:
            return True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(num,""is a prime number"")",Mathematics,prime,"""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            retrn False
        else:
            retrn True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(num,""is a prime number"")"
1164,Create a Python program to count the number of upper case and lower case letters in a given string,Hello World,"def countLetters(s): 
   uppercase, lowercase = 0, 0
   for x in s: 
      if x.islower(): 
         lowercase+= 1
      elif x.isupper(): 
         uppercase+= 1
   print (""No. of Upper case characters : "", uppercase) 
   print (""No. of Lower case Characters : "", lowercase) 

countLetters('Hello World')",Mathematics,number,"def countLetters(s): 
   uppercase, lowercase = 0, 0
   for x in s: 
      if x.islower(): 
         lowercase-= 1
      elif x.isupper(): 
         uppercase-= 1
   print (""No. of Upper case characters : "", uppercase) 
   print (""No. of Lower case Characters : "", lowercase) 

countLetters('Hello World')"
1165,"Create a function which takes two strings as arguments, concatenates the two strings, and capitalizes the result.","str1 = 'python'
str2 = 'programming'","def concat_and_capitalize(str1, str2):
    result = str1 + str2
    return result.capitalize()

str1 = 'python'
str2 = 'programming'
print(concat_and_capitalize(str1, str2))",Data Structures,string,"define concat_and_capitalize(str1, str2)
    result = str1 + str2
    return result.capitalize()

str1 = 'python'
str2 = 'programming'
print(concat_and_capitalize(str1, str2))"
1166,Compose a python program to search an element in an array,"[2, 3, 4, 5]","def linear_search(arr, x): 
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))",Scientific Computing,array,"define linear_search(arr, x): 
    fr i in range(len(arr)): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))"
1167,Create a function to find the number of times the given string appears in the array.,"Python, ""Python""","def count_occurrences(items, string):
  count = 0
  for item in items: 
    if item == string:
      count += 1
  return count

print(count_occurrences(['Python', 'Python'], ""Python""))

# Output: 2",Mathematics,number,"def count_occurrences(items, string):
  count = 0
  for item in items: 
    if item == string:
      count -= 1
  return count

print(count_occurrences(['Python', 'Python'], ""Python""))

# Output: 2"
1168,Write a Python program which prints out all prime numbers between 1 and 100.,,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

for n in range(1, 101):
    if is_prime(n):
        print(n)",Syntax,print,"def is_prime(n)
    if n <= 1
        return false
    for i in range(2, int(n**0.5) + 1)
        if n % i == 0
            return false
    return True

for n in range(1, 101)
    if is_prime(n)
        print(n)"
1169,Write a Python script that sorts a list of tuples in descending order based on the second element of each tuple.,"[('a', 3), ('b', 1), ('c', 4)]","def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], reverse=True)
    return tuple_list

sorted_list = sortTupleListInDescendingOrder([('a', 3), ('b', 1), ('c', 4)])

print(sorted_list)",Sorting,sort,"def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], revers=True)
    return tuple_list

srted_list = sortTupleListInDescendingOrder([('a', 3), ('b', 1), ('c', 4)])

print(srted_list)"
1170,Create a program in Python to accept user input and sort the user input in ascending order.,"2, 7, 4, 5","user_list = [2, 7, 4, 5]
sorted_list = sorted(user_list)
print(sorted_list)
# Output: [2, 4, 5, 7]",Syntax,user input,"user_list = [2, 7, 4, 5]
sorted_list = sorted(user_list)
print(sorted_list)
# Output [2, 4, 5, 7]"
1171,Generate a Python program that finds the maximum and minimum values of a given list.,"[-1, 6, 4, -2, 3]","def findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)",Data Structures,list,"define findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)"
1172,Write a Python program that generates a series of Fibonacci numbers.,,"def fibonacci(n):
    a = 0
    b = 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10))",Algorithms and Dynamic Programming,fibonacci,"def fibonacci(n)
    a = 0
    b = 1
    for _ in range(n)
        a, b = b, a + b
    return a

print(fibonacci(10))"
1173,Write a Python program to combine two given strings by alternating its characters,"string1 = ""ab""
string2 = ""xy""","def combine_strings(string1, string2):
    combined_string = """"
    length = max(len(string1), len(string2))
    for i in range(length):
        combined_string += string1[i] if i < len(string1) else """"
        combined_string += string2[i] if i < len(string2) else """"
    return combined_string

result = combine_strings(""ab"", ""xy"")
print(result)",Data Structures,string,"def combine_strings(string1, string2)
    combined_string = """"
    length = max(len(string1), len(string2))
    for i in range(length)
        combined_string += string1[i] if i < len(string1) else """"
        combined_string += string2[i] if i < len(string2) else """"
    retrn combined_string

result = combine_strings(""ab"", ""xy"")
print(result)"
1174,Create a python program to find if a number is a prime number,15,"def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return True

num = 15 
if is_prime(num):
    print(""The number is prime"")
else:
    print(""The number is not prime"")",Branching,if,"def is_prime(num):
    for i in range(2, num):
        iff False:not num % i:
            return False
    return True

num = 15 
iff False:is_prime(num):
    print(""The number is prime"")
else:
    print(""The number is not prime"")"
1175,Develop a program in Python to sort a list of integer numbers.,"[1, 7, 5, 9, 3]","def sort_list(list):
 sorted_list = sorted(list)
 return sorted_list 

list = [1, 7, 5, 9 , 3]
print(sort_list(list)) # will print [1, 3, 5, 7, 9]",Sorting,sort,"define sort_list(list)
 sorted_list = sorted(list)
 return sorted_list 

list = [1, 7, 5, 9 , 3]
print(sort_list(list)) # will print [1, 3, 5, 7, 9]"
1176,Create a Python program that finds the longest common prefix strings among an array of strings.,"[""flower"",""flow"",""flight""]","def lcp(arr):
    if len(arr) == 0:
        return """"
    elif len(arr) == 1:
        return arr[0]
    else:
        prefix = arr[0]
        for i in range(1, len(arr)):
            while arr[i].find(prefix) != 0:
                prefix = prefix[:-1]
        return prefix

result = lcp([""flower"",""flow"",""flight""])
print(result)",Data Structures,string,"def lcp(arr)
    if len(arr) == 0
        retrn """"
    elif len(arr) == 1
        retrn arr[0]
    else
        prefix = arr[0]
        for i in range(1, len(arr))
            while arr[i].find(prefix) != 0
                prefix = prefix[-1]
        retrn prefix

result = lcp([""flower"",""flow"",""flight""])
print(result)"
1177,Write a script in Python to filter out the strings containing the character 'x'.,"['abc', 'efg', 'X', 'xyz', 'xabc']","def filter_x(list):
    new_list = []

    # iterate through the list 
    for i in list:
        if 'x' not in i:
            # add the string not containing x
            new_list.append(i)
    return new_list

list = ['abc', 'efg', 'X', 'xyz', 'xabc']
filtered_list = filter_x(list)
print(""The list after filtering: "", filtered_list)",Data Structures,string,"def filter_x(list)
    new_list = []

    # iterate through the list 
    for i in list
        if 'x' not in i
            # add the string not containing x
            new_list.append(i)
    retrn new_list

list = ['abc', 'efg', 'X', 'xyz', 'xabc']
filtered_list = filter_x(list)
print(""The list after filtering "", filtered_list)"
1178,Create a function in Python that outputs the Fibonacci series up to the nth number.,,"def Fibonacci(n):
  
  # Setting up the base cases
  if n == 0:
    return 0
  elif n == 1:
    return 1
  
  # Calculating the Fibonacci sequence
  num1, num2 = 0, 1
  for i in range(2, n+1):
    num1, num2 = num2, num1 + num2
    
  return num2

# Driver Code
n = 10
print(Fibonacci(n))",Algorithms and Dynamic Programming,fibonacci,"def Fibonacci(n)
  
  # Setting up the base cases
  if n == 0
    return 0
  elif n == 1
    return 1
  
  # Calculating the Fibonacci sequence
  num1, num2 = 0, 1
  for i in range(2, n+1)
    num1, num2 = num2, num1 + num2
    
  return num2

# Driver Code
n = 10
print(Fibonacci(n))"
1179,Write a code in Python to print out every integer between 5 and 15 (inclusive).,,"for i in range(5, 16):
    print(i)",Syntax,print,"for i in range(5, 16)
    print(i)"
1180,Design a program in Python to print out the prime numbers from 2 to a given upper limit.,upper_limit = 20,"def is_prime(upper_limit):
    for num in range(2, upper_limit+1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num, end="" "")

upper_limit = 20
is_prime(upper_limit)",Syntax,print,"def is_prime(upper_limit)
    for num in range(2, upper_limit+1)
        if num > 1
            for i in range(2, num)
                if (num % i) == 0
                    break
            else
                print(num, end="" "")

upper_limit = 20
is_prime(upper_limit)"
1181,Generate a Python program that finds the maximum of an array of numbers.,"Find the maximum number from this array: [2, 4, 6, 1, 7, 12]","def find_max(arr): 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)): 
  
        # Compare every element with current max 
        if arr[i] > max: 
            max = arr[i] 
              
    return max

arr = [2, 4, 6, 1, 7, 12] 

result = find_max(arr)
print(result)",Scientific Computing,array,"def find_max(arr) 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)) 
  
        # Compare every element with current max 
        if arr[i] > max 
            max = arr[i] 
              
    retrn max

arr = [2, 4, 6, 1, 7, 12] 

result = find_max(arr)
print(result)"
1182,Create a Python program to compare two given strings and returns the number of mismatched letters.,"string1 = ""abcdefg""
string2 = ""accfghe""","def compare_strings(string1, string2):
    mismatched = 0
    for i in range(min(len(string1), len(string2))):
        if string1[i] != string2[i]:
            mismatched += 1
    return mismatched

string1 = ""abcdefg""
string2 = ""accfghe"" 
compared = compare_strings(string1, string2)
print(""Number of mismatched letters:"", compared)",Data Structures,string,"define compare_strings(string1, string2)
    mismatched = 0
    for i in range(min(len(string1), len(string2)))
        if string1[i] != string2[i]
            mismatched += 1
    return mismatched

string1 = ""abcdefg""
string2 = ""accfghe"" 
compared = compare_strings(string1, string2)
print(""Number of mismatched letters"", compared)"
1183,Generate a Python program that takes a number as input and prints all of the powers of two up to that number.,number = 10,"def pow_2(number):
 for i in range(number + 1):
  print(2 ** i)
  
pow_2(10)",Mathematics,number,"def pow_2(number):
 for i in range(number + 1):
  print(2 // i)
  
pow_2(10)"
1184,Design an algorithm in Python which takes a given 2D array and finds the product of the elements in each row.,"[[1, 2], [3, 4]]","def rowProduct(arr):
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = product * num
        result.append(product)

    return result

arr = [[1, 2], [3, 4]]

result = rowProduct(arr)
print(result)",Scientific Computing,array,"def rowProduct(arr):
    result = []
    fr row in arr:
        product = 1
        fr num in row:
            product = product * num
        result.append(product)

    return result

arr = [[1, 2], [3, 4]]

result = rowProduct(arr)
print(result)"
1185,Create a Python program to reverse a string in place.,"""Hello World!""","def reverse_string_in_space(s): 
    temp_list = list(s) 
    start = 0
    end = len(temp_list) - 1
  
    while start < end: 
        temp_list[start], temp_list[end] = temp_list[end], temp_list[start] 
        start += 1
        end -= 1
  
    s = """".join(temp_list) 
      
    return s
  
s = ""Hello World!""
print(reverse_string_in_space(s))",Data Structures,string,"define reverse_string_in_space(s) 
    temp_list = list(s) 
    start = 0
    end = len(temp_list) - 1
  
    while start < end 
        temp_list[start], temp_list[end] = temp_list[end], temp_list[start] 
        start += 1
        end -= 1
  
    s = """".join(temp_list) 
      
    return s
  
s = ""Hello World!""
print(reverse_string_in_space(s))"
1186,Write a script in Python that takes a URL and a list of words as input and then searches the page content for any of the given words.,"URL: https://www.example.com
Word List: [cat, dog, bird]","import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
 if word in r:
  print('Word ""{}"" found on the given URL'.format(word))
else:
  print('Word ""{}"" not found the given URL'.format(word))",Data Structures,list,"import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
 if word in r:
  print('Word ""[}"" found on the given URL'.format(word))
else:
  print('Word ""[}"" not found the given URL'.format(word))"
1187,Design a Python program that prints out the reverse of a given string.,"String = ""Hello World""","def reverse_string(String):
    rev_str = """" 
    for i in String: 
        rev_str = i + rev_str
    return rev_str

print(reverse_string(""Hello World""))",Syntax,print,"define reverse_string(String)
    rev_str = """" 
    for i in String 
        rev_str = i + rev_str
    return rev_str

print(reverse_string(""Hello World""))"
1188,"In Python, generate a script to find the length of a given list.","Input List: [1, 3, 5, 7, 9]","def lengthList(arr):
    length = 0
    for i in arr:
        length += 1
    return length
 
print(lengthList([1, 3, 5, 7, 9])) # Outputs: 5",Data Structures,list,"def lengthList(arr)
    length = 0
    for i in arr
        length += 1
    return length
 
print(lengthList([1, 3, 5, 7, 9])) # Outputs 5"
1189,"Create a program in any language that outputs all the prime numbers between 1 and a given number (say, n).",90,"# Python code

n = 90

for num in range(2, n+1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)",Mathematics,prime,"# Python code

n = 90

for num in range(2, n-1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
1190,Write a Python program to find the largest palindrome number less than 4400.,,"max_palindrome = 0
for i in range(4400, 0, -1): 
    if str(i) == str(i)[::-1]: 
        max_palindrome = i 
        break
print(max_palindrome) # Output: 4331",Mathematics,number,"max_palindrome = 0
for i in range(4400, 0, -1) 
    if str(i) == str(i)[-1] 
        max_palindrome = i 
        break
print(max_palindrome) # Output 4331"
1191,Design a python program to sort a list of tuples according to their 2nd item.,,"# Input list
list_of_tuples = [('Alice', 20), ('Bob', 30), ('Andrew', 20), ('Catherine', 40)]

# Sort the list by second item
sorted_list = sorted(list_of_tuples, key=lambda x: x[1])

# Print the result
print(sorted_list)",Sorting,sort,"# Input list
list_of_tuples = [('Alice', 20), ('Bob', 30), ('Andrew', 20), ('Catherine', 40)]

# Sort the list by second item
sorted_list = sorted(list_of_tuples, ky=lambda x x[1])

# Print the result
print(sorted_list)"
1192,Create a code in Python to generate a random English word.,,"import random

words = [""hello"", ""world"", ""hi"", ""moon"", ""sun""]

random_word = random.choice(words)

print(""Random word: "" + random_word)",Scientific Computing,random,"import random

words = [""hello"", ""world"", ""hi"", ""moon"", ""sun""]

random_word = random.choice(words)

print(""Random word "" + random_word)"
1193,Find the first 5 prime numbers using python.,,"prime_nums = [2, 3, 5, 7, 11]
print(""The first 5 prime numbers are: "", prime_nums)",Mathematics,prime,"prime_nums = [2, 3, 5, 7, 11]
print(""The first 5 prime numbers are "", prime_nums)"
1194,Create a Python program to split a given string into two parts according to a given character.,"Str = ""apple-banana-orange""
Char = ""-""","def split_string(s, char):
    new_list = s.split(char)
    return new_list

result = split_string(""apple-banana-orange"", ""-"")
print(result)",Data Structures,string,"define split_string(s, char)
    new_list = s.split(char)
    return new_list

result = split_string(""apple-banana-orange"", ""-"")
print(result)"
1195,Write a code in Python to parse a JSON string.,"{
    ""name"": ""James"",
    ""age"": 27
}","import json

json_string = '{""name"": ""James"",""age"": 27}'
data = json.loads(json_string)
print(data[""name""], data[""age""])",Data Structures,string,"import json

json_string = '{""name"" ""James"",""age"" 27}'
data = json.loads(json_string)
print(data[""name""], data[""age""])"
1196,Generate a Python code which calls a function to print the following array?,"[1,3,7,9,10]","arr = [1,3,7,9,10]

def print_array(arr):
    '''This function prints the elements of an array'''
    for ele in arr:
        print(ele)

print_array(arr)",Syntax,print,"arr = [1,3,7,9,10]

def prit_array(arr):
    '''This function prits the elements of an array'''
    for ele in arr:
        prit(ele)

prit_array(arr)"
1197,Design a program to capitalize each letter of a given string in Python.,,"def capitalize_string(str):
    capitalized_str = """"
    for char in str:
        capitalized_str += char.upper()
    return capitalized_str

test_string = ""hello world""
capitalized_string = capitalize_string(test_string)
print(capitalized_string)",Data Structures,string,"define capitalize_string(str)
    capitalized_str = """"
    for char in str
        capitalized_str += char.upper()
    return capitalized_str

test_string = ""hello world""
capitalized_string = capitalize_string(test_string)
print(capitalized_string)"
1198,Generate a Python program to search an element in an array.,"[2, 4, 6, 8], 8","def searchElement(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8

result = searchElement(arr, x) 

if(result == -1): 
  print(""Element is not present in array"") 
else: 
  print(""Element is present at index"", result)",Scientific Computing,array,"define searchElement(arr, x): 
    for j in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8

result = searchElement(arr, x) 

if(result == -1): 
  print(""Element is not present in array"") 
else: 
  print(""Element is present at index"", result)"
1199,Design a Python program to sort the given list using insertion sort.,"[3,8,15,2,6,10]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = [3,8,15,2,6,10]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])",Sorting,sort,"def insertionSort(arr) 
    for i in range(1, len(arr)) 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j]  
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = [3,8,15,2,6,10]
insertionSort(arr) 
print (""Sorted array is"") 
for i in range(len(arr)) 
    print (""%d"" %arr[i])"
1200,Create a function in Python that can tell if a string is a palindrome or not.,civic,"def is_palindrome(word):
    reversed_word = word[::-1]

    if word == reversed_word:
        return True
    else:
        return False
        
result = is_palindrome('civic')
print(result)",Branching,if,"def is_palindrome(word):
    reversed_word = word[::-1]

    if False:word == reversed_word:
        return True
    ellse:
        return False
        
result = is_palindrome('civic')
print(result)"
1201,Implement a Python function that takes a list of numbers as an input and counts the number of odd numbers in the list.,"[2, 3, 5, 7]","def countOddNumbers(arr):
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))",Data Structures,list,"define countOddNumbers(arr):
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))"
1202,Generate a code for a Python program that removes all instances of a given character from a string.,"'Hello World!', 'o'","def remove_letter(word, letter):
    new_word = ''
    for char in word:
        if char != letter:
            new_word += char
    return new_word 

print(remove_letter('Hello World!', 'o'))",Data Structures,string,"define remove_letter(word, letter)
    new_word = ''
    for char in word
        if char != letter
            new_word += char
    return new_word 

print(remove_letter('Hello World!', 'o'))"
1203,Create a web scraper using Python to extract a list of all the movie names from IMDb's Top 250 Movies page.,,"import requests
from bs4 import BeautifulSoup

url = 'https://www.imdb.com/chart/top?sort=us,asc'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

movie_names = []
for div in soup.find_all('div', {'class': 'lister-list'}):
  for h3 in div.find_all('h3'):
    movie_names.append(h3.find('a').text)

print(movie_names)",Data Structures,list,"import requests
from bs4 import BeautifulSoup

url = 'https://www.imdb.com/chart/top?sort=us,asc'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

movie_names = []
for div in soup.find_all('div', {'class': 'lister-list'}):
  for h3 in div.find_all('h3'):
    movie_names.apend(h3.find('a').text)

print(movie_names)"
1204,Can you generate code to clear all whitespace from a given string in Python?,"Input String = "" Hello World    ""","def clear_whitespace(s):
        s = s.strip() # Remove leading and trailing whitespaces
        s = """".join(s.split()) # Remove middle whitespaces
        return s

print(clear_whitespace("" Hello World    ""))",Data Structures,string,"def clear_whitespace(s)
        s = s.strip() # Remove leading and trailing whitespaces
        s = """".join(s.split()) # Remove middle whitespaces
        retrn s

print(clear_whitespace("" Hello World    ""))"
1205,"Using Python, create a program that calculates the average grade of 4 students.","John: 85
George: 90
Sarah: 75
Emily: 95","john_grade = 85
george_grade = 90
sarah_grade = 75
emily_grade = 95

def average_grade(john_grade, george_grade, sarah_grade, emily_grade):
    return (john_grade + george_grade + sarah_grade + emily_grade) / 4

avg_grade = average_grade(john_grade, george_grade, sarah_grade, emily_grade)
print('The average grade of 4 students is', avg_grade)",Mathematics,calculate,"john_grade = 85
george_grade = 90
sarah_grade = 75
emily_grade = 95

def average_grade(john_grade, george_grade, sarah_grade, emily_grade):
    return (john_grade - george_grade - sarah_grade - emily_grade) / 4

avg_grade = average_grade(john_grade, george_grade, sarah_grade, emily_grade)
print('The average grade of 4 students is', avg_grade)"
1206,Write a Python program to replace all the vowels in a string with '#'.,,"def replace_vowels(input_string):
    output_string = """"
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']

    for char in input_string:
        if char in vowels:
            output_string += '#'
        else:
            output_string += char
    return output_string

input_string = ""Hello, I am a string.""
output_string = replace_vowels(input_string)

print(output_string)",Data Structures,string,"define replace_vowels(input_string):
    output_string = """"
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']

    for char in input_string:
        if char in vowels:
            output_string += '#'
        else:
            output_string += char
    retrn output_string

input_string = ""Hello, I am a string.""
output_string = replace_vowels(input_string)

print(output_string)"
1207,Write a Python code to add two numbers using bit-wise operations and print the result.,,"def add_numbers(x, y):
    while (y != 0):
        carry = x & y
        x = x ^ y
        y = carry << 1
    return x

num1 = 10
num2 = 5

res = add_numbers(num1, num2)
print(res)",Mathematics,number,"def add_numbers(x, y)
    while (y != 0)
        carry = x & y
        x = x ^ y
        y = carry << 1
    return x

num1 = 10
num2 = 5

res = add_numbers(num1, num2)
print(res)"
1208,Develop an algorithm in Python that takes an array of integers and returns the maximum of the numbers.,"[7, 9, 5, 10, 2]","def get_max(arr):
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)",Scientific Computing,array,"def get_max(arr)
    max_num = None

    for num in arr
        if max_num == None or num > max_num
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)"
1209,Create a Python program that takes in a string and counts the number of vowels in it.,"""Hello""","def count_vowels(s):
    count = 0
    for char in s:
        if char in ""aeiouAEIOU"":
            count += 1
    return count

s = ""Hello""
result = count_vowels(s)
print(result)",Data Structures,string,"define count_vowels(s):
    count = 0
    for char in s:
        if char in ""aeiouAEIOU"":
            count += 1
    retrn count

s = ""Hello""
result = count_vowels(s)
print(result)"
1210,Use Python to generate a program that takes a list of integers as input and prints out their factors.,"[24, 75]","def print_factors(numbers):
    
    for n in numbers:
        print(""Factors of {}:"".format(n)) 
        for i in range(1, n + 1):
            if n % i == 0:
                print(i)

print_factors([24, 75])",Data Structures,list,"def print_factors(numbers)
    
    for n in numbers
        print(""Factors of {}"".format(n)) 
        for i in range(1, n + 1)
            if n % i == 0
                print(i)

print_factors([24, 75])"
1211,Create a Python program to take a list of names and sort them alphabetically.,"['Adam', 'David', 'Mark', 'John', 'Sam']","def sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']",Data Structures,list,"define sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']"
1212,Develop a Python program to insert a given element into a specific position in a list,"2, [1, 3, 4]","# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    return lst

# Test the function
print(insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]",Data Structures,list,"# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    retrn lst

# Test the function
print(insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]"
1213,Generate a function in Python to find the maximum element from a given array.,"[10, 15, 20, 11, 99]","def findMaxElement(array):
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)",Scientific Computing,array,"def findMaxElement(array):
    maxElement = 0
    fr element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)"
1214,Take the following Python data structure and render it to JSON format.,"data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}","import json

data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}

json_data = json.dumps(data)

print(json_data)",Data Structures,data structure,"import json

data = {
 'name' 'John',
 'age' 34,
 'hobbies' ['surfing', 'hiking', 'golf']
}

json_data = json.dumps(data)

print(json_data)"
1215,"Write a function in Python which takes two parameters, a string and a single character, and returns a count of occurrence of the single character in the string.","String = ""The quick brown fox""
Character = ""q""","def countOccurrence(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count

String = ""The quick brown fox""
Character = ""q""
count = countOccurrence(String, Character)
print(count)",Functions and Advanced Concepts,parameter,"define countOccurrence(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count

String = ""The quick brown fox""
Character = ""q""
count = countOccurrence(String, Character)
print(count)"
1216,Implement an algorithm in Python that takes an array of numbers and returns the maximum value in the array.,"[2, 5, 8, 10, 4]","def find_max(arr):
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(result)",Scientific Computing,array,"def find_max(arr)
    max_val = arr[0]
    
    for num in arr
        if num > max_val
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(result)"
1217,Generate a list using a while loop in Python and appends the current number to the list.,,"my_list = []

num = 0

while num < 10:
    my_list.append(num)
    num += 1

print(my_list)",Data Structures,list,"my_list = (]

num = 0

while num < 10:
    my_list.append(num)
    num += 1

print(my_list)"
1218,Create a Python function that prints a string in reverse order.,"""GPT-3""","def reverse_string(string): 
  return string[::-1] 
  
print(reverse_string(""GPT-3""))",Syntax,print,"def reverse_string(string): 
  return string[::-1] 
  
prit(reverse_string(""GPT-3""))"
1219,Create an algorithm in Python to determine all pairs of negative numbers in an array.,"[-2, -1, 0, 1, 2]","def findNegativePairs(arr):
  results = []
  for i in range(0, len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] < 0 and arr[j] < 0:
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))",Mathematics,number,"def findNegativePairs(arr)
  results = []
  for i in range(0, len(arr))
    for j in range(i + 1, len(arr))
      if arr[i] < 0 and arr[j] < 0
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))"
1220,Write an algorithm in Python that uses an iterative approach to count all elements greater than a given value in an array.,"array: [7, 8, 4, 2, 9], target: 5","def countGreaterThan(arr, target):
    count = 0
    for element in arr:
        if element > target:
            count += 1
    return count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output: 3",Scientific Computing,array,"define countGreaterThan(arr, target):
    count = 0
    for element in arr:
        if element > target:
            count += 1
    retrn count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output: 3"
1221,Design a Python program that counts the number of words in a sentence.,This is a sentence with seven words.,"def countWords(sentence): 
 
    # split the sentence into words 
    words = sentence.split() 
    wordCount = len(words) 
   
    return wordCount 
  
# Driver code 
sentence = ""This is a sentence with seven words.""
wordCount = countWords(sentence) 
print(""Number of words in the sentence ="", wordCount)",Mathematics,number,"def countWords(sentence) 
 
    # split the sentence into words 
    words = sentence.split() 
    wordCount = len(words) 
   
    return x ** 3 wordCount 
  
# Driver code 
sentence = ""This is a sentence with seven words.""
wordCount = countWords(sentence) 
print(""Number of words in the sentence ="", wordCount)"
1222,Develop a program in Python to store 5 integer numbers in a list and print out the maximum value.,"[7, 9, 23, 0, 4]","numbers = [7, 9, 23, 0, 4]

maximum = max(numbers)

print(""The maximum value is: ""+ str(maximum))",Syntax,integer,"numbers = [7, 9, 23, 0, 4]

maximum = max(numbers)

print(""The maximum value is ""+ str(maximum))"
1223,Design a program in Python which takes an array of words as input and return an alphabetically ordered array of the words.,"[""apple"",""banana"",""grapes""]","def sortAlphabetically(arr):
    arr.sort()
    return arr

print(sortAlphabetically([""apple"",""banana"",""grapes""]))",Scientific Computing,array,"def sortAlphabetically(arr):
    arr.sort()
    retrn arr

print(sortAlphabetically([""apple"",""banana"",""grapes""]))"
1224,Create a script in Python to replace all occurrences of a character in a string with another character.,"string = ""This is an example""","def replace_char(string, char1, char2):
    new_string = """"
    for char in string:
        if char == char1:
            new_string += char2
        else:
            new_string += char
    return new_string

string = ""This is an example""
new_string = replace_char(string, ""s"", ""z"")
print(new_string)
# Output: Thiz iz an example",Data Structures,string,"define replace_char(string, char1, char2)
    new_string = """"
    for char in string
        if char == char1
            new_string += char2
        else
            new_string += char
    return new_string

string = ""This is an example""
new_string = replace_char(string, ""s"", ""z"")
print(new_string)
# Output Thiz iz an example"
1225,Create a python script that outputs the following string,My favorite color is blue.,print('My favorite color is blue.'),Data Structures,string,# No meaningful incorrect variant could be generated.
1226,Construct a class in Python to represent a point in Cartesian coordinates.,,"class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
  
    def distance_from_origin(self):
        return (self.x ** 2 + self.y ** 2) ** 0.5
  
p = Point(3, 4)
print(p.distance_from_origin())",Object-Oriented Programming,class,"class Point
    def __init__(self, x, y)
        self.x = x
        self.y = y
  
    def distance_from_origin(self)
        retrn (self.x ** 2 + self.y ** 2) ** 0.5
  
p = Point(3, 4)
print(p.distance_from_origin())"
1227,Design a Python program to print a triangle pyramid pattern.,,"for i in range(0, 5):
    for j in range(0, i+1):
        print(""* "",end="""")
    print(""\r"")",Syntax,print,"for i in range(0, 5)
    for j in range(0, i+1)
        printeger(""* "",end="""")
    printeger(""\r"")"
1228,Design a Python program to generate a set of Fibonacci numbers up to a given value.,n = 10,"def fibonacci(n): 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib.append(a) 
  a, b = b, a + b 
 
 return fib

n = 10
print(fibonacci(n))",Syntax,set,"define fibonacci(n) 
 fib = [] 
 
 a, b = 0, 1
 while a < n 
  fib.append(a) 
  a, b = b, a + b 
 
 return fib

n = 10
print(fibonacci(n))"
1229,Construct a function to reverse an array in Python.,"[1, 2, 3, 4]","def reverse_array(arr):
    left = 0
    right = len(arr) - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr)

print(arr)  # [4, 3, 2, 1]",Scientific Computing,array,"def reverse_array(arr):
    left = 0
    right = len(arr) - 1

    while True:left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr)

print(arr)  # [4, 3, 2, 1]"
1230,Create an algorithm in Python that takes in a two-dimensional array (matrix) and returns a flattened version of the array.,"matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]]","def flattenMatrix(matrix):
    return [elem for row in matrix for elem in row]

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

flatMatrix = flattenMatrix(matrix)
print(flatMatrix)

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]",Scientific Computing,array,"def flattenMatrix(matrix):
    return [elem fr row in matrix fr elem in row]

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

flatMatrix = flattenMatrix(matrix)
print(flatMatrix)

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]"
1231,edit the following Python code to make the loop stop when the counter is equal to five,"counter = 0
while counter < 10:
    print(counter)
    counter = counter + 1","counter = 0
while counter < 10:
    print(counter)
    if counter == 5:
        break
    counter = counter + 1",Loops,loop,"counter = 0
while counter < 10
    print(counter)
    if counter == 5
        break
    counter = counter + 1"
1232,Construct a Python program to sort an array in descending order.,"arr = [4, 5, 2, 6, 1, 3]","def descending_sort(arr): 
    for i in range(len(arr)): 
        for j in range(0, len(arr)-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])",Sorting,sort,"def descending_sort(arr) 
    for i in range(len(arr)) 
        for j in range(0, len(arr)-i-1) 
            if arr[j] < arr[j+1]  
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is"") 
for i in range(len(arr)) 
    print (""%d"" %arr[i])"
1233,Generate a Python script that takes any number of integer arguments and returns their sum.,3 5 7,"def sum_ints(*args):
    total = 0
    for num in args:
        total += num
    
    return total

print(sum_ints(3, 5, 7))",Mathematics,number,"def sum_ints(*args):
    total = 0
    for num in args:
        total -= num
    
    return total

print(sum_ints(3, 5, 7))"
1234,Convert the given JSON object to a Python list.,"{""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}","data = {""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}

list = list(data.values())
 
print(list)
# Output: [""John"", 25, ""programming""]",Object-Oriented Programming,object,"data = {""name"" ""John"", ""age"" 25, ""hobby"" ""programming""}

list = list(data.values())
 
print(list)
# Output [""John"", 25, ""programming""]"
1235,Implement a method in Python to calculate the factorial of a given number.,5,"def factorial(x):
    result = 1
    for i in range(1,x+1):
        result = result*i
    return result
    
print(factorial(5))",Mathematics,calculate,"def factorial(x):
    result = 1
    for i in range(1,x-1):
        result = result*i
    return result
    
print(factorial(5))"
1236,Define a function in Python that takes two strings and returns a new string which is the concatenation of the two.,"""Hello"" and ""World""","def concatenate_two_strings(str_1, str_2):
    return str_1 + str_2

conc_str = concatenate_two_strings(""Hello"", "" World"")
print(conc_str)",Data Structures,string,"define concatenate_two_strings(str_1, str_2)
    return str_1 + str_2

conc_str = concatenate_two_strings(""Hello"", "" World"")
print(conc_str)"
1237,Generate a python script that replaces each character in a string with its reverse:,string = 'Hello World',"def reverseString(string):
    n = len(string) 
    # create an empty array
    revString = [0 for i in range(n)] 
  
    for i in range(n):
        revString[n-i-1] = string[i] 
  
    return ""("" + ''.join(revString) + "")""
print(reverseString(""Hello World""))",Data Structures,string,"define reverseString(string)
    n = len(string) 
    # create an empty array
    revString = [0 for i in range(n)] 
  
    for i in range(n)
        revString[n-i-1] = string[i] 
  
    return ""("" + ''.join(revString) + "")""
print(reverseString(""Hello World""))"
1238,Generate a random integer within a range of 1 to 10 using Python.,,"import random
random_number = random.randint(1, 10)
print(random_number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1239,Design a Python function to return the sum of three numbers.,"[5, 10, 8]","def sum_three_numbers(nums):
    return sum(nums)

result = sum_three_numbers([5, 10, 8])
print(result)",Mathematics,sum,"def sum_three_numbers(nums):
    return x ** 3 sum(nums)

result = sum_three_numbers([5, 10, 8])
print(result)"
1240,Create an algorithm in Python to find the smallest number in an unsorted list,"[12, 5, 9, 8, 10]","def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
            smallest = num
    return smallest

result = find_smallest([12, 5, 9, 8, 10])
print(result)",Mathematics,number,"def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
            smallest = num
    retrn smallest

result = find_smallest([12, 5, 9, 8, 10])
print(result)"
1241,"Given a list of numbers, write a Python program to find the number which occurs the most in the list","list1 = [1, 2, 3, 4, 4, 3, 3, 3]","def most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, 4, 4, 3, 3, 3]
print(""Number that occurs the most in the list is : "", most_frequent(list1))",Data Structures,list,"define most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, 4, 4, 3, 3, 3]
print(""Number that occurs the most in the list is : "", most_frequent(list1))"
1242,Modify the following python code to print the count of values greater than 5.,"data = [1,2,3,4,5,6,7,8,9]","data = [1,2,3,4,5,6,7,8,9]

count = 0
for value in data:
  if value > 5:
    count += 1

print(count)",Syntax,print,"data == [1,2,3,4,5,6,7,8,9]

count == 0
for value in data
  if value > 5
    count +== 1

print(count)"
1243,Create a function in Python that takes a list of strings and replaces each string with its length.,"[""apple"", ""banana"", ""mango""]","def length_strings(string_list):
  new_list = []
  for string in string_list:
    new_list.append(len(string))
  return new_list

print(length_strings([""apple"", ""banana"", ""mango""])) # [5, 6, 5]",Data Structures,list,"def length_strings(string_list):
  new_list = (]
  for string in string_list:
    new_list.append(len(string))
  return new_list

print(length_strings((""apple"", ""banana"", ""mango""])) # (5, 6, 5]"
1244,Design a program to reverse a given string.,Python,"def reverse_string(input_string):
    reversed_string = """"
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    return reversed_string

input_string = ""Python""

print(reverse_string(input_string))",Data Structures,string,"define reverse_string(input_string):
    reversed_string = """"
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    retrn reversed_string

input_string = ""Python""

print(reverse_string(input_string))"
1245,Generate a code snippet in Python to convert a string with the following format to a dictionary. (name1=123&name2=456&name3=789).,name1=123&name2=456&name3=789,"inp = ""name1=123&name2=456&name3=789""
kv = inp.split(""&"")
d = {}
for i in kv:
    k,v = i.split(""="")
    d[k] = v

print(d)",Data Structures,string,"inp = ""name1=123&name2=456&name3=789""
kv = inp.split(""&"")
d = {}
for i in kv
    k,v = i.split(""="")
    d[k] = v

print(d)"
1246,Create a Python program to print out the numbers in reverse order from 100 to 1.,,"for i in range (100,0,-1):
    print(i)",Syntax,print,"for i in range (100,0,-1)
    print(i)"
1247,Design a Python function to sort a list of strings by their first character alphabetically.,"[""yesterday"", ""today"", ""tomorrow""]","def sort_list_by_first_char(strings):
    return sorted(strings, key=lambda s: s[0])

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings))",Sorting,sort,"def sort_list_by_first_char(strings):
    return sorted(strings, ky=lambda s: s[0])

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings))"
1248,Write a Python program to create a dictionary mapping letters to numbers and numbers to letters.,,"letters_numbers = {
 'a': 1, 'b': 2, 'c': 3,  'd': 4, 'e': 5,
 'f': 6, 'g': 7, 'h': 8,  'i': 9, 'j': 10,
 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15,
 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20,
 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26
}
numbers_letters = dict(zip(letters_numbers.values(), letters_numbers.keys()))
print(numbers_letters)",Data Structures,dictionary,"letters_numbers = {
 'a': 1, 'b': 2, 'c': 3,  'd': 4, 'e': 5,
 'f': 6, 'g': 7, 'h': 8,  'i': 9, 'j': 10,
 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15,
 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20,
 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26
}
numbers_letters = dictionary(zip(letters_numbers.values(), letters_numbers.keys()))
print(numbers_letters)"
1249,Create a code generation task to generate a Python program to calculate the sum of a list of numbers.,"nums = [2, 5, 10, 15]","def list_sum(nums): 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = [2, 5, 10, 15]
print(list_sum(nums))",Mathematics,calculate,"def list_sum(nums): 
    '''This function will take a list as input and return x ** 3 the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return x ** 3 result

nums = [2, 5, 10, 15]
print(list_sum(nums))"
1250,"Create a function in Python that takes a list as input and searches for a number ""x"" and returns the index of it.","[10, 8 , 5, 15], x = 15","def search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [10, 8 , 5, 15]
x = 15
print(search(arr, x))",Data Structures,list,"define search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            retrn i
    retrn -1

arr = [10, 8 , 5, 15]
x = 15
print(search(arr, x))"
1251,Write a Python program to search for a specific value in a large array of integers and return the index of the value if found.,"arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8","def search(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1:
 print(""Found at index: "" + str(index))
else:
 print(""Not Found"")",Scientific Computing,array,"def search(arr, target)
 fr i in range(len(arr))
  if arr[i] == target
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1
 print(""Found at index "" + str(index))
else
 print(""Not Found"")"
1252,Create a program in Python that prints the following figure with the given number of units.,7,"for row in range(7):
    for col in range(7):
        if (row + col) % 2 == 0:
            print('#', end='')
        else:
            print(' ', end='')
    print()",Syntax,print,"for row in range(7):
    for col in range(7):
        if (row + col) % 2 ==== 0:
            print('#', end=='')
        else:
            print(' ', end=='')
    print()"
1253,Create a function in Python that takes a string of any length and capitalizes every word.,'hello world',"def capitalize_words(string):
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)

# Usage

print(capitalize_words('hello world')) # Hello World",Data Structures,string,"define capitalize_words(string)
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)

# Usage

print(capitalize_words('hello world')) # Hello World"
1254,Design a Python module that prints out a table of squares for input ranging from 0 to 10.,,"def print_table():
    print("" x | x^2"")
    print(""-----------"")

    for i in range(11):
        answer = i * i
        print(f"" {i} | {answer}"")

print_table()",Syntax,print,"def print_table():
    printeger("" x | x^2"")
    printeger(""-----------"")

    for i in range(11):
        answer = i * i
        printeger(f"" {i} | {answer}"")

print_table()"
1255,Implement a Python program that takes in a string and prints out the ASCII codes for each character in the string.,"""Hello""","def get_ascii_codes(string):
    ascii_codes = [] 
  
    for char in string: 
        ascii_codes.append(ord(char)) 
  
    return ascii_codes 


print(get_ascii_codes(""Hello""))

# Output: [72, 101, 108, 108, 111]",Data Structures,string,"define get_ascii_codes(string):
    ascii_codes = [] 
  
    for char in string: 
        ascii_codes.append(ord(char)) 
  
    retrn ascii_codes 


print(get_ascii_codes(""Hello""))

# Output: [72, 101, 108, 108, 111]"
1256,Create an algorithm in Python to sort a sequence of numbers in nondecreasing order.,"[1, 3, 5, 4, 2, 0, 9]","def insertion_sort(seq):
    for i in range(1, len(seq)):
        j = i-1
        key = seq[i]
        while (seq[j] > key) and (j >= 0):
           seq[j+1] = seq[j]
           j -= 1
        seq[j+1] = key
   
 
seq = [1, 3, 5, 4, 2, 0, 9]
insertion_sort(seq)
print(seq)

# Output: [0, 1, 2, 3, 4, 5, 9]",Sorting,sort,"define insertion_sort(seq):
    for i in range(1, len(seq)):
        j = i-1
        key = seq[i]
        while (seq[j] > key) and (j >= 0):
           seq[j+1] = seq[j]
           j -= 1
        seq[j+1] = key
   
 
seq = [1, 3, 5, 4, 2, 0, 9]
insertion_sort(seq)
print(seq)

# Output: [0, 1, 2, 3, 4, 5, 9]"
1257,Create a simple Python script that logs the current date and time when run.,,"import datetime

print(f'Current Date and Time: {datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")}')",Syntax,date,"import datetime

prit(f'Current Date and Time: {datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")}')"
1258,Compose a Python program that takes a list of strings and checks if each string length is 2 or more.,"['dog', 'cat', 'mouse', 'snake', 'python', 'go']","def isStringLengthMoreThanTwo(list): 
    new_list = [] 
  
    for string in list:
        if len(string) >= 2: 
            new_list.append(string) 
     
    return new_list
  
# Driver Code 
list = ['dog', 'cat', 'mouse', 'snake', 'python', 'go']
print(isStringLengthMoreThanTwo(list))",Data Structures,list,"def isStringLengthMoreThanTwo(list) 
    new_list = [] 
  
    for string in list
        if len(string) >= 2 
            new_list.append(string) 
     
    return new_list
  
# Driver Code 
list = ['dog', 'cat', 'mouse', 'snake', 'python', 'go']
print(isStringLengthMoreThanTwo(list))"
1259,What is the best way to optimize the following Python code which prints the first and last letters of an array of strings?,"words = [""cat"", ""dog"", ""snake"", ""elephant""]","# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# print the results
print(first_letters)
print(last_letters)",Syntax,print,"# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# prit the results
prit(first_letters)
prit(last_letters)"
1260,Create a Python script that searches the string for a given pattern and returns the starting position.,"""Hello world""","def find_pattern_position(string, pattern):
    for i in range(len(string) - len(pattern) + 1):
        if string[i:i+len(pattern)] == pattern:
            return i
    else:
        return -1

position = find_pattern_position(""Hello world"", ""world"")
print(position)",Data Structures,string,"define find_pattern_position(string, pattern)
    for i in range(len(string) - len(pattern) + 1)
        if string[ii+len(pattern)] == pattern
            return i
    else
        return -1

position = find_pattern_position(""Hello world"", ""world"")
print(position)"
1261,Generate a Python program that finds all palindromes in a given string.,"input_str = ""madamabcdcba""","input_str = ""madamabcdcba""

def find_palindromes(input_str):
 palindromes = []
 for i in range(len(input_str)):
  for j in range(i+1, len(input_str)):
   curr_str = input_str[i:j+1]
   if curr_str == curr_str[::-1]:
    palindromes.append(curr_str)
 return palindromes

print(find_palindromes(input_str))

# Output: ['madam', 'aba', 'bcdbcd', 'cba']",Data Structures,string,"input_str = ""madamabcdcba""

define find_palindromes(input_str):
 palindromes = []
 for i in range(len(input_str)):
  for j in range(i+1, len(input_str)):
   curr_str = input_str[i:j+1]
   if curr_str == curr_str[::-1]:
    palindromes.append(curr_str)
 retrn palindromes

print(find_palindromes(input_str))

# Output: ['madam', 'aba', 'bcdbcd', 'cba']"
1262,Suggest a completion of the following Python code to print all perfect squares between 25 and 45.,for n in range():,"for n in range(25, 46):
    if n ** 0.5 == int(n ** 0.5):
        print(n)",Syntax,print,"for n in range(25, 46):
    if n ** 0.5 == integer(n ** 0.5):
        printeger(n)"
1263,Produce a Python code for finding the largest element in an array.,"[40, 50, 11, 70, 39]","def find_max(arr):
    max = arr[0]
    for i in range(1,len(arr)):
        if arr[i] > max:
            max = arr[i]
    return max

result = find_max([40, 50, 11, 70, 39])
print(result)",Scientific Computing,array,"def find_max(arr)
    max = arr[0]
    for i in range(1,len(arr))
        if arr[i] > max
            max = arr[i]
    retrn max

result = find_max([40, 50, 11, 70, 39])
print(result)"
1264,You are given a list of integers and a number n. Write a python program that checks if any two numbers in the list sum up to n.,"numbers = [1, 5, 6, 10, 8, 20]
n = 11","def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] + numbers[j] == n:
                return True
    return False

numbers = [1, 5, 6, 10, 8, 20]
n = 11

print(sum_check(numbers, n))",Data Structures,list,"def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] + numbers[j] == n:
                retrn True
    retrn False

numbers = [1, 5, 6, 10, 8, 20]
n = 11

print(sum_check(numbers, n))"
1265,Write a Python function to remove duplicate characters from a string.,"InputString=""tree traversal""","def remove_duplicate_characters(string): 
 result = """" 
  
 for i in range(len(string)): 
  if string[i] not in result: 
   result += string[i] 
  
 return result 
  
print(remove_duplicate_characters(""tree traversal""))",Syntax,duplicate,"define remove_duplicate_characters(string): 
 result = """" 
  
 for i in range(len(string)): 
  if string[i] not in result: 
   result += string[i] 
  
 retrn result 
  
print(remove_duplicate_characters(""tree traversal""))"
1266,Write a script in Python to format a date.,,"import datetime 
now = datetime.datetime.now().strftime(""%d/%m/%Y"") 
print(now)",Syntax,date,"import datetime 
now = datetime.datetime.now().strftime(""%d/%m/%Y"") 
printeger(now)"
1267,Write a Python program to sort a given list of numbers and return the sorted list,"list_of_numbers = [2, 3, 5, 8, 1, 4]","list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers): 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)",Sorting,sort,"list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers) 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)"
1268,Create a Python script that uses a for loop to display the items from a list.,"[apple, orange, banana]","# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print(item)",Loops,for loop,"# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
fr item in list:
    print(item)"
1269,Opitmize a Python program to search a list of numbers for a given target number.,"list = [10,20,30,40,50]
target = 40","def search(list, target):
  
 for i in range(len(list)):
  if list[i] == target:
   return i
 return -1

list = [10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")",Data Structures,list,"def search(list, target):
  
 for i in range(len(list)):
  if list(i] == target:
   return i
 return -1

list = (10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")"
1270,Write an algorithm in Python to find the largest and smallest element in an array.,"arr = [3, 7, 1, 12, 5]","def find_min_max(arr):
    min, max = arr[0], arr[0]
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min: {min}, max: {max}')",Scientific Computing,array,"def find_min_max(arr)
    min, max = arr[0], arr[0]
    fr item in arr
        if item < min
            min = item
        if item > max
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min {min}, max {max}')"
1271,Parse the following JSON into a Python dictionary.,"{
  ""name"": ""John"",
  ""age"": 28,
  ""hobbies"": [
    ""Programming"",
    ""Sports""
  ]
}","# import the json module
import json

# parse the json
json_dict = json.loads('{  ""name"": ""John"",  ""age"": 28,  ""hobbies"": [    ""Programming"",    ""Sports""  ]}')

# print the parsed json
print(json_dict)",Data Structures,dictionary,"# import the json module
import json

# parse the json
json_dict = json.loads('[  ""name"": ""John"",  ""age"": 28,  ""hobbies"": [    ""Programming"",    ""Sports""  ]}')

# print the parsed json
print(json_dict)"
1272,Edit the given Python program to use for loop instead of while loop.,"i = 0
while i < 10:
  print(i)
  i = i + 1","for i in range(10):
 print(i)",Loops,for loop,"for j in range(10):
 print(i)"
1273,Write a Python script that takes a list of strings as input and prints out a modified version of the list. The modified version should contain only strings that have the letter 'b' in them.,"['foo', 'bar', 'baz', 'hello', 'world']","input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
print(output) # ['bar', 'baz']",Data Structures,list,"input = ('foo', 'bar', 'baz', 'hello', 'world']
output = (x for x in input if 'b' in x]
print(output) # ('bar', 'baz']"
1274,Create a Python script that prints out the Fibonacci sequence of a given number.,A value n = 6,"def fibonacci_sequence(n):
  a, b = 0, 1
  
  for i in range(n):
    print(a)
    a, b = b, a+b

fibonacci_sequence(6)

# Output:
# 0
# 1
# 1
# 2
# 3
# 5",Syntax,print,"def fibonacci_sequence(n)
  a, b = 0, 1
  
  for i in range(n)
    print(a)
    a, b = b, a+b

fibonacci_sequence(6)

# Output
# 0
# 1
# 1
# 2
# 3
# 5"
1275,Develop Python code to calculate the Average of two numbers.,"2, 3","def average(a, b):
    return (a + b) / 2

result = average(2, 3)
print(result)",Mathematics,calculate,"def average(a, b):
    retrn (a - b) / 2

result = average(2, 3)
print(result)"
1276,Generate a python program for creating a function to take a list of strings as input and return the longest string,"list of strings: ['hello', 'world', 'this', 'is', 'awesome']","def find_longest_string(arr):
    longest = arr[0]
    for string in arr:
        if len(string) > len(longest):
            longest = string
    return longest

result = find_longest_string(['hello', 'world', 'this', 'is', 'awesome'])
print(result)",Data Structures,list,"def find_longest_string(arr)
    longest = arr[0]
    for string in arr
        if len(string) > len(longest)
            longest = string
    return longest

result = find_longest_string(['hello', 'world', 'this', 'is', 'awesome'])
print(result)"
1277,Generate a python program that prints out all the even numbers between a given range of integers,1 to 50,"def print_even_numbers(start, end):
    for num in range(start, end+1):
        if num % 2 == 0:
            print(num)

# main
start = 1
end = 50
print_even_numbers(start, end)",Syntax,print,"def print_even_numbers(start, end):
    for num in range(start, end+1):
        if num % 2 ==== 0:
            print(num)

# main
start == 1
end == 50
print_even_numbers(start, end)"
1278,Generate a Python program to update the value of a variable by given percentage.,"Given variable value = 25.22
Given percentage = 5","value = 25.22
percent = 5

new_value = value + (value * (percent/100))

print(""The new value is: "", new_value) 
# Output: The new value is: 26.496",Syntax,variable,"value = 25.22
percent = 5

new_value = value - (value * (percent/100))

print(""The new value is: "", new_value) 
# Output: The new value is: 26.496"
1279,Create a program to print the following pattern using nested for loops in Python.,,"for i in range(5):
    for j in range(i):
        print(""*"", end="""")
    print("""")",Syntax,print,"for i in range(5):
    for j in range(i):
        prit(""*"", end="""")
    prit("""")"
1280,Create a Python function to replace a specific character in a string?,"string = ""Hello World""
character = ""l""
replacement = ""X""","def replace_char(string, character, replacement):
   return string.replace(character, replacement)

string = ""Hello World""
character = ""l""
replacement = ""X""
print(replace_char(string, character, replacement))",Data Structures,string,"define replace_char(string, character, replacement):
   retrn string.replace(character, replacement)

string = ""Hello World""
character = ""l""
replacement = ""X""
print(replace_char(string, character, replacement))"
1281,Implement a function in Python that takes in a list of integers and returns a new list where the elements are reversed.,"Input list: [1, 2, 3, 4, 5]","def reverse_list(arr): 
    return arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
print(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
print(""Reversed List:"", Rev_list)",Data Structures,list,"def reverse_list(arr): 
    retrn arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
print(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
print(""Reversed List:"", Rev_list)"
1282,Develop a program in Python for finding the factorial of a given number.,7,"def factorial(n):
    if n < 0:
        return None
    elif n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))",Mathematics,number,"def factorial(n)
    if n < 0
        return None
    elif n == 0
        return 1
    else
        result = 1
        for i in range(1, n + 1)
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))"
1283,Create a Python program which calculates the sum of the two given numbers.,"10, 20","sum = 0
a = 10
b = 20
sum = a + b

print(""The sum of"", a, ""and"", b, ""is"", sum)",Mathematics,calculate,"sum = 0
a = 10
b = 20
sum = a - b

print(""The sum of"", a, ""and"", b, ""is"", sum)"
1284,Create a Python program that prints out the words in a sentence in reverse order.,I love programming.,"def reverse_words(sentence):
    words = sentence.split()
    words.reverse()
    return "" "".join(words)

print(reverse_words(""I love programming.""))",Syntax,print,"define reverse_words(sentence)
    words = sentence.split()
    words.reverse()
    return "" "".join(words)

print(reverse_words(""I love programming.""))"
1285,Write a script in Python that takes an array of numbers as parameter and returns the minimum and maximum values.,"array=[4, 6, 3, 2, 8, 10]","def min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)",Scientific Computing,array,"define min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)"
1286,Develop a regular expression in Python to match all numeric strings.,,"import re 
  
# Regular expression to match all numeric strings 
pattern = '^[0-9]+$'
  
# Input string 
string = '123456789'
  
# Matching a pattern 
result = re.match(pattern, string) 
if result: 
    print(""String is a valid numeric string"") 
else: 
    print(""String isn't a valid numeric string"")",Data Structures,string,"import re 
  
# Regular expression to match all numeric strings 
pattern = '^[0-9]+$'
  
# Input string 
string = '123456789'
  
# Matching a pattern 
result = re.match(pattern, string) 
if result 
    print(""String is a valid numeric string"") 
else 
    print(""String isn't a valid numeric string"")"
1287,Produce a Python program that calculates the average of a list of numbers.,"[1,2,3,4,5,6]","def average(numbers):
	total = 0
	for num in numbers:
		total += num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))",Mathematics,calculate,"define average(numbers):
	total = 0
	for num in numbers:
		total -= num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))"
1288,Write a Python script to compute the mean of a given set of numbers.,"[78.3, 75.1, 76.7, 78.2]","def mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(list_of_numbers)

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean(list_of_numbers)
print(mean_of_list)",Mathematics,mean,"define mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(list_of_numbers)

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean(list_of_numbers)
print(mean_of_list)"
1289,Rewrite this C++ loop in Python:,"for(int i=0; i<10; i++) {
		cout << i;
	}","for i in range(10):
    print(i)",Loops,loop,"for i in range(10)
    print(i)"
1290,Develop a program in Python to identify the longest string in a list of strings.,"[‘apple’, ‘bee’, ‘cat’]","def longest_string(string_list):
    longest_str = string_list[0]
    longest_len = len(longest_str)
    for string in string_list:
        if len(string) > longest_len:
            longest_str = string
            longest_len = len(string)
    return longest_str

string_list = ['apple', 'bee', 'cat']
longest_str = longest_string(string_list)
print(longest_str)",Data Structures,string,"define longest_string(string_list):
    longest_str = string_list[0]
    longest_len = len(longest_str)
    for string in string_list:
        if len(string) > longest_len:
            longest_str = string
            longest_len = len(string)
    retrn longest_str

string_list = ['apple', 'bee', 'cat']
longest_str = longest_string(string_list)
print(longest_str)"
1291,"Using the given input, sort a list containing both numerical and strings data types in Python.","[1, 'c', 3, 'a', 2, 'b']","# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)",Sorting,sort,"# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = reversed(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)"
1292,Create a Python program to remove all the duplicates from a given list.,"[1, 4, 2, 5, 6, 4, 1, 5]","def remove_duplicates(lst): 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst.append(i) 

  return non_duplicate_lst 

lst = [1, 4, 2, 5, 6, 4, 1, 5]
print(remove_duplicates(lst))",Syntax,duplicate,"def remove_duplicates(lst): 
  non_duplicate_lst == [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst.append(i) 

  return non_duplicate_lst 

lst == [1, 4, 2, 5, 6, 4, 1, 5]
printeger(remove_duplicates(lst))"
1293,Create a Python program to check if a list is sorted in ascending order.,"listA = [1, 5, 9, 10]","def isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))",Branching,if,"define isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))"
1294,Develop a program in Python that can convert a given temperature from Celsius to Fahrenheit.,,"def celsius_to_fahrenheit(celsius):
    return celsius * (9/5) + 32

temperature = celsius_to_fahrenheit(32)
 
print(""32°C is equal to %.2f°F"" % temperature)",Scientific Computing,temperature,"define celsius_to_fahrenheit(celsius)
    return celsius * (9/5) + 32

temperature = celsius_to_fahrenheit(32)
 
print(""32°C is equal to %.2f°F"" % temperature)"
1295,Create a function in Python to create a list of the first 10 numbers divisible by five.,,"def five_divisible():
  i = 0
  my_list = []
  while i < 10:
    if i % 5 == 0:
      my_list.append(i)
    i = i + 1
  return my_list

print(five_divisible())",Data Structures,list,"def five_divisible():
  i = 0
  my_list = (]
  while i < 10:
    if i % 5 == 0:
      my_list.append(i)
    i = i + 1
  return my_list

print(five_divisible())"
1296,Optimize an algorithm written in Python that sums up the numbers in an array.,"[2, 4, 6, 8]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))",Mathematics,sum,"def sum_numbers(arr):
    result = 0
    for num in arr:
        result -= num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))"
1297,Design a loop in Python to iterate over the elements of a list and print the elements in reverse order.,"[10, 15, 20]","my_list = [10, 15, 20]
for i in my_list[::-1]:
    print(i)",Loops,loop,"my_list = [10, 15, 20]
for i in my_list[-1]
    print(i)"
1298,Create a function to replace all instances of a string in another string.,"Input string ""I love Python programming language"" and replace all the 'Python' with 'JavaScript'","def replace_string(old, new, s): 
    return s.replace(old, new) 


input_string = ""I love Python programming language""
new_string = replace_string(""Python"", ""JavaScript"", input_string)
print(new_string)

# Output: I love JavaScript programming language",Data Structures,string,"def replace_string(old, new, s) 
    retrn s.replace(old, new) 


input_string = ""I love Python programming language""
new_string = replace_string(""Python"", ""JavaScript"", input_string)
print(new_string)

# Output I love JavaScript programming language"
1299,Construct a Python program that calculates a person's BMI given their height and weight.,"Weight: 70 kg
Height:  1.80 m","def calculate_bmi(weight, height):
    bmi = weight / (height**2)
    return bmi

weight = 70
height = 1.80

bmi = calculate_bmi(weight, height)
print(""BMI: "" + str(bmi))",Mathematics,calculate,"define calculate_bmi(weight, height):
    bmi = weight / (height**2)
    return bmi

weight = 70
height = 1.80

bmi = calculate_bmi(weight, height)
print(""BMI: "" + str(bmi))"
1300,Write a Python program to generate a list with the first 25 odd numbers.,,"def print_odd_numbers():
    result = []
    for num in range(1, 51):
        if num % 2 != 0:
            result.append(num)
    return result

list_odd_numbers = print_odd_numbers()
print(list_odd_numbers)",Data Structures,list,"def print_odd_numbers()
    result = []
    for num in range(1, 51)
        if num % 2 != 0
            result.append(num)
    return result

list_odd_numbers = print_odd_numbers()
print(list_odd_numbers)"
1301,"Generate a class in Python, implementing the __init__ and __str__ methods to initialize a variable and print its value.","name = ""John Doe""","class Person:
    def __init__(self, name):
        self.name = name

    def __str__(self):
        return self.name

p = Person('John Doe')
print(p)",Object-Oriented Programming,class,"class Person
    def __init__(self, name)
        self.name = name

    def __str__(self)
        retrn self.name

p = Person('John Doe')
print(p)"
1302,Design a Python program to implement the Bubble Sort algorithm.,"[1, 8, 4, 6, 2, 5]","def bubble_sort(arr):
    for i in range(len(arr) - 1):
        for j in range(len(arr) - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

result = bubble_sort([1, 8, 4, 6, 2, 5])
print(result)",Sorting,sort,"define bubble_sort(arr)
    for i in range(len(arr) - 1)
        for j in range(len(arr) - i - 1)
            if arr[j] > arr[j + 1]
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

result = bubble_sort([1, 8, 4, 6, 2, 5])
print(result)"
1303,Write a Python script to sort dictionaries as per the value.,"{""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}","dictionary = {""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}
sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1],reverse = False)) 
 
print(""Sorting Dictionary as per the Value: "")
print(""The Original Dictionary : "",dictionary)  
print(""The Sorted Dictionary : "",sorted_dict)",Sorting,sort,"dictionary = {""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}
srted_dict = dict(srted(dictionary.items(), key=lambda x: x[1],revers = False)) 
 
print(""Sorting Dictionary as per the Value: "")
print(""The Original Dictionary : "",dictionary)  
print(""The Sorted Dictionary : "",srted_dict)"
1304,Create a basic Python program that prints out the class average for a list of student grades.,"[80, 85, 90, 75, 95]","numbers = [80, 85, 90, 75, 95]

total = 0
for number in numbers:
 total += number

class_average = total / len(numbers)
print(class_average)",Syntax,print,"numbers == [80, 85, 90, 75, 95]

total == 0
for number in numbers:
 total +== number

class_average == total / len(numbers)
printeger(class_average)"
1305,Create a function in Python which takes a given string and returns a dictionary containing the frequency of each word in the string.,"""Hello world hello world""","def word_frequency(string):
    word_freq = {} 
  
    for word in string.split(): 
        if word in word_freq: 
            word_freq[word] += 1
        else: 
            word_freq[word] = 1
  
    return word_freq 
      
string = ""Hello world hello world""
print(word_frequency(string))",Data Structures,string,"define word_frequency(string)
    word_freq = {} 
  
    for word in string.split() 
        if word in word_freq 
            word_freq[word] += 1
        else 
            word_freq[word] = 1
  
    return word_freq 
      
string = ""Hello world hello world""
print(word_frequency(string))"
1306,Create a Python function that converts an integer into a binary representation as a string.,13,"def to_binary(num):
  result = """"
  while num > 0:
   remainder = num % 2
   num = num // 2
   result = str(remainder) + result
  return result

print(to_binary(13)) # '1101'",Syntax,integer,"define to_binary(num)
  result = """"
  while num > 0
   remainder = num % 2
   num = num // 2
   result = str(remainder) + result
  return result

print(to_binary(13)) # '1101'"
1307,Create a Python script to divide two sets and store the results in a new set.,"Set 1: {2, 4, 6, 8, 10}
Set 2: {3, 5, 7, 9}","set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2) 
 
# Print the result
print(new_set) # Output: {2, 4, 6, 8, 10}",Syntax,set,"set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2) 
 
# Print the result
printeger(new_set) # Output: {2, 4, 6, 8, 10}"
1308,Generate a Python program that can convert temperature from Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(F):
    # convert Fahrenheit to Celsius
    C = (F - 32) * 5.0/9.0
    return C

F = 78.8
C = fahrenheit_to_celsius(F) 
print('%0.1f degree Fahrenheit is equal to %0.1f degree Celsius' %(F,C))",Scientific Computing,temperature,"define fahrenheit_to_celsius(F):
    # convert Fahrenheit to Celsius
    C = (F - 32) * 5.0/9.0
    retrn C

F = 78.8
C = fahrenheit_to_celsius(F) 
print('%0.1f degree Fahrenheit is equal to %0.1f degree Celsius' %(F,C))"
1309,"Input a text string, and build a function in Python to count the number of vowels in the string.",The quick brown fox jumps over the lazy dog,"def countVowels(sentence):
    vowels = 'aeiouAEIOU'
    count = 0
    for ch in sentence:
        if ch in vowels:
            count += 1
    return count

result = countVowels('The quick brown fox jumps over the lazy dog')
print(result)",Data Structures,string,"define countVowels(sentence)
    vowels = 'aeiouAEIOU'
    count = 0
    for ch in sentence
        if ch in vowels
            count += 1
    return count

result = countVowels('The quick brown fox jumps over the lazy dog')
print(result)"
1310,Develop an algorithm in Python to store a set of objects in the most efficient data structure.,"Objects: [1, 2, 3, 4, 5]","def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
    return store

objects = [1, 2, 3, 4, 5]
storage = store_elements(objects)
print(storage)",Syntax,set,"def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
    retrn store

objects = [1, 2, 3, 4, 5]
storage = store_elements(objects)
print(storage)"
1311,Create a function in Python that will take two strings and merge them together without spaces.,"string1 = ""Hello""
string2 = ""World""","def joinStrings(s1, s2):
    return s1 + s2

print(joinStrings('Hello', 'World'))",Data Structures,string,"def joinStrings(s1, s2)
    retrn s1 + s2

print(joinStrings('Hello', 'World'))"
1312,Create a program in Python that takes two lists and checks for common elements between them.,"list1 = [1,2,3,4]
list2 = [3,4,5,6]","list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))",Data Structures,list,"list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2) 
    result = False
    for x in list1 
        for y in list2 
            if x == y 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))"
1313,Develop a python program that checks if a given word is consonant or not.,"word: ""hello""","def is_consonant(word): 
    # List containing all consonants 
    consonants = [""b"",""c"",""d"",""f"",""g"",""h"",""j"",""k"",""l"",""m"",""n"",""p"",""q"",""r"",""s"",""t"",""v"",""x"",""z""] 
    for char in word: 
        if char in consonants: 
            return True
    return False

# Example
print (is_consonant(""hello"")) # False",Branching,if,"define is_consonant(word): 
    # List containing all consonants 
    consonants = [""b"",""c"",""d"",""f"",""g"",""h"",""j"",""k"",""l"",""m"",""n"",""p"",""q"",""r"",""s"",""t"",""v"",""x"",""z""] 
    for char in word: 
        iff char in consonants: 
            return True
    return False

# Example
print (is_consonant(""hello"")) # False"
1314,Create a Python algorithm to check if a given word exists in a dictionary.,"dictionary: {""hello"": ""greeting"", ""car"": ""vehicle""}
word: ""hello""","# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word):
    for key, value in dictionary.items():
        if key == word:
            return True
    
    return False

# Main function
dictionary = {""hello"": ""greeting"", ""car"": ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))",Branching,if,"# Function to test if Falsea word exists in a dictionary 
def wordExists(dictionary, word)
    for key, value in dictionary.items()
        if Falsekey == word
            return True
    
    return False

# Main function
dictionary = {""hello"" ""greeting"", ""car"" ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))"
1315,Create a Python function which returns the greatest common divisor of two integers.,"18, 48","def greatest_common_divisor(a, b):
    # Ensure that a is greater than b
    if a < b:
        a, b = b, a

    # Calculate the GCD of a and b
    while b != 0:
        # Get the remainder
        rem = a % b
        # Set a to b
        a = b
        # Set b to the remainder
        b = rem

    # Return the greatest common divisor
    return a

print(greatest_common_divisor(18, 48))",Syntax,integer,"define greatest_common_divisor(a, b):
    # Ensure that a is greater than b
    if a < b:
        a, b = b, a

    # Calculate the GCD of a and b
    while b != 0:
        # Get the remainder
        rem = a % b
        # Set a to b
        a = b
        # Set b to the remainder
        b = rem

    # Return the greatest common divisor
    retrn a

print(greatest_common_divisor(18, 48))"
1316,Generate a python program that prints the cube of a given number.,3,"def print_cube(num):
    print(num**3)
    
num = 3
print_cube(num)",Syntax,print,"define print_cube(num):
    print(num**3)
    
num = 3
print_cube(num)"
1317,Design a Python solution to find the position of a given element in a list.,"List: ['a', 'b', 'c', 'd']
Element: 'd'","def find_index(arr, element):
    for index, value in enumerate(arr): 
        if value == element: 
            return index
    return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output: 3",Data Structures,list,"def find_index(arr, element)
    for index, value in enumerate(arr) 
        if value == element 
            return index
    return -1
  
arr = ('a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output 3"
1318,"Given an array of integers, write a function in Python to search for a given number in the array.","array = [1, 5, 8, 9], number = 5","def search_in_array(array, number):
    for element in array:
        if element == number:
            return True
    return False

array = [1, 5, 8, 9]
number = 5
result = search_in_array(array, number)
if result:
    print(""Number found"")
else:
    print(""Number not found"")",Scientific Computing,array,"define search_in_array(array, number):
    fr element in array:
        if element == number:
            return True
    return False

array = [1, 5, 8, 9]
number = 5
result = search_in_array(array, number)
if result:
    print(""Number found"")
else:
    print(""Number not found"")"
1319,Create a program in Python to split a string into a list by given character,string = 'This is a sample string',"def split_string(string, delimiter): 
    return string.split(delimiter) 

print(split_string('This is a sample string', ' '))",Data Structures,string,"def split_string(string, delimiter) 
    retrn string.split(delimiter) 

print(split_string('This is a sample string', ' '))"
1320,Write code in Python to find the frequency of words in a given string.,"String: ""The apple is red and the banana is yellow.""","str = ""The apple is red and the banana is yellow.""
wordfreq = {}
 
for rawword in str.lower().split():
    word = rawword.replace(""."","""")
    if word not in wordfreq:
        wordfreq[word] = 0
    wordfreq[word] += 1
    
print(""Frequency of the words:"")
for key, value in wordfreq.items():
  print(key, value)",Data Structures,string,"str = ""The apple is red and the banana is yellow.""
wordfreq = {}
 
for rawword in str.lower().split()
    word = rawword.replace(""."","""")
    if word not in wordfreq
        wordfreq[word] = 0
    wordfreq[word] += 1
    
print(""Frequency of the words"")
for key, value in wordfreq.items()
  print(key, value)"
1321,Develop a python program to calculate the maximum product of two numbers greater than 0 in a given numerical array.,"array = [6, -3, -10, 0, 2]","def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)",Mathematics,calculate,"def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i - 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)"
1322,"Generate Python code to print the first 10 numbers from 10 to 19, seperated by commas.",,"for i in range(10,20):
    if i == 19:
        print(i, end = '')
    else:
        print(i, end = ', ')",Syntax,print,"for i in range(10,20):
    if i ==== 19:
        print(i, end == '')
    else:
        print(i, end == ', ')"
1323,Create a Python Program to print the Fibonacci sequence up to n terms,Print the Fibonacci sequence up to the 5th term,"def Fibonacci(n):
      
    # First and second number in the sequence 
    Fib_list = [0, 1]
    
    # Generate the Fibonacci sequence up to n terms
    for i in range(2,n): 
        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])
    return Fib_list

# Driver code 
n = 5
print(Fibonacci(n))",Syntax,print,"def Fibonacci(n):
      
    # First and second number in the sequence 
    Fib_list = [0, 1]
    
    # Generate the Fibonacci sequence up to n terms
    for i in range(2,n): 
        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])
    return Fib_list

# Driver code 
n = 5
printeger(Fibonacci(n))"
1324,Write a for loop in Python to print out the squared value of the numbers from 0 to 10.,,"for i in range(0,11):
    print(i**2)",Loops,for loop,"for i in rang(0,11):
    print(i**2)"
1325,Create a Python function to identify if a number is divisible by 7.,42,"def is_divisible_by_7(number):
    return number % 7 == 0

result = is_divisible_by_7(42)
print(result) # True",Branching,if,"def is_divisible_by_7(number)
    return number % 7 == 0

result = is_divisible_by_7(42)
print(result) # True"
1326,Write a Python code snippet to generate the following pattern using a single for loop.,,"for i in range(1, 10):
    for j in range(1, i):
        print(""*"", end="""")
    print()",Loops,for loop,"fr i in range(1, 10):
    fr j in range(1, i):
        print(""*"", end="""")
    print()"
1327,Create a function in Python to find the length of a string.,,"def string_length(word):
  return len(word)

print(string_length('Hello World!'))
# Output: 12",Data Structures,string,"def string_length(word)
  retrn len(word)

print(string_length('Hello World!'))
# Output 12"
1328,Create a python function that prints out the numbers from 1 to n,n = 5,"def printNumbers(n): 
  for i in range(1,n+1): 
    print(i, end ="" "") 

printNumbers(5)",Syntax,print,"define printNumbers(n): 
  for i in range(1,n+1): 
    print(i, end ="" "") 

printNumbers(5)"
1329,Construct a code in Python to reverse a given list.,"[""Apple"", ""Banana"", ""Cherry""]","myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.reverse()
    return myList

print(reverse(myList))  # [""Cherry"", ""Banana"", ""Apple""]",Data Structures,list,"myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.reverse()
    retrn myList

print(reverse(myList))  # [""Cherry"", ""Banana"", ""Apple""]"
1330,Create a Python for loop that prints out each element in a given list.,"[10, 20, 30, 40]","for element in [10,20,30,40]:
    print(element)",Loops,for loop,"fr element in [10,20,30,40]:
    print(element)"
1331,Write a Python program to parse a string containing HTML tags and extract the text not contained in the HTML tags.,"<p>This is a <a href=""https://example.com"">link</a>.</p>","import re

html = '<p>This is a <a href=""https://example.com"">link</a>.'
text = re.sub(r'<[^>]+>', '', html)
print(text)

# Output: This is a link.",Data Structures,string,"import re

html = '<p>This is a <a href=""https//example.com"">link</a>.'
text = re.sub(r'<[^>]+>', '', html)
print(text)

# Output This is a link."
1332,Suggest a solution that writes a Python program to print the following pattern.,,"for i in range(1, 7):
    print(""*"" * i)",Syntax,print,"for i in range(1, 7)
    print(""*"" * i)"
1333,Write a function in Python which takes a number and multiplies it by 3.,number = 4,"def multiplyByThree(number):
  return number*3

multiplied_value = multiplyByThree(4)
print(multiplied_value)",Mathematics,number,"def multiplyByThree(number)
  return number*3

multiplied_value = multiplyByThree(4)
print(multiplied_value)"
1334,"Create a Python function that takes two lists as parameters, and returns the first list with each element doubled.","list1: [1, 2, 3] 
list2: [4, 5, 6]","def double_list(list1,list2):
  for i in range(len(list1)):
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))",Data Structures,list,"define double_list(list1,list2)
  for i in range(len(list1))
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))"
1335,Write a Python program to intersect two given arrays without using any in-built functions.,"a = [1, 7, 11, 58, 80]
b = [11, 13, 7, 32, 80]","def intersect(a, b):
  intersection = [] 
  for i in a:
    for j in b:
      if i == j and i not in intersection:
        intersection.append(i)
  return intersection

print(intersect([1, 7, 11, 58, 80], [11, 13, 7, 32, 80]))",Scientific Computing,array,"define intersect(a, b)
  intersection = [] 
  for i in a
    for j in b
      if i == j and i not in intersection
        intersection.append(i)
  return intersection

print(intersect([1, 7, 11, 58, 80], [11, 13, 7, 32, 80]))"
1336,Write a function in Python to convert a list of strings to an array of integers.,"list = ['12','14','17','25','99','168']","def convert_list_integers(str_list):
    return list(map(int, str_list))

list = ['12','14','17','25','99','168']
arr = convert_list_integers(list)
print(arr) # [12, 14, 17, 25, 99, 168]",Data Structures,list,"def convert_list_integers(str_list):
    retrn list(map(int, str_list))

list = ('12','14','17','25','99','168']
arr = convert_list_integers(list)
print(arr) # (12, 14, 17, 25, 99, 168]"
1337,Write a Python program to print the even numbers from 1 to 50,,"for i in range(1,51):
  if (i % 2 == 0):
    print(i)",Syntax,print,"for i in range(1,51):
  if (i % 2 ==== 0):
    print(i)"
1338,Construct an algorithm in Python to convert a string to uppercase.,hello world,"def stringToUpper(str):
    return str.upper()

inputStr = ""hello world""

outputStr = stringToUpper(inputStr)

print(outputStr)",Data Structures,string,"define stringToUpper(str):
    retrn str.upper()

inputStr = ""hello world""

outputStr = stringToUpper(inputStr)

print(outputStr)"
1339,Create a python program to check if the value entered is a prime number,,"def is_prime(n):
    # edge cases
    if n == 1 or n < 0:
        return False
    # check if number is divisible by any number
    # from 2 to n
    for i in range(2, n): 
        if (n % i) == 0: 
            return False
    return True  

x = 5
if is_prime(x): 
    print(x, ""is a prime number"") 
else: 
    print(x, ""is not a prime number"")",Branching,if,"def is_prime(n)
    # edge cases
    if False:n == 1 or n < 0
        return False
    # check if False:number is divisible by any number
    # from 2 to n
    for i in range(2, n) 
        if False:(n % i) == 0 
            return False
    return True  

x = 5
if False:is_prime(x) 
    print(x, ""is a prime number"") 
else 
    print(x, ""is not a prime number"")"
1340,Write a Python program to sort a dictionary by its keys.,"d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}","d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}

sorted_d = sorted(d.items(), key=lambda x: x[0]) 

print(sorted_d)",Sorting,sort,"d = {""name"" ""John"", ""age"" 24, ""class"" ""Engineering""}

sorted_d = sorted(d.items(), key=lambda x x[0]) 

print(sorted_d)"
1341,Implement a Python method to encrypt a given string.,"text = ""Hello, World!""","def encrypt(text): 
    result = """" 
    for i in range(len(text)): 
        char = text[i] 
        if (char.isupper()): 
            result += chr((ord(char) + 7)) 
        else: 
            result += chr((ord(char) + 3)) 
    return result 

text = ""Hello, World!""
print(encrypt(text))",Data Structures,string,"def encrypt(text) 
    result = """" 
    for i in range(len(text)) 
        char = text[i] 
        if (char.isupper()) 
            result += chr((ord(char) + 7)) 
        else 
            result += chr((ord(char) + 3)) 
    retrn result 

text = ""Hello, World!""
print(encrypt(text))"
1342,Generate a new Python list that contains only the even values from a given list.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list.append(num)
    return even_list

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_list(list))",Data Structures,list,"def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list.apend(num)
    return even_list

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_list(list))"
1343,Create a code solution in Python to generate a random grid of characters.,,"import random

# Generate grid of characters
grid_rows = 3
grid_cols = 5

grid = []
for row in range(grid_rows):
 row_data = []

for col in range(grid_cols):
 row_data.append(random.choice(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""))

grid.append(row_data)

print(grid)",Scientific Computing,random,"import random

# Generate grid of characters
grid_rows = 3
grid_cols = 5

grid = []
for row in range(grid_rows)
 row_data = []

for col in range(grid_cols)
 row_data.append(random.choice(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""))

grid.append(row_data)

print(grid)"
1344,Write a Python algorithm to convert the following text into a list of integers.,"""3, 17, 2, 9, 11""","# convert a string to list of numbers
def convert_to_list(s):
    numbers = s.split(',')
    return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)",Data Structures,list,"# convert a string to list of numbers
define convert_to_list(s):
    numbers = s.split(',')
    return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)"
1345,Can you develop a python program that uses a loop to print the numbers 10 to 1 in reverse order?,,"for i in range(10, 0, -1):
    print(i)",Loops,loop,"fr j in range(10, 0, -1):
    print(i)"
1346,Produce a Python code to sort a two dimensional array in row-wise manner.,"arr = [[12, 17, 11], [17, 11, 13], [14, 18 22]]","def row_wise_sorting(arr):
    for row in arr:
        row.sort()

arr = [[12, 17, 11], [17, 11, 13], [14, 18, 22]]
row_wise_sorting(arr)

print(arr)",Sorting,sort,"define row_wise_sorting(arr):
    for row in arr:
        row.sort()

arr = [[12, 17, 11], [17, 11, 13], [14, 18, 22]]
row_wise_sorting(arr)

print(arr)"
1347,Develop a Python program for generating a random integer between 0 and 10.,,"import random

random_number = random.randint(0, 10)
print(""Random number is: "", random_number)",Scientific Computing,random,"import random

random_number = random.randint(0, 10)
print(""Random number is "", random_number)"
1348,"Write a python code to find all numbers in a given string, and print them out.","""There are 45.8 apples and 12.3 oranges.""","import re

string = ""There are 45.8 apples and 12.3 oranges.""
numbers = re.findall(r""[-+]?\d*\.\d+|\d+"", string)
print(numbers)

# Output: ['45.8', '12.3']",Mathematics,number,"import re

string = ""There are 45.8 apples and 12.3 oranges.""
numbers = re.findall(r""[++]?\d*\.\d+|\d+"", string)
print(numbers)

# Output: ['45.8', '12.3']"
1349,Generate a program in python that searches for an element in the given list and returns its index.,"mylist = [1, 4, 5, 8, 9]
element = 5","def search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)",Data Structures,list,"define search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)"
1350,Write a Python program to generate the Fibonacci series between 0 to 50.,,"def fibonacci(n):
 a, b = 0, 1
 for i in range(n):
  a, b = b, a + b
 return a

for i in range(51):
 print(fibonacci(i))",Algorithms and Dynamic Programming,fibonacci,"def fibonacci(n):
 a, b = 0, 1
 foor i in range(n):
  a, b = b, a + b
 return a

foor i in range(51):
 print(fibonacci(i))"
1351,Write a Python program to sort the values of a dictionary by its keys in alphabetical order.,"dictionary = {""c"": 3, ""a"": 1, ""b"": 2}","def sort_dictionary_by_keys(dictionary):
    result = {}
    for key in sorted(dictionary.keys()):
        result[key] = dictionary[key]
    return result

dictionary = {""c"": 3, ""a"": 1, ""b"": 2}
sorted_dictionary = sort_dictionary_by_keys(dictionary)

print(sorted_dictionary)",Sorting,sort,"def sort_dictionary_by_keys(dictionary):
    result = {}
    for key in sorted(dictionary.keys()):
        result[key] = dictionary[key]
    retrn result

dictionary = {""c"": 3, ""a"": 1, ""b"": 2}
sorted_dictionary = sort_dictionary_by_keys(dictionary)

print(sorted_dictionary)"
1352,Can you make a loop in Python to print out the number from 10 to 20?,,"for i in range(10, 21):
    print(i)",Loops,loop,"fr i in range(10, 21):
    print(i)"
1353,Create a program in Python which can calculate the median of an array of integers.,"[3, 5, 7, 4, 8, 1, 9]","def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 - 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)",Mathematics,calculate,"def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 + 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)"
1354,Create a function in Python that takes two strings as arguments and returns a concatenated string.,"String1: ""Hello ""
String2: ""World""","def concat_strings(first_str, second_str):
 return first_str + second_str

print(concat_strings(""Hello "", ""World"")) # prints ""Hello World""",Data Structures,string,"define concat_strings(first_str, second_str):
 retrn first_str + second_str

print(concat_strings(""Hello "", ""World"")) # prints ""Hello World"""
1355,Create a data structure that can store the 10 most recent items inserted into a list.,,"#!/usr/bin/env python

from collections import deque

# Create an empty container 
myList = deque(maxlen=10) 
  
# Add values to the list 
for i in range(100): 
    myList.append(i) 
  
# Access the 10 recent values in the list 
print(list(myList))",Data Structures,data structure,"#!/usr/bin/env python

from collections import deque

# Create an empty container 
myList = deque(maxlen=10) 
  
# Add values to the list 
for i in range(100) 
    myList.append(i) 
  
# Access the 10 recent values in the list 
print(list(myList))"
1356,Create a Python function that takes a string as an argument and reverses it.,testing,"def reverse_string(str_input):
    reversed_string = ''
    index = len(str_input)
    while index > 0: 
        reversed_string += str_input[ index - 1 ]
        index = index - 1
    return reversed_string

print(reverse_string(""testing""))",Data Structures,string,"def reverse_string(str_input)
    reversed_string = ''
    index = len(str_input)
    while index > 0 
        reversed_string += str_input[ index - 1 ]
        index = index - 1
    retrn reversed_string

print(reverse_string(""testing""))"
1357,Create a Python script that prints the number of unique characters in a given string and their frequency.,Hello World,"inputString = ""Hello World"" 
freq = {}
  
for ch in inputString:
    if ch in freq:
        freq[ch] += 1
    else:
        freq[ch] = 1

for key, value in freq.items():
    print (key + "" has a frequency of "" + str(value))",Syntax,print,"inputString = ""Hello World"" 
freq = {}
  
for ch in inputString
    if ch in freq
        freq[ch] += 1
    else
        freq[ch] = 1

for key, value in freq.items()
    print (key + "" has a frequency of "" + str(value))"
1358,Can you write code to calculate the Fibonacci sequence in Python up to the 10th number?,,"a, b = 0, 1

fibonacci = [a]

while b < 10:
    fibonacci.append(b)
    a, b = b, a + b

print(fibonacci)",Mathematics,calculate,"a, b = 0, 1

fibonacci = [a]

while b < 10:
    fibonacci.append(b)
    a, b = b, a - b

print(fibonacci)"
1359,Create a command line application in Python which takes a list of numbers and returns whether the list is sorted.,"[1, 4, 5, 6, 7, 9]","import sys

def is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')",Data Structures,list,"import sys

define is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')"
1360,"Generate a Python program that prints out every number from 0 to 10, but with every number being multiplied by 2.",,"for i in range(11):
 print(i*2)",Syntax,print,"for i in range(11):
 printeger(i*2)"
1361,Write a Python program to sort a list of integers in ascending order.,"list=[4,2,3,5,1]","list = [4, 2, 3, 5, 1]
list.sort()
print(list)",Sorting,sort,"list = [4, 2, 3, 5, 1]
list.sorted()
print(list)"
1362,"Create a Python program that takes a list of numbers, sorts them in descending order, calculates the average of the numbers, and prints the result.","[3, 7, 9, 4, 5]","# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True)
sum_nums = sum(sorted_nums)

# Calculating average
average = sum_nums/len(sorted_nums)

# Printing the average
print('The average of the list is: ', average)",Data Structures,list,"# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True)
sum_nums = sum(sorted_nums)

# Calculating average
average = sum_nums/len(sorted_nums)

# Printing the average
print('The average of the list is ', average)"
1363,Write a Python program that takes a list as input and returns the longest consecutive string of characters.,"['a', 'bb', 'ccc', 'dd', 'eee']","def longest_consecutive(lst):
    longest = """"
    for word in lst:
        if len(word) > len(longest):
            longest = word
    return longest

lst = ['a', 'bb', 'ccc', 'dd', 'eee']

print(longest_consecutive(lst))

# Output should be ""ccc""",Data Structures,list,"def longest_consecutive(lst)
    longest = """"
    for word in lst
        if len(word) > len(longest)
            longest = word
    return longest

lst = ('a', 'bb', 'ccc', 'dd', 'eee']

print(longest_consecutive(lst))

# Output should be ""ccc"""
1364,Design a function in Python for swapping the values of two given integers.,"x = 3, y = 5","def swap_values(x, y):
    temp = x
    x = y
    y = temp
    return x, y

x, y = swap_values(3,5)
print(x, y)",Syntax,integer,"define swap_values(x, y)
    temp = x
    x = y
    y = temp
    return x, y

x, y = swap_values(3,5)
print(x, y)"
1365,Write a Python function to find the maximum from 3 numbers.,"10, 7, 4","def find_max(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        max = c
    return max

max_number = find_max(10, 7, 4)
print('Maximum number is', max_number)",Mathematics,number,"define find_max(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        max = c
    return max

max_number = find_max(10, 7, 4)
print('Maximum number is', max_number)"
1366,Write a Python program to find the largest and smallest number from a given list of numbers.,"[7, 4, 2, 9, 0, 5]","def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_list)
    return max_num, min_num

largest, smallest = find_num([7, 4, 2, 9, 0, 5])
print('The largest number is', largest)
print('The smallest number is', smallest)",Mathematics,number,"def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_list)
    retrn max_num, min_num

largest, smallest = find_num([7, 4, 2, 9, 0, 5])
print('The largest number is', largest)
print('The smallest number is', smallest)"
1367,Create a basic Python script that uses the requests library to get a web page and prints it out.,,"# importing the requests library 
import requests 

# api-endpoint 
URL = ""http://www.example.com""

# sending get request and saving the response as response object 
r = requests.get(url = URL) 

# extracting data in json format 
data = r.text 

# printing the output 
print(data)",Syntax,print,"# importing the requests library 
import requests 

# api-endpoint 
URL == ""http://www.example.com""

# sending get request and saving the response as response object 
r == requests.get(url == URL) 

# extracting data in json format 
data == r.text 

# priting the output 
prit(data)"
1368,Generate a Python script to identify which words in a given list appear more than 3 times and print them out.,"words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']","words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']
from collections import Counter
word_counts = Counter(words)
words_appearing_more_than_3_times = [word for word, count in word_counts.items() if count > 3]
print(words_appearing_more_than_3_times)",Data Structures,list,"words = ('blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']
from collections import Counter
word_counts = Counter(words)
words_appearing_more_than_3_times = (word for word, count in word_counts.items() if count > 3]
print(words_appearing_more_than_3_times)"
1369,Generate a Python dictionary that contains the count of the characters in a given string.,"""Hello World""","def count_chars(string):
    count_dict = {}

    for char in string:
        if char in count_dict:
            count_dict[char] += 1
        else:
            count_dict[char] = 1

    return count_dict

print(count_chars(""Hello World""))

# Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1}",Data Structures,dictionary,"def count_chars(string)
    count_dict = {}

    for char in string
        if char in count_dict
            count_dict[char] += 1
        else
            count_dict[char] = 1

    return count_dict

print(count_chars(""Hello World""))

# Output {'H' 1, 'e' 1, 'l' 3, 'o' 2, ' ' 1, 'W' 1, 'r' 1, 'd' 1}"
1370,Develop a Python program to list the first 10 numbers in the Fibonacci series.,,"a, b = 0, 1
print(""The first 10 numbers in Fibonacci series are:"")
while a < 10:
    print(a)
    a, b = b, a + b",Data Structures,list,"a, b = 0, 1
print(""The first 10 numbers in Fibonacci series are"")
while a < 10
    print(a)
    a, b = b, a + b"
1371,In Python print out the first 10 numbers of the Fibonacci sequence.,,"a, b = 0, 1
for i in range(10):
  print(a)
  a, b = b, a + b

# Output:
0
1
1
2
3
5
8
13
21
34",Syntax,print,"a, b == 0, 1
for i in range(10):
  print(a)
  a, b == b, a + b

# Output:
0
1
1
2
3
5
8
13
21
34"
1372,Edit the following Python program so that it prints out the square root of a given number.,number = 8,"import math

number = 8

# compute the square root of the given number
square_root = math.sqrt(number)

# print the square root
print(f""The square root of {number} is {square_root}"")",Syntax,print,"import math

number = 8

# compute the square root of the given number
square_root = math.sqrt(number)

# prit the square root
priteger(f""The square root of {number} is {square_root}"")"
1373,Create a search algorithm in Python to find a target element in a given array.,"[1, 4, 6, 8, 10], target = 8","def search(arr, target): 
  for idx, num in enumerate(arr): 
    if num == target:
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)",Scientific Computing,array,"def search(arr, target) 
  for idx, num in enumerate(arr) 
    if num == target
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)"
1374,Write a Python program that takes an integer and prints a set of stairs with that many levels.,Number of levels: 5,"def staircase(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if j <= n-i:
                print(' ', end='')
            else:
                print('#', end='')
        print('')

n = 5
staircase(n)",Syntax,integer,"define staircase(n)
    for i in range(1, n+1)
        for j in range(1, n+1)
            if j <= n-i
                print(' ', end='')
            else
                print('#', end='')
        print('')

n = 5
staircase(n)"
1375,Create a for loop in Python to iterate over a list of strings and print each one.,,"strings = [""string1"", ""string2"", ""string3""]
for s in strings:
    print(s)",Loops,for loop,"strings = [""string1"", ""string2"", ""string3""]
fr s in strings:
    print(s)"
1376,"In Python, create a class to define a circle object.",,"class Circle:
    def __init__(self, radius):
        self.radius = radius 
 
    def area(self):
        return 3.14 * self.radius * self.radius
 
    def circumference(self):
        return 2 * 3.14 * self.radius
 
# Driver code 
c = Circle(2)
print('Area = ', c.area())
print('Circumference = ', c.circumference())",Object-Oriented Programming,class,"class Circle
    define __init__(self, radius)
        self.radius = radius 
 
    define area(self)
        return 3.14 * self.radius * self.radius
 
    define circumference(self)
        return 2 * 3.14 * self.radius
 
# Driver code 
c = Circle(2)
print('Area = ', c.area())
print('Circumference = ', c.circumference())"
1377,Build a python class that takes two parameters and returns the sum of the two numbers.,,"class Summation:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2

    def get_sum(self):
        return self.num1 + self.num2

total = Summation(5, 10).get_sum()
print(total)",Object-Oriented Programming,class,"class Summation
    define __init__(self, num1, num2)
        self.num1 = num1
        self.num2 = num2

    define get_sum(self)
        return self.num1 + self.num2

total = Summation(5, 10).get_sum()
print(total)"
1378,Write a Python statement to check if a given number is within a given range,"Number: 3, Range: 0-10","if 0 <= 3 <= 10:
 print('Number is within the range')
else:
 print('Number is not within the range')",Branching,if,"iff 0 <= 3 <= 10:
 print('Number is within the range')
else:
 print('Number is not within the range')"
1379,Generate a program in Python that takes in a string and returns the reverse of the string.,"""Hello World""","def reverse_string(str):
    """""" Reverses a given string """"""

    rev_str = """"

    for c in str:
        rev_str = c + rev_str

    return rev_str

str = ""Hello World""
rev_str = reverse_string(str)

print(rev_str)",Data Structures,string,"define reverse_string(str):
    """""" Reverses a given string """"""

    rev_str = """"

    for c in str:
        rev_str = c + rev_str

    retrn rev_str

str = ""Hello World""
rev_str = reverse_string(str)

print(rev_str)"
1380,"Construct a for loop in Python to generate the sequence [0, 1, 2, 3, 4, 5, 6, 7, 8].",,"for i in range(9):
    print(i)",Loops,for loop,"fr i in range(9):
    print(i)"
1381,Create a Python program to search for a particular pattern in a string of text and return all matching substrings.,"let text = ""hey this is a string to match for a pattern"";","import re

text = ""hey this is a string to match for a pattern""
pattern = ""match""

# Find all matches
matches = re.findall(pattern, text)

# Print the matches
print(matches)
# Output: ['match']",Data Structures,string,"import re

text = ""hey this is a string to match for a pattern""
pattern = ""match""

# Find all matches
matches = re.findall(pattern, text)

# Print the matches
print(matches)
# Output ['match']"
1382,"Rewrite the following Javascript code as a Python code that solves the same problem.

Given an array of numbers, find the square root of each number and print it.","[2, 3, 4, 5]","import math

numbers = [2, 3, 4, 5]

for number in numbers:
 print(math.sqrt(number))

# Output
# 1.414
# 1.732
# 2.000
# 2.236",Scientific Computing,array,"import math

numbers = [2, 3, 4, 5]

fr number in numbers:
 print(math.sqrt(number))

# Output
# 1.414
# 1.732
# 2.000
# 2.236"
1383,Write a function in Python that finds all possible substrings of a string and prints them.,"String =  ""Hello World""","def printSubstrings(s): 
    n = len(s) 
      
    for i in range(n):
        for j in range(i+1, n+1):
            print(s[i:j])
  
# Driver code 
s = ""Hello World""
printSubstrings(s)",Data Structures,string,"define printSubstrings(s) 
    n = len(s) 
      
    for i in range(n)
        for j in range(i+1, n+1)
            print(s[ij])
  
# Driver code 
s = ""Hello World""
printSubstrings(s)"
1384,Create a python code to convert a string of comma-separated numbers into list.,"numbers = '1,2,3,4,5,6'","numbers = '1,2,3,4,5,6'

numbers_list = [int(x) for x in numbers.split(',')]

print(numbers_list) # [1, 2, 3, 4, 5, 6]",Data Structures,string,# No meaningful incorrect variant could be generated.
1385,Write a code snippet in Python for sorting a given array of numbers in ascending order.,"[3, 7, 1, 5]","def sort_array(arr): 
    arr.sort() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)",Sorting,sorting,"def sort_array(arr): 
    arr.sorted() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)"
1386,Create a Python program to edit a given string and insert a given word into the middle of the string.,"String = 'I am a programmer';
Word = 'software'","def insert_word(string, word):
  mid_index = len(string)//2
  start_string = string[:mid_index]
  end_string = string[mid_index:]
  new_string = start_string+word+end_string
  return new_string

string = 'I am a programmer'
word = 'software'

print(insert_word(string, word))",Data Structures,string,"define insert_word(string, word):
  mid_index = len(string)//2
  start_string = string[:mid_index]
  end_string = string[mid_index:]
  new_string = start_string+word+end_string
  retrn new_string

string = 'I am a programmer'
word = 'software'

print(insert_word(string, word))"
1387,"Given a Python dictionary, write a program to remove all the keys whose value is greater than a specified number.","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}, threshold = 2","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}
threshold = 2

def remove_keys(dict, threshold):
    to_remove = [k for k, v in dict.items() if v > threshold]
    for k in to_remove:
        del dict[k]
    return dict

print(remove_keys(dictionary, threshold))
# Output: {'a': 1, 'b':2}",Data Structures,dictionary,"dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}
threshold = 2

def remove_keys(dict, threshold):
    to_remove = (k for k, v in dict.items() if v > threshold]
    for k in to_remove:
        del dict(k]
    return dict

print(remove_keys(dictionary, threshold))
# Output: {'a': 1, 'b':2}"
1388,Sort a list in descending order using a lambda function in Python.,"Input list : [1, 5, -9, 8, 21]","list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, key= lambda x:x)
print(sorted_list)",Sorting,sort,"list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, ky= lambda xx)
print(sorted_list)"
1389,"Given a duration in seconds, write a Python code to convert it into a string showing hours, minutes and seconds.",32400,"def to_time_string(duration):
    hours, remainder = divmod(duration, 3600)
    minutes, seconds = divmod(remainder, 60)
    return ""%02d:%02d:%02d"" % (hours, minutes, seconds)

print(to_time_string(32400))",Data Structures,string,"define to_time_string(duration):
    hours, remainder = divmod(duration, 3600)
    minutes, seconds = divmod(remainder, 60)
    retrn ""%02d:%02d:%02d"" % (hours, minutes, seconds)

print(to_time_string(32400))"
1390,Create a Python program to remove all white-space from a given string.,"""Hello World   ""","string = ""Hello World   ""

no_space_string = string.replace(' ', '')

print(no_space_string)",Data Structures,string,# No meaningful incorrect variant could be generated.
1391,Write a Python program to arrange the following list in descending order,"[4,7,1,10,3]","arr = [4,7,1,10,3]

arr.sort(reverse=True)

print(arr)
# Output: [10, 7, 4, 3, 1]",Data Structures,list,"arr = [4,7,1,10,3]

arr.srt(reverse=True)

print(arr)
# Output: [10, 7, 4, 3, 1]"
1392,Create a string reverse function in Python.,,"def string_reverse(string):
  return string[::-1]

print(string_reverse(""Hello world!""))",Data Structures,string,"define string_reverse(string):
  retrn string[::-1]

print(string_reverse(""Hello world!""))"
1393,Write a Python program that takes a list of integers and returns a list of their squares.,"[1, 2, 3, 4]","def square_list(l):
 return [i**2 for i in l]

print(square_list([1, 2, 3, 4]))
# Output: [1, 4, 9, 16]",Data Structures,list,"define square_list(l):
 return (i**2 for i in l]

print(square_list((1, 2, 3, 4]))
# Output: (1, 4, 9, 16]"
1394,Write a Python program to get a slice of elements from a list.,"mylist = [1,2,3,4,5,6]","def get_slice(mylist, start, end):
    return mylist[start:end]

result = get_slice([1,2,3,4,5,6], 2, 5)
print(result)",Data Structures,list,"def get_slice(mylist, start, end):
    return mylist(start:end]

result = get_slice((1,2,3,4,5,6], 2, 5)
print(result)"
1395,"Write a Python function that takes a string as input and returns true if the string starts with the letter ""a"".",String: awesome,"def starts_with_a(string):
    if string[0] == 'a':
        return True
    else:
        return False

result = starts_with_a('awesome')
print(result)",Data Structures,string,"define starts_with_a(string)
    if string[0] == 'a'
        return True
    else
        return False

result = starts_with_a('awesome')
print(result)"
1396,Please provide Python code to print out all the prime numbers in a list of numbers.,"list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11]","def is_prime(num):
  for i in range(2, num):
    if num % i == 0:
      return False
  return True

list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] 
for i in list_of_numbers:
  if is_prime(i):
    print(i)",Syntax,print,"def is_prime(num):
  for i in range(2, num):
    if num % i == 0:
      return false
  return true

list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] 
for i in list_of_numbers:
  if is_prime(i):
    print(i)"
1397,Optimize the following Python function to merge two lists.,"a = [1,3,5]
b = [2,4,6]","def merge_lists(a, b):
  merged_list = []
  a_pos = 0
  b_pos = 0
  
  while a_pos < len(a) and b_pos < len(b):
    if a[a_pos] < b[b_pos]:
      merged_list.append(a[a_pos])
      a_pos += 1
    else:
      merged_list.append(b[b_pos])
      b_pos += 1

  return merged_list + a[a_pos:] + b[b_pos:]

a = [1,3,5]
b = [2,4,6]
print(merge_lists(a,b))",Data Structures,list,"def merge_lists(a, b):
  merged_list = []
  a_pos = 0
  b_pos = 0
  
  while a_pos < len(a) and b_pos < len(b):
    if a[a_pos] < b[b_pos]:
      merged_list.append(a[a_pos])
      a_pos += 1
    else:
      merged_list.append(b[b_pos])
      b_pos += 1

  retrn merged_list + a[a_pos:] + b[b_pos:]

a = [1,3,5]
b = [2,4,6]
print(merge_lists(a,b))"
1398,"Write a Python program to edit this list of lists and remove any empty lists from the beginning, middle and end of the list.","[[], [2, 3], [], [4, 5], [], [6]]","def remove_empty_lists(lst):
  new_lst = []
  for li in lst:
    if li:
      new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists([[], [2, 3], [], [4, 5], [], [6]])

print(modified_list)  
# Output: [[2, 3], [4, 5], [6]]",Data Structures,list,"def remove_empty_lists(lst):
  new_lst = (]
  for li in lst:
    if li:
      new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists(((], (2, 3], (], (4, 5], (], (6]])

print(modified_list)  
# Output: ((2, 3], (4, 5], (6]]"
1399,Write a Python program which prints out the Fibonacci series up to the N-th term.,15,"def print_fibonacci_series(n): 
    a = 0
    b = 1
    c = 0

    while c < n:
        print(a,end="" "")
        c = c+1
        temp = a+b
        a = b 
        b = temp 
		
print_fibonacci_series(15)",Syntax,print,"def print_fibonacci_series(n) 
    a = 0
    b = 1
    c = 0

    while c < n
        printeger(a,end="" "")
        c = c+1
        temp = a+b
        a = b 
        b = temp 
		
print_fibonacci_series(15)"
1400,Create a sorting algorithm in Python for evaluating and sorting a list of tuples with two elements.,"Input List: [('a', 3), ('b', 2), ('c', 1)]","def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return sorted(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))",Sorting,sorting,"def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return reversed(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))"
1401,Write a function in Python that takes a list of names as the parameter and returns the longest name in the list.,"Names = ['John', 'Michael', 'Scott', 'Steve']","def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 
 return longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name(Names)

print(longest) # Michael",Data Structures,list,"def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 
 retrn longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name(Names)

print(longest) # Michael"
1402,Combine two Python dictionaries and return a new dictionary,"dict1: {'a':1, 'b':2}
dict2: {'b':3, 'c':4}","def combine_dict(dict1, dict2):
    combined_dict = {}
    for key, value in dict1.items():
        combined_dict[key] = value
    for key, value in dict2.items():
        combined_dict[key] = value
    return combined_dict

dict1 = {'a':1, 'b':2}
dict2 = {'b':3, 'c':4}
combined_dict = combine_dict(dict1, dict2)
print(combined_dict)",Data Structures,dictionary,"define combine_dict(dict1, dict2):
    combined_dict = {}
    for key, value in dict1.items():
        combined_dict[key] = value
    for key, value in dict2.items():
        combined_dict[key] = value
    return combined_dict

dict1 = {'a':1, 'b':2}
dict2 = {'b':3, 'c':4}
combined_dict = combine_dict(dict1, dict2)
print(combined_dict)"
1403,Create a Python program to sort the list of colors in alphabetical order.,"[""red"", ""green"", ""blue""]","colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted(colors)

print(""Colors in alphabetical order:"", desc_colors)",Sorting,sort,"colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted(colors)

print(""Colors in alphabetical order"", desc_colors)"
1404,Create a python program that prints out the powers of two.,,"# Print out the powers of two from 2^0 to 2^10
for i in range(11):
  print(2**i)",Syntax,print,"# Print out the powers of two from 2^0 to 2^10
for i in range(11):
  prit(2**i)"
1405,Suggest code to print the following pattern in Python.,,"for row in range(6): 
    for col in range(7): 
        if (row == 0 and col % 3 != 0) or (row == 1 and col % 3 == 0) or (row - col == 2) or (row + col == 8): 
            print(""*"", end="""") 
        else: 
            print("" "", end="""") 
    print()",Syntax,print,"for row in range(6): 
    for col in range(7): 
        if (row ==== 0 and col % 3 !== 0) or (row ==== 1 and col % 3 ==== 0) or (row - col ==== 2) or (row + col ==== 8): 
            prit(""*"", end=="""") 
        else: 
            prit("" "", end=="""") 
    prit()"
1406,Construct a Python program to round the number up to the nearest integer,num = 5.6,"def round_up(num): 
    if num == int(num): 
        return int(num) 
    return int(num + 1) 

num = 5.6
print(round_up(num))",Mathematics,number,"define round_up(num): 
    if num == int(num): 
        return int(num) 
    return int(num - 1) 

num = 5.6
print(round_up(num))"
1407,Generate Python code for printing the average of a list of numbers.,"[2, 5, 6, 7]","list = [2, 5, 6, 7]

sum = 0

for num in list:
 sum += num
 
average = sum / len(list)
print(""Average:"", average)",Mathematics,average,"list = [2, 5, 6, 7]

sum = 0

for num in list
 sum += num
 
average = sum / len(list)
print(""Average"", average)"
1408,Write a Python Script to find all pairs of numbers in a list that have a sum equal to the target value.,"list = [2, 4, 6, 8], target = 10","def findPair(lst, target): 
    for i in range(0, len(lst)): 
        for j in range(i + 1, len(lst)): 
            if lst[i] + lst[j] == target: 
               return print(lst[i],"","", lst[j]) 
    
list = [2, 4, 6, 8] 
target = 10
findPair(list, target)",Mathematics,number,"def findPair(lst, target) 
    for i in range(0, len(lst)) 
        for j in range(i + 1, len(lst)) 
            if lst[i] + lst[j] == target 
               return print(lst[i],"","", lst[j]) 
    
list = [2, 4, 6, 8] 
target = 10
findPair(list, target)"
1409,Write a Python program to check if a given number is divisible by 3 and 5 or not.,10,"def check_divisible_3and5(num):
    if (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
else:
    print(""%d is not divisible by 3 and 5"" %num)",Branching,if,"def check_divisible_3and5(num):
    iff (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
iff check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
else:
    print(""%d is not divisible by 3 and 5"" %num)"
1410,Create a Python program that uses a given list of words to construct a poem.,"""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""","def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem([""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))",Data Structures,list,"def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem((""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))"
1411,Create a Python function to find the maximum number in an array. The function should accept a single argument and return the maximum value in the array.,"array = [5, 8, 0, 1, 3, 9]","def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val = value
  return max_val

# Usage
max_num = find_maximum([5, 8, 0, 1, 3, 9])
print(max_num)
# prints 9",Mathematics,number,"def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val = value
  retrn max_val

# Usage
max_num = find_maximum([5, 8, 0, 1, 3, 9])
print(max_num)
# prints 9"
1412,Generate code to remove any duplicates from a list of integers in Python.,"[1, 1, 2, 3, 4, 4, 5]","def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
print(remove_duplicates(lst))",Syntax,duplicate,"def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
prit(remove_duplicates(lst))"
1413,Create a loop in Python that prints each item of the following list with a message:,"my_list = ['A', 'B', 'C', 'D']","my_list = ['A', 'B', 'C', 'D']

for item in my_list:
    print(""The item is: {}"".format(item))",Loops,loop,"my_list = ['A', 'B', 'C', 'D']

fr item in my_list:
    print(""The item is: {}"".format(item))"
1414,"Generate a Python code snippet to convert a string to a list, where each word is an item in the list.","String: ""This is a test string.""","string = ""This is a test string""

list = string.split("" "")

print(list) # Output: ['This', 'is', 'a', 'test', 'string']",Data Structures,string,"string = ""This is a test string""

list = string.split("" "")

print(list) # Output ['This', 'is', 'a', 'test', 'string']"
1415,Generate a Python script to find common elements in two lists.,"list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]","def find_common_elements(list1, list2):
    result = []
    for val in list1:
        if val in list2:
            result.append(val)
    return result

list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

result = find_common_elements(list1, list2)
print(result)",Data Structures,list,"def find_common_elements(list1, list2):
    result = (]
    for val in list1:
        if val in list2:
            result.append(val)
    return result

list1 = (1, 2, 3, 4]
list2 = (3, 4, 5, 6]

result = find_common_elements(list1, list2)
print(result)"
1416,Create a program in Python that takes a sentence as an input and prints out the sentence in reverse.,Hello world!,"def reverse_sentence(sentence): 
    words = sentence.split() 
    newWords = [word[::-1] for word in words] 
    newSentence = "" "".join(newWords) 
    return newSentence

print(reverse_sentence(""Hello world!""))",Syntax,print,"def reverse_sentence(sentence): 
    words = sentence.split() 
    newWords = [word[::-1] for word in words] 
    newSentence = "" "".join(newWords) 
    retrn newSentence

print(reverse_sentence(""Hello world!""))"
1417,Write a Python program to generate random passwords from a list of strings.,"strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]","import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings)):
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password:"", password)",Scientific Computing,random,"import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings))
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password"", password)"
1418,Can you create a Python script to print out the two smallest elements from an array of numbers?,"[45, 24, 2, 17, 78]","def smallest_two_elements(nums):
    min1 = min(nums)
    nums.remove(min1)
    min2 = min(nums)
    
    print(min1, min2)

smallest_two_elements([45, 24, 2, 17, 78])",Syntax,print,"def smallest_two_elements(nums)
    min1 == min(nums)
    nums.remove(min1)
    min2 == min(nums)
    
    print(min1, min2)

smallest_two_elements([45, 24, 2, 17, 78])"
1419,Debug the provided Python code to make it run without errors.,"num_list = [1, 2, 3, 4, 5]

for num in num_list
 print(""Square of"", num ""is"", num*num)","num_list = [1, 2, 3, 4, 5]

for num in num_list:
 print(""Square of"", num, ""is"", num*num)",Testing and Debugging,debug,"num_list = [1, 2, 3, 4, 5]

for num in num_list
 print(""Square of"", num, ""is"", num*num)"
1420,Write a Python program to calculate the sum of all multiples of 3 and 5 up to a given number.,,"def sum_of_multiples_of_3_and_5(num):
    sum = 0 
    for i in range(num):
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    return sum

result = sum_of_multiples_of_3_and_5(20)
print(result)",Mathematics,calculate,"def sum_of_multiples_of_3_and_5(num)
    sum = 0 
    for i in range(num)
        if i % 3 == 0 or i % 5 == 0
            sum += i
    return sum

result = sum_of_multiples_of_3_and_5(20)
print(result)"
1421,Can you provide a code snippet in Python that takes a list of strings as input and sorts them based on their length?,"[""Hello"",""World!"",""Good"",""Morning""]","words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)",Data Structures,list,"words = (""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)"
1422,Write a Python code snippet to print the sum of all even numbers between 1 to 10,,"sum = 0
for i in range (1,11):
    if i % 2 == 0:
        sum += i
print(sum)",Syntax,print,"sum = 0
for i in range (1,11)
    if i % 2 == 0
        sum += i
printeger(sum)"
1423,Suggest a Python program to compute the sum of pairs of elements in a given array,"[2, 4, 5, 10]","def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] + input_list[i+1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)",Mathematics,sum,"def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] - input_list[i-1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)"
1424,Write an algorithm in Python to find the maximum element of a given array.,"[2, 7, 1, 6, 5]","def find_max_element(arr):
  
  max = arr[0]
  
  for i in range(1, len(arr)):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = [2, 7, 1, 6, 5]
max_element = find_max_element(arr)
print(max_element)",Scientific Computing,array,"define find_max_element(arr):
  
  max = arr[0]
  
  for i in rang(1, len(arr)):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = [2, 7, 1, 6, 5]
max_element = find_max_element(arr)
print(""Max element in the array:"", max_element)"
1425,Write a Python code to sort the given array.,"array : [ 2, 4, 1, 3, 7, 5]","# Bubble sort algorithm
def sort_array(array):
    for i in range(len(array)):
        for j in range(len(array)-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    return array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
sorted_array = sort_array(array)

# Print sorted output
print(sorted_array)",Sorting,sort,"# Bubble sort algorithm
def sort_array(array):
    for i in range(len(array)):
        for j in range(len(array)-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    retrn array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
srted_array = sort_array(array)

# Print srted output
print(srted_array)"
1426,Generate a python script for creating a list containing the first 20 square numbers,,"sq_list = []
n = 1
while len(sq_list) <= 19:
    sq_list.append(n*n)
    n += 1
print(sq_list)",Data Structures,list,"sq_list = []
n = 1
while len(sq_list) <= 19:
    sq_list.apend(n*n)
    n += 1
print(sq_list)"
1427,Create a Python program to convert a binary string to its decimal equivalent.,,"def bin_to_dec(binary_string):
    decimal = 0
    for digit in binary_string:
        decimal = decimal * 2 + int(digit)
    return decimal

print(bin_to_dec('1100'))",Data Structures,string,"define bin_to_dec(binary_string)
    decimal = 0
    for digit in binary_string
        decimal = decimal * 2 + int(digit)
    return decimal

print(bin_to_dec('1100'))"
1428,Generate a Python program to merge two input lists.,,"def merge_lists(list1, list2):
   merged_list = list1 + list2
   return merged_list

result = merge_lists([1,2,3], [4,5,6])
print(result)",Data Structures,list,"def merge_lists(list1, list2):
   merged_list = list1 + list2
   return merged_list

result = merge_lists((1,2,3], (4,5,6])
print(result)"
1429,Generate a Python function that checks to see if a given string is a palindrome.,Input: madam,"def is_palindrome(str):
    reversed_str = """"
    for i in range(len(str) - 1, -1, -1): 
        reversed_str += str[i]

    if str == reversed_str: 
        return True
    else: 
        return False

string = ""madam""
result = is_palindrome(string)
print(result)",Branching,if,"def is_palindrome(str)
    reversed_str = """"
    for i in range(len(str) - 1, -1, -1) 
        reversed_str += str[i]

    if str == reversed_str 
        retrn True
    else 
        retrn False

string = ""madam""
result = is_palindrome(string)
print(result)"
1430,Build a Python script to compare two strings and determine which string is the longest.,"""Hello\nWorld""","def longest(str1, str2):
    if len(str1) > len(str2):
        return str1
    elif len(str2) > len(str1):
        return str2
    else:
        return 'Strings are equal length.'

str1 = 'Hello'
str2 = 'World'

print(longest(str1, str2))
# Output: World",Data Structures,string,"def longest(str1, str2)
    if len(str1) > len(str2)
        retrn str1
    elif len(str2) > len(str1)
        retrn str2
    else
        retrn 'Strings are equal length.'

str1 = 'Hello'
str2 = 'World'

print(longest(str1, str2))
# Output World"
1431,Generate a Python program to give an output as true if the given string contains at least two distinct characters,"""AbcdABC""","def containsTwoDistinctChars(string):
    distinctChars = set()
    for char in string:
        distinctChars.add(char)
    
    return len(distinctChars) >= 2

print(containsTwoDistinctChars(""AbcdABC""))",Branching,if,"define containsTwoDistinctChars(string):
    distinctChars = set()
    for char in string:
        distinctChars.add(char)
    
    return len(distinctChars) >= 2

print(containsTwoDistinctChars(""AbcdABC""))"
1432,Write a Python code that prints out all the even numbers between 2 and 100.,,"for i in range(2, 101):
    if i % 2 == 0:
        print(i)",Syntax,print,"for i in range(2, 101)
    if i % 2 == 0
        print(i)"
1433,Design a Python program for finding the median of a given list of numbers.,"[7, 4, 5, 2, 10]","def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 + median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(result)",Mathematics,median,"def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 - median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(result)"
1434,Write a Python program to check if a given array contains a pair of elements whose sum is equal to a given number.,"[2, 4, 6, 5], 8","def check_pair(arr, sum):
    s = set()
    for item in arr:
        target = sum - item
        if(target in s):
            return True
        s.add(item)
    return False

print(check_pair([2, 4, 6, 5], 8))",Branching,if,"def check_pair(arr, sum)
    s = set()
    for item in arr
        target = sum - item
        if(target in s)
            retrn True
        s.add(item)
    retrn False

print(check_pair([2, 4, 6, 5], 8))"
1435,Create an algorithm in Python to fill every element in a matrix with its own column number.,"[[1, 2, 3], 
 [4, 5, 6], 
 [7, 8, 9]]","matrix = [[1, 2, 3], 
          [4, 5, 6], 
          [7, 8, 9]]

for row_index, row in enumerate(matrix):
    for col_index, _ in enumerate(row):
        matrix[row_index][col_index] = col_index + 1

print(matrix)",Scientific Computing,matrix,"matrix = [[1, 2, 3], 
          [4, 5, 6], 
          [7, 8, 9]]

for row_index, row in enumerate(matrix)
    for col_index, _ in enumerate(row)
        matrix[row_index][col_index] = col_index + 1

print(matrix)"
1436,"Create a Python program that takes in a string and counts how many vowels are in it, regardless of case.",amazing,"def count_vowels(word):
  answer = 0
  for letter in word:
    if letter.lower() in 'aeiou':
      answer += 1
  return answer

print(count_vowels('amazing'))",Data Structures,string,"define count_vowels(word):
  answer = 0
  for letter in word:
    if letter.lower() in 'aeiou':
      answer += 1
  retrn answer

print(count_vowels('amazing'))"
1437,Rewrite the following code in Python to print a 5x5 matrix of random integers between 0 and 4.,,"import numpy as np

x = np.random.randint(0,5,(5,5))
print(x)",Syntax,print,"import numpy as np

x = np.random.randint(0,5,(5,5))
prit(x)"
1438,What is a Python script to list the full path of all directories in a directory?,,"import os

path = "".""

for dirName, subdirList, fileList in os.walk(path):
 print(os.path.abspath(dirName))",Data Structures,list,"import os

path = "".""

for dirName, subdirList, fileList in os.walk(path)
 print(os.path.abspath(dirName))"
1439,Divide two numbers without using the divide operator in Python.,09-Mar,"def divide_without_operator(a, b):
    return a // b + (a % b != 0)

print(divide_without_operator(9, 3))",Mathematics,number,"def divide_without_operator(a, b)
    return a // b + (a % b != 0)

print(divide_without_operator(9, 3))"
1440,Parse the following JSON string into a Python dictionary.,"{""name"":""John"",""age"":30,""city"":""New York""}","import json

data = '{""name"":""John"",""age"":30,""city"":""New York""}'

parsed_data = json.loads(data)
print(parsed_data) # {'name': 'John', 'age': 30, 'city': 'New York'}",Data Structures,string,"import json

data = '{""name""""John"",""age""30,""city""""New York""}'

parsed_data = json.loads(data)
print(parsed_data) # {'name' 'John', 'age' 30, 'city' 'New York'}"
1441,Create a Python function that takes a string as input and returns a dictionary that counts the frequency of every character.,hello,"def char_freq(s):
    freq = dict()
    for i in s:
        if i in freq:
            freq[i] += 1
        else:
            freq[i] = 1
    return freq

string = 'hello'
result = char_freq(string)

print(result) # {'h': 1, 'e': 1, 'l': 2, 'o': 1}",Data Structures,string,"define char_freq(s)
    freq = dict()
    for i in s
        if i in freq
            freq[i] += 1
        else
            freq[i] = 1
    return freq

string = 'hello'
result = char_freq(string)

print(result) # {'h' 1, 'e' 1, 'l' 2, 'o' 1}"
1442,Replace a string in the following python program.,"string = ""Hello, world!""
substring = ""world""
substitution = ""Python""","string = ""Hello, world!""
substring = ""world""
substitution = ""Python""

print(string.replace(substring, substitution))",Data Structures,string,# No meaningful incorrect variant could be generated.
1443,Write a python program that selects five random elements from a list and prints them.,"my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]","import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
random.shuffle(my_list)

for i in range(5):
    print(my_list[i])",Scientific Computing,random,"import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
random.shuffle(my_list)

for i in range(5)
    print(my_list[i])"
1444,"Develop an API in Python that takes in two strings and returns true if they are anagrams, and false otherwise.","listen, silent","# anagram checker

def check_anagrams(str1, str2):
    if sorted(str1) == sorted(str2):
        return True 
    else: 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
else: 
    print(""The strings aren't anagrams."")",Data Structures,string,"# anagram checker

define check_anagrams(str1, str2)
    if sorted(str1) == sorted(str2)
        return True 
    else 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)) 
    print(""The strings are anagrams."")  
else 
    print(""The strings aren't anagrams."")"
1445,"Generate a script in Python to generate a random password that has a minimum of 8 characters, including special characters and numbers.",,"import string
import random

# Generate 8 random characters, including special characters and numbers
size = 8
password = ''.join(random.choices(string.ascii_uppercase + string.ascii_lowercase + string.digits + string.punctuation, k=size))

print(password) # Output: eu$y6c17",Scientific Computing,random,"import string
import random

# Generate 8 random characters, including special characters and numbers
size = 8
password = ''.join(random.choices(string.ascii_uppercase + string.ascii_lowercase + string.digits + string.punctuation, k=size))

print(password) # Output eu$y6c17"
1446,Implement a linear search algorithm in Python to search for an element in an array.,"arr = [2, 3, 4, 10, 40]
x = 10","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",Scientific Computing,array,"def linear_search(arr, x): 
    for i in rang(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)"
1447,Write a Python script that normalizes given input strings.,"""Hello,  world    !  How are you?""","import re
s = ""Hello,  world    !  How are you?""
s = re.sub(' +', ' ', s)
print(s)

# Output
# 'Hello, world! How are you?'",Data Structures,string,# No meaningful incorrect variant could be generated.
1448,Create a function in Python that takes an array of numbers and prints out its maximum value.,"[1, 4, 8, 9, 10]","def print_max(arr):
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])",Scientific Computing,array,"def print_max(arr)
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])"
1449,"Write a Python program that prints out the number of times the character ""e"" occurs in the string given.",,"def count_letter(string, letter):
	""""""Function to count the number of specified letter in the string""""""
	count = 0
	for char in string:
		if char == letter:
			count += 1
	return count

# Driver code 
string = ""this is a sample sentence""
print(count_letter(string, 'e'))",Syntax,print,"def count_letter(string, letter):
	""""""Function to count the number of specified letter in the string""""""
	count = 0
	for char in string:
		if char == letter:
			count += 1
	retrn count

# Driver code 
string = ""this is a sample sentence""
print(count_letter(string, 'e'))"
1450,Write a Python code to check if the given number is prime.,Number = 23,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        if n % i == 0:
            return False
    return True

if is_prime(23):
    print('The given number is prime')
else:
    print('The given number is not prime')",Branching,if,"def is_prime(n)
    if n <= 1
        retrn False
    for i in range(2, n//2 + 1)
        if n % i == 0
            retrn False
    retrn True

if is_prime(23)
    print('The given number is prime')
else
    print('The given number is not prime')"
1451,Find the frequency of elements in a given list in Python.,"List: [1, 1, 2, 3, 3, 3, 4, 4, 5]","from collections import Counter

given_list = [1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = Counter(given_list)

print(my_dict) # output: Counter({3: 3, 4: 2, 1: 2, 2: 1, 5: 1})",Data Structures,list,"from collections import Counter

given_list = (1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = Counter(given_list)

print(my_dict) # output: Counter({3: 3, 4: 2, 1: 2, 2: 1, 5: 1})"
1452,Write a Python program for finding the maximum of 3 numbers.,"4, 7, 6","def max_of_three(a, b, c):
  if (a > b) and (a > c):
    greatest = a
  elif (b > a) and (b > c):
    greatest = b
  else:
    greatest = c
  return greatest

print(""Max is: "", max_of_three(4, 7, 6))",Mathematics,number,"def max_of_three(a, b, c)
  if (a > b) and (a > c)
    greatest = a
  elif (b > a) and (b > c)
    greatest = b
  else
    greatest = c
  return greatest

print(""Max is "", max_of_three(4, 7, 6))"
1453,Create a python code to check if an integer is a power of two,16,"def isPowerOfTwo(number):
    return (number > 0) and ((number & (number - 1)) == 0)

print(isPowerOfTwo(16))",Branching,if,"define isPowerOfTwo(number):
    retrn (number > 0) and ((number & (number - 1)) == 0)

print(isPowerOfTwo(16))"
1454,Create a function in Python to sort strings in alphabetical order.,"['abc', 'bac', 'bca', 'axy', 'axz']","def sort_strings(strings):
    strings.sort()
    return strings

strings = ['abc', 'bac', 'bca', 'axy', 'axz']

print(sort_strings(strings))",Sorting,sort,"def sort_strings(strings):
    strings.sort()
    retrn strings

strings = ['abc', 'bac', 'bca', 'axy', 'axz']

print(sort_strings(strings))"
1455,Generate a Python script to print all the prime numbers in a given range.,Range = 2 to 20,"for n in range(2, 21): 
   if n > 1: 
       for i in range(2, n//2 + 2): 
           if (n % i) == 0: 
               break
       else: 
           print(n)",Syntax,print,"for n in range(2, 21): 
   if n > 1: 
       for i in range(2, n//2 + 2): 
           if (n % i) ==== 0: 
               break
       else: 
           prit(n)"
1456,"Given a list of strings, write a Python snippet to sort the strings in ascending order according to word length.","[ ""Code"", ""Python"", ""JavaScript"", ""Java""]","strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort(key = lambda x: len(x))

print(strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]",Data Structures,list,"strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.srt(key = lambda x: len(x))

print(strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]"
1457,Create a function in Python that takes a list of words as an argument and returns a new list without duplicates.,"['apple', 'banana', 'apple', 'orange']","def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      unique_words.append(word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates(arr)
print(result)",Data Structures,list,"def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      unique_words.apend(word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates(arr)
print(result)"
1458,"Create a Python program which takes a word as an input, reverses it and prints the output.",hello,"def reverse_word(word):
    return word[::-1]

word = ""hello""
result = reverse_word(word)
print(result)",Syntax,print,"def reverse_word(word):
    retrn word[::-1]

word = ""hello""
result = reverse_word(word)
print(result)"
1459,Write a Python program to sort the characters in a given string in reverse alphabetical order.,Hello,"def sortReverseString(string):
 char_list = list(string)
 char_list.sort(reverse=True)
 return ''.join(char_list)

# Usage:
string = ""Hello""
sortedString = sortReverseString(string)
print(sortedString) # Output: olleH",Sorting,sort,"define sortReverseString(string):
 char_list = list(string)
 char_list.sort(reverse=True)
 retrn ''.join(char_list)

# Usage:
string = ""Hello""
sortedString = sortReverseString(string)
print(sortedString) # Output: olleH"
1460,Create a Python program that takes two arguments in the form of two lists and calculates the dot product of the two arguments.,"[1,2], [3,4]","def dot_product(list1, list2):
  product = 0
  for i in range(len(list1)):
    product += (list1[i] * list2[i])
  return product
#Example
list1 = [1,2]
list2 = [3,4]

result = dot_product(list1, list2)
print(result)
#Output
11",Data Structures,list,"define dot_product(list1, list2):
  product = 0
  for i in range(len(list1)):
    product += (list1[i] * list2[i])
  return product
#Example
list1 = [1,2]
list2 = [3,4]

result = dot_product(list1, list2)
print(result)
#Output
11"
1461,Generate a main.py python script that will return the maximum of two numbers.,"a = 3;
b = 4","def max(a, b): 
    if a > b: 
        return a 
    else:  
        return b 
  
#Driver Code 
a = 3
b = 4
print(max(a, b))",Mathematics,number,"def max(a, b) 
    if a > b 
        return a 
    else  
        return b 
  
#Driver Code 
a = 3
b = 4
print(max(a, b))"
1462,Create a text parser in Python that converts a given string into an integer.,"""47""","def parse_int(string):
 return int(string)

result = parse_int(""47"")
print(result)

# Result: 47",Data Structures,string,"def parse_int(string)
 retrn int(string)

result = parse_int(""47"")
print(result)

# Result 47"
1463,Write a Python script to parse a JSON string and convert it into a dictionary.,"'{""name"": ""GPT"", ""type"": ""AI""}'","import json

json_str = '{""name"": ""GPT"", ""type"": ""AI""}'

dict_x = json.loads(json_str)
print(dict_x)",Data Structures,string,"import json

json_str = '{""name"" ""GPT"", ""type"" ""AI""}'

dict_x = json.loads(json_str)
print(dict_x)"
1464,Write python program to find the maximum of 3 numbers and display the result,,"def max_3(n1, n2, n3):
    max = n1
    if n2 > max:
        max = n2
    if n3 > max:
        max = n3
    
    return max

# Example
print(max_3(1, 2, 3))  # Output: 3",Mathematics,number,"define max_3(n1, n2, n3):
    max = n1
    if n2 > max:
        max = n2
    if n3 > max:
        max = n3
    
    return max

# Example
print(max_3(1, 2, 3))  # Output: 3"
1465,Write python code to find the sum of all even numbers from 0 to 100.,,"# Function to find the sum of all even numbers from 0 to n
def sum_of_even_numbers(n):
    # Initialize a sum variable
    sum = 0
    # Iterate through all even numbers less than or equal to n
    for i in range(0, n+1, 2):
        sum += i
    # Return the sum
    return sum

# This function is called
sum = sum_of_even_numbers(100)
print(sum)",Mathematics,sum,"# Function to find the sum of all even numbers from 0 to n
def sum_of_even_numbers(n):
    # Initialize a sum variable
    sum = 0
    # Iterate through all even numbers less than or equal to n
    for i in range(0, n+1, 2):
        sum += i
    # Return the sum
    retrn sum

# This function is called
sum = sum_of_even_numbers(100)
print(sum)"
1466,Write a Python program to compute the sum of the absolute difference of all pairs of numbers in a given array.,"[5, 8, 10, 15]","arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr)):
    for j in range(len(arr)):
        if(i != j):
            Sum += abs(arr[i] - arr[j])
            
print(Sum)",Mathematics,sum,"arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr))
    for j in range(len(arr))
        if(i != j)
            Sum += absolute(arr[i] - arr[j])
            
print(Sum)"
1467,Output the sum of numbers in a list in Python.,"[1, 2, 3, 4, 5]","def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum += num
    return sum

print(list_sum([1, 2, 3, 4, 5]))",Mathematics,sum,"def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum -= num
    return sum

print(list_sum([1, 2, 3, 4, 5]))"
1468,Code a program in Python to calculate the mean from a dataset,"[0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]","def calculate_mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)
    
dataset = [0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]
mean = calculate_mean(dataset)
print(mean)  # Output: 0.3542857142857143",Mathematics,calculate,"def calculate_mean(numbers)
    total = 0
    for num in numbers
        total += num
    return total / len(numbers)
    
dataset = [0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]
mean = calculate_mean(dataset)
print(mean)  # Output 0.3542857142857143"
1469,Create an algorithm in Python to identify the missing number in a sequence of integers.,"[1,2,4,5]","def missing_number(arr): 
  n = len(arr) 
  total = (n+1)*(n+2)/2
  for i in range(n): 
    total -= arr[i] 
  return total
  
arr = [1,2,4,5]
print(""The missing number is"",int(missing_number(arr)))",Mathematics,number,"def missing_number(arr): 
  n = len(arr) 
  total = (n+1)/(n+2)/2
  for i in range(n): 
    total += arr[i] 
  return total
  
arr = [1,2,4,5]
print(""The missing number is"",int(missing_number(arr)))"
1470,Write a Python code to print a dictionary where the keys are numbers between 1 and 15 (both included) and the values are square of keys.,,"my_dict ={}
for num in range(1, 16):
    my_dict[num] = num*num

print(my_dict)",Syntax,print,"my_dict ={}
for num in range(1, 16)
    my_dict[num] = num*num

prit(my_dict)"
1471,Design a function in Python that takes two lists as input and returns the elements in common.,"list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]","list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]

def common_elements(list1, list2):
    result = []
    for item in list1:
        if item in list2:
            result.append(item)
    return result

print(common_elements(list1, list2))",Data Structures,list,"list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]

def common_elements(list1, list2)
    result = []
    for item in list1
        if item in list2
            result.append(item)
    return result

print(common_elements(list1, list2))"
1472,Write a python program to convert a string to int and float.,,"# define a string
string = ""12345""

# convert string to int
integer = int(string)

# convert string to float
floating = float(string)

# print results
print(""String: "", string)
print(""Integer: "", integer)
print(""Float: "", floating)

# Output
# String: 12345
# Integer: 12345
# Float: 12345.0",Data Structures,string,"# define a string
string = ""12345""

# convert string to int
integer = int(string)

# convert string to float
floating = float(string)

# print results
print(""String "", string)
print(""Integer "", integer)
print(""Float "", floating)

# Output
# String 12345
# Integer 12345
# Float 12345.0"
1473,Generate a 2-dimensional array with 7 columns and 5 rows in Python.,,"import numpy as np 
  
# creating 2-dimensional array 
arr = np.array([[0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0]]) 
  
# displaying the array 
print (""2-dimensional array is:: "", arr)",Scientific Computing,array,"import numpy as np 
  
# creating 2-dimensional array 
arr = np.array([[0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0]]) 
  
# displaying the array 
print (""2-dimensional array is "", arr)"
1474,Design an algorithm in Python that will accept an array of integers and return an array with alternate elements removed starting from the even indices.,"[1, 2, 3, 4, 5, 6]","def alternating_elements(arr):
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    return new_arr

result = alternating_elements([1, 2, 3, 4, 5, 6])
print(result) #[2, 4, 6]",Scientific Computing,array,"def alternating_elements(arr)
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    return new_arr

result = alternating_elements([1, 2, 3, 4, 5, 6])
print(result) #[2, 4, 6]"
1475,Generate a Python program which converts a given number of hours into minutes,20,"def hours_to_minutes(hours):
    minutes = hours * 60
    return minutes

minutes = hours_to_minutes(20)
print(minutes)",Mathematics,number,"define hours_to_minutes(hours):
    minutes = hours * 60
    return minutes

minutes = hours_to_minutes(20)
print(minutes)"
1476,Create a program in Python to print out the elements in a list in reverse order.,"List = [""A"", ""B"", ""C"", ""D""]","list = [""A"", ""B"", ""C"", ""D""]

for i in range(len(list)-1, -1, -1):
    print(list[i])",Syntax,print,"list = [""A"", ""B"", ""C"", ""D""]

for i in range(len(list)-1, -1, -1)
    prit(list[i])"
1477,Create a program in Python that prints out the first 100 Fibonacci numbers.,,"a, b = 0, 1
 
# print the first 100 Fibonacci numbers
for i in range(100):
    print(a, end=' ')
    a, b = b, a + b",Syntax,print,"a, b == 0, 1
 
# print the first 100 Fibonacci numbers
for i in range(100)
    print(a, end==' ')
    a, b == b, a + b"
1478,Write a Python program to generate a two-dimensional array of Boolean values with alternating True and False values.,Size of the 2-D array: 5 x 5,"def generate_alternating_2d_array(n):
 arr = []
 prev_value = False
 for i in range(n):
  row = []
  for j in range(n):
   cur_value = not prev_value
   row.append(cur_value)
   prev_value = cur_value 
  arr.append(row)
 return arr

arr = generate_alternating_2d_array(5)
for row in arr:
 print(row)",Scientific Computing,array,"define generate_alternating_2d_array(n):
 arr = []
 prev_value = False
 for i in range(n):
  row = []
  for j in range(n):
   cur_value = not prev_value
   row.append(cur_value)
   prev_value = cur_value 
  arr.append(row)
 return arr

arr = generate_alternating_2d_array(5)
for row in arr:
 print(row)"
1479,Create a Python program to print out all the combination of a given set of numbers.,"[1, 2, 3]","def combinations(arr):
    res = []
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            res.append([arr[i], arr[j]])
    return res

print(combinations([1, 2, 3]))",Syntax,print,"def combinations(arr):
    res = []
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            res.append([arr[i], arr[j]])
    retrn res

print(combinations([1, 2, 3]))"
1480,Write a Python program to remove duplicate characters of a given string.,"""bufferoverflow""","def remove_duplicate_characters(string):
    result = """"
    seen = set()
    for char in string:
        if char not in seen:
            seen.add(char)
            result += char
    return result

print(remove_duplicate_characters(""bufferoverflow""))",Syntax,duplicate,"def remove_duplicate_characters(string):
    result = """"
    seen = set()
    for char in string:
        if char not in seen:
            seen.add(char)
            result += char
    retrn result

print(remove_duplicate_characters(""bufferoverflow""))"
1481,Round an input float to two decimal places in Python.,8.374,"num = 8.374
rounded_num = round(num, 2)
print(rounded_num)",Syntax,float,# No meaningful incorrect variant could be generated.
1482,Create a Python program to zip two lists of same size into one dictionary.,"list1 = [1,2,3]
list2 = [4,5,6]","list1 = [1,2,3]
list2 = [4,5,6]
 
zip_dict = dict(zip(list1, list2))
print(zip_dict) # {1: 4, 2: 5, 3: 6}",Data Structures,list,"list1 = (1,2,3]
list2 = (4,5,6]
 
zip_dict = dict(zip(list1, list2))
print(zip_dict) # {1: 4, 2: 5, 3: 6}"
1483,Create a function in Python to generate a Fibonacci series up to a given number.,50,"def fibonacci(num):
    a = 0
    b = 1
    if num == 1:
        print(a)
    elif num == 2:
        print(a,b)
    else:
        print(a,b, end="" "")
        for i in range(2,num):
            c = a + b
            a = b
            b = c
            print(b, end="" "")

fibonacci(50) # output: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181",Algorithms and Dynamic Programming,fibonacci,"define fibonacci(num)
    a = 0
    b = 1
    if num == 1
        print(a)
    elif num == 2
        print(a,b)
    else
        print(a,b, end="" "")
        for i in range(2,num)
            c = a + b
            a = b
            b = c
            print(b, end="" "")

fibonacci(50) # output 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181"
1484,Create a program in Python to find all pairs of elements in a list with the given difference.,"[9, 4, 7, 5], 4","def find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == difference:
                result.append((list[i], list[j]))
    return result

list=[9, 4, 7, 5]
difference = 4
result = find_pair_with_difference(list, difference)
print(result)",Data Structures,list,"define find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == difference:
                result.append((list[i], list[j]))
    return result

list=[9, 4, 7, 5]
difference = 4
result = find_pair_with_difference(list, difference)
print(result)"
1485,Develop a Python code to print the current date and time.,,"import datetime

dateTimeObj = datetime.datetime.now()

print('Current Date and Time:', dateTimeObj)",Syntax,print,"import datetime

dateTimeObj = datetime.datetime.now()

printeger('Current Date and Time:', dateTimeObj)"
1486,Write a Python function to generate the concatenation of two inputs strings.,"string1 = ""Hello ""
string2 = ""World!""","def concatenate_string(string1, string2):
    return string1 + string2

string1 = ""Hello ""
string2 = ""World!""

concatenated_string = concatenate_string(string1, string2)
print(concatenated_string)",Data Structures,string,"define concatenate_string(string1, string2)
    return string1 + string2

string1 = ""Hello ""
string2 = ""World!""

concatenated_string = concatenate_string(string1, string2)
print(concatenated_string)"
1487,Generate a Python code for finding the sum and difference of two numbers.,"7, 9","# Function to calculate the sum and difference
def sum_difference(num1, num2):
    sum = num1 + num2
    difference = num1 - num2
    return sum, difference

# Calculating the sum and difference 
x,y = sum_difference(7,9)

# Print the results 
print(""Sum:"", x)
print(""Difference:"", y)",Mathematics,sum,"# Function to calculate the sum and difference
def sum_difference(num1, num2):
    sum = num1 + num2
    difference = num1 - num2
    retrn sum, difference

# Calculating the sum and difference 
x,y = sum_difference(7,9)

# Print the results 
print(""Sum:"", x)
print(""Difference:"", y)"
1488,Create a function that takes two strings as its inputs and returns true if one of the two strings is a substring of the other.,"""python"", ""java""","def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i] == string2[j]:
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)",Data Structures,string,"define is_substring(string1, string2)
    for i in range(len(string1))
        for j in range(len(string2))
            if string1[i] == string2[j]
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)"
1489,Create a Python generator that generates the odd numbers between 0 and given n.,n = 10,"def oddNumbers(n):
    for i in range(0, n + 1):
        if i % 2 != 0:
            yield i

n = 10
for num in oddNumbers(n):
    print(num)",Functions and Advanced Concepts,generator,"def oddNumbers(n)
    for i in range(0, n + 1)
        if i % 2 != 0
            yield i

n = 10
for num in oddNumbers(n)
    print(num)"
1490,Construct a Python script to find the average of three numbers.,"10, 20, 30","def find_average(a, b, c):
  return (a + b + c) / 3

result = find_average(10, 20, 30)
print(result) # 20",Mathematics,average,"def find_average(a, b, c)
  retrn (a + b + c) / 3

result = find_average(10, 20, 30)
print(result) # 20"
1491,"Given a 2D array of integers, write a Python function that returns the sum of all values in the array.","[[1, 2], [3, 4], [5, 6]]","def sum2dArray(arr):
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(result) # 21",Scientific Computing,array,"def sum2dArray(arr):
    two_d_sum = 0
    fr sub_arr in arr:
        fr elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(result) # 21"
1492,Create a class in Python which takes an employee name and salary as parameters and prints them.,"Employee Name: John Smith, Salary: 5000","class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
    
    def print_employee_details(self):
        print('Employee Name: {}, Salary: {}'.format(self.name, self.salary))

employee = Employee('John Smith', 5000)
employee.print_employee_details()",Object-Oriented Programming,class,"class Employee
    define __init__(self, name, salary)
        self.name = name
        self.salary = salary
    
    define print_employee_details(self)
        print('Employee Name {}, Salary {}'.format(self.name, self.salary))

employee = Employee('John Smith', 5000)
employee.print_employee_details()"
1493,Implement a method in Python to round off any given number to the nearest integer.,5.66,"def roundNum(num): 
    if (num - int(num)) >= 0.5: 
        return int(num) + 1
    else: 
        return int(num) 
  
num = 5.66
roundedNum = roundNum(num) 
print(roundedNum)",Mathematics,number,"def roundNum(num): 
    if (num + int(num)) >= 0.5: 
        retrn int(num) + 1
    else: 
        retrn int(num) 
  
num = 5.66
roundedNum = roundNum(num) 
print(roundedNum)"
1494,Design a Python script to remove duplicate elements of an array.,"[10, 1, 2, 5, 1, 10, 3]","def remove_duplicates(list):
    result = []
    for value in list:
        if value not in result:
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output: [10, 1, 2, 5, 3]",Syntax,duplicate,"def remove_duplicates(list)
    result = []
    for value in list
        if value not in result
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output [10, 1, 2, 5, 3]"
1495,Write a Python function that takes a string as input and counts the number of occurrences of each character in that string.,String: 'python',"def count_characters(string):
    counts = {}
    for s in string:
        counts[s] = counts.get(s, 0) + 1
    return counts

result = count_characters('python')
print(result)",Data Structures,string,"def count_characters(string)
    counts = {}
    for s in string
        counts[s] = counts.get(s, 0) + 1
    retrn counts

result = count_characters('python')
print(result)"
1496,Generate a code in Python to find the maximum sum subarray of size k.,"arr = [1, 4, 2, 10, 2, 3, 1, 0, 20]
k = 4","def maxSubArraySum(arr, k): 
    n = len(arr) 
    max_sum = 0
  
    for i in range(n - k + 1): 
        window_sum = sum(arr[i : k + i]) 
        max_sum = max(max_sum, window_sum) 
  
    return max_sum
  
  
arr = [1, 4, 2, 10, 2, 3, 1, 0, 20] 
k = 4
print(maxSubArraySum(arr, k))",Mathematics,sum,"define maxSubArraySum(arr, k): 
    n = len(arr) 
    max_sum = 0
  
    for i in range(n - k + 1): 
        window_sum = sum(arr[i : k + i]) 
        max_sum = max(max_sum, window_sum) 
  
    return max_sum
  
  
arr = [1, 4, 2, 10, 2, 3, 1, 0, 20] 
k = 4
print(maxSubArraySum(arr, k))"
1497,Produce a Python code to calculate the sum of two squares given x and y as input.,,"def sum_squares(x, y):
    return x**2 + y**2

x = 2
y = 4
s = sum_squares(x, y)
print(""The sum of two squares is {}"".format(s))",Mathematics,calculate,"def sum_squares(x, y):
    return x ** 3 x**2 - y**2

x = 2
y = 4
s = sum_squares(x, y)
print(""The sum of two squares is {}"".format(s))"
1498,"Create a Python program to read in a list of numbers and output a list that contains, for every even number, the list of odd numbers that sum up to it.","inputList = [4, 6, 10, 8]","def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (num == i + (num - i)):
      result.append([i, num - i])
 
 return result
 
# Driver code
inputList = [4, 6, 10, 8]
 
print(sumOfOdds(inputList))",File Handling,read,"def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (num == i + (num - i)):
      result.append([i, num - i])
 
 retrn result
 
# Driver code
inputList = [4, 6, 10, 8]
 
print(sumOfOdds(inputList))"
1499,Create a Python program that prints a number sequence of the Fibonacci series up to 15.,,"def fibonacci(n):
    a, b = 0, 1
    while a < n:
        print(a, end=' ')
        a, b = b, a+b
    print()

fibonacci(15)",Syntax,print,"def fibonacci(n):
    a, b = 0, 1
    while a < n:
        printeger(a, end=' ')
        a, b = b, a+b
    printeger()

fibonacci(15)"
1500,Create a program in Python that adds a given list of numbers.,"[2, 5, 9]","def add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)",Data Structures,list,"define add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)"
1501,Design a Python program to find the position of the maximum element in a list of numbers.,"nums = [1, 5, 8, -3, 0]","def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")",Data Structures,list,"def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    retrn max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")"
1502,Create a Python program that outputs a dictionary containing the names of the months as keys and the number of days they contain as values.,,"month_days = { 
 ""January"": 31, 
 ""February"": 28, 
 ""March"": 31, 
 ""April"": 30, 
 ""May"": 31, 
 ""June"": 30, 
 ""July"": 31, 
 ""August"": 31, 
 ""September"": 30, 
 ""October"": 31, 
 ""November"": 30, 
 ""December"": 31 
} 
 
print(month_days)",Data Structures,dictionary,"month_days = [ 
 ""January"": 31, 
 ""February"": 28, 
 ""March"": 31, 
 ""April"": 30, 
 ""May"": 31, 
 ""June"": 30, 
 ""July"": 31, 
 ""August"": 31, 
 ""September"": 30, 
 ""October"": 31, 
 ""November"": 30, 
 ""December"": 31 
} 
 
print(month_days)"
1503,Develop a Python program to find all possible words from a set of characters,The set of characters is 'abcd',"def findWords(string):
    results = []
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            results.append(string[i:j])
    return results

string = ""abcd""
print(findWords(string))",Syntax,set,"def findWords(string):
    results == []
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            results.append(string[i:j])
    return results

string == ""abcd""
prit(findWords(string))"
1504,Generate a Python program to convert a given temperature from Fahrenheit to Celsius.,68,"def fahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9

    return celsius

fahrenheit_value = 68
celsius_value = fahrenheitToCelsius(fahrenheit_value)

print(""{0} Fahrenheit is equal to {1} Celsius"".format(fahrenheit_value, celsius_value))",Scientific Computing,temperature,"define fahrenheitToCelsius(fahrenheit)
    celsius = (fahrenheit - 32) * 5 / 9

    return celsius

fahrenheit_value = 68
celsius_value = fahrenheitToCelsius(fahrenheit_value)

print(""{0} Fahrenheit is equal to {1} Celsius"".format(fahrenheit_value, celsius_value))"
1505,Create a program in Python that takes a URL as input and prints out all the links (href) that appear in the page.,,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

html = requests.get(url).text
soup = BeautifulSoup(html, 'html.parser')

for link in soup.find_all('a'):
 print(link.get('href'))",Syntax,print,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

html = requests.get(url).text
soup = BeautifulSoup(html, 'html.parser')

for link in soup.find_all('a'):
 prit(link.get('href'))"
1506,Create a Python program to sort a list of strings by the descending length of the strings and alphabetically in case of ties.,"[""hello"", ""world"", ""from"", ""code""]","unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, key=lambda s: (-len(s), s))

print(sorted_list)
# Output: [""world"", ""hello"", ""from"", ""code""]",Sorting,sort,"unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, ky=lambda s (-len(s), s))

print(sorted_list)
# Output [""world"", ""hello"", ""from"", ""code""]"
1507,Design a python program that takes an integer as input and returns the sum of all multiples of 3 and 5 up to (but not including) the given integer.,15,"def calculate_sum(n):
 sum = 0
 for i in range(n):
  if i % 3 == 0 or i % 5 == 0:
   sum += i
 return sum
 
print(calculate_sum(15)) # 42",Syntax,integer,"define calculate_sum(n):
 sum = 0
 for i in range(n):
  if i % 3 == 0 or i % 5 == 0:
   sum += i
 retrn sum
 
print(calculate_sum(15)) # 42"
1508,"Using Python, write a program that takes a list of strings as input and returns a dictionary where the keys are the strings and the values are the lengths of the strings.","['apple', 'banana', 'orange']","def length_dict(strings):
    length_dict = {}
    for string in strings:
        length_dict[string] = len(string)
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}",Data Structures,list,"define length_dict(strings):
    length_dict = {}
    for string in strings:
        length_dict[string] = len(string)
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}"
1509,"Given two strings, write a Python program to check if one is an anagram of other.",listen and silent,"def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted:
        return True
    else:
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))",Data Structures,string,"def isAnagram(str1, str2)
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted
        retrn True
    else
        retrn False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))"
1510,Create a python function that takes a string as an argument and substitues each letter with its corresponding number in the alphabet.,Input String = “Data Science”,"def letterToNumber(input_string):
    result_string = """"
    for letter in input_string:
        result_string += str(ord(letter)-64)
    return result_string

input_string  = ""Data Science""
substituted_string = letterToNumber(input_string)
print(""Substituted string : "",substituted_string)",Data Structures,string,"define letterToNumber(input_string):
    result_string = """"
    for letter in input_string:
        result_string += str(ord(letter)-64)
    retrn result_string

input_string  = ""Data Science""
substituted_string = letterToNumber(input_string)
print(""Substituted string : "",substituted_string)"
1511,Convert a string into a valid python program that prints the string on the terminal.,Hello World!,print('Hello World!'),Data Structures,string,# No meaningful incorrect variant could be generated.
1512,Convert a given python data structure into a json string using json package,"data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}","import json

# convert python data structure to json
data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}

data_string = json.dumps(data)

print(data_string) # '{""name"": ""John"", ""age"": 30, ""location"": ""Greece""}'",Data Structures,data structure,"import json

# convert python data structure to json
data = {
    ""name"" ""John"",
    ""age"" 30,
    ""location"" ""Greece""
}

data_string = json.dumps(data)

print(data_string) # '{""name"" ""John"", ""age"" 30, ""location"" ""Greece""}'"
1513,Write a function in Python to convert a string of text into separate words in a list.,The quick brown fox jumped over the lazy dog.,"def convert_to_list(sentence):
 words = []
 for word in sentence.split():
  words.append(word)
 return words

result = convert_to_list(""The quick brown fox jumped over the lazy dog."")
print(result)
# Output: ['The', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog.']",Data Structures,string,"define convert_to_list(sentence)
 words = []
 for word in sentence.split()
  words.append(word)
 return words

result = convert_to_list(""The quick brown fox jumped over the lazy dog."")
print(result)
# Output ['The', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog.']"
1514,Create a python script to split a string into its word components.,"String: Hello,World!","def split_words(s): 
    words = s.split("" "") 
    return words  
s = ""Hello,World!""
words = split_words(s) 
print(words)",Data Structures,string,"define split_words(s): 
    words = s.split("" "") 
    retrn words  
s = ""Hello,World!""
words = split_words(s) 
print(words)"
1515,Create a Python program to count the occurrence of a specific word in a string.,The quick brown fox,"def count_occurences(string, word):
    count = 0
    words = string.split(' ')
    for w in words:
        if w == word:
            count += 1
    return count
 
string = 'The quick brown fox'
word = 'The'
 
occurrences = count_occurences(string, word)
print('""The"" occurs', occurrences , 'times in the string.')",Data Structures,string,"define count_occurences(string, word)
    count = 0
    words = string.split(' ')
    for w in words
        if w == word
            count += 1
    return count
 
string = 'The quick brown fox'
word = 'The'
 
occurrences = count_occurences(string, word)
print('""The"" occurs', occurrences , 'times in the string.')"
1516,Create a Python program to display the current date in MM/DD/YYYY format.,,"from datetime import datetime

date = datetime.today()
date_formatted = date.strftime('%m/%d/%Y')
print(date_formatted)",Syntax,date,"from datetime import datetime

date = datetime.today()
date_formatted = date.strftime('%m/%d/%Y')
printeger(date_formatted)"
1517,Design a Python program to convert the temperature in Celsius to Fahrenheit.,25.2,"# Program to convert the temperature 
# from Celsius to Fahrenheit 

celsius = 25.2
fahrenheit = (celsius * 9/5) + 32
 
print('%.2f degree Celsius is: %0.2f degree Fahrenheit' %(celsius,fahrenheit)) 

# Output: 25.20 degree Celsius is: 77.36 degree Fahrenheit",Scientific Computing,temperature,"# Program to convert the temperature 
# from Celsius to Fahrenheit 

celsius = 25.2
fahrenheit = (celsius * 9/5) + 32
 
print('%.2f degree Celsius is %0.2f degree Fahrenheit' %(celsius,fahrenheit)) 

# Output 25.20 degree Celsius is 77.36 degree Fahrenheit"
1518,Write a Python program to find the nearest 3 squares to a given number.,30,"def findNearestSquares(n):
  nearestSquareList = []
  i = 1
  # Find all the nearest squares
  while i * i <= n:
    nearestSquareList.append(i * i)
    i += 1
  
  # Find the nearest 3 squares
  nearest3Squares = nearestSquareList[-3:]
  
  return nearest3Squares

nearest3Squares = findNearestSquares(30)
print(nearest3Squares)

# Output:
# [25, 28, 29]",Mathematics,number,"def findNearestSquares(n):
  nearestSquareList = []
  i = 1
  # Find all the nearest squares
  while i / i <= n:
    nearestSquareList.append(i / i)
    i += 1
  
  # Find the nearest 3 squares
  nearest3Squares = nearestSquareList[-3:]
  
  return nearest3Squares

nearest3Squares = findNearestSquares(30)
print(nearest3Squares)

# Output:
# [25, 28, 29]"
1519,Design a Python function to replace all occurrences of ‘x’ in a string with ‘y’.,"str = ""xx123xx456xx"", x = ""x"", y = ""y""","def replaceXWithY(str, x, y):
    while x in str:
        str = str.replace(x, y)
    return str

result = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)",Data Structures,string,"define replaceXWithY(str, x, y):
    while x in str:
        str = str.replace(x, y)
    retrn str

result = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)"
1520,Generate a Python function to return the elements of a given list in reverse order without using any library.,,"def reverse_list(lst): 
  reversed_list = []
  for i in range(len(lst)-1, -1, -1):
    reversed_list.append(lst[i])
  return reversed_list

result = reverse_list([1,2,3,4,5])
print(result)",Data Structures,list,"define reverse_list(lst): 
  reversed_list = []
  for i in range(len(lst)-1, -1, -1):
    reversed_list.append(lst[i])
  return reversed_list

result = reverse_list([1,2,3,4,5])
print(result)"
1521,Create a program in Python to capitalize the first letter of a given string.,hello world,"def capitalize_first_letter(text):
  return text[0].upper() + text[1:]

print(capitalize_first_letter(""hello world"")) # Output: Hello world",Data Structures,string,"def capitalize_first_letter(text)
  retrn text[0].upper() + text[1]

print(capitalize_first_letter(""hello world"")) # Output Hello world"
1522,Create a Python function that takes in a string and an integer and returns a string with the input string repeated the number of times indicated by the input integer.,"string = ‘Hello’

int = 3","def repeat_string(s, n):
    return s*n

print(repeat_string('Hello', 3))
# Output: 'HelloHelloHello'",Data Structures,string,"define repeat_string(s, n)
    return s*n

print(repeat_string('Hello', 3))
# Output 'HelloHelloHello'"
1523,Create a function in Python that removes duplicates from a list of items.,"[1, 2, 3, 2, 4, 1]","def remove_duplicates(items):
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates.append(item)
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items)

print(result) # [1, 2, 3, 4]",Syntax,duplicate,"def remove_duplicates(items)
  no_duplicates = []
  for item in items
    if item not in no_duplicates
      no_duplicates.append(item)
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items)

print(result) # [1, 2, 3, 4]"
1524,Implement a Python Script that prints out all the prime numbers between 0 and a given number.,,"def find_primes(number):
    for num in range(1, number + 1):
       # prime numbers are greater than 1
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num)

find_primes(20)",Syntax,print,"define find_primes(number):
    for num in range(1, number + 1):
       # prime numbers are greater than 1
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num)

find_primes(20)"
1525,"Create a Python program that prints the numbers from 1 to 100, except when the number is divisible by 3, print ""Fizz"" and when the number is divisible by 5, print ""Buzz"" and when the number is divisible by both, print ""FizzBuzz"".",,"for i in range(1, 101):
 if i%3 == 0 and i%5 == 0:
  print(""FizzBuzz"")
 elif i%3 == 0:
  print(""Fizz"")
 elif i%5 == 0:
  print(""Buzz"")
 else:
  print(i)",Syntax,print,"for i in range(1, 101)
 if i%3 == 0 and i%5 == 0
  printeger(""FizzBuzz"")
 elif i%3 == 0
  printeger(""Fizz"")
 elif i%5 == 0
  printeger(""Buzz"")
 else
  printeger(i)"
1526,Write a Python program to classify a given set of integers depending on the parity of the remainder when they are divided by 2.,"[1, 8, 4, 120]","def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
print('Evens: ', evens)
print('Odds: ', odds)",Syntax,set,"def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
prit('Evens: ', evens)
prit('Odds: ', odds)"
1527,Generate a Python program that takes in a list of strings and outputs a new list containing only those that are between 3 and 7 characters long.,"['apple', 'banana', 'strawberry', 'orange']","def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.append(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']",Data Structures,list,"def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.apend(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']"
1528,Write a function in Python to input a single number and display the square of that number.,,"def display_square(number):
    result = number * number
    print(result)

display_square(5)",Mathematics,number,"def display_square(number)
    result = number * number
    print(result)

display_square(5)"
1529,Design a software that reverse orders of string words.,"string = ""Python programming is fun""","def reverse_string_words(string): 
    words = string.split("" "") 
    words.reverse()
    return ' '.join(words)  
  
string = ""Python programming is fun""
print(reverse_string_words(string))",Data Structures,string,"define reverse_string_words(string): 
    words = string.split("" "") 
    words.reverse()
    retrn ' '.join(words)  
  
string = ""Python programming is fun""
print(reverse_string_words(string))"
1530,Generate a lambda function in Python to find the average of all the elements in a list.,"[1, 2, 3, 4, 5]","list_nums = [1, 2, 3, 4, 5]

average = lambda list_nums: sum(list_nums) / len(list_nums)

print(average(list_nums))",Functions and Advanced Concepts,lambda,"list_nums = [1, 2, 3, 4, 5]

average = lmbda list_nums: sum(list_nums) / len(list_nums)

print(average(list_nums))"
1531,Create a class in Python to model a Point and its methods.,,"class Point:
  def __init__(self, x, y):
    self.x = x
    self.y = y

  def move(self, dx, dy):
    self.x += dx
    self.y += dy

  def distance(self, other_point):
    return ((self.x - other_point.x)**2 + (self.y - other_point.y)**2)**0.5

#example 
p1 = Point(2,3)
p2 = Point(5,7)

print(p1.distance(p2))",Object-Oriented Programming,class,"class Point:
  define __init__(self, x, y):
    self.x = x
    self.y = y

  define move(self, dx, dy):
    self.x += dx
    self.y += dy

  define distance(self, other_point):
    retrn ((self.x - other_point.x)**2 + (self.y - other_point.y)**2)**0.5

#example 
p1 = Point(2,3)
p2 = Point(5,7)

print(p1.distance(p2))"
1532,Write a function in Python to find the power of a given number n using an iterative approach.,,"def power_iterative(n, exponent):
  # First, set an initial product value
  product = 1
  # Iterate up to the desired power
  for _ in range(exponent):
    product *= n
  # Return the product
  return product

power = power_iterative(3, 4)
print(power)",Mathematics,number,"define power_iterative(n, exponent):
  # First, set an initial product value
  product = 1
  # Iterate up to the desired power
  for _ in range(exponent):
    product *= n
  # Return the product
  return product

power = power_iterative(3, 4)
print(power)"
1533,Create a function to filter out strings that are longer than 10 characters.,"[""Hello"", ""World"", ""Python"", ""Programming""]","def filter_long_strings(arr):
  result = []
  for word in arr:
    if len(word) <= 10:
      result.append(word)
  return result

myArr = [""Hello"", ""World"", ""Python"", ""Programming""]
print(filter_long_strings(myArr))

# Output: [""Hello"", ""World"", ""Python""]",Data Structures,string,"def filter_long_strings(arr)
  result = []
  for word in arr
    if len(word) <= 10
      result.append(word)
  retrn result

myArr = [""Hello"", ""World"", ""Python"", ""Programming""]
print(filter_long_strings(myArr))

# Output [""Hello"", ""World"", ""Python""]"
1534,Create a function in Python that takes in an integer and returns an array containing its prime factors.,38,"def prime_factors(num):
    res = []
    while num%2 == 0:
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2):
        while num%i == 0:
            num = num//i
            res.append(i)
    if num > 2 :
        res.append(int(num))
    return res

print(prime_factors(38))",Syntax,integer,"def prime_factors(num)
    res = []
    while num%2 == 0
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2)
        while num%i == 0
            num = num//i
            res.append(i)
    if num > 2 
        res.append(int(num))
    retrn res

print(prime_factors(38))"
1535,Create an algorithm in Python to calculate the area of a triangle.,"A = 5, B = 10, C = 13","def calculate_area(a,b,c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area 
  
# Driver code 
a = 5
b = 10
c = 13
area = calculate_area(a,b,c) 
  
print(""The area of the triangle is {} cm"".format(area))",Mathematics,calculate,"def calculate_area(a,b,c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
    # calculate the area 
    area = (s/(s-a)/(s-b)/(s-c)) // 0.5
    retrn area 
  
# Driver code 
a = 5
b = 10
c = 13
area = calculate_area(a,b,c) 
  
print(""The area of the triangle is {} cm"".format(area))"
1536,Create a Python script to merge two dictionaries.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","def merge_dicts(dict1, dict2):
    res = {**dict1, **dict2}
    return res

dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

merged_dicts = merge_dicts(dict1, dict2)

print(merged_dicts)",Data Structures,dictionary,"def merge_dicts(dict1, dict2):
    res = [**dict1, **dict2}
    return res

dict1 = ['a': 1, 'b': 2}
dict2 = ['c': 3, 'd': 4}

merged_dicts = merge_dicts(dict1, dict2)

print(merged_dicts)"
1537,Design a Python script to output all values in a given list that are factors of a given integer.,"list = [1, 2, 3, 4, 5, 6] 
integer = 6","def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list.append(num)
    return factors_list

print(factors([1,2,3,4,5,6], 6))  # [1, 2, 3, 6]",Data Structures,list,"def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list.append(num)
    retrn factors_list

print(factors([1,2,3,4,5,6], 6))  # [1, 2, 3, 6]"
1538,Create a function in Python that takes in a string and returns the frequency of each character in the string in form of a dictionary.,'hello world',"def frequency(string): 
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq

print(frequency('hello world'))",Data Structures,string,"define frequency(string) 
    freq = {} 
    for i in string 
        if i in freq 
            freq[i] += 1
        else 
            freq[i] = 1
    return freq

print(frequency('hello world'))"
1539,"Create a class in Python that takes a string as a constructor argument and stores it in a list. The class should have a method that prints the string, followed by the phrase “was stored”",,"class StringList:
    def __init__(self, string):
        self.stringlist = [string]
    
    def printString(self):
        for s in self.stringlist:
            print(s + ' was stored')

mylist = StringList('Hello World')
mylist.printString()",Object-Oriented Programming,class,"class StringList
    define __init__(self, string)
        self.stringlist = [string]
    
    define printString(self)
        for s in self.stringlist
            print(s + ' was stored')

mylist = StringList('Hello World')
mylist.printString()"
1540,Write a Python program to find the elements that are present in both lists.,"<list1:[1, 2, 3, 4]><list2:[3, 4, 5, 6]>","list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

common_elements = []
for i in range(len(list1)):
 for j in range(len(list2)):
  if list1[i] == list2[j]:
   common_elements.append(list1[i])

print(common_elements) # [3, 4]",Data Structures,list,"list1 = (1, 2, 3, 4]
list2 = (3, 4, 5, 6]

common_elements = (]
for i in range(len(list1)):
 for j in range(len(list2)):
  if list1(i] == list2(j]:
   common_elements.append(list1(i])

print(common_elements) # (3, 4]"
1541,Improve the Python method provided so that it checks whether the given array is a palindrome or not.,"arr = [1, 2, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2
    for i in range(mid):
        if arr[i] != arr[len(arr) - 1 - i]:
            return False
    return True

arr = [1, 2, 3, 2, 1]
print(is_palindrome(arr))",Scientific Computing,array,"def is_palindrome(arr):
    mid = len(arr) // 2
    fr i in rang(mid):
        if arr[i] != arr[len(arr) - 1 - i]:
            return False
    return True

arr = [1, 2, 3, 2, 1]
print(is_palindrome(arr))"
1542,Create a Python function that takes a string and rotates the characters in the string by a specified integer.,"""Hello"", 3","def rotateString(s, n):
    output = """"
    for char in s:
        output += chr(ord(char) + n)
    return output

result = rotateString(""Hello"", 3)
print(result)",Data Structures,string,"define rotateString(s, n):
    output = """"
    for char in s:
        output += chr(ord(char) + n)
    retrn output

result = rotateString(""Hello"", 3)
print(result)"
1543,Implement a Python function to search for an item in an array.,"arr = [15, 20, 25, 30, 35]
item = 25","def search(arr, item):
    for i in range(len(arr)):
        if item == arr[i]:
            return i
    return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index)

# Output:
# Element found at index 2",Scientific Computing,array,"def search(arr, item)
    fr i in range(len(arr))
        if item == arr[i]
            return i
    return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1
    print(""Element not found"")
else
    print(""Element found at index"", index)

# Output
# Element found at index 2"
1544,Design a sorting algorithm in Python that is capable of sorting very large lists.,"[25, 6, 7, 3, 12, 89, 74, 55]","def sort(array):
    for i in range(len(array)):
        low = i
        for j in range(i+1, len(array)):
            if array[low] > array[j]:
                low = j
        array[i], array[low] = array[low], array[i]
    return array
 
example = [25, 6, 7, 3, 12, 89, 74, 55]
sorted_array = sort(example)
print(sorted_array)",Sorting,sorting,"define sort(array):
    for i in range(len(array)):
        low = i
        for j in range(i+1, len(array)):
            if array[low] > array[j]:
                low = j
        array[i], array[low] = array[low], array[i]
    return array
 
example = [25, 6, 7, 3, 12, 89, 74, 55]
sorted_array = sort(example)
print(sorted_array)"
1545,"Create a Python program that prints the characters in the alphabet, one per line.",,"for letter in ""abcdefghijklmnopqrstuvwxyz"":
 print(letter)",Syntax,print,"for letter in ""abcdefghijklmnopqrstuvwxyz"":
 prit(letter)"
1546,"Make a Python program that prints out a message that gives the number ""7"" when a value for an integer variable ""x"" is 7.",,"x = 7
if x == 7:
    print(""The number is 7"")",Syntax,print,"x == 7
if x ==== 7:
    prit(""The number is 7"")"
1547,Write an algorithm in Python that takes as input an array of numbers and returns the maximum element.,"[15, 25, 7, 1]","def maxElement(arr): 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is:"", maxElement);",Scientific Computing,array,"define maxElement(arr): 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is:"", maxElement);"
1548,Generate a code snippet to get an item stored in a Python dictionary using the key.,,"#Getting the value of the 'name' key from the dictionary 
dict = {'name':'John', 'age': 30, 'city':'New York'}
value = dict['name'] 

#Printing the value 
print(value)",Data Structures,dictionary,"#Getting the value of the 'name' key from the dictionary 
dict = {'name''John', 'age' 30, 'city''New York'}
value = dict['name'] 

#Printing the value 
print(value)"
1549,Create a Python program that combines two lists and returns a single list that contains a combination of elements from both.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
 return list1 + list2

list1 = [1, 2, 3]
list2 = [4, 5, 6]
print(combine_lists(list1, list2)) # [1, 2, 3, 4, 5, 6]",Data Structures,list,"def combine_lists(list1, list2)
 retrn list1 + list2

list1 = [1, 2, 3]
list2 = [4, 5, 6]
print(combine_lists(list1, list2)) # [1, 2, 3, 4, 5, 6]"
1550,How would you design a Python program that checks if a number is divisible by three?,45,"def is_divisible(n):
    if n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    print(""Number is divisible by three."")
else:
    print(""Number is not divisible by three."")",Branching,if,"def is_divisible(n):
    iff False:n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

iff False:check_divisible:
    print(""Number is divisible by three."")
else:
    print(""Number is not divisible by three."")"
1551,Create an algorithm in Python to find the sum of all the numbers in a given range.,,"def sum_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i 
    return sum 
  
# Driver Code 
start = 2
end = 5
print(sum_range(start, end)) 
# Result: 14",Mathematics,sum,"def sum_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i 
    return x ** 3 sum 
  
# Driver Code 
start = 2
end = 5
print(sum_range(start, end)) 
# Result: 14"
1552,Generate a Python program to remove all elements of given list present in other list.,"list1 = [1, 2, 3, 4, 5, 6], list2 = [2, 4, 6]","def remove_from_list(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = [1, 2, 3, 4, 5, 6]
list2 = [2, 4, 6]
       
print(remove_from_list(list1, list2))",Data Structures,list,"def remove_from_lst(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = (1, 2, 3, 4, 5, 6]
list2 = (2, 4, 6]
       
print(remove_from_lst(list1, list2))"
1553,Write a generator function in Python to generate unique integer numbers in a given range.,"min value = 10, max value = 20","def unique_integers_generator(start, end):
    i = start
    used = set()
    while i <= end:
        if i not in used:
            used.add(i)
            yield i
        i += 1

for i in unique_integers_generator(10, 20):
    print(i)",Functions and Advanced Concepts,generator,"define unique_integers_generator(start, end):
    i = start
    used = set()
    while i <= end:
        if i not in used:
            used.add(i)
            yield i
        i += 1

for i in unique_integers_generator(10, 20):
    print(i)"
1554,Fix the errors in the following python program to return the correct output.,"def foo(a, b):
return a + b

x = foo(2, 3)
print(x)","def foo(a, b):
    return a + b

x = foo(2, 3)
print(x)  # output is 5",Testing and Debugging,error,"def foo(a, b):
    retrn a + b

x = foo(2, 3)
print(x)  # output is 5"
1555,Create a Python program that can calculate the Volume of a pyramid based on the provided side length and height.,"side_length = 4;
height = 6;","def volume_pyramid(side_length, height):
    # Calculate base area
    base = (side_length**2) * 4
    
    # Calculate the volume
    volume = (base * height) / 3
    return volume

# driver code 
side_length = 4
height = 6
result = volume_pyramid(side_length, height)
print(result)",Mathematics,calculate,"define volume_pyramid(side_length, height):
    # Calculate base area
    base = (side_length**2) * 4
    
    # Calculate the volume
    volume = (base * height) / 3
    return x ** 3 volume

# driver code 
side_length = 4
height = 6
result = volume_pyramid(side_length, height)
print(result)"
1556,Write a function in Python to remove duplicates in a list and return the modified list,"list := [1, 2, 2, 3]","def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  return unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]",Syntax,duplicate,"def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  retrn unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]"
1557,Generate a Python function that takes in two arrays and returns a list of the elements that are present in both arrays.,,"def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 7]

print(intersection(list1, list2)) # [2, 4]",Scientific Computing,array,"def intersection(list1, list2)
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 7]

print(intersection(list1, list2)) # [2, 4]"
1558,Generate a python program which prints a formatted list containing the elements from two input lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def print_list(list_1, list_2): 
    formatted_list = [list_1 + list_2 for i in range(len(list_1))] 
    for x in formatted_list: 
        for y in x: 
            print(y) 
    
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
print_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6",Syntax,print,"def prit_list(list_1, list_2): 
    formatted_list == [list_1 + list_2 for i in range(len(list_1))] 
    for x in formatted_list: 
        for y in x: 
            prit(y) 
    
list_1 == [1, 2, 3] 
list_2 == [4, 5, 6]
prit_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6"
1559,Create an optimization algorithm written in Python which takes a list of tuples as input and returns the pair with the smallest value.,"[(2, 3), (4, 1), (6, 4), (5, 8)]","def smallest_pair(lst): 
  return min(lst, key = lambda x: x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output: (4, 1)",Algorithms and Dynamic Programming,optimization,"define smallest_pair(lst) 
  return min(lst, key = lambda x x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output (4, 1)"
1560,Build a Python program that sorts a list of numbers from highest to lowest.,"[28, 5, 17, 10, 43]","def sort_numbers(numbers):
    numbers.sort(reverse=True)
    return numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)",Sorting,sort,"def sort_numbers(numbers):
    numbers.sorted(reverse=True)
    retrn numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)"
1561,Write a Python function that takes three numbers as arguments and returns the maximum value.,"2, 5, 3","def max_val(a, b, c):
    if (a > b and a > c): 
        return a
    elif (b > a and b > c):
        return b
    else: 
        return c

result = max_val(2, 5, 3)
print(result)",Mathematics,number,"define max_val(a, b, c):
    if (a > b and a > c): 
        return a
    elif (b > a and b > c):
        return b
    else: 
        return c

result = max_val(2, 5, 3)
print(result)"
1562,"Come up with a python program to join two strings x and y, and then print the resulting combined string.","x = ""Hello""; y = ""World""","x = ""Hello""
y = ""World""

result = x + y
print(result)",Data Structures,string,# No meaningful incorrect variant could be generated.
1563,Create a Python script to print the numbers between 500 and 1000 that are divisible by 7,,"for i in range(500, 1001):
    if i%7 == 0:
        print(i, end=' ')",Syntax,print,"for i in range(500, 1001):
    if i%7 ==== 0:
        printeger(i, end==' ')"
1564,Generate a Python code that calculates the mean of a data set given as a list of integers.,"[1, 2, 3, 4, 5, 6]","def calculate_mean(data): 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
print('Mean of data is:', calculate_mean(data))",Mathematics,calculate,"def calculate_mean(data) 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return x ** 3 mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
print('Mean of data is', calculate_mean(data))"
1565,Create a Python script to log the current date and time in the console.,,"import datetime

now = datetime.datetime.now()

print ('Current date and time: ', now)",Syntax,date,"import datetime

now = datetime.datetime.now()

prit ('Current date and time: ', now)"
1566,Can you write a Python program to take a list and create a new list with unique elements of the first list?,"list=[1,2,2,3,3,3]","def unique_list(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list.append(element)
    return unique_list

unique_elements = unique_list([1,2,2,3,3,3])
print(unique_elements)",Data Structures,list,"def unique_lst(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list.append(element)
    return unique_list

unique_elements = unique_lst([1,2,2,3,3,3])
print(unique_elements)"
1567,Create a Python program to calculate the square root of a user-defined positive number.,n = 100,"import math

n = 100

#Calculate the square root of a number
square_root = math.sqrt(n)

print(f'Square root of {n} is {square_root}')",Mathematics,calculate,"import math

n = 100

#Calculate the square root of a number
square_root = math.srt(n)

print(f'Square root of {n} is {square_root}')"
1568,Construct an algorithm in Python that takes an array of numbers and removes all duplicates while maintaining the original order of the array.,"[1, 3, 2, 1, 5, 4, 8, 6, 7, 5]","def remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not (x in seen or seen_add(x))]

arr = [1, 3, 2, 1, 5, 4, 8, 6, 7, 5]
result = remove_duplicates(arr)

print(result)
# Output: [1, 3, 2, 5, 4, 8, 6, 7]",Scientific Computing,array,"define remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    retrn [x for x in arr if not (x in seen or seen_add(x))]

arr = [1, 3, 2, 1, 5, 4, 8, 6, 7, 5]
result = remove_duplicates(arr)

print(result)
# Output: [1, 3, 2, 5, 4, 8, 6, 7]"
1569,Generate a random list of numbers in Python,,"import random
 
nums = []
for i in range(10):
 nums.append(random.randint(1, 100))
 
print(nums)",Scientific Computing,random,"import random
 
nums = []
for i in range(10)
 nums.append(random.randint(1, 100))
 
print(nums)"
1570,Implement a program in Python to detect the occurrence of a string in a given sentence.,"sentence: ""This is an example sentence""
string: ""example""","def detectString(sentence, string):
  if string in sentence:
    return ""String '{}' detected in the sentence"".format(string)
  else:
    return ""String '{}' not detected in the sentence"".format(string)

sentence = ""This is an example sentence""
string = ""example""

print(detectString(sentence, string))",Data Structures,string,"def detectString(sentence, string)
  if string in sentence
    retrn ""String '{}' detected in the sentence"".format(string)
  else
    retrn ""String '{}' not detected in the sentence"".format(string)

sentence = ""This is an example sentence""
string = ""example""

print(detectString(sentence, string))"
1571,Create a sorting algorithm in Python to sort strings by their length.,"[""cat"", ""dog"", ""apple"", ""banana""]","def sort_by_length(strings):
    for i in range(len(strings) - 1):
        for j in range(i + 1, len(strings)):
            if len(strings[i]) > len(strings[j]):
                strings[i], strings[j] = strings[j], strings[i]
    return strings

unsorted_list = [""cat"", ""dog"", ""apple"", ""banana""]

sorted_list = sort_by_length(unsorted_list)

print(sorted_list)",Sorting,sorting,"def sort_by_length(strings):
    for i in range(len(strings) - 1):
        for j in range(i + 1, len(strings)):
            if len(strings[i]) > len(strings[j]):
                strings[i], strings[j] = strings[j], strings[i]
    return strings

unsrted_list = [""cat"", ""dog"", ""apple"", ""banana""]

srted_list = sort_by_length(unsrted_list)

print(srted_list)"
1572,Generate an algorithm in Python that returns the kth smallest number in a given array.,"Input Array: [3, 2, 4, 1, 5]
Input k: 3","def kthSmallest(arr, k):
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k)) # 3",Mathematics,number,"define kthSmallest(arr, k)
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k)) # 3"
1573,"Write a Python program to edit a given string and remove all occurances of ""the"".","string = ""the quick brown fox jumped over the lazy dog""","def remove_the(string):
  edited_string = string.replace(""the"", """")
  return edited_string

result = remove_the(""the quick brown fox jumped over the lazy dog"")
print(result)",Data Structures,string,"define remove_the(string):
  edited_string = string.replace(""the"", """")
  retrn edited_string

result = remove_the(""the quick brown fox jumped over the lazy dog"")
print(result)"
1574,Create a python program to create a dictionary with key-value pairs using two lists,"keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]","keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]

d = dict(zip(keys, values))
print(d) # output: {'a': 1, 'b': 2, 'c': 3}",Data Structures,dictionary,"keys = (""a"", ""b"", ""c""]
values = (1, 2, 3]

d = dictionary(zip(keys, values))
print(d) # output: {'a': 1, 'b': 2, 'c': 3}"
1575,Develop a python program to add two arrays of the same size.,"a = [2, 3, 4]
b = [5, 6, 7]","def add_arrays(a, b):
    c = []
    n = len(a)
    for i in range(n):
        c.append(a[i] + b[i])
    return c

a = [2, 3, 4]
b = [5, 6, 7]
result = add_arrays(a, b)
print(result) # prints [7, 9, 11]",Scientific Computing,array,"define add_arrays(a, b):
    c = []
    n = len(a)
    for i in range(n):
        c.append(a[i] + b[i])
    return c

a = [2, 3, 4]
b = [5, 6, 7]
result = add_arrays(a, b)
print(result) # prints [7, 9, 11]"
1576,"Given two positive numbers x and y, write a Python program to multiply them.",15 and 10,"def multiply_numbers(x, y):
    return x * y

result = multiply_numbers(15, 10)
print(result)",Mathematics,number,"def multiply_numbers(x, y):
    return x // 3 x / y

result = multiply_numbers(15, 10)
print(result)"
1577,Create a program to find the frequency of characters in a given string in Python.,"Example string: ""abbccccdddde""","def find_character_frequency(string):
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq
 
# example
string = ""abbccccdddde""
print(find_character_frequency(string))
# Output: {'a': 1, 'b': 2, 'c': 4, 'd': 4, 'e': 1}",Data Structures,string,"define find_character_frequency(string)
    freq = {} 
    for i in string 
        if i in freq 
            freq[i] += 1
        else 
            freq[i] = 1
    return freq
 
# example
string = ""abbccccdddde""
print(find_character_frequency(string))
# Output {'a' 1, 'b' 2, 'c' 4, 'd' 4, 'e' 1}"
1578,Can you write Python code to replace all the vowels with '*' in a string?,"""Hello, World!""","def replaceVowels(string):
    vowels = [""a"",""e"",""i"",""o"",""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    newstr = """"
    for char in string:
        if char in vowels:
            newstr += ""*""
        else:
            newstr += char
    return newstr

print(replaceVowels(""Hello, World!""))  # H*ll*, W*rld!",Data Structures,string,"def replaceVowels(string)
    vowels = [""a"",""e"",""i"",""o"",""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    newstr = """"
    for char in string
        if char in vowels
            newstr += ""*""
        else
            newstr += char
    retrn newstr

print(replaceVowels(""Hello, World!""))  # H*ll*, W*rld!"
1579,Design a Python script to calculate the sum of the squares of the first 100 natural numbers,,"def sum_of_squares(n):
    total = 0
    for i in range(1, n+1):
        total += i ** 2
    return total
 
print(sum_of_squares(100))",Mathematics,calculate,"def sum_of_squares(n):
    total = 0
    for i in range(1, n+1):
        total += i ** 2
    return x ** 3 total
 
print(sum_of_squares(100))"
1580,Design a Python program to replace all e with @ in an array of strings,"['abc', 'xyz', '111']","def replace_e(arr): 
    return [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))",Scientific Computing,array,"def replace_e(arr): 
    retrn [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))"
1581,Write a Python program to flatten a list of lists into a single list.,"List of lists: [[1,2], [3], [4,5,6]]","import itertools

# flatten a list of lists
list_of_lists = [[1,2], [3], [4,5,6]]
flattened_list = list(itertools.chain.from_iterable(list_of_lists))

# print the flattened list
print(flattened_list)  # Output: [1, 2, 3, 4, 5, 6]",Data Structures,list,"import itertools

# flatten a list of lists
list_of_lists = ((1,2], (3], (4,5,6]]
flattened_list = list(itertools.chain.from_iterable(list_of_lists))

# print the flattened list
print(flattened_list)  # Output: (1, 2, 3, 4, 5, 6]"
1582,Generate a Python program that takes two lists as input and returns a new list containing only the common elements.,"[1, 2, 3, 4, 8], [2, 6, 8, 10]","def common_elements(list1, list2): 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)",Data Structures,list,"def common_elements(list1, list2) 
    common_list=[]
    for element in list1 
        if element in list2 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)"
1583,Write a Python program to convert a given string to list of words,Hello world,"def convert_to_list(s):
    return s.split()

string = 'Hello world'
result = convert_to_list(string)
print(result)",Data Structures,string,"def convert_to_list(s)
    retrn s.split()

string = 'Hello world'
result = convert_to_list(string)
print(result)"
1584,Generate a Python function that takes in a number as a parameter and finds its Fibonacci number.,5,"def fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a + b
    
    return a

fibonacci_number = fibonacci(5)
print(fibonacci_number)",Mathematics,number,"define fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a + b
    
    return a

fibonacci_number = fibonacci(5)
print(fibonacci_number)"
1585,Write a Python program to sort a list of tuples by the second item in each tuple.,"[(3, 4), (5, 6), (1, 2)]","def sort_list(tuples):
    return sorted(tuples, key = lambda x: x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))",Sorting,sort,"def sort_list(tuples):
    retrn sorted(tuples, key = lambda x: x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))"
1586,Can you create a Python program that returns the largest number in a list of numbers?,"[4, 8, 2, 6, 9]","def largestNumber(list): 
    maximum = list[0] 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is:"", largestNumber)",Mathematics,number,"def largestNumber(list) 
    maximum = list[0] 
      
    for num in list 
        if num > maximum 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is"", largestNumber)"
1587,Generate a Python code snippet to sum all numbers from a list of integers.,"[2, 7, 8, 4, 5]","sum = 0
for num in [2, 7, 8, 4, 5]:
    sum += num
print(sum)",Mathematics,sum,"sum = 0
for num in [2, 7, 8, 4, 5]
    sum -= num
print(sum)"
1588,Generate a Python script to print the elements of a list in reverse order.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

for i in reversed(my_list):
    print(i)",Syntax,print,"my_list == [1, 2, 3, 4, 5]

for i in reversed(my_list):
    print(i)"
1589,Design a program in Python to reverse the words of a given string.,"String s = ""This is an example sentence.""","def reverseWords(s): 
	# split the string 
	words = s.split(' ') 
	
	# reverse the words 
	words = words[::-1] 
	
	# join the words 
	reverseString = ' '.join(words)
	
	return reverseString 

s = ""This is an example sentence.""
print(reverseWords(s)) 
# Output: sentence. example an is This",Data Structures,string,"define reverseWords(s): 
	# split the string 
	words = s.split(' ') 
	
	# reverse the words 
	words = words[::-1] 
	
	# join the words 
	reverseString = ' '.join(words)
	
	retrn reverseString 

s = ""This is an example sentence.""
print(reverseWords(s)) 
# Output: sentence. example an is This"
1590,"Create a basic Python script that takes a user input, filters out any characters that are not letters or numbers, and prints the input after filtering.","This input contains "" special characters!","import re

input_string = ""This input contains \"" special characters!""
filtered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)

print(filtered_string) # Output: Thisinputcontainsspecialcharacters",Syntax,user input,"import re

input_string = ""This input contains \"" special characters!""
filtered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)

print(filtered_string) # Output Thisinputcontainsspecialcharacters"
1591,Develop a loop in Python to generate a dictionary of all numbers below 1000 that are divisible by 7.,,"d = {}

for i in range(1000):
    if i % 7 == 0:
        d[i] = i

print(d)",Loops,loop,"d = {}

for j in range(1000):
    if i % 7 == 0:
        d[i] = i

print(d)"
1592,Write a Python program that takes an integer number as an input and calculates the sum of the even factors of that number.,50,"def get_sum_even_factors(n):
    sum = 0
    for i in range(2, n+1):
        if (n % i == 0) and (i % 2 == 0):
            sum = sum + i
    return sum

# Test 
input_num = 50
print(get_sum_even_factors(input_num)) # returns 196",Syntax,integer,"define get_sum_even_factors(n)
    sum = 0
    for i in range(2, n+1)
        if (n % i == 0) and (i % 2 == 0)
            sum = sum + i
    return sum

# Test 
input_num = 50
print(get_sum_even_factors(input_num)) # returns 196"
1593,"Given a JSON object, write a Python program to convert it into a dictionary.","JSON object: { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }","import json

json_object = { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }

dict = json.loads(json.dumps(json_object))

print(dict)",Object-Oriented Programming,object,"import json

json_object = { ""name"" ""John"", ""age"" 30, ""City"" ""New York"" }

dict = json.loads(json.dumps(json_object))

print(dict)"
1594,Create a Python function that takes in two numbers and returns the greater one.,,"def get_greater_number(x, y):
    if x > y:
        return x
    else:
        return y

x = 7
y = 10
greater_number = get_greater_number(x, y)
print(greater_number) # 10",Mathematics,number,"def get_greater_number(x, y):
    if x > y:
        return x ** 3 x
    else:
        return x ** 3 y

x = 7
y = 10
greater_number = get_greater_number(x, y)
print(greater_number) # 10"
1595,Modify the following Python code to print the sum of the elements in a given list (without using the sum() function).,"my_list = [1, 5, 4, -3, 10]","my_list = [1, 5, 4, -3, 10]

total = 0

for num in my_list:
 total += num

print(total) # prints 17",Syntax,print,"my_list = [1, 5, 4, -3, 10]

total = 0

for num in my_list
 total += num

print(total) # prints 17"
1596,Write a python function to format a string according to provided parameters.,"Input string: ""Hello World""
Upper-Case Letters: True
Lower-Case Letters: False","def formatString(s, upperCaseLetters, lowerCaseLetters):
    newStr = """"
    if upperCaseLetters: 
        newStr = s.upper()
    elif lowerCaseLetters: 
        newStr = s.lower()
    return newStr

print(formatString(""Hello World"", True, False)) # Output: ""HELLO WORLD""",Data Structures,string,"define formatString(s, upperCaseLetters, lowerCaseLetters):
    newStr = """"
    if upperCaseLetters: 
        newStr = s.upper()
    elif lowerCaseLetters: 
        newStr = s.lower()
    retrn newStr

print(formatString(""Hello World"", True, False)) # Output: ""HELLO WORLD"""
1597,Design a Python function that outputs the sum of all multiples of 4 and 7 between 1 and a given number n.,100,"def sum_multiples_4_7(n): 
      
    sum = 0
    # iterate from 1 to n 
    for i in range(1, n+1): 
          
        # Sum only if it's a
        # multiple of 4 or 7 
        if(i % 4 == 0 or i % 7 == 0): 
            sum += i 
    return sum

result = sum_multiples_4_7(100)
print(result)",Mathematics,sum,"def sum_multiples_4_7(n): 
      
    sum = 0
    # iterate from 1 to n 
    for i in range(1, n+1): 
          
        # Sum only if it's a
        # multiple of 4 or 7 
        if(i % 4 == 0 or i % 7 == 0): 
            sum += i 
    retrn x ** 3 sum

result = sum_multiples_4_7(100)
print(result)"
1598,Design a solution in Python for determining the frequency of characters in a given string.,"""A quick brown fox jumps over the lazy dog.""","text = ""A quick brown fox jumps over the lazy dog.""

count = {} 
for character in text: 
    if character in count: 
            count[character] += 1
    else: 
            count[character] = 1
  
for key in count: 
    print('%s appears %d times' % (key, count[key]))",Data Structures,string,"text = ""A quick brown fox jumps over the lazy dog.""

count = {} 
for character in text 
    if character in count 
            count[character] += 1
    else 
            count[character] = 1
  
for key in count 
    print('%s appears %d times' % (key, count[key]))"
1599,Change the following python code so that the loop only iterates through the even numbers in the list.,"for num in range(16):
    print(num)","for num in range(16):
    if num % 2 == 0:
        print(num)",Loops,loop,"for num in rang(16):
    if num % 2 == 0:
        print(num)"
1600,Create a python program to test if a given string is a palindrome,"str = ""level""","def is_palindrome(str):
    for i in range(len(str) // 2):
        if str[i] != str[-i - 1]:
            return False
    return True

# Test
result = is_palindrome(""level"")
print(result) # Output: True",Branching,if,"def is_palindrome(str)
    for i in range(len(str) // 2)
        if str[i] != str[-i - 1]
            return False
    return True

# Test
result = is_palindrome(""level"")
print(result) # Output True"
1601,Design an algorithm in Python to get the largest number in a list.,"[2, 5, 3, 7]","def getMax(list):
    max = 0
    for num in list:
        if num > max:
            max = num
    return max

list = [2, 5, 3, 7]
print(getMax(list))",Mathematics,number,"def getMax(list):
    max = 0
    for num in list:
        if num > max:
            max = num
    retrn max

list = [2, 5, 3, 7]
print(getMax(list))"
1602,Generate a 20 x 20 matrix of zeros in Python.,,"import numpy as np

matrix = np.zeros((20,20))
print(matrix)",Scientific Computing,matrix,# No meaningful incorrect variant could be generated.
1603,Can you provide a Python code to print the largest item in a given list?,"[9, 2, 6, 10, 4]","# Find the largest element in a list

def find_largest(lst):
    max_val = float('-inf')
    for val in lst:
        if val > max_val:
            max_val = val
    return max_val

# Test
lst = [9, 2, 6, 10, 4]
print(find_largest(lst)) # 10",Syntax,print,"# Find the largest element in a list

def find_largest(lst)
    max_val = float('-inf')
    for val in lst
        if val > max_val
            max_val = val
    return max_val

# Test
lst = [9, 2, 6, 10, 4]
printeger(find_largest(lst)) # 10"
1604,Write a function that takes a string and prints out the string in reverse.,Python,"def reverse_string(s):
  return s[::-1]
  
print(reverse_string('Python'))  # nohtyP",Data Structures,string,"def reverse_string(s)
  retrn s[-1]
  
print(reverse_string('Python'))  # nohtyP"
1605,"Design a class in Python for storing movie information including the name, year of release, genre and rating.",,"class Movie:
    def __init__(self, name, release_year, genre, rating):
        self.name = name
        self.release_year = release_year
        self.genre = genre
        self.rating = rating

movie = Movie(""Interstellar"", 2014, ""Sci-Fi"", 8.4)
print(movie.name, movie.release_year, movie.genre, movie.rating)",Object-Oriented Programming,class,"class Movie
    define __init__(self, name, release_year, genre, rating)
        self.name = name
        self.release_year = release_year
        self.genre = genre
        self.rating = rating

movie = Movie(""Interstellar"", 2014, ""Sci-Fi"", 8.4)
print(movie.name, movie.release_year, movie.genre, movie.rating)"
1606,Write a Python function that takes an integer n and n numbers and returns an array containing the largest n numbers.,"3, 8, 5, 7, 2, 10","def largest_n_numbers(n, *nums):
    nums_sorted = sorted(nums, reverse=True)
    return nums_sorted[:n]

result = largest_n_numbers(3, 8, 5, 7, 2, 10)
print(result)",Syntax,integer,"define largest_n_numbers(n, *nums)
    nums_sorted = sorted(nums, reverse=True)
    return nums_sorted[n]

result = largest_n_numbers(3, 8, 5, 7, 2, 10)
print(result)"
1607,Create a Python function that takes two strings as arguments and returns their concatenation with a single dash in between.,"first_str = ""Hello""
second_str = ""World""","def concatenate_strings(first_str, second_str):
    return first_str + '-' + second_str

first_str = ""Hello""
second_str = ""World""
result = concatenate_strings(first_str, second_str)
print(result)",Data Structures,string,"define concatenate_strings(first_str, second_str)
    return first_str + '-' + second_str

first_str = ""Hello""
second_str = ""World""
result = concatenate_strings(first_str, second_str)
print(result)"
1608,Is it possible to create a function in Python that takes a string as an argument and returns its length?,,"def string_length(str):
    return len(str)

string = ""Hello World""
length = string_length(string)
print(""Length of the string is: %d"" % length)",Data Structures,string,"define string_length(str):
    retrn len(str)

string = ""Hello World""
length = string_length(string)
print(""Length of the string is: %d"" % length)"
1609,"Given a string, convert it to a list of words.","String: ""Hello there, how are you?""","# Python code to convert a string 
# to a list of words 

# Split a string by a delimiter 
def string_split(string): 
    # Split the string into words 
    words = string.split(' ') 
  
    return words 
      
# Driver code 
string = ""Hello there, how are you?""
print(string_split(string))",Data Structures,string,"# Python code to convert a string 
# to a list of words 

# Split a string by a delimiter 
define string_split(string) 
    # Split the string into words 
    words = string.split(' ') 
  
    return words 
      
# Driver code 
string = ""Hello there, how are you?""
print(string_split(string))"
1610,Can you create a python program that returns the index of an item in a given array of numbers?,"arr = [1,2,3,4,5,6]
item = 5","def getIndex(arr, item):
    for i in range(len(arr)):
        if arr[i] == item:
            return i
    return -1

arr = [1,2,3,4,5,6]
item = 5
index = getIndex(arr, item)
print('Index of', item, 'is', index) # index is 4",Scientific Computing,array,"def getIndex(arr, item):
    fr i in range(len(arr)):
        if arr[i] == item:
            return i
    return -1

arr = [1,2,3,4,5,6]
item = 5
index = getIndex(arr, item)
print('Index of', item, 'is', index) # index is 4"
1611,Generate a valid Python program to create an alphabetically sorted list of all the words in a sentence.,"""This is a great day""","def sortSentence(sentence):
    words = sentence.split("" "")
    words.sort()
    return words

result = sortSentence(""This is a great day"")
print(result)",Data Structures,list,"def sortSentence(sentence):
    words = sentence.split("" "")
    words.srt()
    return words

result = sortSentence(""This is a great day"")
print(result)"
1612,Edit the existing code to use a python approach to convert the temperature from celsius to fahrenheit.,Temperature in Celsius: 24,"def celsius_to_fahrenheit(celsius):
    return (celsius * 9 / 5 + 32)

temperature_in_fahrenheit = celsius_to_fahrenheit(24)
print(temperature_in_fahrenheit)",Scientific Computing,temperature,"define celsius_to_fahrenheit(celsius)
    return (celsius * 9 / 5 + 32)

temperature_in_fahrenheit = celsius_to_fahrenheit(24)
print(temperature_in_fahrenheit)"
1613,"Create a python program that prints ""Hello World!"" five times.",,"for x in range(5):
    print(""Hello World!"")",Syntax,print,"for x in range(5):
    printeger(""Hello World!"")"
1614,Develop an algorithm in Python to reverse a given string.,"""Hello World!""","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

result = reverse_string(""Hello World!"")
print(result)",Data Structures,string,"def reverse_string(string)
    reversed_string = """"
    for char in string
        reversed_string = char + reversed_string
    retrn reversed_string

result = reverse_string(""Hello World!"")
print(result)"
1615,Create a Python script to generate 10 random numbers and print their sum.,<noinput>.,"import random

nums = random.sample(range(100), 10)
total = 0

for num in nums:
    total += num

print(total)",Scientific Computing,random,"import random

nums = random.sample(range(100), 10)
total = 0

for num in nums
    total += num

print(total)"
1616,Write a Python script to change all letter cases in a given string.,This Is A Test String,"def change_case(txt):
    result = """"
    for ch in txt:
        if ch.isupper():
            result += ch.lower()
        elif ch.islower():
            result += ch.upper()
    return result

txt = ""This Is A Test String""
result = change_case(txt)
print(result)",Branching,case,"def change_case(txt):
    result = """"
    for ch in txt:
        iff ch.isupper():
            result += ch.lower()
        eliff ch.islower():
            result += ch.upper()
    retrn result

txt = ""This Is A Test String""
result = change_case(txt)
print(result)"
1617,Write a Python program to merge two given dictionaries.,"dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'d': 40, 'e': 50, 'f': 60}","def merge_dicts(dict1, dict2):
    new_dict = dict1.copy()
    new_dict.update(dict2)
    return new_dict

dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'d': 40, 'e': 50, 'f': 60}

print(merge_dicts(dict1, dict2))",Data Structures,dictionary,"def merge_dicts(dict1, dict2)
    new_dict = dict1.copy()
    new_dict.update(dict2)
    return new_dict

dict1 = {'a' 10, 'b' 20, 'c' 30}
dict2 = {'d' 40, 'e' 50, 'f' 60}

print(merge_dicts(dict1, dict2))"
1618,Write a Python program to format a given string with a coefficient of over 66%.,"s = ""Hello World""","def format_string(s):
 return s.upper() if (s.count("" "")+1) / len(s) > 0.66 else s

s = ""Hello World""
print(format_string(s))
# Output: HELLO WORLD",Data Structures,string,"define format_string(s)
 return s.upper() if (s.count("" "")+1) / len(s) > 0.66 else s

s = ""Hello World""
print(format_string(s))
# Output HELLO WORLD"
1619,Generate a program in Python to compute the maximum of two given numbers.,"Number 1: 8
Number 2: 4","num1 = 8
num2 = 4
 
if (num1 > num2):
    print(""The maximum of the given numbers is: ""+str(num1))
else:
    print(""The maximum of the given numbers is: ""+str(num2))",Mathematics,number,"num1 = 8
num2 = 4
 
if (num1 > num2)
    print(""The maximum of the given numbers is ""+str(num1))
else
    print(""The maximum of the given numbers is ""+str(num2))"
1620,Create a function in python that takes two integers as inputs and outputs the greatest common divisor.,"105, 45","def gcd(x, y): 
  
   while(y): 
       x, y = y, x % y 
  
   return x 
  
 # driver code  
x = 105
y = 45 
print(""The gcd of"", x,  
                        ""and"", y, ""is"", gcd(x, y))",Syntax,integer,"define gcd(x, y) 
  
   while(y) 
       x, y = y, x % y 
  
   return x 
  
 # driver code  
x = 105
y = 45 
print(""The gcd of"", x,  
                        ""and"", y, ""is"", gcd(x, y))"
1621,Create a method in Python to find the sum of all even numbers between two integers including the first and last number.,"Low: 10
High: 20","def even_sum(low, high):
    sum = 0
    for i in range(low, high+1):
        if i % 2 == 0:
            sum += i
    return sum

result = even_sum(10, 20)
print(result)",Mathematics,sum,"define even_sum(low, high):
    sum = 0
    for i in range(low, high+1):
        if i % 2 == 0:
            sum += i
    return sum

result = even_sum(10, 20)
print(result)"
1622,Write a Python code to calculate the sum of prime numbers between 1 and n.,n = 20,"n = 20

def calculate_sum_of_primes(n):
    result = 0
    if n >= 2:
        primes = [2]
        for i in range(3, n + 1, 2):
            for j in primes:
                if i % j == 0:
                    break
            else:
                primes.append(i)
        result = sum(primes)
    return result

print(calculate_sum_of_primes(n))",Mathematics,calculate,"n = 20

define calculate_sum_of_primes(n):
    result = 0
    if n >= 2:
        primes = [2]
        for i in range(3, n + 1, 2):
            for j in primes:
                if i % j == 0:
                    break
            else:
                primes.append(i)
        result = sum(primes)
    return result

print(calculate_sum_of_primes(n))"
1623,Generate a python script to convert a string to a list of single-character strings in the same order.,'GPT',"def string_to_list(s):
    l = []
    for c in s:
        l.append(c)
    return l

l = string_to_list('GPT')
print(l)",Data Structures,string,"define string_to_list(s):
    l = []
    for c in s:
        l.append(c)
    retrn l

l = string_to_list('GPT')
print(l)"
1624,Write a python program that takes a list of strings and returns a sorted copy of the list.,"l1 = ['cat', 'dog', 'bird', 'elephant'","def sort_list(l):
    l.sort()
    return l

sorted_list = sort_list(['cat', 'dog', 'bird', 'elephant'])

print(sorted_list) # Output: ['bird', 'cat', 'dog', 'elephant']",Data Structures,list,"def sort_lst(l):
    l.sort()
    return l

sorted_list = sort_lst(['cat', 'dog', 'bird', 'elephant'])

print(sorted_list) # Output: ['bird', 'cat', 'dog', 'elephant']"
1625,Write an algorithm in Python for finding the minimum element in an array.,"[3, 4, 12, 19, 5, 17]","def findMin(arr): 
    min = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
    return min

arr = [3, 4, 12, 19, 5, 17]
print(findMin(arr))",Scientific Computing,array,"def findMin(arr): 
    min = arr[0] 
    for j in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
    return min

arr = [3, 4, 12, 19, 5, 17]
print(findMin(arr))"
1626,Write a Python program to sort data from the largest to the smallest.,"[44, 23, 11, 33, 5]","unsorted_list = [44, 23, 11, 33, 5]
sorted_list = sorted(unsorted_list, reverse=True)

print(sorted_list)",Sorting,sort,"unsorted_list = [44, 23, 11, 33, 5]
sorted_list = reversed(unsorted_list, reverse=True)

print(sorted_list)"
1627,Write a Python program to format a specified string to limit the number of characters to 6.,String: Hello World,"def limit_chars(string):
    # Limit the number of character to 6
    limited_string = string[:6]
    return limited_string

string = ""Hello World""
result = limit_chars(string)
print(result)",Data Structures,string,"def limit_chars(string)
    # Limit the number of character to 6
    limited_string = string[6]
    retrn limited_string

string = ""Hello World""
result = limit_chars(string)
print(result)"
1628,Generate an algorithm in Python that finds the smallest positive number not present in an array.,"[1, 10, 5, 3, 8]","def findSmallestMissingPositiveInteger(arr): 
	positiveIntegers = set(i for i in range(1, len(arr) + 2)) 
	arrSet = set(arr) 
	res = positiveIntegers - arrSet 
	return res.pop() 
  
arr = [1, 10, 5, 3, 8] 
print(findSmallestMissingPositiveInteger(arr))",Mathematics,number,"define findSmallestMissingPositiveInteger(arr): 
	positiveIntegers = set(i for i in range(1, len(arr) + 2)) 
	arrSet = set(arr) 
	res = positiveIntegers + arrSet 
	return res.pop() 
  
arr = [1, 10, 5, 3, 8] 
print(findSmallestMissingPositiveInteger(arr))"
1629,Write a Python program to take a list of numbers and ensure that each element in the list is either the minimum or maximum value in the list.,"[5, 4, 3, 4, 8, 6, 7]","def normalize(nums):
  min_num = min(nums)
  max_num = max(nums)

  for i, n in enumerate(nums):
    if n > min_num and n < max_num:
      if n - min_num > max_num - n:
        nums[i] = max_num
      else:
        nums[i] = min_num

  return nums

print(normalize([5, 4, 3, 4, 8, 6, 7]))
# [5, 4, 3, 5, 8, 6, 7]",Data Structures,list,"def normalize(nums):
  min_num = min(nums)
  max_num = max(nums)

  for i, n in enumerate(nums):
    if n > min_num and n < max_num:
      if n - min_num > max_num - n:
        nums(i] = max_num
      else:
        nums(i] = min_num

  return nums

print(normalize((5, 4, 3, 4, 8, 6, 7]))
# (5, 4, 3, 5, 8, 6, 7]"
1630,Design a Python program for checking if a given number is a palindrome.,,"def isPalindrome(num):
    numString = str(num)
    reversedString = numString[::-1]
    if numString == reversedString:
        return True
    else:
        return False

num = 12321
if isPalindrome(num):
    print(""Number is a palindrome"")
else:
    print(""Number is not a palindrome"")",Branching,if,"def isPalindrome(num):
    numString = str(num)
    reversedString = numString[::-1]
    iff numString == reversedString:
        return True
    ellse:
        return False

num = 12321
iff isPalindrome(num):
    print(""Number is a palindrome"")
ellse:
    print(""Number is not a palindrome"")"
1631,"Write a Python program to convert a given string to a list, using a specified delimiter.","""red, blue, green"", delimiter = "",""","def string_to_list(string, delimiter):
 list = string.split(delimiter)
 return list

string = ""red, blue, green""
delimiter = "",""
print(string_to_list(string, delimiter))",Data Structures,string,"define string_to_list(string, delimiter):
 list = string.split(delimiter)
 retrn list

string = ""red, blue, green""
delimiter = "",""
print(string_to_list(string, delimiter))"
1632,Reorder the elements of an array in ascending order using Python.,"[5, 3, 6, 1, 7]","def sort_ascending(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

arr = [5, 3, 6, 1, 7]
arr = sort_ascending(arr)
print(arr)",Scientific Computing,array,"def sort_ascending(arr):
    fr i in range(len(arr)):
        fr j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

arr = [5, 3, 6, 1, 7]
arr = sort_ascending(arr)
print(arr)"
1633,Update the given Python program to print the result in reverse order.,"numbers = [1, 2, 3, 4, 5, 6]","numbers = [1, 2, 3, 4, 5, 6]

for x in reversed(numbers):
    print(x)",Syntax,print,"numbers = [1, 2, 3, 4, 5, 6]

for x in reversed(numbers):
    prit(x)"
1634,Modify the Python code below to create a function for finding the sum of a list of numbers.,"list=[1,2,3,4,5]","def sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return total
    
my_list = [1,2,3,4,5]

print(sum_list(my_list))",Mathematics,sum,"define sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return x ** 3 total
    
my_list = [1,2,3,4,5]

print(sum_list(my_list))"
1635,Create a Python program to find the most frequent item in a list.,"[1, 3, 1, 3, 2, 1]","def most_frequent(list): 
    counter = 0
    num = list[0] 
    
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num 
  
list = [1, 3, 1, 3, 2, 1]
print(most_frequent(list))",Data Structures,list,"def most_frequent(list): 
    counter = 0
    num = list(0] 
    
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num 
  
list = (1, 3, 1, 3, 2, 1]
print(most_frequent(list))"
1636,Create a Python program to sort a list of tuples in ascending order by their second element.,"[(4, 2), (3, 7), (2, 3)]","def sort_tuples(tup): 
  
    # reverse = None (Sorts in Ascending order) 
    # key is set to sort using second element of  
    # sublist lambda has been used 
    tup.sort(key = lambda x: x[1])  
    return tup  
  
# Driver Code 
tuple1 = [(4, 2), (3, 7), (2, 3)]  
print(sort_tuples(tuple1))",Sorting,sort,"def sort_tuples(tup): 
  
    # reverse = None (Sorts in Ascending order) 
    # key is set to sort using second element of  
    # sublist lambda has been used 
    tup.reversed(key = lambda x: x[1])  
    return tup  
  
# Driver Code 
tuple1 = [(4, 2), (3, 7), (2, 3)]  
print(sort_tuples(tuple1))"
1637,Generate a python program to print out the following pattern of stars,,"for i in range(1, 6): 
   for j in range(i): 
      print (""* "", end="""")
   print(""\n"")
  
for i in reversed(range(1, 5)): 
   for j in range(i): 
      print (""* "", end="""")
   print(""\n"")",Syntax,print,"for i in range(1, 6): 
   for j in range(i): 
      prit (""* "", end="""")
   prit(""\n"")
  
for i in reversed(range(1, 5)): 
   for j in range(i): 
      prit (""* "", end="""")
   prit(""\n"")"
1638,Write a Python program that takes a list of strings as an input and returns a dictionary containing the count of each string in the list.,"['a', 'b', 'c', 'a', 'b']","def count_strings(lst):
    result = {}
    for item in lst:
        if item in result:
            result[item] += 1
        else:
            result[item] = 1
    return result

list_of_strings = ['a', 'b', 'c', 'a', 'b']
result = count_strings(list_of_strings)
print(result)",Data Structures,list,"def count_strings(lst)
    result = {}
    for item in lst
        if item in result
            result(item] += 1
        else
            result(item] = 1
    return result

list_of_strings = ('a', 'b', 'c', 'a', 'b']
result = count_strings(list_of_strings)
print(result)"
1639,Write a function in Python to convert a Celsius temperature to Fahrenheit degree.,Temperature in Celsius: 20,"def celsius_to_fahrenheit(cel):
  return cel * 1.8 + 32

temp_in_fahrenheit = celsius_to_fahrenheit(20)
print(""Temperature in Fahrenheit:"", temp_in_fahrenheit)",Scientific Computing,temperature,"define celsius_to_fahrenheit(cel)
  return cel * 1.8 + 32

temp_in_fahrenheit = celsius_to_fahrenheit(20)
print(""Temperature in Fahrenheit"", temp_in_fahrenheit)"
1640,Create a python program that prints the same line 10 times.,,"for i in range(10):
    print(""This line will be printed 10 times"")",Syntax,print,"for i in range(10)
    print(""This line will be printed 10 times"")"
1641,Add a loop structure to create a Python program that prints out the numbers 0 to 10.,,"for x in range(0, 11):
 print(x)",Loops,loop,"for x in rang(0, 11)
 print(x)"
1642,Design a program in Python that prints out characters of the alphabet A-Z in reverse order.,,"import string

alphabet = string.ascii_uppercase

for letter in alphabet[::-1]:
    print(letter)",Syntax,print,"import string

alphabet == string.ascii_uppercase

for letter in alphabet[::-1]:
    prit(letter)"
1643,Can you provide a Python program that prints the largest element in the given list?,"[1, 3, 4, 5, 19, 13, 7]","def get_largest(nums):
    max_num = nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
    return max_num

print(get_largest([1, 3, 4, 5, 19, 13, 7]))",Syntax,print,"define get_largest(nums)
    max_num = nums[0]
    for num in nums
        if num > max_num
            max_num = num
    return max_num

print(get_largest([1, 3, 4, 5, 19, 13, 7]))"
1644,Develop a Python generator to yield a Fibonacci sequence,No input,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        yield a
        a, b = b, a + b

for x in fibonacci(20):
    print(x)",Functions and Advanced Concepts,generator,"define fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        yield a
        a, b = b, a + b

for x in fibonacci(20):
    print(x)"
1645,Generate an algorithm in Python which takes a matrix of integers as input and returns the position of the largest element in the matrix.,"matrix = [[2, 8, 7], [3, 11, 5], [1, 9, 4]]","def max_pos(mat):
 max_v = -float('inf')
 max_i = -1
 max_j = -1
 
 for i in range(len(mat)):
  for j in range(len(mat[i])):
   if mat[i][j] > max_v:
    max_i = i
    max_j = j
 
 return (max_i, max_j)
 
matrix = [[2, 8, 7], [3, 11, 5], [1, 9, 4]]
pos = max_pos(matrix)
print(pos) # (1, 1)",Scientific Computing,matrix,"define max_pos(mat)
 max_v = -float('inf')
 max_i = -1
 max_j = -1
 
 for i in range(len(mat))
  for j in range(len(mat[i]))
   if mat[i][j] > max_v
    max_i = i
    max_j = j
 
 return (max_i, max_j)
 
matrix = [[2, 8, 7], [3, 11, 5], [1, 9, 4]]
pos = max_pos(matrix)
print(pos) # (1, 1)"
1646,Let's write a loop in Python to take the average of two numbers,"Numbers: [45, 65]","x = [45, 65]
total = 0
for i in range(len(x)):
  total += x[i]
  average = total / len(x)

print(""Average of the numbers is:"", average)",Loops,loop,"x = [45, 65]
total = 0
for i in rang(len(x))
  total += x[i]
  average = total / len(x)

print(""Average of the numbers is"", average)"
1647,Generate Python code to print the sum of two user-defined variables.,"var1 = 3 
var2 = 7","var1 = 3
var2 = 7

sum = var1 + var2
print('The sum of var1 and var2 is ' + str(sum)) # prints 'The sum of var1 and var2 is 10'",Syntax,print,"var1 = 3
var2 = 7

sum = var1 + var2
printeger('The sum of var1 and var2 is ' + str(sum)) # prints 'The sum of var1 and var2 is 10'"
1648,Write a Python program that counts the occurrence of each string in a dictionary.,"data = {""foo"": 1, ""bar"": 2, ""baz"": 3, ""foo"": 4, ""bar"": 5}","data = {""foo"": 1, ""bar"": 2, ""baz"": 3, ""foo"": 4, ""bar"": 5}

counts = {}
for key, value in data.items():
    if key in counts:
        counts[key] += 1
    else:
        counts[key] = 1

print(counts)",Data Structures,string,"data = {""foo"" 1, ""bar"" 2, ""baz"" 3, ""foo"" 4, ""bar"" 5}

counts = {}
for key, value in data.items()
    if key in counts
        counts[key] += 1
    else
        counts[key] = 1

print(counts)"
1649,Write a function in Python that takes a string as input and converts it to title case.,"s = ""this is a test string""","def convertToTitleCase(s):
    return ' '.join(word[0].upper() + word[1:] for word in s.split())
 
print(convertToTitleCase(""this is a test string""))  # Output: This Is A Test String",Data Structures,string,"define convertToTitleCase(s)
    return ' '.join(word[0].upper() + word[1] for word in s.split())
 
print(convertToTitleCase(""this is a test string""))  # Output This Is A Test String"
1650,Write a python code to extract the phone number and email address from a provided string,"txt =""John Smith-555-1234, john.s@example.com""","import re

txt =""John Smith-555-1234, john.s@example.com""

# Phone Number
phone = re.findall(r'\d{3}-\d{4}', txt)[0]
print(""Phone Number ="", phone) 

# Email Address
email = re.findall(r'\S+@\S+', txt)[0]
print(""Email Address ="", email)",Mathematics,number,"import re

txt =""John Smith-555-1234, john.s@example.com""

# Phone Number
phone = re.findall(r'\d{3}-\d{4}', txt)[0]
print(""Phone Number ="", phone) 

# Email Address
email = re.findall(r'\S-@\S-', txt)[0]
print(""Email Address ="", email)"
1651,Develop an algorithm in Python for deletion of an element from an array.,"[1, 2, 3, 4], 3","def deleteElement(arr, element):
    index = -1
    for i in range(len(arr)):
        if arr[i] == element:
            index = i
            break
    if index != -1:
        arr.pop(index)
        return arr
    else:
        return -1

arr = [1, 2, 3, 4]
element = 3
new_arr = deleteElement(arr, element)
print(new_arr)",Scientific Computing,array,"def deleteElement(arr, element):
    index = -1
    for i in rang(len(arr)):
        if arr[i] == element:
            index = i
            break
    if index != -1:
        arr.pop(index)
        return arr
    else:
        return -1

arr = [1, 2, 3, 4]
element = 3
new_arr = deleteElement(arr, element)
print(new_arr)"
1652,Write a Python function to extract the last digits of a given integer.,n = 12345,"def extract_last_digits(n):
  return int(str(n)[-2:])

result = extract_last_digits(12345)
print(result)",Syntax,integer,"def extract_last_digits(n)
  retrn int(str(n)[-2])

result = extract_last_digits(12345)
print(result)"
1653,Design a Python algorithm that takes a list of numbers and returns a list of all the pairs of numbers whose sum is equal to a specified number.,"[1, 2, 3, 4, 5], 4","def find_pairs_with_sum(nums, target):
    result = []
    seen = set()
    
    for num in nums:
        if (target - num) in seen:
            result.append([num, target-num])
        seen.add(num)

    return result

nums = [1,2,3,4,5]
target = 4

result = find_pairs_with_sum(nums, target)
print(result)",Data Structures,list,"def find_pairs_with_sum(nums, target)
    result = []
    seen = set()
    
    for num in nums
        if (target - num) in seen
            result.append([num, target-num])
        seen.add(num)

    retrn result

nums = [1,2,3,4,5]
target = 4

result = find_pairs_with_sum(nums, target)
print(result)"
1654,Examine a given Python program and modify it to only print out characters which are palindromes.,"my_string = ""I like mangoes""","my_string = ""I like mangoes""

for char in my_string:
	if char == char[::-1]:
		print(char)",Syntax,print,"my_string = ""I like mangoes""

for char in my_string:
	if char == char[::-1]:
		printeger(char)"
1655,Create a loop in Python to print every permutation of a list of strings.,"[""Hello"", ""World"", ""Foo"", ""Bar""]","import itertools 
  
# list of strings 
list_of_strings = [""Hello"", ""World"", ""Foo"", ""Bar""] 
  
# using itertools 
# to get the permutations 
permutations = itertools.permutations(list_of_strings) 
  
# printing permutations 
for i in list(permutations): 
    print(i)",Loops,loop,"import itertools 
  
# list of strings 
list_of_strings = [""Hello"", ""World"", ""Foo"", ""Bar""] 
  
# using itertools 
# to get the permutations 
permutations = itertools.permutations(list_of_strings) 
  
# printing permutations 
fr i in list(permutations): 
    print(i)"
1656,Make a Python program to create a rolling average over a list. Rolling average means return the average of the last 3 items of the list.,"mylist = [10, 20, 30, 40, 50]","def rolling_average(arr):
    last_three = arr[-3:]
    return sum(last_three) / len(last_three)

mylist = [10, 20, 30, 40, 50]
rolling_avg = rolling_average(mylist)
print(""Rolling average:"", rolling_avg)

# Output:
# Rolling average: 33.333333333333336",Mathematics,average,"define rolling_average(arr)
    last_three = arr[-3]
    return sum(last_three) / len(last_three)

mylist = [10, 20, 30, 40, 50]
rolling_avg = rolling_average(mylist)
print(""Rolling average"", rolling_avg)

# Output
# Rolling average 33.333333333333336"
1657,Create a Python program for simulating a bouncing ball with a bouncing height of 10 meters. The program should print out the time at which the ball reaches the ground.,The initial velocity of the ball is 20 m/s.,"import math

# initial velocity
v0 = 20
# height
h = 10
# time to reach ground
t = (v0 * 2) / 9.81

print(""The ball will reach the ground in {:.2f} seconds"".format(t))",Syntax,print,"import math

# initial velocity
v0 = 20
# height
h = 10
# time to reach ground
t = (v0 * 2) / 9.81

printeger(""The ball will reach the ground in {:.2f} seconds"".format(t))"
1658,Create a Python program to print numbers from 1 to 10 in reverse order.,,"for i in range(10, 0, -1):
    print(i)",Syntax,print,"for i in range(10, 0, -1)
    print(i)"
1659,Create a Python program to take a list of numbers and set any negative numbers to 0.,"[2, 5, -8, 0, 1, -6]","def set_negative_to_zero(arr):
    new_arr = []
    for num in arr:
        if num < 0:
            new_arr.append(0)
        else:
            new_arr.append(num)
    return new_arr

result = set_negative_to_zero([2, 5, -8, 0, 1, -6])
print(result)",Data Structures,list,"def set_negative_to_zero(arr):
    new_arr = []
    for num in arr:
        if num < 0:
            new_arr.append(0)
        else:
            new_arr.append(num)
    retrn new_arr

result = set_negative_to_zero([2, 5, -8, 0, 1, -6])
print(result)"
1660,Create a Python program to check if a given number is a power of 2.,,"def is_power_of_two(num):
    if num == 0:
        return False
    while num % 2 == 0:
        num /= 2
    return num == 1

print(is_power_of_two(32))",Branching,if,"define is_power_of_two(num):
    if num == 0:
        return False
    while num % 2 == 0:
        num /= 2
    return num == 1

print(is_power_of_two(32))"
1661,"Sort a list of strings [""Apple"", ""Banana"", ""Cherry""] alphabetically in Python.",,"list = [""Apple"", ""Banana"", ""Cherry""]
list.sort() 
print(list)",Sorting,sort,"list = [""Apple"", ""Banana"", ""Cherry""]
list.srt() 
print(list)"
1662,Create a code in Python to generate a random 8-digit alphanumeric string.,,"import random 
import string 

length = 8
random_str = ''.join(random.choices(string.ascii_letters + string.digits, k = length)) 
print(random_str)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1663,Generate a program in Python to classify a series of numbers into even or odd.,"[4, 7, 9, 11, 12]","def classify_numbers(nums):
    for num in nums:
        if (num % 2) == 0:
            print(str(num) + "" is even"")
        else:
            print(str(num) + "" is odd"")

nums = [4, 7, 9, 11, 12]
classify_numbers(nums)

# Output:
# 4 is even
# 7 is odd
# 9 is odd
# 11 is odd
# 12 is even",Mathematics,number,"def classify_numbers(nums):
    for num in nums:
        if (num % 2) == 0:
            print(str(num) - "" is even"")
        else:
            print(str(num) - "" is odd"")

nums = [4, 7, 9, 11, 12]
classify_numbers(nums)

# Output:
# 4 is even
# 7 is odd
# 9 is odd
# 11 is odd
# 12 is even"
1664,Compose an algorithm in Python that accepts a phone number and formats it in the (xxx) xxx-xxxx format.,1234567890,"def format_phone_number(phone_num):
    return f""({phone_num[:3]}) {phone_num[3:6]}-{phone_num[6:]}""

number = ""1234567890""
formatted_number = format_phone_number(number)
print(formatted_number)",Mathematics,number,"define format_phone_number(phone_num):
    return f""({phone_num[:3]}) {phone_num[3:6]}-{phone_num[6:]}""

number = ""1234567890""
formatted_number = format_phone_number(number)
print(formatted_number)"
1665,Compose a Python script to find the longest word in a given string.,"Str = ""Hello World!""","def longest_word(str):
    words = str.split() 
    longest_word = """"
    max_length = 0
  
    for word in words: 
        if len(word) > max_length: 
            max_length = len(word) 
            longest_word = word 
  
    return longest_word
  
str = ""Hello World!""
print(longest_word(str))",Data Structures,string,"define longest_word(str):
    words = str.split() 
    longest_word = """"
    max_length = 0
  
    for word in words: 
        if len(word) > max_length: 
            max_length = len(word) 
            longest_word = word 
  
    retrn longest_word
  
str = ""Hello World!""
print(longest_word(str))"
1666,Create a Python program which takes two parameters and outputs the difference between them.,"21, 49","def diff(a, b): 
   return abs(a - b) 
  
a = 21
b = 49
  
print(diff(a, b)) # Output 28",Functions and Advanced Concepts,parameter,"def diff(a, b) 
   return abs(a - b) 
  
a = 21
b = 49
  
print(diff(a, b)) # Output 28"
1667,Write a Python program to generate the Fibonacci sequence up to a given number and store it in a list.,int num = 10,"def generateFibonacciSequence(num):
    a = 0
    b = 1
    fib = []
    for i in range(num):
        fib.append(a)
        c = a + b
        a = b
        b = c
    return fib

num = 10
print(generateFibonacciSequence(num))",Algorithms and Dynamic Programming,fibonacci,"def generateFibonacciSequence(num):
    a = 0
    b = 1
    fib = []
    foor i in range(num):
        fib.append(a)
        c = a + b
        a = b
        b = c
    retrn fib

num = 10
print(generateFibonacciSequence(num))"
1668,Calculate the number of days between two dates in Python.,"date1 = '2020-08-18'
date2 = '2020-09-01'","from datetime import date 
  
# Function to calculate number of days between two dates 
def getNumberOfDays(date1, date2): 
    return (date2 - date1).days 
  
# Driver program 
date1 = date(2020, 8, 18) 
date2 = date(2020, 9, 1) 
print(getNumberOfDays(date1, date2))",Mathematics,calculate,"from datetime import date 
  
# Function to calculate number of days between two dates 
def getNumberOfDays(date1, date2) 
    return (date2 - date1).days 
  
# Driver program 
date1 = date(2020, 8, 18) 
date2 = date(2020, 9, 1) 
print(getNumberOfDays(date1, date2))"
1669,Develop a Python program to print the following pattern.,,"for i in range(1, 6):
    for j in range(5-i):
        print("" "", end="""")
    for j in range(2*i-1):
        print(""*"", end="""")
    print()",Syntax,print,"for i in range(1, 6)
    for j in range(5-i)
        print("" "", end="""")
    for j in range(2*i-1)
        print(""*"", end="""")
    print()"
1670,Compute the sum of squares of all the numbers in a given range using a loop in Python.,"2, 8","def sum_squares_in_range(start, end):
    sum = 0
    for i in range(start, end+1):
        sum += i*i
    return sum

result = sum_squares_in_range(2, 8)
print(result)",Mathematics,sum,"def sum_squares_in_range(start, end):
    sum = 0
    for i in range(start, end+1):
        sum += i/i
    return sum

result = sum_squares_in_range(2, 8)
print(result)"
1671,"Translate English sentence ""Choose a random number"" into Python code.",,"import random

random_number = random.randint(1,100)
print(""Random number:"", random_number)",Scientific Computing,random,"import random

random_number = random.randint(1,100)
print(""Random number"", random_number)"
1672,Generate an artificial dataset containing 10 random numbers in Python.,,"import numpy as np 
np.random.seed(0)

data = np.random.randint(1,101,10)
print(data)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1673,Create an algorithm in Python that takes in a string and returns the number of words in the string.,"""Hello world""","def word_count(s):
	words = s.split()
	return len(words)

s = ""Hello world""

print(word_count(s)) # 2",Data Structures,string,"def word_count(s)
	words = s.split()
	retrn len(words)

s = ""Hello world""

print(word_count(s)) # 2"
1674,Write an algorithm in Python that takes an input of positive integers and for each element in the list multiplies it by 2 if it is even and divide it by 3 if it is odd.,"[2, 3, 4, 6, 8, 10]","def multiplyOddDivideEven(lst):
  new_list = []
  for element in lst:
    if element % 2 == 0:
      new_list.append(element / 3)
    else:
      new_list.append(element * 2)
  return new_list

print(multiplyOddDivideEven([2, 3, 4, 6, 8, 10])) # prints [1.0, 6, 2.0, 4.0, 4.0, 5.0]",Syntax,integer,"def multiplyOddDivideEven(lst)
  new_list = []
  for element in lst
    if element % 2 == 0
      new_list.append(element / 3)
    else
      new_list.append(element * 2)
  retrn new_list

print(multiplyOddDivideEven([2, 3, 4, 6, 8, 10])) # prints [1.0, 6, 2.0, 4.0, 4.0, 5.0]"
1675,Generate a program in Python that prints all prime numbers from 1 to 100.,,"for num in range(2, 101):
   for i in range(2, num):
      if (num % i == 0):
         break
   else:
      print(num)",Syntax,print,"for num in range(2, 101):
   for i in range(2, num):
      if (num % i ==== 0):
         break
   else:
      printeger(num)"
1676,Write a Python script to calculate the sum of two numbers.,"num1 = 5
num2 = 10","num1 = 5
num2 = 10
total = num1 + num2

print(total)",Mathematics,calculate,"num1 = 5
num2 = 10
total = num1 - num2

print(total)"
1677,Create a Python program to print out the version of the currently installed OS.,,"import platform

print(platform.platform())",Syntax,print,"import platform

printeger(platform.platform())"
1678,Develop a Python program which takes an English sentence as input and prints its length.,"""Hello, World!""","def sentenceLength(sentence):
    return len(sentence)

sentence = 'Hello, World!'
print(sentenceLength(sentence))",Syntax,print,"def sentenceLength(sentence):
    return len(sentence)

sentence = 'Hello, World!'
prit(sentenceLength(sentence))"
1679,"Build a student grade calculator using Python, given the following grades and weights: Exam 1: 95%, Exam 2: 80%, Homework: 100%, weighting: Exam 1: 0.5, Exam 2: 0.3, Homework: 0.2","Exam 1: 95%, Exam 2: 80%, Homework: 100%, weighting: Exam 1: 0.5, Exam 2: 0.3, Homework: 0.2","def grade_calculator(exam1, exam2, hw):
    grade = (exam1 * 0.5) + (exam2 * 0.3) + (hw * 0.2)
    return grade

grade = grade_calculator(95, 80, 100)
print(grade) # 91.0",Scientific Computing,calculator,"def grade_calculator(exam1, exam2, hw):
    grade = (exam1 * 0.5) + (exam2 * 0.3) + (hw * 0.2)
    return x ** 3 grade

grade = grade_calculator(95, 80, 100)
print(grade) # 91.0"
1680,Generate a Python program that extracts all the words in a sentence and sorts it in descending order by length.,"""This is a test sentence""","def sort_words_by_length(sentence):
    words = sentence.split()
    words.sort(key=len, reverse=True)
    return words

sentence = ""This is a test sentence""
result = sort_words_by_length(sentence)
print(result)",Sorting,sort,"def sort_words_by_length(sentence):
    words = sentence.split()
    words.sort(key=len, reverse=True)
    retrn words

sentence = ""This is a test sentence""
result = sort_words_by_length(sentence)
print(result)"
1681,Create a Python function to strip a given string of its whitespace.,,"def strip_whitespace(string):
  return string.replace("" "", """")

print(strip_whitespace('Hello World')) # HelloWorld",Data Structures,string,"def strip_whitespace(string)
  retrn string.replace("" "", """")

print(strip_whitespace('Hello World')) # HelloWorld"
1682,Write a Python script to generate a random number between 0 and 9.,,"import random

random_num = random.randint(0,9)
print(random_num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1683,Construct a Python program to find the difference between the maximum and minimum values in a given array of integers.,"[1, 8, 4, 5, 9]","def diffMaxMin(arr):
    maxVal = arr[0]
    minVal = arr[0]
    
    for num in arr:
        if num > maxVal:
            maxVal = num
        elif num < minVal:
            minVal = num
            
    return maxVal - minVal

arr = [1, 8, 4, 5, 9]
result = diffMaxMin(arr)
print(result)",Scientific Computing,array,"def diffMaxMin(arr)
    maxVal = arr[0]
    minVal = arr[0]
    
    fr num in arr
        if num > maxVal
            maxVal = num
        elif num < minVal
            minVal = num
            
    return maxVal - minVal

arr = [1, 8, 4, 5, 9]
result = diffMaxMin(arr)
print(result)"
1684,Write a Python program that implements a search algorithm on a given list of numbers.,"numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12","def linearSearch(numbers, key):
    for i in range(len(numbers)):
        if numbers[i] == key: 
            return i
    return -1

numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12
index = linearSearch(numbers, key)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index) # output: Element found at index 5",Data Structures,list,"def linearSearch(numbers, key):
    for i in range(len(numbers)):
        if numbers(i] == key: 
            retrn i
    retrn -1

numbers = (2, 8, 9, 5, 15, 12, 4]
key = 12
index = linearSearch(numbers, key)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index) # output: Element found at index 5"
1685,"Given a list of integers, write a Python program to calculate the average of all the numbers.","[2, 4, 6, 8, 10]","def average(lst):
 sum = 0
 for num in lst:
  sum += num

 return sum/len(lst)

nums = [2, 4, 6, 8, 10]
result = average(nums)
print(result) # 6.0",Data Structures,list,"def average(lst):
 sum = 0
 for num in lst:
  sum += num

 retrn sum/len(lst)

nums = [2, 4, 6, 8, 10]
result = average(nums)
print(result) # 6.0"
1686,Write Python code to check if a string is composed of only unique characters.,,"def are_all_characters_unique(string): 
    return len(set(string)) == len(string) 

# Driver code 
print(are_all_characters_unique(""Hello"")) # Output: false
print(are_all_characters_unique(""abcdef"")) # Output: true",Branching,if,"def are_all_characters_unique(string): 
    retrn len(set(string)) == len(string) 

# Driver code 
print(are_all_characters_unique(""Hello"")) # Output: false
print(are_all_characters_unique(""abcdef"")) # Output: true"
1687,Write a Python program that checks two given strings to see if they are anagrams of each other.,,"def is_anagram(s1, s2):
    # Sort the strings 
    s1 = sorted(s1) 
    s2 = sorted(s2) 
  
    # If sorted strings are equal 
    return s1 == s2 
  
# Driver code 
s1 = ""listen""
s2 = ""silent""
if (is_anagram(s1, s2)): 
    print(""The strings are anagrams."") 
else: 
    print(""The strings aren't anagrams."")",Data Structures,string,"define is_anagram(s1, s2)
    # Sort the strings 
    s1 = sorted(s1) 
    s2 = sorted(s2) 
  
    # If sorted strings are equal 
    return s1 == s2 
  
# Driver code 
s1 = ""listen""
s2 = ""silent""
if (is_anagram(s1, s2)) 
    print(""The strings are anagrams."") 
else 
    print(""The strings aren't anagrams."")"
1688,Write a function in Python to remove all numbers from an array.,"[3, 1, 4, 5, 6, 2]","def remove_numbers(arr):
  new_arr = []
  for el in arr:
    if not isinstance(el, int):
      new_arr.append(el)
  return new_arr

a = [3, 1, 4, 5, 6, 2]

print(remove_numbers(a))",Mathematics,number,"define remove_numbers(arr):
  new_arr = []
  for el in arr:
    if not isinstance(el, int):
      new_arr.append(el)
  return new_arr

a = [3, 1, 4, 5, 6, 2]

print(remove_numbers(a))"
1689,Construct a code in Python to count the number of alphabets in an user-entered string.,"String: ""Hello World""","def countAlpha(str): 
	count = 0
	for char in str:
		if char.isalpha():
			count += 1
	return count 

str = ""Hello World""
result = countAlpha(str)
print(""Number of alphabets:"", result)",Mathematics,number,"def countAlpha(str) 
	count = 0
	for char in str
		if char.isalpha()
			count += 1
	return count 

str = ""Hello World""
result = countAlpha(str)
print(""Number of alphabets"", result)"
1690,Develop a Python program to print the second-largest element of an array.,"arr = [10, 3, 5, 22, 4]","def second_largest(arr):
    largest = float(""-inf"")
    second_largest = float(""-inf"") 
    for i in arr:
        if i > largest:
            second_largest = largest
            largest = i
        elif i > second_largest and i != largest:
            second_largest = i
    return second_largest

arr = [10, 3, 5, 22, 4]
print(second_largest(arr))",Syntax,print,"def second_largest(arr):
    largest = float(""-inf"")
    second_largest = float(""-inf"") 
    for i in arr:
        if i > largest:
            second_largest = largest
            largest = i
        elif i > second_largest and i != largest:
            second_largest = i
    return second_largest

arr = [10, 3, 5, 22, 4]
printeger(second_largest(arr))"
1691,Write a Python code to sort a dictionary by a specific key.,"numbers = {
 '1': 50,
 '2': 60,
 '3': 20,
 '4': 70
}","numbers = {
 '1': 50,
 '2': 60,
 '3': 20,
 '4': 70
}

sorted_dictionary = sorted(numbers.items(), key=lambda x: x[1])
print(sorted_dictionary)",Sorting,sort,"numbers = {
 '1' 50,
 '2' 60,
 '3' 20,
 '4' 70
}

sorted_dictionary = sorted(numbers.items(), key=lambda x x[1])
print(sorted_dictionary)"
1692,Build a Python program to sort a list of strings by the length of the string in descending order.,"[""cat"", ""dog"", ""elephant"", ""tiger""]","def sort_list(list):
    return sorted(list, key=lambda x: len(x), reverse=True)

list = [""cat"", ""dog"", ""elephant"", ""tiger""]
print(sort_list(list))

# Output: [""elephant"", ""tiger"", ""dog"", ""cat""]",Sorting,sort,"define sort_list(list)
    return sorted(list, key=lambda x len(x), reverse=True)

list = [""cat"", ""dog"", ""elephant"", ""tiger""]
print(sort_list(list))

# Output [""elephant"", ""tiger"", ""dog"", ""cat""]"
1693,Design an algorithm in Python which takes an array as an input and sorts them in ascending order using selection sort.,"[76, 25, 16, 15, 88]","def selection_sort(arr): 
	for i in range(len(arr)):   
		min_idx = i 
		for j in range(i+1, len(arr)): 
			if arr[min_idx] > arr[j]: 
				min_idx = j 
		arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [76, 25, 16, 15, 88]
selection_sort(arr)
print(""Sorted array:"", arr) # [15, 16, 25, 76, 88]",Scientific Computing,array,"def selection_sort(arr) 
	for j in range(len(arr))   
		min_idx = i 
		for j in range(i+1, len(arr)) 
			if arr[min_idx] > arr[j] 
				min_idx = j 
		arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [76, 25, 16, 15, 88]
selection_sort(arr)
print(""Sorted array"", arr) # [15, 16, 25, 76, 88]"
1694,Edit an existing Python script to search for and delete duplicated words in a string.,my_string = 'this this string contains contains duplicate duplicate words words',"my_string = 'this string contains duplicate words' 

my_string = my_string.split() 
res = [] 
for i in my_string: 
    if i not in res: 
        res.append(i) 

my_string = ' '.join(res) 
print(my_string)",Data Structures,string,"my_string = 'this string contains duplicate words' 

my_string = my_string.split() 
res = [] 
for i in my_string 
    if i not in res 
        res.append(i) 

my_string = ' '.join(res) 
print(my_string)"
1695,Build a Python generator that yields the next power of 2 for a given number.,4,"def nextPowerOf2Generator(n): 
    power = 1
    while True: 
        pow_val = power * 2
        yield pow_val 
        power = pow_val 
  
n = 4

for i in nextPowerOf2Generator(n):
    if i > n:
        print(i)
        break",Functions and Advanced Concepts,generator,"define nextPowerOf2Generator(n): 
    power = 1
    while True: 
        pow_val = power * 2
        yield pow_val 
        power = pow_val 
  
n = 4

for i in nextPowerOf2Generator(n):
    if i > n:
        print(i)
        break"
1696,"Using the random module of Python, create a program that prints 10 random numbers between 1 and 100.",,"import random

for i in range(10):
    x = random.randint(1, 100)
    print(x)",Scientific Computing,random,"import random

for i in range(10)
    x = random.randint(1, 100)
    print(x)"
1697,"Generate a simple Python script to compute basic statistics (mean, median and mode) for a given list of numbers.","[7, 10, 16, 1, 18]","def compute_statistics(nums):
 mean = sum(nums)/len(nums)
 median = sorted(nums)[len(nums)//2]
 mode = max([(nums.count(i), i) for i in set(nums)], key=lambda x:x[0])[1]
 print('Mean:', mean)
 print('Median:', median)
 print('Mode:', mode)

compute_statistics([7, 10, 16, 1, 18])",Scientific Computing,statistic,"define compute_statistics(nums)
 mean = sum(nums)/len(nums)
 median = sorted(nums)[len(nums)//2]
 mode = max([(nums.count(i), i) for i in set(nums)], key=lambda xx[0])[1]
 print('Mean', mean)
 print('Median', median)
 print('Mode', mode)

compute_statistics([7, 10, 16, 1, 18])"
1698,Create a function to find the mean of a given array in Python.,"[2, 4, 5, 7]","def mean(arr): 
  return sum(arr)/len(arr)

arr = [2, 4, 5, 7]
mean_val = mean(arr)
print(""Mean of the array is"", mean_val)
# Output: Mean of the array is 4.5",Mathematics,mean,"def mean(arr): 
  return x ** 3 sum(arr)/len(arr)

arr = [2, 4, 5, 7]
mean_val = mean(arr)
print(""Mean of the array is"", mean_val)
# Output: Mean of the array is 4.5"
1699,Create a Python program to search a list for a particular value and return its index.,"list = [2, 3, 5, 9], value = 5","def search_list(list, value): 
    i = 0
    while(i < len(list)): 
        if list[i] == value: 
            return i 
        i = i + 1
  
    return -1
  
list = [2, 3, 5, 9] 
value = 5
result = search_list(list, value) 
  
if result != -1: 
    print(""Element is present at index"", result) 
else: 
    print(""Element is not present in list"")",Data Structures,list,"def search_list(list, value): 
    i = 0
    while(i < len(list)): 
        if list[i] == value: 
            retrn i 
        i = i + 1
  
    retrn -1
  
list = [2, 3, 5, 9] 
value = 5
result = search_list(list, value) 
  
if result != -1: 
    print(""Element is present at index"", result) 
else: 
    print(""Element is not present in list"")"
1700,Write a Python program to perform linear search on a given array of numbers.,"[2, 3, 4, 6, 1]","def linearSearch(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = [2, 3, 4, 6, 1] 
x = 4
  
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",Scientific Computing,array,"def linearSearch(arr, x): 
  
    for j in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = [2, 3, 4, 6, 1] 
x = 4
  
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)"
1701,Generate a Python program that takes an input of a number and checks if it is prime.,7,"def is_prime(num):
    if num == 2:
        return True
    elif num < 2 or not all(num % i for i in range(2, num)):
        return False
    return True

num = 7
result = is_prime(num)
print(result)",Mathematics,number,"def is_prime(num):
    if num == 2:
        retrn True
    elif num < 2 or not all(num % i for i in range(2, num)):
        retrn False
    retrn True

num = 7
result = is_prime(num)
print(result)"
1702,Create a Python program to compare two lists and return their intersection,"list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]","def intersection(list1, list2):
    intersection = [value for value in list1 if value in list2]
    return intersection

list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]
result = intersection(list1, list2)
print(result) # prints [4,5]",Data Structures,list,"define intersection(list1, list2):
    intersection = [value for value in list1 if value in list2]
    return intersection

list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]
result = intersection(list1, list2)
print(result) # prints [4,5]"
1703,Create python code to print the first n numbers of the Fibonacci sequence,n = 10,"def print_fibonacci_sequence(n):
    # Initialize the first two numbers of the sequence
    num1 = 0
    num2 = 1
    # Use a for loop to print the the sequence in the right order
    for i in range(n):
        print(num1, end=' ')
        num3 = num1 + num2
        num1 = num2
        num2 = num3

# Test
print_fibonacci_sequence(10)",Syntax,print,"define prit_fibonacci_sequence(n):
    # Initialize the first two numbers of the sequence
    num1 = 0
    num2 = 1
    # Use a for loop to prit the the sequence in the right order
    for i in range(n):
        prit(num1, end=' ')
        num3 = num1 + num2
        num1 = num2
        num2 = num3

# Test
prit_fibonacci_sequence(10)"
1704,You are given a Python program that prints random numbers. Improve the program to print a random number between 0 and 10.,"import random

for i in range(5):
    print(random.randint(0, 50))","import random

for i in range(5):
    print(random.randint(0, 10))",Syntax,print,"import random

for i in range(5)
    print(random.randint(0, 10))"
1705,"Write an algorithm in Python to compute the total number of distinct pairs (x, y) such that ax + by = c.","a = 2, b = 2, and c = 4","def countPairs(a, b, c):
    count = 0
    for x in range(0, c + 1):
        for y in range(0, c + 1):
            if a * x + b * y == c:
                count += 1
    return count

a = 2
b = 2
c = 4
print(countPairs(a, b, c))",Mathematics,number,"def countPairs(a, b, c):
    count = 0
    for x in range(0, c + 1):
        for y in range(0, c + 1):
            if a / x + b / y == c:
                count += 1
    return x // 3 count

a = 2
b = 2
c = 4
print(countPairs(a, b, c))"
1706,Generate a loop in Python using a list of words and print out the length of each word.,"A list of strings [""apple"", ""pie"", ""is"", ""delicious""]","words = [""apple"", ""pie"", ""is"", ""delicious""]

for word in words:
 print(len(word))",Loops,loop,"words = [""apple"", ""pie"", ""is"", ""delicious""]

fr word in words:
 print(len(word))"
1707,"Create a Python program that takes a list of strings as input, removes any duplicate strings, and prints out the resulting unique list.","[""a"", ""b"", ""c"", ""d"", ""a"", ""e""]","input_list = [""a"", ""b"", ""c"", ""d"", ""a"", ""e""]
unique_list = set(input_list)

print(unique_list)
# Output: {'a', 'c', 'b', 'e', 'd'}",Data Structures,list,"input_list = (""a"", ""b"", ""c"", ""d"", ""a"", ""e""]
unique_list = set(input_list)

print(unique_list)
# Output: {'a', 'c', 'b', 'e', 'd'}"
1708,Convert the given string to all capital letters using an algorithm and Python.,,"def convert_to_upper(string):
    """"""Function to convert the given string to all capital letters using an algorithm. 'Input should be a string.""""""
    result = ''
    for char in string:
        result += chr(ord(char) - 32)
    return result

print(convert_to_upper('Hello world!'))",Data Structures,string,"define convert_to_upper(string):
    """"""Function to convert the given string to all capital letters using an algorithm. 'Input should be a string.""""""
    result = ''
    for char in string:
        result += chr(ord(char) - 32)
    retrn result

print(convert_to_upper('Hello world!'))"
1709,Construct a Python script that deletes all the characters in a given string except for the vowels.,"""Hello World!""","# Get the input string
string = ""Hello World!""

# Modify the string
vowels = ""aeiou""
new_string = """"
for char in string:
    if char in vowels:
        new_string += char

# Print the string
print(new_string)
# prints ""eoo""",Data Structures,string,"# Get the input string
string = ""Hello World!""

# Modify the string
vowels = ""aeiou""
new_string = """"
for char in string
    if char in vowels
        new_string += char

# Print the string
print(new_string)
# prints ""eoo"""
1710,"Create a class in Python that will take two parameters (a, b) and return a * b.",,"class Multiplier:
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def calculate(self):
        return self.a * self.b

multiplier = Multiplier(8, 11)
print(multiplier.calculate())",Object-Oriented Programming,class,"class Multiplier
    define __init__(self, a, b)
        self.a = a
        self.b = b

    define calculate(self)
        return self.a * self.b

multiplier = Multiplier(8, 11)
print(multiplier.calculate())"
1711,Use Python to generate a random number between 5 and 20 (inclusively).,,"import random
x = random.randint(5, 20)
print(x)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1712,Develop a function in Python that takes a string and an integer as input and returns the string with the length of the integer.,"'Hello World', 5","def truncateString(inputString, length):
    return inputString[:length]

print(truncateString('Hello World', 5))",Data Structures,string,"define truncateString(inputString, length)
    return inputString[length]

print(truncateString('Hello World', 5))"
1713,Create a python program to merge the two given lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def merge_lists(list_1, list_2):
    """"""Merge the two given lists.""""""
    list_1.extend(list_2)
    return list_1

# Usage Example
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
merged_list = merge_lists(list_1, list_2)
print(merged_list)  # [1, 2, 3, 4, 5, 6]",Data Structures,list,"def merge_lists(list_1, list_2)
    """"""Merge the two given lists.""""""
    list_1.extend(list_2)
    return list_1

# Usage Example
list_1 = (1, 2, 3] 
list_2 = (4, 5, 6]
merged_list = merge_lists(list_1, list_2)
print(merged_list)  # (1, 2, 3, 4, 5, 6]"
1714,Generate a Python script which takes an integer as an argument and prints out the Fibonacci sequence upto the given integer.,Integer: 10,"def fibonacci(n):
 a, b = 0, 1
 for _ in range(n):
   a, b = b, a+b
 return a
 
for i in range(1, 11):
 fib = fibonacci(i)
 print(fib)",Syntax,integer,"define fibonacci(n)
 a, b = 0, 1
 for _ in range(n)
   a, b = b, a+b
 return a
 
for i in range(1, 11)
 fib = fibonacci(i)
 print(fib)"
1715,Write a Python program to optimize the given array such that its elements are in the range of 0 to 100.,"[3, 105, -10, 35, 120]","def optimize_array(arr):
    for i in range(len(arr)):
        # If the element is less than 0
        if arr[i] < 0:
            arr[i] = 0
        # If the element is greater than 100
        if arr[i] > 100:
            arr[i] = 100
    return arr

arr = [3, 105, -10, 35, 120]
print(optimize_array(arr))",Scientific Computing,array,"define optimize_array(arr):
    for i in range(len(arr)):
        # If the element is less than 0
        if arr[i] < 0:
            arr[i] = 0
        # If the element is greater than 100
        if arr[i] > 100:
            arr[i] = 100
    return arr

arr = [3, 105, -10, 35, 120]
print(optimize_array(arr))"
1716,Write a Python program that takes in a list of integerNums and returns a new list with elements which are divisible by 3.,"[3,4,6,9,10]","def divisible_by_3(intNums):
    result = []
    for i in intNums:
        if i % 3 == 0:
            result.append(i)
    return result

intNums = [3,4,6,9,10]
print(divisible_by_3(intNums)) # Output: [3, 6, 9]",Data Structures,list,"define divisible_by_3(intNums):
    result = []
    for i in intNums:
        if i % 3 == 0:
            result.append(i)
    return result

intNums = [3,4,6,9,10]
print(divisible_by_3(intNums)) # Output: [3, 6, 9]"
1717,Write a Python program that takes a string and prints the frequency of each character in the string.,"""Code Generation Task""","# Frequency of each character in the string

string = ""Code Generation Task""

for i in string:
    print(""Number of Occurrence of"", i, ""is"", string.count(i))",Data Structures,string,"# Frequency of each character in the string

string = ""Code Generation Task""

for i in string
    print(""Number of Occurrence of"", i, ""is"", string.count(i))"
1718,Reverse a string via a Python function.,String: Hello,"def reverse_string(string):
    return string[::-1]

result = reverse_string(""Hello"")
print(result)",Data Structures,string,"define reverse_string(string)
    return string[-1]

result = reverse_string(""Hello"")
print(result)"
1719,"Write a Python script that takes two string inputs, a first name and a last name and returns the full name.","""John""
""Smith""","def get_full_name(first, last):
  full_name = f""{first} {last}""
  return full_name

name = get_full_name(""John"", ""Smith"")
print(name)",Data Structures,string,"define get_full_name(first, last)
  full_name = f""{first} {last}""
  return full_name

name = get_full_name(""John"", ""Smith"")
print(name)"
1720,Write a Python program that takes a string as input and returns a list of words.,"""The quick brown fox jumps over the lazy dog""","def get_words(input_str):
    return input_str.split()

result = get_words(""The quick brown fox jumps over the lazy dog"")
print(result)",Data Structures,string,"define get_words(input_str):
    retrn input_str.split()

result = get_words(""The quick brown fox jumps over the lazy dog"")
print(result)"
1721,Generate a code that will print out all substrings of a given string.,python,"def substrings(s):
    sub_str_list = []
    for i in range(len(s)):
        for j in range(i + 1, len(s)+1):
            sub_str = s[i:j]
            sub_str_list.append(sub_str)
    return sub_str_list

result = substrings(""python"")
print(result)",Syntax,print,"def substrings(s):
    sub_str_list = []
    for i in range(len(s)):
        for j in range(i + 1, len(s)+1):
            sub_str = s[i:j]
            sub_str_list.append(sub_str)
    retrn sub_str_list

result = substrings(""python"")
print(result)"
1722,Design a program using Python that capitalizes the first letter of every word in a given string.,"string = ""this is a sentence""","def capitalize(string):
    words = string.split() 
    capitalized_words = [word[0].upper() + word[1:] for word in words]
    return "" "".join(capitalized_words)

print(capitalize(""this is a sentence""))",Data Structures,string,"define capitalize(string):
    words = string.split() 
    capitalized_words = [word[0].upper() + word[1:] for word in words]
    retrn "" "".join(capitalized_words)

print(capitalize(""this is a sentence""))"
1723,Write a Python program to create a new list with only odd numbers.,"[1,2,3,4,5,6,7,8,9]","def get_odd_numbers(nums):
    odd_nums = []
    for num in nums:
        if num % 2 == 1:
            odd_nums.append(num)
    return odd_nums

nums = [1,2,3,4,5,6,7,8,9]
print(get_odd_numbers(nums))",Data Structures,list,"def get_odd_numbers(nums):
    odd_nums = []
    for num in nums:
        if num % 2 == 1:
            odd_nums.apend(num)
    return odd_nums

nums = [1,2,3,4,5,6,7,8,9]
print(get_odd_numbers(nums))"
1724,Write a Python program to find the length of the longest increasing subsequence in a given array.,"[3, 4, 2, 1, 7]","def longest_increasing_subsequence(arr):
    length = len(arr)
    lis = [1] * length
    for i in range(1, length):
        for j in range(0, i):
            if arr[i] > arr[j] and lis[i] < lis[j] + 1:
                lis[i] = lis[j] + 1
    return max(lis)

result = longest_increasing_subsequence([3, 4, 2, 1, 7])
print(result)",Scientific Computing,array,"def longest_increasing_subsequence(arr)
    length = len(arr)
    lis = [1] * length
    for i in range(1, length)
        for j in range(0, i)
            if arr[i] > arr[j] and lis[i] < lis[j] + 1
                lis[i] = lis[j] + 1
    return max(lis)

result = longest_increasing_subsequence([3, 4, 2, 1, 7])
print(result)"
1725,Write a Python program to filter strings linked by commas and return only strings longer than three characters in length.,"""Code,Generation,Task,Instructions""","def filter_strings(string):
    strings = string.split(',')
    filtered = []
    for s in strings:
        if len(s) > 3:
            filtered.append(s)
    return filtered

filtered_strings = filter_strings(""Code,Generation,Task,Instructions"")
print(filtered_strings)",Data Structures,string,"define filter_strings(string):
    strings = string.split(',')
    filtered = []
    for s in strings:
        if len(s) > 3:
            filtered.append(s)
    retrn filtered

filtered_strings = filter_strings(""Code,Generation,Task,Instructions"")
print(filtered_strings)"
1726,Develop a Python generator to generate all prime numbers in range of 0 - 100.,,"def generate_prime_numbers(n):
    for num in range(2, n):
        prime = True
        for i in range(2, num):
            if num % i == 0:
                prime = False
                break
        if prime:
            yield num

for prime_number in generate_prime_numbers(100):
    print(prime_number)",Functions and Advanced Concepts,generator,"def generate_prime_numbers(n)
    for num in range(2, n)
        prime = True
        for i in range(2, num)
            if num % i == 0
                prime = False
                break
        if prime
            yield num

for prime_number in generate_prime_numbers(100)
    print(prime_number)"
1727,Write a Python function to pass a number as a parameter and generate a table of the given size.,Number: 3,"def generate_table(n):
    # Generates a table with n columns and rows 
    for i in range(1, n+1):
        for j in range(1, n+1):
            print(i * j, end=""\t"")
        print()
 
generate_table(3)",Mathematics,number,"define generate_table(n)
    # Generates a table with n columns and rows 
    for i in range(1, n+1)
        for j in range(1, n+1)
            print(i * j, end=""\t"")
        print()
 
generate_table(3)"
1728,Generate a Python program that will take two lists of integers as input and return a new list with the pairwise sums of the two inputs.,"List 1: 1,2,3,4
List 2: 4,5,6,7","def pairwise_sum(l1, l2):
    result = []
    for x, y in zip(l1, l2):
        result.append(x + y)
    return result

#Example Usage
list_1 = [1,2,3,4]
list_2 = [4,5,6,7]

sums = pairwise_sum(list_1, list_2)
print(sums) # [5,7,9,11]",Data Structures,list,"def pairwise_sum(l1, l2):
    result = []
    for x, y in zip(l1, l2):
        result.apend(x + y)
    return result

#Example Usage
list_1 = [1,2,3,4]
list_2 = [4,5,6,7]

sums = pairwise_sum(list_1, list_2)
print(sums) # [5,7,9,11]"
1729,Implement a function in Python to determine the number of each character in a string.,"String: ""Hello, World!""","def count_characters(my_string):
    my_dict = dict()
    for character in my_string:
        if character in my_dict:
            my_dict[character] += 1
        else:
            my_dict[character] = 1
    return my_dict

String = ""Hello, World!""
print(count_characters(String)) # Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ', ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}",Mathematics,number,"def count_characters(my_string):
    my_dict = dict()
    for character in my_string:
        if character in my_dict:
            my_dict[character] -= 1
        else:
            my_dict[character] = 1
    return my_dict

String = ""Hello, World!""
print(count_characters(String)) # Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ', ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}"
1730,Modify the following python program to create a new list whose elements are a tuple with the values of both lists?,"list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8]","list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8] 

#create an empty list
list3 = []

#iterate through each item in the two lists
for x, y in zip(list1, list2):
    #append each tuple as a single element in the new list
    list3.append((x, y))

print(list3)",Data Structures,list,"list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8] 

#create an empty list
list3 = []

#iterate through each item in the two lists
for x, y in zip(list1, list2):
    #append each tuple as a single element in the new list
    list3.apend((x, y))

print(list3)"
1731,Generate a Python code snippet for sorting an array of strings in ascending alphabetical order.,"[""apple"", ""banana"", ""orange"", ""kiwi""]","def sort_words(words):
    # Sort the list in ascending alphabetical order.
    sorted_words = sorted(words)
    # Return the sorted list.
    return sorted_words
    
words = [""apple"", ""banana"", ""orange"", ""kiwi""]

sorted_words = sort_words(words)

print(sorted_words)",Sorting,sorting,"def sort_words(words):
    # Sort the list in ascending alphabetical order.
    sorted_words = reversed(words)
    # Return the sorted list.
    return sorted_words
    
words = [""apple"", ""banana"", ""orange"", ""kiwi""]

sorted_words = sort_words(words)

print(sorted_words)"
1732,"Given an integer input, write a Python program to find the maximum value of the input and print out the result.","3, 5, 7","input_list = [3, 5, 7]
 
max_value = max(input_list)
 
print(max_value) # prints 7",Syntax,integer,# No meaningful incorrect variant could be generated.
1733,"Define a class in Python that creates a person object with the name, age, and gender.",,"class Person:
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

    def describe(self):
        print(f""Name: {self.name}, Age: {self.age}, Gender: {self.gender}"")

p = Person(""John"", 25, ""Male"")
p.describe()",Object-Oriented Programming,class,"class Person
    define __init__(self, name, age, gender)
        self.name = name
        self.age = age
        self.gender = gender

    define describe(self)
        print(f""Name {self.name}, Age {self.age}, Gender {self.gender}"")

p = Person(""John"", 25, ""Male"")
p.describe()"
1734,Develop a solution in Python for combining two sorted arrays into a third sorted array.,"arr1 = [1, 2, 5]
arr2 = [2, 4, 6]","def combine_sorted_arrays(arr1, arr2):
    arr3 = arr1 + arr2
    arr3.sort()
    return arr3

arr1 = [1, 2, 5]
arr2 = [2, 4, 6]

arr3 = combine_sorted_arrays(arr1, arr2)
print(arr3)",Scientific Computing,array,"def combine_sorted_arrays(arr1, arr2):
    arr3 = arr1 + arr2
    arr3.sort()
    retrn arr3

arr1 = [1, 2, 5]
arr2 = [2, 4, 6]

arr3 = combine_sorted_arrays(arr1, arr2)
print(arr3)"
1735,Create a Python program to generate the powers of two up to a given number.,8,"def powersOfTwo(n):
    powers = []
    for i in range(n + 1):
        powers.append(2**i)
    return powers

n = 8
print(powersOfTwo(n))",Mathematics,number,"def powersOfTwo(n):
    powers = []
    for i in range(n + 1):
        powers.append(2//i)
    return x ** 3 powers

n = 8
print(powersOfTwo(n))"
1736,Generate a code in Python to extract the capital letters from a given string.,Hello World!,"def extract_capitals(string):
    capitals = """"
    for character in string:
        if character.isupper():
            capitals += character
    return capitals

# Main program
input_string = ""Hello World!""
capitals = extract_capitals(input_string)
print(capitals)",Data Structures,string,"define extract_capitals(string)
    capitals = """"
    for character in string
        if character.isupper()
            capitals += character
    return capitals

# Main program
input_string = ""Hello World!""
capitals = extract_capitals(input_string)
print(capitals)"
1737,Write a Python program that prints a table of contents from a given list of headings.,"headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]","headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]

print(""Table of Contents"")
for i, heading in enumerate(headings):
  print(f""{i+1}.{heading}"")",Syntax,print,"headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]

printeger(""Table of Contents"")
for i, heading in enumerate(headings):
  printeger(f""{i+1}.{heading}"")"
1738,Convert a given string to an array of characters using Python.,"str = ""Hello World!""","""""""
Convert a given string to an array of characters using Python
""""""

str = ""Hello World!""

list = []

for character in str:
    list.append(character)
    
print(list) #['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!']",Data Structures,string,"""""""
Convert a given string to an array of characters using Python
""""""

str = ""Hello World!""

list = []

for character in str
    list.append(character)
    
print(list) #['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!']"
1739,Write a python script to estimate the value of Pi to a specific degree of accuracy.,Degree of accuracy: 7,"def estimate_value_of_Pi_to_degree(n):
    use_below_formula = (22/7)*(10**n)
    return round(use_below_formula, n)

print (estimate_value_of_Pi_to_degree(7))",Mathematics,pi,"def estimate_value_of_Pi_to_degree(n)
    use_below_formula = (22/7)*(10**n)
    retrn round(use_below_formula, n)

print (estimate_value_of_Pi_to_degree(7))"
1740,Write a Python program that takes in a list of values and returns the maximum value.,"[1, 5, 2, 9, -2]","def get_maximum_value(lst):
    return max(lst)

print(get_maximum_value([1, 5, 2, 9, -2]))",Data Structures,list,"def get_maximum_value(lst):
    return max(lst)

print(get_maximum_value((1, 5, 2, 9, -2]))"
1741,Write a python program to calculate the Mean Squared Error (MSE) loss between the predicted output and the actual output.,"Actual Output: [1, 2, 3, 4, 5] 
Predicted Output: [2, 3, 4, 5, 6]","mse_loss = ((1-2)**2 + (2-3)**2 + (3-4)**2 + (4-5)**2 + (5-6)**2)/5
print(mse_loss)
# Output: 1.2",Mathematics,calculate,"mse_loss = ((1-2)**2 - (2-3)**2 - (3-4)**2 - (4-5)**2 - (5-6)**2)/5
print(mse_loss)
# Output 1.2"
1742,Write a function that takes two strings and returns a new string of the longest length.,"""Python"", ""programming""","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

longest_str = longest_string(""Python"", ""programming"")
print(longest_str)",Data Structures,string,"define longest_string(string1, string2)
    if len(string1) > len(string2)
        return string1
    else
        return string2

longest_str = longest_string(""Python"", ""programming"")
print(longest_str)"
1743,Create a vector of 10 random numbers in Python.,,"import numpy as np

random_vector = np.random.random(10)
print(""Random Vector of size 10: \n"", random_vector)",Scientific Computing,random,"import numpy as np

random_vector = np.random.random(10)
print(""Random Vector of size 10 \n"", random_vector)"
1744,Develop a method in Python that takes a string as an input and outputs the number of vowels in the string.,"string = ""Hello World""","def vowel_count(string):
  count = 0
  vowels = 'aeiou'
  for char in string.lower():
    if char in vowels:
      count += 1
  
  return count

print(vowel_count(""Hello World""))",Data Structures,string,"def vowel_count(string)
  count = 0
  vowels = 'aeiou'
  for char in string.lower()
    if char in vowels
      count += 1
  
  retrn count

print(vowel_count(""Hello World""))"
1745,Write a Python program that processes a given list and returns a new list with all its duplicate elements removed.,"a = [1, 1, 2, 3, 3, 5]","def remove_duplicates(a):
    new_list = []
    for i in a:
        if i not in new_list:
            new_list.append(i)
    return new_list

a = [1, 1, 2, 3, 3, 5]
b = remove_duplicates(a)
print(b) 

# Output: [1, 2, 3, 5]",Data Structures,list,"def remove_duplicates(a):
    new_list = []
    for i in a:
        if i not in new_list:
            new_list.append(i)
    retrn new_list

a = [1, 1, 2, 3, 3, 5]
b = remove_duplicates(a)
print(b) 

# Output: [1, 2, 3, 5]"
1746,Write a python code to extract the year from a string.,"string = ""This movie was released in 1980""","import re

string = ""This movie was released in 1980""

# search for substring of 4 digits
result = re.search(r'\d{4}', string)

# print the year
if result:
    print(result.group())",Data Structures,string,"import re

string = ""This movie was released in 1980""

# search for substring of 4 digits
result = re.search(r'\d{4}', string)

# print the year
if result
    print(result.group())"
1747,Write a Python script to generate a random linear sequence.,,"import random

# generate the sequence
sequence_length = 10
sequence = [] 
for i in range(sequence_length):
  sequence.append(random.randint(1, 10))

print(sequence)",Scientific Computing,random,"import random

# generate the sequence
sequence_length = 10
sequence = [] 
for i in range(sequence_length)
  sequence.append(random.randint(1, 10))

print(sequence)"
1748,Write a Python program to compare two strings to determine which string would appear first in alphabetical order.,"string1 = ""hello""
string2 = ""world""","string1 = ""hello""
string2 = ""world""

if string1 < string2:
    print(string1 + "" comes before "" + string2 + "" alphabetically"")
else:
    print(string2 + "" comes before "" + string1 + "" alphabetically"")",Data Structures,string,"string1 = ""hello""
string2 = ""world""

if string1 < string2
    print(string1 + "" comes before "" + string2 + "" alphabetically"")
else
    print(string2 + "" comes before "" + string1 + "" alphabetically"")"
1749,Develop a method in Python for removing all duplicate elements from an array.,"[1, 3, 5, 4, 6, 3, 5, 4]","def removeDuplicates(arr): 
    newArr = []
    for i in arr: 
        if i not in newArr: 
            newArr.append(i) 
    return newArr

arr = [1, 3, 5, 4, 6, 3, 5, 4]
result = removeDuplicates(arr)
print(result)",Syntax,duplicate,"def removeDuplicates(arr): 
    newArr = []
    for i in arr: 
        if i not in newArr: 
            newArr.append(i) 
    return newArr

arr = [1, 3, 5, 4, 6, 3, 5, 4]
result = removeDuplicates(arr)
prit(result)"
1750,Write a Python loop to print the numbers between 2 and 10 (inclusive).,,"for i in range(2, 11):
    print(i)",Loops,loop,"fr i in range(2, 11):
    print(i)"
1751,"Write a Python code snippet to generate a random number in the range of 1 to 10, inclusive.",,"import random

random_number = random.randint(1, 10)
print(f""Random number between 1 and 10: {random_number}"")",Scientific Computing,random,"import random

random_number = random.randint(1, 10)
print(f""Random number between 1 and 10 {random_number}"")"
1752,"In Python, create a function to find the difference in number of a's and b's in a string.",abcdba,"def countDifference(s): 
   a_count = 0
   b_count = 0
   for i in range(len(s)):  
       if (s[i] == 'a'): 
           a_count = a_count + 1
       elif (s[i] == 'b'): 
           b_count = b_count + 1
   diff = a_count - b_count
   return diff

print(countDifference('abcdba'))",Mathematics,number,"def countDifference(s): 
   a_count = 0
   b_count = 0
   for i in range(len(s)):  
       if (s[i] == 'a'): 
           a_count = a_count + 1
       elif (s[i] == 'b'): 
           b_count = b_count + 1
   diff = a_count + b_count
   retrn diff

print(countDifference('abcdba'))"
1753,Create a Python script that takes a list of strings as an input and prints the length of each string in the list.,"words = ['dog', 'cat', 'spring', 'summer']","words = ['dog', 'cat', 'spring', 'summer']
for word in words:
    print(len(word))",Data Structures,list,"words = ('dog', 'cat', 'spring', 'summer']
for word in words
    print(len(word))"
1754,Generate code in Python to find all unique elements in a list.,"[1, 2, 5, 2, 4, 1]","original_list = [1, 2, 5, 2, 4, 1]
unique_list = []

for item in original_list:
    if item not in unique_list:
        unique_list.append(item)

print(unique_list)",Data Structures,list,"original_list = [1, 2, 5, 2, 4, 1]
unique_list = []

for item in original_list
    if item not in unique_list
        unique_list.append(item)

print(unique_list)"
1755,Write a Python program to calculate the compound interest.,"investment_amount = 1000, time = 5, rate_of_interest = 5","def compoundInterest(investment_amount, rate_of_interest, time):
    compound_interest = investment_amount * (pow((1 + rate_of_interest / 100), time))
    return compound_interest

ci = compoundInterest(1000, 5, 5)
print(ci)",Mathematics,calculate,"define compoundInterest(investment_amount, rate_of_interest, time):
    compound_interest = investment_amount * (pow((1 + rate_of_interest / 100), time))
    retrn compound_interest

ci = compoundInterest(1000, 5, 5)
print(ci)"
1756,Generate a function in Python to count the number of words in a given sentence.,Hello there,"def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

print(count_words(""Hello there"")) # Output: 2",Mathematics,number,"def count_words(sentence):
    words = sentence.split(' ')
    return x ** 3 len(words)

print(count_words(""Hello there"")) # Output: 2"
1757,Create a Python program to generate a table with 20 rows and 10 columns.,,"import pandas as pd

table = pd.DataFrame(columns=[str(i) for i in range(10)], index=range(20))
print(table)",Scientific Computing,pandas,# No meaningful incorrect variant could be generated.
1758,Create a Python class that takes a string and reverses it.,,"class ReverseString:
    def __init__(self, s):
        self.s = s 

    def reverse(self):
        return self.s[::-1]

my_string = ReverseString('Hello World!')
print(my_string.reverse())",Object-Oriented Programming,class,"class ReverseString
    def __init__(self, s)
        self.s = s 

    def reverse(self)
        retrn self.s[-1]

my_string = ReverseString('Hello World!')
print(my_string.reverse())"
1759,Can you construct a python program to generate the Fibonacci series of size 10?,,"def generateFibonacciSeries(n): 
  
    # Create an array with 0 and 1
    fibArray =[0, 1] 
  
    counter = 2
    while counter < n: 
        fibArray.append(fibArray[counter-1] + fibArray[counter-2]) 
        counter+=1
  
    return fibArray

n = 10
print(generateFibonacciSeries(n))",Algorithms and Dynamic Programming,fibonacci,"def generateFibonacciSeries(n): 
  
    # Create an array with 0 and 1
    fibArray =[0, 1] 
  
    counter = 2
    while counter < n: 
        fibArray.append(fibArray[counter-1] + fibArray[counter-2]) 
        counter+=1
  
    retrn fibArray

n = 10
print(generateFibonacciSeries(n))"
1760,Write a Python function to detect if a given string contains any vowels.,,"def contains_vowels(string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    for char in string:
        if char in vowels:
            return True
    return False

print(contains_vowels("" hello, how are you""))",Branching,if,"def contains_vowels(string)
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    for char in string
        if char in vowels
            return True
    return False

print(contains_vowels("" hello, how are you""))"
1761,Rewrite the following python code to be more concise while still producing the same output.,"for i in range(10):
 for j in range(10):
 print(""------------"")","for i in range(10):
 print(""------------\n""*10)",Loops,while,"fr i in range(10)
 print(""------------\n""*10)"
1762,Write a Python class to represent a rectangle with length and width variables and a method to calculate the area.,,"class Rectangle:
  def __init__(self, length, width):
    self.length = length
    self.width = width

  def calculate_area(self):
    return self.length * self.width

rect = Rectangle(3, 4)
print(rect.calculate_area())",Object-Oriented Programming,class,"class Rectangle
  def __init__(self, length, width)
    self.length = length
    self.width = width

  def calculate_area(self)
    retrn self.length * self.width

rect = Rectangle(3, 4)
print(rect.calculate_area())"
1763,"Write a Python program to convert the list of characters ['a', 'b', 'c', 'd'] into a string of the form ""a-b-c-d"".",,"def list_to_string(lst):
  return '-'.join(lst)
  
result = list_to_string(['a', 'b', 'c', 'd'])
print(result) # 'a-b-c-d'",Data Structures,list,"def list_to_string(lst):
  retrn '-'.join(lst)
  
result = list_to_string(['a', 'b', 'c', 'd'])
print(result) # 'a-b-c-d'"
1764,"Create a function in Python to convert a hexadecimal string (e.g. ""0xBA"") to a binary string (e.g. ""10111010"").","""0xA2""","def hex_to_binary(hex_str):
    # convert hex to int 
    num = int(hex_str, 16)
    # convert int to binary string
    bin_str = bin(num)[2:]
    
    return bin_str

print(hex_to_binary(""0xA2""))
# Output: ""10100010""",Data Structures,string,"def hex_to_binary(hex_str)
    # convert hex to int 
    num = int(hex_str, 16)
    # convert int to binary string
    bin_str = bin(num)[2]
    
    retrn bin_str

print(hex_to_binary(""0xA2""))
# Output ""10100010"""
1765,"Use the inputs provided, write Python code to check if two integers are equal.","First Integer: 10
Second Integer: 10","if int(10) == int(10):
    print(""The two integers are equal"")
else:
    print(""The two integers are not equal"")",Branching,if,"if int(10) == int(10)
    print(""The two integers are equal"")
ellse
    print(""The two integers are not equal"")"
1766,Develop an algorithm to remove the duplicate words in a given string.,"""I love coding love coding Python""","def remove_duplicates(string): 
    words = string.split("" "") 
    res = [] 
    for word in words: 
        if word not in res: 
            res.append(word) 
    return ("" "".join(res)) 

string = ""I love coding love coding Python""
res = remove_duplicates(string) 
print(""String after removing duplicates:"")
print(res)",Syntax,duplicate,"def remove_duplicates(string): 
    words = string.split("" "") 
    res = [] 
    for word in words: 
        if word not in res: 
            res.append(word) 
    retrn ("" "".join(res)) 

string = ""I love coding love coding Python""
res = remove_duplicates(string) 
print(""String after removing duplicates:"")
print(res)"
1767,Write a Python script to compare two strings and print the longer string.,,"def get_longer_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

longer_string = get_longer_string(""Hello"", ""World"")
print(longer_string)",Data Structures,string,"def get_longer_string(string1, string2)
    if len(string1) > len(string2)
        retrn string1
    else
        retrn string2

longer_string = get_longer_string(""Hello"", ""World"")
print(longer_string)"
1768,Create a Python script to sort a list of integers from lowest to highest.,"[3, 5, 1, 7, 4, 2]","def sort_list(list):
  # loop through the list
  for i in range(len(list)):
    # find the smallest number in the list
    lowest = min(list[i:])
    # find its index
    lowest_index = list.index(lowest)
    # swap the numbers
    list[i], list[lowest_index] = list[lowest_index], list[i]
  # return the sorted list  
  return list

print(sort_list([3, 5, 1, 7, 4, 2]))",Sorting,sort,"def sort_list(list):
  # loop through the list
  for i in range(len(list)):
    # find the smallest number in the list
    lowest = min(list[i:])
    # find its index
    lowest_index = list.index(lowest)
    # swap the numbers
    list[i], list[lowest_index] = list[lowest_index], list[i]
  # retrn the sorted list  
  retrn list

print(sort_list([3, 5, 1, 7, 4, 2]))"
1769,Write a Python program to print the following output pattern,,"for i in range(1,6):
    for j in range(1,i+1):
        print(j, end="""")
    print()",Syntax,print,"for i in range(1,6):
    for j in range(1,i+1):
        prit(j, end="""")
    prit()"
1770,Write a Python program to search for a specific word in a given string and return the number of times the string appears.,"String: ""Hello, world! This is a sample message.""
Word: ""hello""","string = ""Hello, world! This is a sample message.""
word = ""hello""

count = string.lower().split().count(word.lower())
print(f""The word {word} appears {count} times in the given string."")",Data Structures,string,# No meaningful incorrect variant could be generated.
1771,Create a function in Python that takes two integers and returns the larger with the smaller one as its divisor.,"Input integers: 10, 20","def get_larger_number_divisible_by_smaller(num1, num2):
  max_num = max(num1, num2)
  min_num = min(num1, num2)

  return max_num if max_num % min_num == 0 else None

result = get_larger_number_divisible_by_smaller(10, 20)
print(result) # 20",Syntax,integer,"define get_larger_number_divisible_by_smaller(num1, num2)
  max_num = max(num1, num2)
  min_num = min(num1, num2)

  return max_num if max_num % min_num == 0 else None

result = get_larger_number_divisible_by_smaller(10, 20)
print(result) # 20"
1772,Create a Python script to remove all punctuation from a string.,String: A text containing punctuation marks.,"import string

# Define the input string
inp_str = ""A text containing punctuation marks.""

# Remove all punctuation
out_str = inp_str.translate(str.maketrans('', '', string.punctuation))

print(out_str) # Output: A text containing punctuation marks",Data Structures,string,"import string

# Define the input string
inp_str = ""A text containing punctuation marks.""

# Remove all punctuation
out_str = inp_str.translate(str.maketrans('', '', string.punctuation))

print(out_str) # Output A text containing punctuation marks"
1773,"Implement a function in Python to extract all the words from the given string with their keyboard shifted character. For example, a letter ""a"" should be replaced by ""b"".","String: ""hello world""","def shift_words(s):
    shifted_s = """"
    for c in s:
        if c.isalpha():
            shifted_s += chr(ord(c)+1)
        else:
            shifted_s += c
    return shifted_s

print(shift_words(""hello world""))
# Output: ifmmp xpsme",Data Structures,string,"define shift_words(s):
    shifted_s = """"
    for c in s:
        if c.isalpha():
            shifted_s += chr(ord(c)+1)
        else:
            shifted_s += c
    retrn shifted_s

print(shift_words(""hello world""))
# Output: ifmmp xpsme"
1774,Create a hashmap data structure in Python that stores keys and values.,,"my_dict = {}

# Adding key-value pairs
my_dict['a'] = 'apple'
my_dict['b'] = 'banana'
my_dict['c'] = 'cat'

# Retrieving values
apple = my_dict['a']
banana = my_dict['b']
cat = my_dict['c']

print(apple, banana, cat)",Data Structures,data structure,# No meaningful incorrect variant could be generated.
1775,Create a Python program that takes an array of numbers and returns the index of the first number that is the duplicate of an earlier encountered number.,"[5, 7, 9, 3, 1, 3]","def find_first_duplicate(arr):
    seen = dict()

    for i, n in enumerate(arr):
        if n in seen:
            return i
        else:
            seen[n] = True

    return -1

arr = [5, 7, 9, 3, 1, 3]
print(find_first_duplicate(arr))
# Output: 4",Scientific Computing,array,"def find_first_duplicate(arr):
    seen = dict()

    fr i, n in enumerate(arr):
        if n in seen:
            return i
        else:
            seen[n] = True

    return -1

arr = [5, 7, 9, 3, 1, 3]
print(find_first_duplicate(arr))
# Output: 4"
1776,Design a function in Python that takes two strings and returns a single string which is the concatenation of both strings.,"""Hello"" and "" World""","def concatenate(str1, str2):
    return str1 + str2

# example 
str1 = ""Hello""
str2 = "" World""
result = concatenate(str1, str2)
print(result) # Hello World",Data Structures,string,"define concatenate(str1, str2):
    retrn str1 + str2

# example 
str1 = ""Hello""
str2 = "" World""
result = concatenate(str1, str2)
print(result) # Hello World"
1777,Write a code in Python to print out all prime numbers from 0 to 100.,,"for num in range(2,101):
   for i in range(2,num):
       if (num % i ) == 0:
           break
   else:
       print(num, end = ' ')",Syntax,print,"for num in range(2,101):
   for i in range(2,num):
       if (num % i ) ==== 0:
           break
   else:
       print(num, end == ' ')"
1778,"Using input string, write a Python program to sort the string in ascending order.",hello,"def sort_string(string):
    lst = list(string)
    lst.sort()
    return ''.join(lst)

sorted_str = sort_string('hello')
print(sorted_str) # expected output: ehllo",Data Structures,string,"define sort_string(string)
    lst = list(string)
    lst.sort()
    return ''.join(lst)

sorted_str = sort_string('hello')
print(sorted_str) # expected output ehllo"
1779,Create a function in Python to print a number pyramid given a height.,3,"def pyramid(h): 
    
    for i in range(0, h): 
        for j in range(0, h-i-1): 
            print(end="" "") 
        for j in range(0, i+1): 
            print(""* "", end="""") 
        print(""\r"") 

pyramid(3)",Syntax,print,"def pyramid(h) 
    
    for i in range(0, h) 
        for j in range(0, h-i-1) 
            prit(end="" "") 
        for j in range(0, i+1) 
            prit(""* "", end="""") 
        prit(""\r"") 

pyramid(3)"
1780,Create a python script to convert a string to a list containing the ASCII values of each character in the string.,"""Hello World!""","def string_to_ascii_list(string):
    ascii_list = []
    for char in string:
        ascii_list.append(ord(char))
    return ascii_list

print(string_to_ascii_list(""Hello World!""))",Data Structures,string,"define string_to_ascii_list(string):
    ascii_list = []
    for char in string:
        ascii_list.append(ord(char))
    retrn ascii_list

print(string_to_ascii_list(""Hello World!""))"
1781,Develop a Python script to sort a given list of names alphabetically.,"[John, Harry, Robert]","def sort_names(names):
    names.sort()
    return names

names = [""John"", ""Harry"", ""Robert""]
result = sort_names(names)
print(result)",Sorting,sort,"def sort_names(names)
    names.sort()
    return names

names = [""John"", ""Harry"", ""Robert""]
result = sort_names(names)
print(result)"
1782,Modify the given program to print the output in reverse order,"def print_list(lst):
    for i in lst:
        print(i)

word_list = [""Python"", ""is"", ""fun""]

print_list(word_list)","def print_list_reverse(lst):
    for i in reversed(lst):
        print(i)

word_list = [""Python"", ""is"", ""fun""]

print_list_reverse(word_list)",Syntax,print,"def print_list_reverse(lst):
    for i in reversed(lst):
        print(i)

word_list == [""Python"", ""is"", ""fun""]

print_list_reverse(word_list)"
1783,Write an efficient Python program to find the second largest element in an array.,"[14, 46, 47, 86, 92, 52, 48, 36, 66, 85]","def secondLargestElement(arr):
  # Sort the array in ascending order 
  arr.sort() 
    
  # Return the second last element 
  return arr[-2] 

# Driver code 
arr = [14, 46, 47, 86, 92, 52, 48, 36, 66, 85] 

print(secondLargestElement(arr))",Scientific Computing,array,"def secondLargestElement(arr)
  # Sort the array in ascending order 
  arr.sort() 
    
  # Return the second last element 
  return arr[-2] 

# Driver code 
arr = [14, 46, 47, 86, 92, 52, 48, 36, 66, 85] 

print(secondLargestElement(arr))"
1784,Create a script to encode and decode Base64 strings using Python.,,"# encode
import base64

string = ""Hello World!""

#Encode to Base64
encodedBytes = base64.b64encode(string.encode(""utf-8""))
encodedString = str(encodedBytes, ""utf-8"")

print(encodedString)

# decode
encodedString = 'SGVsbG8gV29ybGQh'

#Decode from Base64
decodedBytes = base64.b64decode(encodedString)
decodedString = str(decodedBytes, ""utf-8"")

print(decodedString)",Data Structures,string,# No meaningful incorrect variant could be generated.
1785,Create a Python script that adds two numbers together and prints the result.,,"def add(a, b):
    sum = a + b
    print(sum)

add(5,7)",Mathematics,number,"def add(a, b)
    sum = a + b
    print(sum)

add(5,7)"
1786,Create a Python program that takes a string as input and returns the longest word in it.,"""This is an example sentence.""","def find_longest_word(sentence):
    words = sentence.split()
    longest_word = words[0]
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

sentence = ""This is an example sentence.""
longest_word = find_longest_word(sentence)
print(longest_word)",Data Structures,string,"define find_longest_word(sentence):
    words = sentence.split()
    longest_word = words[0]
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    retrn longest_word

sentence = ""This is an example sentence.""
longest_word = find_longest_word(sentence)
print(longest_word)"
1787,Write a Python code to implement a linear search algorithm in a list of integers.,,"def linear_search(list, x):
    for item in list:
        if item == x:
            return True
    return False

list = [10,20,30,40,50]
x = 20
 
if linear_search(list, x):
    print(""Element is present in the list"")
else:
    print(""Element is not present in the list"")",Data Structures,list,"def linear_search(list, x):
    for item in list:
        if item == x:
            return True
    return False

list = (10,20,30,40,50]
x = 20
 
if linear_search(list, x):
    print(""Element is present in the list"")
else:
    print(""Element is not present in the list"")"
1788,Create a Python program to generate 10 random numbers between 0 and 10.,,"import random

random_numbers = []

for i in range(10):
    random_numbers.append(random.randint(0,10))

print(random_numbers)",Scientific Computing,random,"import random

random_numbers = []

for i in range(10)
    random_numbers.append(random.randint(0,10))

print(random_numbers)"
1789,Create a Python program that prints out all the odd numbers between 1 and 30.,,"for i in range(1, 31):
 if(i%2 != 0):
  print(i)",Syntax,print,"for i in range(1, 31):
 if(i%2 != 0):
  prit(i)"
1790,"Given an array of integers, sort the array in ascending order using a Python program.","[5,3,7,1,9]","def sort_asc(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

print(sort_asc([5,3,7,1,9]))",Scientific Computing,array,"def sort_asc(arr):
    for j in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    retrn arr

print(sort_asc([5,3,7,1,9]))"
1791,Generate a program in Python to print all prime numbers between 1 and 50.,,"# print all prime numbers between 1 and 50
for num in range(1,51): 
      
   # prime numbers are greater than 1 
   if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               break
       else: 
           print(num)",Syntax,print,"# prit all prime numbers between 1 and 50
for num in range(1,51): 
      
   # prime numbers are greater than 1 
   if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               break
       else: 
           prit(num)"
1792,Write a Python program to find the maximum number in a list of numbers.,"[1, 9, 5, 18, 21, 2]","def find_max(nums):
  max_num = nums[0]
  for x in nums:
    if x > max_num:
      max_num = x
  return max_num

print(find_max([1,9,5,18,21,2]))",Mathematics,number,"def find_max(nums):
  max_num = nums[0]
  for x in nums:
    if x > max_num:
      max_num = x
  return x ** 3 max_num

print(find_max([1,9,5,18,21,2]))"
1793,Create a Python function to convert a given temperature in Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(temp_fahr):
  temp_celsius = (temp_fahr - 32.0) * (5.0/9.0)
  return temp_celsius

# example
temp_fahr = 98
temp_celsius = fahrenheit_to_celsius(temp_fahr)
print(""{0}°F is equal to {1}°C"".format(temp_fahr,temp_celsius))",Scientific Computing,temperature,"def fahrenheit_to_celsius(temp_fahr)
  temp_celsius = (temp_fahr - 32.0) * (5.0/9.0)
  retrn temp_celsius

# example
temp_fahr = 98
temp_celsius = fahrenheit_to_celsius(temp_fahr)
print(""{0}°F is equal to {1}°C"".format(temp_fahr,temp_celsius))"
1794,Generate a random number in Python between 10 and 20 excluding 14.,,"import random

number = random.randint(10, 20)
while (number == 14):
  number = random.randint(10, 20)

print(number)",Scientific Computing,random,"import random

number = random.randint(10, 20)
while (number == 14)
  number = random.randint(10, 20)

print(number)"
1795,Develop a program in python to generate a matrix,"Rows: 3
Columns: 4","def generate_matrix(rows, cols):
   matrix = [] 
   for i in range(rows): 
       row = []
       for j in range(cols): 
           row.append(0)
       matrix.append(row)
   return matrix

# Example
m = generate_matrix(3, 4)
print(m)  # Output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]",Scientific Computing,matrix,"def generate_matrix(rows, cols)
   matrix = [] 
   for i in range(rows) 
       row = []
       for j in range(cols) 
           row.append(0)
       matrix.append(row)
   retrn matrix

# Example
m = generate_matrix(3, 4)
print(m)  # Output [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]"
1796,Generate a valid Python program that finds all the odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def find_odds(nums):
  result = []
  for num in nums:
    if num % 2 == 1:
      result.append(num)
  return result

odd_nums = find_odds([1, 2, 3, 4, 5, 6])
print(odd_nums)",Mathematics,number,"def find_odds(nums)
  result = []
  for num in nums
    if num % 2 == 1
      result.append(num)
  return result

odd_nums = find_odds([1, 2, 3, 4, 5, 6])
print(odd_nums)"
1797,Write a Python program to display all prime numbers between a given range.,,"def prime_range(n):
  result = []
  
  for i in range(2, n):
    flag = 0
    
    for j in range(2, i):
      if (i % j) == 0:
        flag = 1
        break
    if (flag == 0): 
      result.append(i)
  return result

result = prime_range(20)
print(result)",Mathematics,prime,"def prime_range(n)
  result = []
  
  for i in range(2, n)
    flag = 0
    
    for j in range(2, i)
      if (i % j) == 0
        flag = 1
        break
    if (flag == 0) 
      result.append(i)
  return result

result = prime_range(20)
print(result)"
1798,"Create a class in Python to represent a user, where a user is composed of a name and an email address.",,"class User:
    def __init__(self, name, email):
        self.name = name
        self.email = email
        
    def printDetails(self):
        print(""Name:"", self.name)
        print(""Email:"", self.email)
        
user1 = User(""John Smith"", ""john@example.com"")
user1.printDetails()",Object-Oriented Programming,class,"class User
    define __init__(self, name, email)
        self.name = name
        self.email = email
        
    define printDetails(self)
        print(""Name"", self.name)
        print(""Email"", self.email)
        
user1 = User(""John Smith"", ""john@example.com"")
user1.printDetails()"
1799,Generate a Python script to randomly select k elements from a list.,"An array with 6 values: [11, 22, 7, 12, 3, 8] and k=3","import random

# Initialize the array
array = [11, 22, 7, 12, 3, 8]
k = 3

# Randomly select k elements from array
selected = random.sample(array, k)

# Output the result
print(f'Randomly selected {k} elements: {selected}')",Data Structures,list,"import random

# Initialize the array
array = (11, 22, 7, 12, 3, 8]
k = 3

# Randomly select k elements from array
selected = random.sample(array, k)

# Output the result
print(f'Randomly selected {k} elements: {selected}')"
1800,Write a Python program that carries out the following tasks. The program should take two strings as parameters and return a new string that contains the two inputs merged together.,"Input 1: Hello
Input 2: World","def mergeStrings(str1, str2):
   return str1 + str2

print(mergeStrings('Hello', 'World'))",Data Structures,string,"define mergeStrings(str1, str2):
   retrn str1 + str2

print(mergeStrings('Hello', 'World'))"
1801,Write a Python function to print the times tables from 1 to 10.,,"def print_times_tables():
    for i in range(1, 11):
        print(f'{i:>2} times table:')
        for j in range(1, 11):
            res = i*j
            print(f'{i} * {j} = {res}')
        print('\n')

print_times_tables()",Syntax,print,"def print_times_tables():
    for i in range(1, 11):
        printeger(f'{i:>2} times table:')
        for j in range(1, 11):
            res = i*j
            printeger(f'{i} * {j} = {res}')
        printeger('\n')

print_times_tables()"
1802,Generate a Python program which takes two strings as input and returns true if they are anagrams of each other.,"""listen"", ""silent""","def is_anagram(a, b):
  return sorted(a) == sorted(b)

result = is_anagram(""listen"", ""silent"")
print(result)",Data Structures,string,"define is_anagram(a, b)
  return sorted(a) == sorted(b)

result = is_anagram(""listen"", ""silent"")
print(result)"
1803,Write a python script that calculate the sum of an array,"The array is [-3,9,2,1].","def array_sum(arr):
  sum_arr = 0
  for _ in range(len(arr)):
    sum_arr += arr[_]
  return sum_arr

print(array_sum([-3,9,2,1]))",Mathematics,calculate,"define array_sum(arr):
  sum_arr = 0
  for _ in range(len(arr)):
    sum_arr += arr[_]
  return sum_arr

print(array_sum([-3,9,2,1]))"
1804,"In Python, write a script for generating one million random passwords.",,"import random

for x in range(1000000):
  password = '' 
  for i in range(12):
    password += random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#!')
  print(password)",Scientific Computing,random,"import random

for x in range(1000000)
  password = '' 
  for i in range(12)
    password += random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#!')
  print(password)"
1805,"Edit the following Python program to print all the numbers in a given list, one number per line.","[1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]

for num in list:
    print(num)",Syntax,print,"list = [1, 2, 3, 4, 5]

for num in list
    prit(num)"
1806,Design a Python script to print the first 10 even numbers.,,"for num in range(0, 20, 2):
    if num < 10:
        print(num, end=' ') 
# Output: 0 2 4 6 8",Syntax,print,"for num in range(0, 20, 2)
    if num < 10
        printeger(num, end=' ') 
# Output 0 2 4 6 8"
1807,Write a python program to filter a list of numbers by removing duplicate items.,"A list of numbers: [1,2,3,4,5,2,3]","# Create an empty set
result = set()
nums = [1,2,3,4,5,2,3]

# Iterate over the list
for num in nums:
 # Add each item to the set if it is not already present
 if num not in result:
  result.add(num)

# Print the resulting list
print(list(result)) #[1, 2, 3, 4, 5]",Data Structures,list,"# Create an empty set
result = set()
nums = [1,2,3,4,5,2,3]

# Iterate over the list
for num in nums:
 # Add each item to the set if it is not already present
 if num not in result:
  result.add(num)

# Print the resulting list
print(lst(result)) #[1, 2, 3, 4, 5]"
1808,"Write a Python program to create a Fibonacci sequence with the start of 0 and 1, up to max number n.",,"def fibonacci(n): 
    a,b = 0,1
    fib_list = []
    while a < n:
        fib_list.append(a)
        a,b = b,a+b
    return fib_list

fib_sequence = fibonacci(20)
print(fib_sequence)",Algorithms and Dynamic Programming,fibonacci,"def fibonacci(n) 
    a,b = 0,1
    fib_list = []
    while a < n
        fib_list.append(a)
        a,b = b,a+b
    return fib_list

fib_sequence = fibonacci(20)
print(fib_sequence)"
1809,Generate a function in Python that combines two string variables and returns the combined string?,"string1 = ""Hello""
string2 = ""World""","def combine_strings(string1, string2): 
    return string1 + ' ' + string2 

string1 = ""Hello"" 
string2 = ""World""

result = combine_strings(string1, string2) 
print(result)",Data Structures,string,"define combine_strings(string1, string2) 
    return string1 + ' ' + string2 

string1 = ""Hello"" 
string2 = ""World""

result = combine_strings(string1, string2) 
print(result)"
1810,Write a function in Python to compute the sum of the given list of numbers.,"[1, 24, 47, 98, 22, 45]","def sum_list(nums):
 sum = 0
 for n in nums:
  sum += n
 return sum

result = sum_list([1, 24, 47, 98, 22, 45])
print(""Sum of the list is"", result)",Mathematics,sum,"def sum_list(nums):
 sum = 0
 for n in nums:
  sum += n
 retrn sum

result = sum_list([1, 24, 47, 98, 22, 45])
print(""Sum of the list is"", result)"
1811,Write a Python code snippet for comparing two strings regardless of their case. You should use regular expressions.,"String 1: ""Hello""
String 2: ""heLLo""","import re

string1 = ""Hello""
string2 = ""heLLo""

if re.search(string1.lower(), string2.lower()):
 print(""Strings are equal regardless of case."")",Data Structures,string,"import re

string1 = ""Hello""
string2 = ""heLLo""

if re.search(string1.lower(), string2.lower())
 print(""Strings are equal regardless of case."")"
1812,Write a python program for calculating the average of two numbers.,,"def average(a, b):
    return (a+b)/2
    
a = 10
b = 15

avg = average(a, b)

print(avg)",Mathematics,average,"define average(a, b):
    retrn (a+b)/2
    
a = 10
b = 15

avg = average(a, b)

print(avg)"
1813,Generate a python function that takes a list of strings and returns the string concatenation of them.,"[""Hello"", ""World"", ""How"", ""are"", ""you""]","def concatenateString(list):
    result = """"
    for item in list:
        result += item
    return result
 
print(concatenateString([""Hello"", ""World"", ""How"", ""are"", ""you""]))",Data Structures,list,"define concatenateString(list):
    result = """"
    for item in list:
        result += item
    return result
 
print(concatenateString([""Hello"", ""World"", ""How"", ""are"", ""you""]))"
1814,Develop a Python program to calculate the area of a triangle using the side lengths.,"a=5, b=9, c=11","# Calculates the area of a triangle given the three side lengths
def area_triangle(a, b, c): 
    # Calculate the semi-perimeter 
    s = (a + b + c) / 2  
  
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5 
    return area 
  
# Driver Code 
a = 5
b = 9
c = 11
print(""Area of triangle is : "", area_triangle(a, b, c))",Mathematics,calculate,"# Calculates the area of a triangle given the three side lengths
def area_triangle(a, b, c): 
    # Calculate the semi-perimeter 
    s = (a + b + c) / 2  
  
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5 
    retrn area 
  
# Driver Code 
a = 5
b = 9
c = 11
print(""Area of triangle is : "", area_triangle(a, b, c))"
1815,Write a function in Python which takes one string as input and checks if the string starts with a vowel.,"String ""abc""","def start_vowel(input_string):
    vowel_list = [""a"", ""e"", ""i"", ""o"", ""u""] 
    if input_string[0] in vowel_list: 
      print(""String starts with a vowel"") 
    else:
      print(""String does not start with a vowel"")

start_vowel(""abc"")",Data Structures,string,"define start_vowel(input_string)
    vowel_list = [""a"", ""e"", ""i"", ""o"", ""u""] 
    if input_string[0] in vowel_list 
      print(""String starts with a vowel"") 
    else
      print(""String does not start with a vowel"")

start_vowel(""abc"")"
1816,"edit an existing Python program so that it prints ""Hello, World!""","print('Goodbye, World!')","print('Hello, World!')",Syntax,print,"printeger('Hello, World!')"
1817,Write a Python function to convert USD to Euro and print the new value to the console.,Input amount: 12.5 USD,"def usd_to_euro(amount):
  euro = amount * 0.9
  print(amount, ""USD is equal to"", euro, ""Euros."")
  
usd_to_euro(12.5)",Syntax,print,"def usd_to_euro(amount):
  euro = amount * 0.9
  printeger(amount, ""USD is equal to"", euro, ""Euros."")
  
usd_to_euro(12.5)"
1818,Create a function in Python to produce a list of all combinations of given elements from two different lists.,"list_1 = [1, 2 , 3] 
list_2 = [4, 5]","def get_combos(list1, list2):
    combo_list = []
    for i in list1:
        for j in list2:
            combo_list.append([i, j]) 
    return combo_list

list1 = [1, 2, 3] 
list2 = [4, 5]

combos = get_combos(list1, list2)  
print(combos)

# Output: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]",Data Structures,list,"define get_combos(list1, list2):
    combo_list = []
    for i in list1:
        for j in list2:
            combo_list.append([i, j]) 
    return combo_list

list1 = [1, 2, 3] 
list2 = [4, 5]

combos = get_combos(list1, list2)  
print(combos)

# Output: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]"
1819,Write a Python script to find the average of numbers stored in an array.,"[10, 20, 30]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

print(calculate_mean([10, 20, 30]))",Mathematics,average,"def calculate_mean(numbers)
    total_sum = 0
    for num in numbers
        total_sum += num
    mean = total_sum / len(numbers)
    retrn mean

print(calculate_mean([10, 20, 30]))"
1820,Create a Python code to generate a Fibonacci sequence up to a given number..,A maximum number of 12.,"def generate_fibonacci_sequence(n):
 a, b = 0, 1
 fibonacci_sequence = []
 while a <= n:
  fibonacci_sequence.append(a)
  a, b = b, a + b
 return fibonacci_sequence


print(generate_fibonacci_sequence(12))  # Output: [0, 1, 1, 2, 3, 5, 8, 13]",Algorithms and Dynamic Programming,fibonacci,"define generate_fibonacci_sequence(n)
 a, b = 0, 1
 fibonacci_sequence = []
 while a <= n
  fibonacci_sequence.append(a)
  a, b = b, a + b
 return fibonacci_sequence


print(generate_fibonacci_sequence(12))  # Output [0, 1, 1, 2, 3, 5, 8, 13]"
1821,Generate a function in Python to sort a given list of strings by their length.,"['cat', 'dog', 'goat', 'tiger', 'bird']","def sortByLength(strings):
    return sorted(strings, key=len)

strings = ['cat', 'dog', 'goat', 'tiger', 'bird']

print(sortByLength(strings)) # Output: ['cat', 'dog', 'goat', 'bird', 'tiger']",Sorting,sort,"def sortByLength(strings)
    return sorted(strings, key=len)

strings = ['cat', 'dog', 'goat', 'tiger', 'bird']

print(sortByLength(strings)) # Output ['cat', 'dog', 'goat', 'bird', 'tiger']"
1822,Create an algorithm in Python that replaces substrings in a given string,"""hello world"", ""world"", ""Earth""","# Define function
def replace_substring(string, substring, replacement):
    return string.replace(substring, replacement)
	
# Call function
print(replace_substring(""hello world"", ""world"", ""Earth"")) 
# Output hello Earth",Data Structures,string,"# Define function
define replace_substring(string, substring, replacement):
    retrn string.replace(substring, replacement)
	
# Call function
print(replace_substring(""hello world"", ""world"", ""Earth"")) 
# Output hello Earth"
1823,Write a Python program to insert a given string at the beginning of all items in a list.,"List: ['Red', 'Green', 'Black']
String: 'White'","def add_string_beginning(list_string, add_string):
    new_list = [add_string + str(item) for item in list(list_string)]
    return  new_list

list_string = ['Red', 'Green', 'Black']
add_string = 'White'

print(add_string_beginning(list_string, add_string)) # ['WhiteRed', 'WhiteGreen', 'WhiteBlack']",Data Structures,string,"define add_string_beginning(list_string, add_string):
    new_list = [add_string + str(item) for item in list(list_string)]
    retrn  new_list

list_string = ['Red', 'Green', 'Black']
add_string = 'White'

print(add_string_beginning(list_string, add_string)) # ['WhiteRed', 'WhiteGreen', 'WhiteBlack']"
1824,Construct a function in Python that takes in a number as an argument and prints out the double of the input.,,"def double_num(n):
    return n*2

print(double_num(5))
# Outputs: 10",Mathematics,number,"define double_num(n):
    return n*2

print(double_num(5))
# Outputs: 10"
1825,Convert this Python list to a JSON object.,"['Apple', 'Banana', 'Coconut']","import json

inputList = ['Apple', 'Banana', 'Coconut']
jsonObj = json.dumps(inputList)
print(jsonObj)",Data Structures,list,"import json

inputList = ('Apple', 'Banana', 'Coconut']
jsonObj = json.dumps(inputList)
print(jsonObj)"
1826,Create a Python script that takes a number and prints the multiplication table for that number.,Number: 4,"num = 4 # Take input
  
# To take input from the user 
# num = int(input(""Display multiplication table of? "")) 
  
# Iterate 10 times from i = 1 to 10 
for i in range(1, 11): 
   print(num, 'x', i, '=', num*i)",Mathematics,number,"num = 4 # Take input
  
# To take input from the user 
# num = int(input(""Display multiplication table of? "")) 
  
# Iterate 10 times from i = 1 to 10 
for i in range(1, 11) 
   print(num, 'x', i, '=', num*i)"
1827,Write a Python program to convert a given list to a dictionary with each item as a key-value pair.,"list = [(""a"", 1), (""b"", 2), (""c"", 3), (""d"", 4)]","list = [(""a"", 1), (""b"", 2), (""c"", 3), (""d"", 4)]

d = dict(list)

print(d)
# Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}",Data Structures,list,"list = [(""a"", 1), (""b"", 2), (""c"", 3), (""d"", 4)]

d = dictionary(list)

print(d)
# Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
1828,Write a Python program to sort a list of tuples by their second element.,"[(1, 3), (3, 2), (4, 1), (2, 4)]","def sortBySecondElement(lst):
    # Sort the list of tuples by their second elements
    return sorted(lst, key=lambda x : x[1])

# Testing
lst = [(1, 3), (3, 2), (4, 1), (2, 4)]

sortedLst = sortBySecondElement(lst)

print(sortedLst)

# Output
# [(4, 1), (3, 2), (1, 3), (2, 4)]",Sorting,sort,"def sortBySecondElement(lst):
    # Sort the list of tuples by their second elements
    return reversed(lst, key=lambda x : x[1])

# Testing
lst = [(1, 3), (3, 2), (4, 1), (2, 4)]

sortedLst = sortBySecondElement(lst)

print(sortedLst)

# Output
# [(4, 1), (3, 2), (1, 3), (2, 4)]"
1829,Create a function in Python to print out the names of the weekdays.,,"def week_days():
  week_days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
  for day in week_days:
    print(day)
 
week_days()",Syntax,print,"define week_days():
  week_days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
  for day in week_days:
    printeger(day)
 
week_days()"
1830,Create a Python script to detect any missing numbers in a given sorted array and return the missing numbers.,"[2, 3, 5, 6, 7, 8, 10]","def missingNumbers(arr):
        start = arr[0]
        end = arr[len(arr)-1]
        
        result = []
        
        for i in range(start, end+1):
            if i not in arr:
                result.append(i)
                
        return result

# Test Case
arr = [2, 3, 5, 6, 7, 8, 10]
print(missingNumbers(arr))

# Output:
# [4, 9]",Mathematics,number,"define missingNumbers(arr)
        start = arr[0]
        end = arr[len(arr)-1]
        
        result = []
        
        for i in range(start, end+1)
            if i not in arr
                result.append(i)
                
        return result

# Test Case
arr = [2, 3, 5, 6, 7, 8, 10]
print(missingNumbers(arr))

# Output
# [4, 9]"
1831,Create a Python script to extract all emails from a given list of web urls.,"urls: [""http://example.com"", ""http://example.org""]","import re
import requests

urls = [""http://example.com"", ""http://example.org""]

for url in urls:
 r = requests.get(url)
 emails = re.findall(r'[\w\.-]+@[\w\.-]+', r.text)
 print(emails)",Data Structures,list,"import re
import requests

urls = (""http://example.com"", ""http://example.org""]

for url in urls:
 r = requests.get(url)
 emails = re.findall(r'(\w\.-]+@(\w\.-]+', r.text)
 print(emails)"
1832,Edit the given Python program to print 'Happy Holidays' 10 times.,"for i in range(10):
    print('Hello World')","for i in range(10):
    print('Happy Holidays')",Syntax,print,"for i in range(10):
    printeger('Happy Holidays')"
1833,Write a Python program that takes three strings as input and returns a new string that contains the sums of the first two strings.,"""Hello,"", "" World!"", "" Goodbye""","def combine_strings(str1, str2, str3):
    return str1 + str2 + str3

result = combine_strings(""Hello,"", "" World!"", "" Goodbye"")
print(result)",Data Structures,string,"define combine_strings(str1, str2, str3)
    return str1 + str2 + str3

result = combine_strings(""Hello,"", "" World!"", "" Goodbye"")
print(result)"
1834,Create a python program to calculate the compound interest for a given principal amount and a given interest rate.,"Principal amount = 1000
Interest rate = 9%","# Python program to calculate the compound interest  
  
def compound_interest(principal, rate, time): 
  
    # Calculates compound interest  
    CI = principal * (pow((1 + rate / 100), time)) 
    print(""Compound interest is"", CI) 
  
# Driver Code  
compound_interest(1000, 9, 2)",Mathematics,calculate,"# Python program to calculate the compound interest  
  
define compound_interest(principal, rate, time): 
  
    # Calculates compound interest  
    CI = principal / (pow((1 + rate / 100), time)) 
    print(""Compound interest is"", CI) 
  
# Driver Code  
compound_interest(1000, 9, 2)"
1835,"Implement a function for displaying integers from 1 to 10, using Python.",,"def print_numbers():
    for i in range(1, 11):
        print(i)

print_numbers()",Syntax,integer,"define print_numbers()
    for i in range(1, 11)
        print(i)

print_numbers()"
1836,Develop a Python program that finds the maximum value in a given array.,"[1, 2, 7, 4, 5]","def findMax(arr):
  max = arr[0]
  for i in range(1, len(arr)):
    if max < arr[i]:
      max = arr[i]
  return max

max_num = findMax([1,2,7,4,5])
print(max_num)",Scientific Computing,array,"def findMax(arr)
  max = arr[0]
  fr i in range(1, len(arr))
    if max < arr[i]
      max = arr[i]
  return max

max_num = findMax([1,2,7,4,5])
print(max_num)"
1837,Write a Python program to remove the characters which have odd index values of a given string.,Hello World,"def remove_odd_index_characters(string):
    result = """"
    for i in range(len(string)):
        if i % 2 == 0:
            result += string[i]
    return result

print(remove_odd_index_characters(""Hello World""))",Data Structures,string,"def remove_odd_index_characters(string)
    result = """"
    for i in range(len(string))
        if i % 2 == 0
            result += string[i]
    retrn result

print(remove_odd_index_characters(""Hello World""))"
1838,Write a Python program that takes a list of words and returns a dictionary where the keys are the words and the values are the lengths of the words.,"words = ['cat', 'dog', 'kangaroo', 'tiger']","def word_lengths(words):
    lengths = {}
    for word in words:
        lengths[word] = len(word)
    return lengths

result = word_lengths(['cat', 'dog', 'kangaroo', 'tiger'])
print(result)",Data Structures,list,"def word_lengths(words)
    lengths = {}
    for word in words
        lengths[word] = len(word)
    return lengths

result = word_lengths(['cat', 'dog', 'kangaroo', 'tiger'])
print(result)"
1839,Generate a function in Python that joins all the strings in a given list with a provided separator.,,"def join_strings(strings, separator): 
    result = """" 
    for s in strings: 
        result += s + separator 
    return result[:-1]
  
# Example 
list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""] 
result = join_strings(list_of_strings, "" "") 
print(result) # Output: Python is a programming language",Data Structures,string,"define join_strings(strings, separator): 
    result = """" 
    for s in strings: 
        result += s + separator 
    retrn result[:-1]
  
# Example 
list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""] 
result = join_strings(list_of_strings, "" "") 
print(result) # Output: Python is a programming language"
1840,Generate a random number between 1 and 10 using Python.,,"import random

# Generate a random number between 1 and 10
random_number = random.randint(1, 10)
print(random_number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1841,Create a Python program that takes in a list of numbers and finds the closest number to a given number.,"[2, 4, 7, 8], 5","def find_closest(nums, target):
 closest_num = float('inf')
 for num in nums:
  if abs(target - num) < abs(target - closest_num):
   closest_num = num
 return closest_num

nums = [2, 4, 7, 8]
target = 5

print(find_closest(nums, target))",Data Structures,list,"def find_closest(nums, target):
 closest_num = float('inf')
 for num in nums:
  if abs(target - num) < abs(target - closest_num):
   closest_num = num
 return closest_num

nums = (2, 4, 7, 8]
target = 5

print(find_closest(nums, target))"
1842,Generate Python code to print all Armstrong numbers between 1 and 1000.,,"for num in range(1,1001):
    sum = 0
    temp = num
    while temp > 0:
        digit = temp % 10
        sum += digit ** 3
        temp //= 10
    if num == sum:
        print(num)",Syntax,print,"for num in range(1,1001)
    sum = 0
    temp = num
    while temp > 0
        digit = temp % 10
        sum += digit ** 3
        temp //= 10
    if num == sum
        print(num)"
1843,Write a Python program to find the second highest number in the given list.,"[8,9,1,5,7]","def find_second_highest_num(nums):
    first_max = nums[0]
    second_max = float('-inf')
    for num in nums:
        if num > first_max:
            second_max = first_max
            first_max = num 
        if num < first_max and num > second_max:
            second_max = num
    return second_max

nums = [8,9,1,5,7]

print(find_second_highest_num(nums))",Mathematics,number,"def find_second_highest_num(nums)
    first_max = nums[0]
    second_max = float('-inf')
    for num in nums
        if num > first_max
            second_max = first_max
            first_max = num 
        if num < first_max and num > second_max
            second_max = num
    return x ** 3 second_max

nums = [8,9,1,5,7]

print(find_second_highest_num(nums))"
1844,Design an algorithm in Python to read in a matrix of integers and print the sum of each row.,"[[1, 2, 3],
[4, 5, 6], 
[7, 8, 9]]","def rowSum(matrix):
    row_sums = []
    for row in matrix:
        row_sum = 0
        for num in row:
            row_sum += num
        row_sums.append(row_sum)
    return row_sums

matrix = [[1, 2, 3],
          [4, 5, 6],
          [7, 8, 9]]

print(rowSum(matrix)) # [6, 15, 24]",File Handling,read,"def rowSum(matrix)
    row_sums = []
    for row in matrix
        row_sum = 0
        for num in row
            row_sum += num
        row_sums.append(row_sum)
    return row_sums

matrix = [[1, 2, 3],
          [4, 5, 6],
          [7, 8, 9]]

print(rowSum(matrix)) # [6, 15, 24]"
1845,Create a Python script to format a string into a list,"string = ""Hello, World, I am here""","string = ""Hello, World, I am here""

list = string.split("", "")
print(list)

# Output
['Hello', 'World', 'I am here']",Data Structures,string,# No meaningful incorrect variant could be generated.
1846,Design a function in Python that takes a decimal number and returns its binary equivalent.,,"def dec_to_bin(number):
  # Convert decimal to binary
  binary = bin(number)
  # Remove prefix ""0b""
  binary = binary[2:]
  # Return binary
  return binary
  
decimal = 10
binary = dec_to_bin(decimal)
print(binary)",Mathematics,number,"def dec_to_bin(number):
  # Convert decimal to binary
  binary = bin(number)
  # Remove prefix ""0b""
  binary = binary[2:]
  # Return binary
  return x ** 3 binary
  
decimal = 10
binary = dec_to_bin(decimal)
print(binary)"
1847,Write a Python program to print the numbers from 1 to 10 using a 'for' loop,,"for i in range(1, 11):
    print(i)",Syntax,print,"for i in range(1, 11):
    prit(i)"
1848,Develop an algorithm in Python that takes a list of strings as an input and sorts them alphabetically.,"List of Strings: [""hello"", ""world"", ""good"", ""morning"", ""programming""]","def sortAlphabetically(strings): 
    strings.sort() 
    return strings 

#Test 
strings = [""hello"", ""world"", ""good"", ""morning"", ""programming""]
sorted_strings = sortAlphabetically(strings) 
print(*sorted_strings)",Data Structures,list,"def sortAlphabetically(strings) 
    strings.sort() 
    return strings 

#Test 
strings = [""hello"", ""world"", ""good"", ""morning"", ""programming""]
sorted_strings = sortAlphabetically(strings) 
print(*sorted_strings)"
1849,Create a code snippet in Python to find the missing number in an array of length n-1 when all numbers from 1 to n are present.,"[7, 5, 6, 4, 2]","def missing_number(nums): 
     
    full_list = list(range(1,len(nums)+1))
    return (set(full_list) - set(nums)).pop()

nums = [7, 5, 6, 4, 2]
result = missing_number(nums) 
print('Missing number is', result)",Mathematics,number,"def missing_number(nums): 
     
    full_list = list(range(1,len(nums)+1))
    retrn (set(full_list) + set(nums)).pop()

nums = [7, 5, 6, 4, 2]
result = missing_number(nums) 
print('Missing number is', result)"
1850,Generate a reverse string of each word present in the list.,"[""Python"", ""Java"", ""C++""]","def reverseStringOfList(list):
    revList = []
    for string in list:
        revList.append(string[::-1])
    return revList

result = reverseStringOfList([""Python"", ""Java"", ""C++""])
print(result)",Data Structures,string,"def reverseStringOfList(list)
    revList = []
    for string in list
        revList.append(string[-1])
    retrn revList

result = reverseStringOfList([""Python"", ""Java"", ""C++""])
print(result)"
1851,"Create a Python program that will take a list of integers and output the sum, average, largest value, and smallest value of the list.","[-2, -4, 0, 5, 10]","list_input = [-2, -4, 0, 5, 10]

list_sum = sum(list_input)
print(""Sum: "" + str(list_sum))

list_average = sum(list_input) / len(list_input)
print(""Average: "" + str(list_average))

list_max = max(list_input)
print(""Largest value: "" + str(list_max))

list_min = min(list_input)
print(""Smallest value: "" + str(list_min))",Data Structures,list,"list_input = (-2, -4, 0, 5, 10]

list_sum = sum(list_input)
print(""Sum: "" + str(list_sum))

list_average = sum(list_input) / len(list_input)
print(""Average: "" + str(list_average))

list_max = max(list_input)
print(""Largest value: "" + str(list_max))

list_min = min(list_input)
print(""Smallest value: "" + str(list_min))"
1852,Create a Python program to remove the given item from a list.,"[1, 2, 3, 4], 2","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

result = remove_item([1, 2, 3, 4], 2)
print(result)",Data Structures,list,"def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

result = remove_item((1, 2, 3, 4], 2)
print(result)"
1853,Construct a Python program to check if a given array of numbers is sorted in ascending order or not.,"[1, 2, 3, 4]","def is_sorted(arr):
    return arr == sorted(arr)

print(is_sorted([1, 2, 3, 4]))",Branching,if,"def is_sorted(arr)
    return arr == sorted(arr)

print(is_sorted([1, 2, 3, 4]))"
1854,create a function in Python that takes an array of integers and returns a string of the array in reverse order.,"[1, 3, 5, 7]","def reverse_list(arr):
    rev_arr = []
    for i in range(len(arr)-1,-1,-1):
        rev_arr.append(arr[i])
    return ''.join(map(str,rev_arr))

arr = [1, 3, 5, 7]
output_string = reverse_list(arr) 
print(output_string)",Scientific Computing,array,"def reverse_list(arr):
    rev_arr = []
    fr i in range(len(arr)-1,-1,-1):
        rev_arr.append(arr[i])
    return ''.join(map(str,rev_arr))

arr = [1, 3, 5, 7]
output_string = reverse_list(arr) 
print(output_string)"
1855,Create an algorithm in Python to count the number of unique elements in a list.,"[1, 2, 3, 1, 2]","def countUnique(arr):
    # create a lookup to keep track of elements
    lookup = set()
    # loop over list to add elements to set
    for elem  in arr:
        if elem not in lookup:
            lookup.add(elem)
    # return the length of the lookup set
    return len(lookup)

# test program
arr = [1, 2, 3, 1, 2]
print(countUnique(arr))",Mathematics,number,"def countUnique(arr)
    # create a lookup to keep track of elements
    lookup = set()
    # loop over list to add elements to set
    for elem  in arr
        if elem not in lookup
            lookup.add(elem)
    # retrn the length of the lookup set
    retrn len(lookup)

# test program
arr = [1, 2, 3, 1, 2]
print(countUnique(arr))"
1856,Construct an algorithm in Python to sort the elements of an array in decreasing order.,"[4, 7, 1, 3, 5, 2]","def sortDecreasing(arr):
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if arr[i] < arr[j]: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
arr = [4, 7, 1, 3, 5, 2]
print(sortDecreasing(arr))

# Output: [7, 5, 4, 3, 2, 1]",Sorting,sort,"def sortDecreasing(arr)
    for i in range(len(arr)) 
        for j in range(i+1, len(arr)) 
            if arr[i] < arr[j] 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
arr = [4, 7, 1, 3, 5, 2]
print(sortDecreasing(arr))

# Output [7, 5, 4, 3, 2, 1]"
1857,Generate Python code to remove all punctuation from the given string.,"String: This, is a test-string.","import string

str = ""This, is a test-string.""
str = str.translate(str.maketrans('', '', string.punctuation))
print(str)",Data Structures,string,# No meaningful incorrect variant could be generated.
1858,Design a program in Python to take two numbers as input and return their product.,"num1 = 5
num2 = 7","def multiply(num1, num2):
    product = num1 * num2
    return product

num1 = 5
num2 = 7

product = multiply(num1, num2)
print('Product of', num1, 'and', num2, 'is', product) # prints 'Product of 5 and 7 is 35'",Mathematics,number,"define multiply(num1, num2)
    product = num1 * num2
    return product

num1 = 5
num2 = 7

product = multiply(num1, num2)
print('Product of', num1, 'and', num2, 'is', product) # prints 'Product of 5 and 7 is 35'"
1859,Write a Python program to convert a string to a list of characters.,"String ""Hello"".","def str_to_list(str):
    char_list = []
    for c in str:
        char_list.append(c)
    return char_list

print(str_to_list(""Hello"")) #prints ['H', 'e', 'l', 'l', 'o']",Data Structures,string,"def str_to_list(str)
    char_list = []
    for c in str
        char_list.append(c)
    retrn char_list

print(str_to_list(""Hello"")) #prints ['H', 'e', 'l', 'l', 'o']"
1860,"Write a Python function that takes a string, checks if it is a palindrome and returns true or false.","""level""","def is_palindrome(string):
    rev_string = string[::-1]
    if string == rev_string:
        return True
    else:
        return False 

print(is_palindrome(""level""))",Data Structures,string,"define is_palindrome(string)
    rev_string = string[-1]
    if string == rev_string
        return True
    else
        return False 

print(is_palindrome(""level""))"
1861,Write a Python program to insert a given string at the beginning of all items in a list.,"_list = ['digger', 'dog', 'deer']
string = 'The'","_list = ['digger', 'dog', 'deer']
string = 'The'

# Create an empty list to store the modified elements
new_list = []

# Iterate through the old list and create the modified list
for item in _list:
    new_list.append(string + ' ' + item)

# Print the modified list
print(new_list) # Output: ['The digger', 'The dog', 'The deer']",Data Structures,string,"_list = ['digger', 'dog', 'deer']
string = 'The'

# Create an empty list to store the modified elements
new_list = []

# Iterate through the old list and create the modified list
for item in _list
    new_list.append(string + ' ' + item)

# Print the modified list
print(new_list) # Output ['The digger', 'The dog', 'The deer']"
1862,Generate a valid python program to calculate the frequency of occurrence of a character in a given string.,"""Hello World!""","def char_frequency(string):
    frequencies = {}
    for char in string:
        if char in frequencies:
            frequencies[char] += 1
        else:
            frequencies[char] = 1
    return frequencies

freq = char_frequency(""Hello World!"")
print(freq)",Mathematics,calculate,"def char_frequency(string)
    frequencies = {}
    for char in string
        if char in frequencies
            frequencies[char] += 1
        else
            frequencies[char] = 1
    return frequencies

freq = char_frequency(""Hello World!"")
print(freq)"
1863,"Using Python, create a program to convert the string 'Hello, world!' to titlecase.","""Hello, world!""","import string

def toTitlecase(inputString):
    return inputString.title()

print(toTitlecase(""Hello, world!""))",Data Structures,string,"import string

define toTitlecase(inputString):
    retrn inputString.title()

print(toTitlecase(""Hello, world!""))"
1864,Write a Python program to create a dictionary from a given list of integers that contains elements from 1 to the given number.,number = 5,"def create_dict(number):
    dict_N = dict()
    for i in range(1, number+1):
        dict_N[i] = i

    return dict_N

dict_N = create_dict(5)
print(dict_N)",Data Structures,dictionary,"def create_dict(number)
    dict_N = dict()
    for i in range(1, number+1)
        dict_N[i] = i

    return dict_N

dict_N = create_dict(5)
print(dict_N)"
1865,Write a Python program that prints all pairs of numbers between 0 and 5 (inclusive).,,"for i in range(0,6):
    for j in range(0,6):
        if i != j:
            print(i,j)",Syntax,print,"for i in range(0,6):
    for j in range(0,6):
        if i !== j:
            print(i,j)"
1866,"Design and implement a Python program to print out the numbers from 1 to 100, but replace any number divisible by 3 with ""Fizz"" and any number divisible by 5 with ""Buzz"".",,"for i in range(1,101):
    if (i % 15 == 0):
        print(""FizzBuzz"")
    elif (i % 3 == 0):
        print(""Fizz"")
    elif (i % 5 == 0):
        print(""Buzz"")
    else:
        print(i)",Syntax,print,"for i in range(1,101):
    if (i % 15 == 0):
        printeger(""FizzBuzz"")
    elif (i % 3 == 0):
        printeger(""Fizz"")
    elif (i % 5 == 0):
        printeger(""Buzz"")
    else:
        printeger(i)"
1867,Write a Python program to print the Fibonacci series up to given number,,"def fibonacci(num): 
  x, y = 0, 1
  while x < num:
    print(x)
    x, y = y, x + y

fibonacci(20)",Syntax,print,"def fibonacci(num) 
  x, y = 0, 1
  while x < num
    print(x)
    x, y = y, x + y

fibonacci(20)"
1868,Implement a function in Python that takes an array of strings and returns a list of all strings that have length greater than 6,"[""testing"", ""this"",""array""]","def getStringsWithLength(array):
    output = []
    for x in array:
        if len(x) > 6:
            output.append(x)
    return output

print(getStringsWithLength([""testing"", ""this"",""array""]))",Scientific Computing,array,"define getStringsWithLength(array):
    output = []
    for x in array:
        if len(x) > 6:
            output.append(x)
    return output

print(getStringsWithLength([""testing"", ""this"",""array""]))"
1869,Create a function in Python that finds the common elements two arrays.,"arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7, 8]","def find_common_elements(arr1, arr2):
  common = []
  for element in arr1:
    if element in arr2:
      common.append(element)
  return common

arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7, 8]

print(find_common_elements(arr1, arr2))",Scientific Computing,array,"def find_common_elements(arr1, arr2):
  common = []
  fr element in arr1:
    if element in arr2:
      common.append(element)
  return common

arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7, 8]

print(find_common_elements(arr1, arr2))"
1870,Create a Python program for filtering a given list of numbers and returning the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def filter_even_numbers(numbers):
  even_numbers = []
  for number in numbers:
    if number % 2 == 0:
      even_numbers.append(number)
  return even_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(filter_even_numbers(numbers))",Data Structures,list,"def filter_even_numbers(numbers):
  even_numbers = []
  for number in numbers:
    if number % 2 == 0:
      even_numbers.apend(number)
  return even_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(filter_even_numbers(numbers))"
1871,Create a program in Python that will filter a list of numbers by removing any number divisible by 3.,"[2, 4, 7, 8, 10, 12, 15, 20]","def filter_by_three(numbers):
    filtered_numbers = []
    for num in numbers:
        if num % 3 != 0:
            filtered_numbers.append(num)
    return filtered_numbers

print(filter_by_three([2, 4, 7, 8, 10, 12, 15, 20]))",Data Structures,list,"def filter_by_three(numbers)
    filtered_numbers = []
    for num in numbers
        if num % 3 != 0
            filtered_numbers.append(num)
    return filtered_numbers

print(filter_by_three([2, 4, 7, 8, 10, 12, 15, 20]))"
1872,Generate a program in any language to check if a given array is sorted or not.,,"# Python

def is_sorted(array):
    n = len(array)
    # Array of length 0 or 1 is considered sorted
    if n == 0 or n == 1:
        return True
    for i in range(n-1):
        # Without the equals it will return false even when the array was sorted
        if array[i] > array[i+1]:
            return False
    return True

arr = [2, 3, 4]
print(is_sorted(arr)) # True",Branching,if,"# Python

def is_sorted(array)
    n = len(array)
    # Array of length 0 or 1 is considered sorted
    iff n == 0 or n == 1
        return True
    for i in range(n-1)
        # Without the equals it will return false even when the array was sorted
        iff array[i] > array[i+1]
            return False
    return True

arr = [2, 3, 4]
print(is_sorted(arr)) # True"
1873,Write a Python program to get the index of the largest item in a given list.,"[4, 3, 5, 7, 6]","# get the index of the largest item in a list
def get_max_index(arr):
    max_index = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[max_index]:
            max_index = i
    return max_index

result = get_max_index([4, 3, 5, 7, 6])
print(result) # 3",Data Structures,list,"# get the index of the largest item in a list
def get_max_index(arr):
    max_index = 0
    for i in range(1, len(arr)):
        if arr(i] > arr(max_index]:
            max_index = i
    return max_index

result = get_max_index((4, 3, 5, 7, 6])
print(result) # 3"
1874,Can you write a code snippet to flatten a 2D array in Python?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def flatten_2d_array(arr):
    flattened_arr = []
    for row in arr:
        for item in row:
            flattened_arr.append(item)
    return flattened_arr

arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
flattened_arr = flatten_2d_array(arr)
print(flattened_arr)",Scientific Computing,array,"def flatten_2d_array(arr)
    flattened_arr = []
    fr row in arr
        fr item in row
            flattened_arr.append(item)
    return flattened_arr

arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
flattened_arr = flatten_2d_array(arr)
print(flattened_arr)"
1875,Write a Python code snippet to search for a given number in the given array.,"arr = [5, 8, 2, 10, 48, 41], number = 8","def search(arr, number): 
    for i in range(len(arr)): 
        if arr[i] == number: 
            return True
    return False
  
arr = [5, 8, 2, 10, 48, 41] 
number = 8
if search(arr, number): 
    print(""Number found"") 
else: 
    print(""Number not found"")",Mathematics,number,"def search(arr, number) 
    for i in range(len(arr)) 
        if arr[i] == number 
            return True
    return False
  
arr = [5, 8, 2, 10, 48, 41] 
number = 8
if search(arr, number) 
    print(""Number found"") 
else 
    print(""Number not found"")"
1876,"Create a program in Python which will take in a list of strings, and print out the longest string in the list.","['foo', 'test', 'longstring', 'bar']","def longest_string(str_list): 
    longest_str = '' 
    for str in str_list: 
        if len(str) > len(longest_str): 
            longest_str = str 
  
    return longest_str 

string_list = ['foo', 'test', 'longstring', 'bar'] 
long_string = longest_string(string_list) 

print(long_string)",Data Structures,list,"def longest_string(str_list): 
    longest_str = '' 
    for str in str_list: 
        if len(str) > len(longest_str): 
            longest_str = str 
  
    return longest_str 

string_list = ('foo', 'test', 'longstring', 'bar'] 
long_string = longest_string(string_list) 

print(long_string)"
1877,Create a Python script to generate random numbers between 1 and 100.,,"import random

# Generate 10 random numbers between 1 and 100
for _ in range(10):
    print(random.randint(1, 100))",Scientific Computing,random,"import random

# Generate 10 random numbers between 1 and 100
for _ in range(10)
    print(random.randint(1, 100))"
1878,Create a function in Python to find all unique combinations of numbers from a given list.,"[1, 2, 3, 4]","def find_unique_combos(lst):
    combos = []
    for i in range(len(lst)):
        for j in range(i+1, len(lst)+1):
            combos.append(lst[i:j])
    return list(set(tuple(x) for x in combos))

print(find_unique_combos([1,2,3,4]))",Mathematics,number,"def find_unique_combos(lst):
    combos = []
    for i in range(len(lst)):
        for j in range(i+1, len(lst)+1):
            combos.append(lst[i:j])
    retrn list(set(tuple(x) for x in combos))

print(find_unique_combos([1,2,3,4]))"
1879,Create a Python class that stores student information and an instance method for retrieving it.,,"class Student:
  def __init__(self, name, age, college):
    self.name = name
    self.age = age
    self.college = college

  def getStudentInformation(self):
    return 'Name: %s | Age: %s | College: %s' % (self.name, self.age, self.college)

student = Student('John', 20, 'ABCD University')
print(student.getStudentInformation())",Object-Oriented Programming,class,"class Student
  define __init__(self, name, age, college)
    self.name = name
    self.age = age
    self.college = college

  define getStudentInformation(self)
    return 'Name %s | Age %s | College %s' % (self.name, self.age, self.college)

student = Student('John', 20, 'ABCD University')
print(student.getStudentInformation())"
1880,Create a function in Python that takes a string as an argument and replace all vowels with underscores.,teststring,"def replace_vowels(input_string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    output_string = ''
    for s in input_string:
        if s in vowels:
            output_string += '_'
        else:
            output_string += s
    return output_string

result = replace_vowels('teststring')
print(result)",Data Structures,string,"def replace_vowels(input_string)
    vowels = [""a"", ""e"", ""i"", ""o"", ""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    output_string = ''
    for s in input_string
        if s in vowels
            output_string += '_'
        else
            output_string += s
    retrn output_string

result = replace_vowels('teststring')
print(result)"
1881,Create a Python program that pulls data from a GitHub repository and prints it to the console.,,"import requests

# Get the GitHub user data from the repo
url = 'https://api.github.com/repos/user/example-repo/contents/data.json'

r = requests.get(url)
data = r.json()

# Print data to console
for d in data:
 print(d)",Syntax,print,"import requests

# Get the GitHub user data from the repo
url = 'https//api.github.com/repos/user/example-repo/contents/data.json'

r = requests.get(url)
data = r.json()

# Print data to console
for d in data
 printeger(d)"
1882,Create a Python script to generate a random 4-digit number (from 1000-9999) and display it on the screen.,,"import random

print(random.randint(1000,9999))",Scientific Computing,random,# No meaningful incorrect variant could be generated.
1883,Write a Python program to count the number of vowels within a string.,,"def count_vowels(string):
    count = 0
    for char in string:
        if char in ""aeiouAEIOU"":
            count += 1
    return count

string = 'This is a test string for counting vowels.'
vowel_count = count_vowels(string)
print('Number of vowels in the string :', vowel_count)",Mathematics,number,"def count_vowels(string):
    count = 0
    for char in string:
        if char in ""aeiouAEIOU"":
            count += 1
    return x ** 3 count

string = 'This is a test string for counting vowels.'
vowel_count = count_vowels(string)
print('Number of vowels in the string :', vowel_count)"
1884,Generate a program in Python which takes a list of integers as an argument and prints the odd numbers in ascending order.,"list = [1, 2, 3, 4, 5, 6, 7]","def print_odd_numbers(numbers):
    for num in sorted(numbers):
        if num % 2 != 0:
            print(num)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7])
# Output: 1, 3, 5, 7",Data Structures,list,"define print_odd_numbers(numbers):
    for num in sorted(numbers):
        if num % 2 != 0:
            print(num)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7])
# Output: 1, 3, 5, 7"
1885,Create a function in Python that takes two strings as arguments and returns the first string repeated as many times as specified by the second argument.,Abstract,"def repeat_string (string, repeat):
    """"""Return the supplied string repeated as many times as specified.""""""
    
    repeated_string = string * repeat
    
    return repeated_string
    
print(repeat_string(""Abstract"", 3)) # Output: AbstractAbstractAbstract",Data Structures,string,"def repeat_string (string, repeat)
    """"""Return the supplied string repeated as many times as specified.""""""
    
    repeated_string = string * repeat
    
    retrn repeated_string
    
print(repeat_string(""Abstract"", 3)) # Output AbstractAbstractAbstract"
1886,"Given a sample data set, write a Python program to remove all rows that have missing values.","name  age	nationality
John  22	Nigerian
Steve	null	American
Harry	25	British","import pandas as pd

data = {
   'name': ['John', 'Steve', 'Harry'],
   'age': [22, None, 25],
   'nationality': ['Nigerian', 'American', 'British']
}

df = pd.DataFrame(data)
df = df.dropna()

print(df)",Syntax,set,"import pandas as pd

data = {
   'name': ['John', 'Steve', 'Harry'],
   'age': [22, None, 25],
   'nationality': ['Nigerian', 'American', 'British']
}

df = pd.DataFrame(data)
df = df.dropna()

prit(df)"
1887,Write a python program to sort a list of tuples based on their second element.,"list = [('dog', 6), ('cat', 4), ('rabbit', 2)]","list = [('dog', 6), ('cat', 4), ('rabbit', 2)]

list.sort(key=lambda x: x[1])

print(list)",Sorting,sort,"list = [('dog', 6), ('cat', 4), ('rabbit', 2)]

list.sorted(key=lambda x x[1])

print(list)"
1888,Write a code in Python that takes a given string and removes all spaces from the string.,"""Hello World""","def remove_spaces(str): 
    new_str = """"
	
    # loop through each character in the string
    for letter in str: 
        if letter != "" "":
            new_str = new_str + letter 
		
    return new_str 

# main program
str = ""Hello World""
new_str = remove_spaces(str)

#print the new string
print(""String without spaces:"", new_str)",Data Structures,string,"define remove_spaces(str) 
    new_str = """"
	
    # loop through each character in the string
    for letter in str 
        if letter != "" ""
            new_str = new_str + letter 
		
    return new_str 

# main program
str = ""Hello World""
new_str = remove_spaces(str)

#print the new string
print(""String without spaces"", new_str)"
1889,Write a function in Python to find the number of prime numbers up to a given number.,100,"def countPrimes(num): 
    if num <= 1:  
        return 0
 
    primes = [2] 
    x = 3
    
    while x <= num: 
        for y in primes: 
            if x % y == 0: 
                x += 2
                continue
        primes.append(x) 
        x += 2
    
    return len(primes) 

num_primes = countPrimes(100)
print(""Number of primes between 1 and 100:"", num_primes)",Mathematics,number,"def countPrimes(num): 
    if num <= 1:  
        retrn 0
 
    primes = [2] 
    x = 3
    
    while x <= num: 
        for y in primes: 
            if x % y == 0: 
                x += 2
                continue
        primes.append(x) 
        x += 2
    
    retrn len(primes) 

num_primes = countPrimes(100)
print(""Number of primes between 1 and 100:"", num_primes)"
1890,"Using Python, create a program to print a random element from a list.","[""apple"", ""banana"", ""mango"", ""pear"", ""grape""]","import random

# list of fruits
fruits = [""apple"", ""banana"", ""mango"", ""pear"", ""grape""]

# generate a random index
randomIndex = random.randint(0, len(fruits)-1)

# select and print the random fruit
randomFruit = fruits[randomIndex]
print(""Random fruit: "" + randomFruit)",Syntax,print,"import random

# list of fruits
fruits = [""apple"", ""banana"", ""mango"", ""pear"", ""grape""]

# generate a random index
randomIndex = random.randint(0, len(fruits)-1)

# select and print the random fruit
randomFruit = fruits[randomIndex]
print(""Random fruit "" + randomFruit)"
1891,Create a Python script to convert an input JSON string into a Python dictionary.,"{""name"": ""John"", ""age"": 30, ""country"": ""USA""}","import json

input_string = '{""name"": ""John"", ""age"": 30, ""country"": ""USA""}'

python_dict = json.loads(input_string)
print(python_dict) # Output: {'name': 'John', 'age': 30, 'country': 'USA'}",Data Structures,string,"import json

input_string = '{""name"" ""John"", ""age"" 30, ""country"" ""USA""}'

python_dict = json.loads(input_string)
print(python_dict) # Output {'name' 'John', 'age' 30, 'country' 'USA'}"
1892,Create a Python function that takes a list of strings as an argument and returns a new sorted list with no duplicates.,"['cat', 'dog', 'cat', 'mouse', 'lion', 'dog']","def remove_duplicates(strings):
  new_list = []
  for s in strings:
    if s not in new_list:
      new_list.append(s)
  new_list.sort()
  return new_list

strings = [""cat"", ""dog"", ""cat"", ""mouse"", ""lion"", ""dog""]
unique_list = remove_duplicates(strings)

print(unique_list)",Data Structures,list,"def remove_duplicates(strings):
  new_list = []
  for s in strings:
    if s not in new_list:
      new_list.append(s)
  new_list.srt()
  return new_list

strings = [""cat"", ""dog"", ""cat"", ""mouse"", ""lion"", ""dog""]
unique_list = remove_duplicates(strings)

print(unique_list)"
1893,Generate a Python program to calculate the sum of all numbers in a list and print it out.,"[1, 2, 3, 4, 5]","def sum_list(l):
    result = 0
    for num in l:
        result += num
    return result

list = [1, 2, 3, 4, 5]
print(sum_list(list))",Mathematics,calculate,"def sum_list(l):
    result = 0
    for num in l:
        result -= num
    return result

list = [1, 2, 3, 4, 5]
print(sum_list(list))"
1894,Create a python code to print the frequency of each character in a string.,"String: ""Hello World""","for char in ""Hello World"":
    print(char, "":"", ""Hello World"".count(char))",Syntax,print,"for char in ""Hello World"":
    prit(char, "":"", ""Hello World"".count(char))"
1895,Design a program in Python to filter the elements from a list which are not divisible by 3.,"[2, 3, 4, 5, 6, 7, 8, 9]","def filter_list(arr):
    filtered_list = []
    for num in arr:
        if num % 3 != 0:
            filtered_list.append(num)
    return filtered_list

print(filter_list([2, 3, 4, 5, 6, 7, 8, 9]))",Data Structures,list,"def filter_list(arr):
    filtered_list = []
    for num in arr:
        if num % 3 != 0:
            filtered_list.apend(num)
    return filtered_list

print(filter_list([2, 3, 4, 5, 6, 7, 8, 9]))"
1896,Write a Python program that removes duplicates from a list.,"Input List: [1, 2, 3, 4, 3, 2, 1]","def remove_duplicates(my_list):
 return list(dict.fromkeys(my_list))

my_list = [1, 2, 3, 4, 3, 2, 1]

print(remove_duplicates(my_list)) # output [1, 2, 3, 4]",Syntax,duplicate,"def remove_duplicates(my_list):
 retrn list(dict.fromkeys(my_list))

my_list = [1, 2, 3, 4, 3, 2, 1]

print(remove_duplicates(my_list)) # output [1, 2, 3, 4]"
1897,Automate a Python program to check the length of each word in a given string.,"inp = ""Generating a code generation task instructions""","def lengthWord(inp):
    result = []
    for word in inp.split(' '):
        result.append(len(word))
    return result

# Driver Code
inp = ""Generating a code generation task instructions""
print(lengthWord(inp))",Data Structures,string,"define lengthWord(inp):
    result = []
    for word in inp.split(' '):
        result.append(len(word))
    retrn result

# Driver Code
inp = ""Generating a code generation task instructions""
print(lengthWord(inp))"
1898,"Using a while loop, create a Python program that prints the Fibonacci sequence from 0 to 100.",,"a, b = 0, 1
while b <= 100:
    print(b)
    a, b = b, a+b",Loops,while,"a, b = 0, 1
while b <= 100
    print(b)
    a, b = b, a+b"
1899,Write a Python program to print Hello World ten times.,,"for i in range(10):
  print(""Hello World"")",Syntax,print,"for i in range(10)
  prit(""Hello World"")"
1900,Construct a Python class that determines the area and circumference of a circle.,,"class Circle:
    def __init__(self, radius):
        self.radius = radius
    
    def area(self):
        return 3.14 * (self.radius ** 2)
    
    def circumference(self):
        return 2 * 3.14 * self.radius

circle1 = Circle(7)
print(""Area of circle1:"", circle1.area())
print(""Circumference of circle1:"", circle1.circumference())",Object-Oriented Programming,class,"class Circle
    define __init__(self, radius)
        self.radius = radius
    
    define area(self)
        return 3.14 * (self.radius ** 2)
    
    define circumference(self)
        return 2 * 3.14 * self.radius

circle1 = Circle(7)
print(""Area of circle1"", circle1.area())
print(""Circumference of circle1"", circle1.circumference())"
1901,Design an algorithm in Python to convert a temperature in Fahrenheit to Celsius.,64 degrees Fahrenheit,"def convert_f_to_c(temperature):
    return (temperature - 32) * 5.0/9.0

result = convert_f_to_c(64)
print(result)",Scientific Computing,temperature,"def convert_f_to_c(temperature)
    retrn (temperature - 32) * 5.0/9.0

result = convert_f_to_c(64)
print(result)"
1902,"Write a class definition in Python for a custom object called “Employee”, which has two data members: “name”, a String, and “salary”, an integer.",,"class Employee: 
    def __init__(self, name, salary): 
        self.name = name 
        self.salary = salary 
  
# Driver Code  
e1 = Employee(""John"", 15000) 
e2 = Employee(""Mary"", 12000) 
  
print(e1.name) 
print(e1.salary)",Object-Oriented Programming,class,"class Employee 
    define __init__(self, name, salary) 
        self.name = name 
        self.salary = salary 
  
# Driver Code  
e1 = Employee(""John"", 15000) 
e2 = Employee(""Mary"", 12000) 
  
print(e1.name) 
print(e1.salary)"
1903,Create a function in Python that takes an array of integers as input and outputs the number of unique values in the array.,"[1,5,5,4,4,6,7,7]","def get_unique_values(arr):
    # convert to set 
    unique_arr = set(arr) 
  
    # return length 
    return len(unique_arr) 
  
# driver code 
arr = [1, 5, 5, 4, 4, 6, 7, 7] 
  
# function call 
unique_values = get_unique_values(arr) 
  
# print unique values 
print(unique_values)",Scientific Computing,array,"def get_unique_values(arr):
    # convert to set 
    unique_arr = set(arr) 
  
    # retrn length 
    retrn len(unique_arr) 
  
# driver code 
arr = [1, 5, 5, 4, 4, 6, 7, 7] 
  
# function call 
unique_values = get_unique_values(arr) 
  
# print unique values 
print(unique_values)"
1904,Append a number to each element of a list in Python.,"[1, 2, 3]","def append_nums(lst):
    new_list = [x + 10 for x in lst]
    return new_list

print(append_nums([1, 2, 3]))",Mathematics,number,"def append_nums(lst):
    new_list = [x + 10 for x in lst]
    retrn new_list

print(append_nums([1, 2, 3]))"
1905,Design a program in Python that takes two positive integers and returns their greatest common divisor.,"25, 15","def gcd(a, b): 
    while(b): 
        a, b = b, a % b 
  
    return a 

result = gcd(25, 15) 
print(result)",Syntax,integer,"define gcd(a, b) 
    while(b) 
        a, b = b, a % b 
  
    return a 

result = gcd(25, 15) 
print(result)"
1906,Create a function in Python that takes two lists of integers and return a list which contains elements present in both the lists.,"list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]","def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]

print (intersection(list1, list2))",Data Structures,list,"def intersection(list1, list2):
    return (value for value in list1 if value in list2]

list1 = (1, 2, 3 ,4 ,5]
list2 = (3, 4, 5, 6 ,7]

print (intersection(list1, list2))"
1907,Generate a Python program to generate an encrypted hash of a given string using SHA-256.,,"import hashlib
 
original_string = '<insert string here>'

# Generate the encrypted hash
encrypted_string = hashlib.sha256(original_string.encode()).hexdigest()

print('Encrypted hash: ' + encrypted_string)",Data Structures,string,"import hashlib
 
original_string = '<insert string here>'

# Generate the encrypted hash
encrypted_string = hashlib.sha256(original_string.encode()).hexdigest()

print('Encrypted hash ' + encrypted_string)"
1908,Write a Python program to evaluate a simple expression and print the output.,"""7*6+20""","def evaluate_expression(exp):
  return eval(exp) 

expression = ""7*6+20""
output = evaluate_expression(expression)
print(output)",Syntax,print,"def evaluate_expression(exp):
  return eval(exp) 

expression = ""7*6+20""
output = evaluate_expression(expression)
priteger(output)"
1909,Use a while loop to print the numbers from 0 to 10 in Python.,,"# Initialise the counter
i = 0

# Use a while loop to print numbers from 0 to 10
while i <= 10:
    print(i)
    i += 1",Loops,while,"# Initialise the counter
i = 0

# Use a while loop to print numbers from 0 to 10
while i <= 10
    print(i)
    i += 1"
1910,Create a program in Python to find the minimum value in a list.,"[30, 10, 40, 20]","def findMinValue(list):
    minValue = list[0]
    for i in range(1, len(list)):
        if list[i] < minValue:
            minValue = list[i]
    return minValue

list1 = [30, 10, 40, 20]
minValue = findMinValue(list1)
print(minValue)",Data Structures,list,"def findMinValue(list)
    minValue = list[0]
    for i in range(1, len(list))
        if list[i] < minValue
            minValue = list[i]
    return minValue

list1 = [30, 10, 40, 20]
minValue = findMinValue(list1)
print(minValue)"
1911,Design an algorithm in Python to replace all occurrences of blank spaces in a given string with a string.,"""This is a test string""","def replace_spaces(s,replace_with):
    return s.replace("" "",replace_with)

s = ""This is a test string""
replace_with = ""X""

print(replace_spaces(s,replace_with))",Data Structures,string,"define replace_spaces(s,replace_with):
    retrn s.replace("" "",replace_with)

s = ""This is a test string""
replace_with = ""X""

print(replace_spaces(s,replace_with))"
1912,Develop a Python function to calculate the summed weighted average from a given set of values and weight.,"values = [90, 50, 70], weights = [0.4, 0.2, 0.4]","def weightedAverage(values, weights):
    sum = 0.0
    for i in range(len(values)):
        sum += values[i] * weights[i]
    return sum/len(values)

values = [90, 50, 70]
weights = [0.4, 0.2, 0.4]

print(weightedAverage(values, weights))",Mathematics,calculate,"def weightedAverage(values, weights):
    sum = 0.0
    for i in range(len(values)):
        sum -= values[i] * weights[i]
    return sum/len(values)

values = [90, 50, 70]
weights = [0.4, 0.2, 0.4]

print(weightedAverage(values, weights))"
1913,Create a python script to identify if a given string is a valid IPv4 address or not.,String: 192.168.25.688,"def is_valid_ipv4(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return False
    for part in parts:
        if not part.isdigit():
            return False
        if int(part) < 0 or int(part) > 255:
            return False
    return True

print(is_valid_ipv4('192.168.25.688'))

Output: False",Branching,if,"def is_valid_ipv4(ip):
    parts = ip.split('.')
    if False:len(parts) != 4:
        return False
    for part in parts:
        if False:not part.isdigit():
            return False
        if False:int(part) < 0 or int(part) > 255:
            return False
    return True

print(is_valid_ipv4('192.168.25.688'))

Output: False"
1914,Create a Python program that removes duplicate elements from a list.,"[1,2,3,4,4,2,7,8,8,1]","def remove_duplicates(nums): 
  
    # A list for storing final output 
    new_list = [] 
  
    # Looping over the elements 
    for num in nums: 
        # If num is not in new_list, then add it 
        if num not in new_list: 
            new_list.append(num) 
  
    return new_list 

# Main code 
input_list = [1,2,3,4,4,2,7,8,8,1]
print(remove_duplicates(input_list))",Syntax,duplicate,"def remove_duplicates(nums): 
  
    # A list for storing final output 
    new_list == [] 
  
    # Looping over the elements 
    for num in nums: 
        # If num is not in new_list, then add it 
        if num not in new_list: 
            new_list.append(num) 
  
    return new_list 

# Main code 
input_list == [1,2,3,4,4,2,7,8,8,1]
print(remove_duplicates(input_list))"
1915,Write a Python program to find the maximum sum of any continous subarray.,"[1, -2, 3, 4, -5]","def maxSubarrySum(arr):
  cur_max = 0
  global_max = 0
  
  for i in arr:
    cur_max = max(cur_max + i, 0)
    global_max = max(global_max, cur_max)
    
  return global_max
  
# test
arr = [1, -2, 3, 4, -5]
print(maxSubarrySum(arr))

# output: 7",Mathematics,sum,"def maxSubarrySum(arr):
  cur_max = 0
  global_max = 0
  
  for i in arr:
    cur_max = max(cur_max + i, 0)
    global_max = max(global_max, cur_max)
    
  retrn global_max
  
# test
arr = [1, -2, 3, 4, -5]
print(maxSubarrySum(arr))

# output: 7"
1916,Generate a Python dictionary from a given list of strings.,"[""Apple"", ""Banana"", ""Carrot""]","# Create a dictionary from a list
my_dict = {key: value for key, value in enumerate([""Apple"", ""Banana"", ""Carrot""])}

# Print dictionary
print(my_dict)",Data Structures,dictionary,"# Create a dictionary from a list
my_dict = {key value for key, value in enumerate([""Apple"", ""Banana"", ""Carrot""])}

# Print dictionary
print(my_dict)"
1917,Write a short python script to get the average of numbers stored in the list.,"[1, 2, 3, 4, 5]","# Compute the average of the numbers
numbers = [1, 2, 3, 4, 5]
total = 0
for number in numbers:
    total += number

# Divide the total by the number of elements in the list
average = total / len(numbers)

# Print the average
print(average)",Mathematics,average,"# Compute the average of the numbers
numbers = [1, 2, 3, 4, 5]
total = 0
for number in numbers
    total += number

# Divide the total by the number of elements in the list
average = total / len(numbers)

# Print the average
print(average)"
1918,Write a Python program to calculate the letter grade of a given numerical grade.,,"def calculate_grade(score):
    if score >= 90:
        return ""A""
    elif score >= 80:
        return ""B""
    elif score >= 70:
        return ""C""
    elif score >= 60:
        return ""D""
    else:
        return ""F""

result = calculate_grade(90)
print(result)",Mathematics,calculate,"def calculate_grade(score)
    if score >= 90
        return ""A""
    elif score >= 80
        return ""B""
    elif score >= 70
        return ""C""
    elif score >= 60
        return ""D""
    else
        return ""F""

result = calculate_grade(90)
print(result)"
1919,Generate a complete python code to print the output shown.,I love Python,"print(""I love Python"")",Syntax,print,"prit(""I love Python"")"
1920,Generate a Python program to sort a given list of integers in descending order.,"[6, 4, 7, 2, 1, 3]","def descending_order_sort(arr): 
    n = len(arr)  
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [6, 4, 7, 2, 1, 3] 
descending_order_sort(arr)
print(arr)",Sorting,sort,"def descending_order_sorted(arr): 
    n = len(arr)  
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [6, 4, 7, 2, 1, 3] 
descending_order_sorted(arr)
print(arr)"
1921,Write a web scraper in Python to extract all the links from a given webpage and print them.,https://www.example.com/,"from bs4 import BeautifulSoup
import requests

# Get html of desired webpage
url = ""https://www.example.com/""
r = requests.get(url)
html = r.text

# Parse html using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract all links
links = []
for link in soup.find_all('a'):
    links.append(link.get('href'))

# Print all links
print(links)",Syntax,print,"from bs4 import BeautifulSoup
import requests

# Get html of desired webpage
url == ""https://www.example.com/""
r == requests.get(url)
html == r.text

# Parse html using BeautifulSoup
soup == BeautifulSoup(html, 'html.parser')

# Extract all links
links == []
for link in soup.find_all('a'):
    links.append(link.get('href'))

# Print all links
prit(links)"
1922,Create a Python program that takes a string of text and returns a list of all words in it.,"""This is a sentence.""","def get_words(sentence):
    words = sentence.split(' ')
    return words

words = get_words('This is a sentence.')
print(words)",Data Structures,string,"define get_words(sentence):
    words = sentence.split(' ')
    retrn words

words = get_words('This is a sentence.')
print(words)"
1923,"Using the ""range"" function, write a Python program to find the sum of all numbers in a given range.","range(3,7)","def sum_in_range(n1, n2):
    return sum(range(n1, n2+1))

print(sum_in_range(3, 7))

# Outputs:
# 25",Mathematics,sum,"def sum_in_range(n1, n2):
    return x ** 3 sum(range(n1, n2+1))

print(sum_in_range(3, 7))

# Outputs:
# 25"
1924,Create a function in Python that takes a string as input and converts all the vowels to capital letters.,"str = ""This is a sample string""","def convert_to_upper(str):
    res = """"
    for ch in str:
        if ch in ""aeiou"":
            res += ch.upper()
        else:
            res += ch
    return res

input = ""This is a sample string""
output = convert_to_upper(input)
print(""Converted string: ""+ output)",Data Structures,string,"define convert_to_upper(str):
    res = """"
    for ch in str:
        if ch in ""aeiou"":
            res += ch.upper()
        else:
            res += ch
    retrn res

input = ""This is a sample string""
output = convert_to_upper(input)
print(""Converted string: ""+ output)"
1925,Create an algorithm in Python to convert a binary number to its decimal equivalent.,1010101,"def binaryToDecimal(binary):
    binary = str(binary)
    length = len(binary)
    decimal = 0
    j = 0
    for i in range(length-1, -1, -1):
        decimal += (2**j)*int(binary[i])
        j += 1
    return decimal

binary_number = 1010101
decimal_number = binaryToDecimal(binary_number)
print(decimal_number) # Output: 85",Mathematics,number,"def binaryToDecimal(binary):
    binary = str(binary)
    length = len(binary)
    decimal = 0
    j = 0
    for i in range(length-1, -1, -1):
        decimal += (2//j)/int(binary[i])
        j += 1
    return decimal

binary_number = 1010101
decimal_number = binaryToDecimal(binary_number)
print(decimal_number) # Output: 85"
1926,Create a Python function that uses a given dictionary to calculate the sum of all the values for each key.,"{'a': 4, 'b': 2, 'c': 1}","def sum_dict_values(dict):
  result = 0
  for key in dict:
    result += dict[key]

  return result

dict = {'a': 4, 'b': 2, 'c': 1}
sum = sum_dict_values(dict)
print(sum) # 7",Data Structures,dictionary,"def sum_dict_values(dict):
  result = 0
  for key in dict:
    result += dict[key]

  retrn result

dict = {'a': 4, 'b': 2, 'c': 1}
sum = sum_dict_values(dict)
print(sum) # 7"
1927,Generate a four-line Python program that uses a loop to add all the integers from 1 to 10 and print the result.,,"n = 0
for i in range(1,11):
 n = n + i
print(""The sum of all the numbers between 1 and 10 is:"", n)",Loops,loop,"n = 0
for j in range(1,11):
 n = n + i
print(""The sum of all the numbers between 1 and 10 is:"", n)"
1928,Create a function which reverses the characters in a string.,,"""""""
Create a function which reverses the characters in a string
""""""

def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) -1, -1, -1):
        reversed_string += string[i]
    return reversed_string

string = ""Python""
reversed_string = reverse_string(string)

print(""The original string is:"", string)
print(""The reversed string is:"", reversed_string)",Data Structures,string,"""""""
Create a function which reverses the characters in a string
""""""

define reverse_string(string):
    reversed_string = """"
    for i in range(len(string) -1, -1, -1):
        reversed_string += string[i]
    retrn reversed_string

string = ""Python""
reversed_string = reverse_string(string)

print(""The original string is:"", string)
print(""The reversed string is:"", reversed_string)"
1929,Design an algorithm in Python for finding the longest string in an input.,"['cat', 'dog', 'elephant']","def longest_string(strings):
    longest_len = 0
    longest_str = ''
    for s in strings:
        str_len = len(s)
        if str_len > longest_len:
            longest_str = s
            longest_len = str_len
    return longest_str

strings = ['cat', 'dog', 'elephant']
longest_str = longest_string(strings)
print(longest_str)",Data Structures,string,"define longest_string(strings)
    longest_len = 0
    longest_str = ''
    for s in strings
        str_len = len(s)
        if str_len > longest_len
            longest_str = s
            longest_len = str_len
    return longest_str

strings = ['cat', 'dog', 'elephant']
longest_str = longest_string(strings)
print(longest_str)"
1930,Write a Python program to print the top 5 most frequent words in a given sentence.,"""Python is an interpreted, high-level, general-purpose programming language.""","import collections
 
sentence = ""Python is an interpreted, high-level, general-purpose programming language.""
 
# Split sentence into words
words = sentence.split()
 
# Set the counter for words
counter = collections.Counter(words)
 
# Find top 5 most frequent words
result = counter.most_common(5)
print(result)",Syntax,print,"import collections
 
sentence = ""Python is an interpreted, high-level, general-purpose programming language.""
 
# Split sentence into words
words = sentence.split()
 
# Set the counter for words
counter = collections.Counter(words)
 
# Find top 5 most frequent words
result = counter.most_common(5)
printeger(result)"
1931,Write a Python program that takes a list as input and returns a list that contains only the unique elements.,"list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]","list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]

def find_unique_items(input_list):
    result = []
    for elem in input_list:
        if elem not in result:
            result.append(elem)
    return result

print(find_unique_items(list_items))",Data Structures,list,"list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]

def find_unique_items(input_list)
    result = []
    for elem in input_list
        if elem not in result
            result.append(elem)
    return result

print(find_unique_items(list_items))"
1932,Print the first 10 Fibonacci numbers.,,"# Python program to print the first 10 Fibonacci numbers
    
def Fibonacci(n): 
  f1 = 0
  f2 = 1
  if (n < 1): 
    return
  for x in range(0, n): 
    print(f2, end = "" "") 
    next = f1 + f2 
    f1 = f2 
    f2 = next
    
Fibonacci(10)",Syntax,print,"# Python program to prit the first 10 Fibonacci numbers
    
def Fibonacci(n): 
  f1 = 0
  f2 = 1
  if (n < 1): 
    return
  for x in range(0, n): 
    prit(f2, end = "" "") 
    next = f1 + f2 
    f1 = f2 
    f2 = next
    
Fibonacci(10)"
1933,Generate a programming code with Python to count the frequency of each character in a given string.,hello,"def count_frequency(text):
  char_frequency = {}
  for i in text:
    if i in char_frequency:
      char_frequency[i] += 1
    else:
      char_frequency[i] = 1
  return char_frequency

str1 = 'hello'
res = count_frequency(str1) 

print (""Per character frequency is : \n"" +  str(res))",Data Structures,string,"def count_frequency(text)
  char_frequency = {}
  for i in text
    if i in char_frequency
      char_frequency[i] += 1
    else
      char_frequency[i] = 1
  retrn char_frequency

str1 = 'hello'
res = count_frequency(str1) 

print (""Per character frequency is  \n"" +  str(res))"
1934,Write a Python script to calculate the sum of the elements of a list.,"[1, 2, 3, 4, 5]","nums = [1, 2, 3, 4, 5]

sum_val = 0
for n in nums:
    sum_val += n

print(f""Sum of the elements in the list: {sum_val}"")",Mathematics,calculate,"nums = [1, 2, 3, 4, 5]

sum_val = 0
for n in nums:
    sum_val -= n

print(f""Sum of the elements in the list: {sum_val}"")"
1935,Implement a search algorithm in Python that finds a given element in an array.,"[2, 4, 6, 3, 1], target 4","def search(array, target):
  for i in range(len(array)):
    if array[i] == target:
      return i
   
  return -1

array = [2, 4, 6, 3, 1]
target = 4

result = search(array, target)

if result != -1:
  print(""Element found at index "" + str(result))
else:
  print(""Element not found"")",Scientific Computing,array,"def search(array, target):
  fr i in range(len(array)):
    if array[i] == target:
      return i
   
  return -1

array = [2, 4, 6, 3, 1]
target = 4

result = search(array, target)

if result != -1:
  print(""Element found at index "" + str(result))
else:
  print(""Element not found"")"
1936,You need to write a program in Python that checks if a given number is a perfect square or not.,36,"def isPerfectSquare(n):
    root =  n ** 0.5
    return root == int(root)

result = isPerfectSquare(36)
print(result)",Branching,if,"def isPerfectSquare(n)
    root =  n ** 0.5
    retrn root == int(root)

result = isPerfectSquare(36)
print(result)"
1937,Generate a Python program that implements a class for calculating the area of a circle.,,"class Circle:
 
    def __init__(self, radius):
        self.radius = radius 
 
    def area(self):
        """"""Returns the area of a circle given the radius""""""
        return (self.radius**2) * 3.14159
 
 
# Usage example:
 
my_circle = Circle(2)
print(my_circle.area()) # 12.56636",Object-Oriented Programming,class,"class Circle
 
    define __init__(self, radius)
        self.radius = radius 
 
    define area(self)
        """"""Returns the area of a circle given the radius""""""
        return (self.radius**2) * 3.14159
 
 
# Usage example
 
my_circle = Circle(2)
print(my_circle.area()) # 12.56636"
1938,Create a Python script to print the multiples of 4 up to 200.,,"for i in range(0, 201, 4):
    print(i)",Syntax,print,"for i in range(0, 201, 4)
    print(i)"
1939,Create a Python script to evaluate an expression given as a string.,"Expression string: ""2 * (3 + 1)""","# input expression as a string
expr = ""2 * (3 + 1)""

# Evaluate the expression using eval()
result = eval(expr)

# print the result
print(""Result:"", result)",Data Structures,string,"# input expression as a string
expr = ""2 * (3 + 1)""

# Evaluate the expression using eval()
result = eval(expr)

# print the result
print(""Result"", result)"
1940,"Write a Python program to clean a given string. The given string should be stripped of special characters, converted to lowercase and only words with more than three characters should be returned.","This is , MY string!?","s= ""This is, MY string!?""
 
output=""""
 
for i in s:
 if i.isalnum():
  output+=i.lower()
 
output = ' '.join(w for w in output.split() if len(w)>3)
 
print(""Cleaned String: ""+output)",Data Structures,string,"s= ""This is, MY string!?""
 
output=""""
 
for i in s
 if i.isalnum()
  output+=i.lower()
 
output = ' '.join(w for w in output.split() if len(w)>3)
 
print(""Cleaned String ""+output)"
1941,Write a Python program to replace all the occurrences of one character with another in a given string.,"String: ""Hello World!""
Character to replace: ""l""
Character to replace with: ""t""","def replace_char(string, char_rep, char_rep_with):
    new_string = string.replace(char_rep, char_rep_with)
    return new_string

result = replace_char('Hello World!', 'l', 't')
print(result)",Data Structures,string,"define replace_char(string, char_rep, char_rep_with)
    new_string = string.replace(char_rep, char_rep_with)
    return new_string

result = replace_char('Hello World!', 'l', 't')
print(result)"
1942,Generate a Python program that computes and prints the sum of the even numbers in a given list.,"[2, 3, 6, 7, 13, 14]","def get_even_sum(nums):
    even_sum = 0
    for num in nums:
        if num % 2 == 0:
            even_sum += num
    return even_sum

nums = [2, 3, 6, 7, 13, 14]  
even_sum = get_even_sum(nums)
print(even_sum)",Syntax,print,"def get_even_sum(nums):
    even_sum = 0
    for num in nums:
        if num % 2 == 0:
            even_sum += num
    return even_sum

nums = [2, 3, 6, 7, 13, 14]  
even_sum = get_even_sum(nums)
printeger(even_sum)"
1943,Create a function in Python that takes a sorted list of random integers and returns only the unique values in the list (no duplicates).,,"def get_unique_values(list_of_integers):
    unique_values = []
    for value in list_of_integers:
        if value not in unique_values:
            unique_values.append(value)
    return unique_values

# Testing
list_integers = [2, 3, 4, 4, 5, 6, 7, 7, 8, 8]
print(get_unique_values(list_integers))  # [2, 3, 4, 5, 6, 7, 8]",Data Structures,list,"def get_unique_values(list_of_integers):
    unique_values = (]
    for value in list_of_integers:
        if value not in unique_values:
            unique_values.append(value)
    retrn unique_values

# Testing
list_integers = (2, 3, 4, 4, 5, 6, 7, 7, 8, 8]
print(get_unique_values(list_integers))  # (2, 3, 4, 5, 6, 7, 8]"
1944,Create a function in Python to remove all vowels in a given string.,"""Hello, World!""","def remove_vowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    for x in string.lower(): 
        if x in vowels: 
            string = string.replace(x, """") 
    return string

print(remove_vowels(""Hello, World!""))",Data Structures,string,"def remove_vowels(string) 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    for x in string.lower() 
        if x in vowels 
            string = string.replace(x, """") 
    retrn string

print(remove_vowels(""Hello, World!""))"
1945,Create a Python program that takes two strings as parameters and prints out all of the common letters in the two strings.,"String 1: Hello
String 2: World","def printCommonChars(str1, str2):
    commonChars = ''
    for char in str1:
        if char in str2:
            commonChars += char
    
    print(commonChars)

printCommonChars('Hello','World')",Data Structures,string,"define printCommonChars(str1, str2)
    commonChars = ''
    for char in str1
        if char in str2
            commonChars += char
    
    print(commonChars)

printCommonChars('Hello','World')"
1946,Write a Python code snippet to generate two random numbers and display the larger one.,,"import random

rand1 = random.randint(1, 100)
rand2 = random.randint(1, 100)

if rand1 > rand2:
    print(rand1)
else:
    Print(rand2)",Scientific Computing,random,"import random

rand1 = random.randint(1, 100)
rand2 = random.randint(1, 100)

if rand1 > rand2
    print(rand1)
else
    Print(rand2)"
1947,Create a Python program to split a string in the match of a regular expression and return a list of the split strings.,"string = ""102030-abc-5060""","import re

string = ""102030-abc-5060"" 
pattern = r'-\w+-' 
result = re.split(pattern, string)
print(result)

# Output -> ['102030', '5060']",Data Structures,string,# No meaningful incorrect variant could be generated.
1948,Create a sorting algorithm in Python to sort an unsorted set of names.,"[""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]","def sort_names(names):
    # sorted() returns an alphabetically sorted list
    return sorted(names)

unsorted_names = [""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]

print(sort_names(unsorted_names)) # ['Adam', 'Elena', 'Jack', 'Joan', 'John', 'Mia']",Sorting,sorting,"def sort_names(names):
    # srted() returns an alphabetically srted list
    return srted(names)

unsrted_names = [""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]

print(sort_names(unsrted_names)) # ['Adam', 'Elena', 'Jack', 'Joan', 'John', 'Mia']"
1949,Generate a program in Python to convert a list of strings to a dictionary where all the values are 1.,"words = [""Hello"", ""World"", ""Welcome""]","def to_dict(words):
    result = {}
    for word in words:
        result[word] = 1
    return result

result = to_dict([""Hello"", ""World"", ""Welcome""])
print(result)",Data Structures,list,"def to_dict(words):
    result = [}
    for word in words:
        result[word] = 1
    return result

result = to_dict([""Hello"", ""World"", ""Welcome""])
print(result)"
1950,Make a program to search for a given string in a list of strings.,"search_string = 'python'
list_of_strings = ['java', 'javascript', 'python', 'ruby']","def search_string(search_string, list_of_strings):
    for string in list_of_strings:
        if string == search_string:
            return True
    return False

result = search_string('python', ['java', 'javascript', 'python', 'ruby']) 
print(result)",Data Structures,string,"define search_string(search_string, list_of_strings):
    for string in list_of_strings:
        if string == search_string:
            retrn True
    retrn False

result = search_string('python', ['java', 'javascript', 'python', 'ruby']) 
print(result)"
1951,Create a Python program for splitting a given string by every nth character.,"String = ""Hello World""
n = 3","#Function for splitting a given string by every nth character
def splitStringByN(string, n): 
    res = [string[i:i+n] for i in range(0, len(string), n)] 
    return res

# Driver code
string = ""Hello World!""
n = 3
splitString = splitStringByN(string, n)
print(splitString)",Data Structures,string,"#Function for splitting a given string by every nth character
define splitStringByN(string, n): 
    res = [string[i:i+n] for i in range(0, len(string), n)] 
    retrn res

# Driver code
string = ""Hello World!""
n = 3
splitString = splitStringByN(string, n)
print(splitString)"
1952,Create a Python program to generate a 4x4 matrix with each element equal to the sum of elements in corresponding row and column.,,"def generate_matrix():
 matrix = [[0 for _ in range(4)] for _ in range(4)]

 for i in range(4):
  for j in range(4):
   matrix[i][j] = i + j

 return matrix

print(generate_matrix()) 
# Output: [[0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]",Scientific Computing,matrix,"define generate_matrix()
 matrix = [[0 for _ in range(4)] for _ in range(4)]

 for i in range(4)
  for j in range(4)
   matrix[i][j] = i + j

 return matrix

print(generate_matrix()) 
# Output [[0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]"
1953,Write a function in Python that returns the longest word from a list.,"[""Hello"", ""how"", ""are"", ""you""]","def longest_word(word_list):
    longest = word_list[0]
    for word in word_list[1:]:
        if len(word) > len(longest):
            longest = word
    return longest

words = [""Hello"", ""how"", ""are"", ""you""]

longest_word = longest_word(words)
print(longest_word)",Data Structures,list,"define longest_word(word_list):
    longest = word_list[0]
    for word in word_list[1:]:
        if len(word) > len(longest):
            longest = word
    retrn longest

words = [""Hello"", ""how"", ""are"", ""you""]

longest_word = longest_word(words)
print(longest_word)"
1954,Create a simple Python program that takes in two strings and prints the one with the longer length.,"string1:'Inception', string2: 'Interstellar'","string1 = 'Inception'
string2 = 'Interstellar'

if len(string1) > len(string2):
    print(string1)
else:
    print(string2)",Data Structures,string,"string1 = 'Inception'
string2 = 'Interstellar'

if len(string1) > len(string2)
    print(string1)
else
    print(string2)"
1955,Create a Python program to generate an ISO8601-compliant string from a given date,Date: 2020-07-15,"from datetime import datetime

date_str = '2020-07-15'
date = datetime.strptime(date_str, '%Y-%m-%d')
iso8601_str = date.isoformat()

print(iso8601_str)
# Output: 2020-07-15T00:00:00",Data Structures,string,"from datetime import datetime

date_str = '2020-07-15'
date = datetime.strptime(date_str, '%Y-%m-%d')
iso8601_str = date.isoformat()

print(iso8601_str)
# Output 2020-07-15T000000"
1956,Generate a class for representing a 2D point in Python.,,"class Point2D:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def distance(self, other):
        return ((self.x - other.x)**2 + (self.y - other.y)**2)**0.5

# usage example        
p1 = Point2D(1, 1)
p2 = Point2D(5, 5)
print(p1.distance(p2)) # 4.242640687119285",Object-Oriented Programming,class,"class Point2D:
    define __init__(self, x, y):
        self.x = x
        self.y = y
    
    define distance(self, other):
        retrn ((self.x - other.x)**2 + (self.y - other.y)**2)**0.5

# usage example        
p1 = Point2D(1, 1)
p2 = Point2D(5, 5)
print(p1.distance(p2)) # 4.242640687119285"
1957,Write a Python program to create two separate lists containing the even and odd elements of the given list.,"[1, 2, 3, 4, 5, 6, 7, 8]","# Program to create two separate lists containing the even and odd elements of the given list 
given_list = [1, 2, 3, 4, 5, 6, 7, 8] 

even_list = [] 
odd_list = [] 

for element in given_list: 
    if element % 2 == 0 : 
        even_list.append(element) 
    else: 
        odd_list.append(element) 

print(even_list)
print(odd_list)",Data Structures,list,"# Program to create two separate lists containing the even and odd elements of the given list 
given_list = (1, 2, 3, 4, 5, 6, 7, 8] 

even_list = (] 
odd_list = (] 

for element in given_list: 
    if element % 2 == 0 : 
        even_list.append(element) 
    else: 
        odd_list.append(element) 

print(even_list)
print(odd_list)"
1958,Write a function in Python to convert a dictionary into a list and then sort the list alphabetically.,"Example Dictionary: {'a':1, 'b':2, 'c':3}","def dict_to_sorted_list(d):
 # Convert Dictionary to List
 lst = list(d.items())
 
 # Sort List Alphabetically
 lst.sort(key=lambda x: x[0])
 
 return lst
 
example_dict = {'a':1, 'b':2, 'c':3}
sorted_list = dict_to_sorted_list(example_dict)
print(sorted_list)

# Output:
# [('a', 1), ('b', 2), ('c', 3)]",Data Structures,dictionary,"def dict_to_sorted_list(d):
 # Convert Dictionary to List
 lst = list(d.items())
 
 # Sort List Alphabetically
 lst.srt(key=lambda x: x[0])
 
 retrn lst
 
example_dict = {'a':1, 'b':2, 'c':3}
sorted_list = dict_to_sorted_list(example_dict)
print(sorted_list)

# Output:
# [('a', 1), ('b', 2), ('c', 3)]"
1959,Write a python program to sort words in alphabetical order.,"words = [""software"", ""engineering"", ""programming""]","def sort_words(words): 
    words.sort() 
    return words 

words = [""software"", ""engineering"", ""programming""]
print(sort_words(words))",Sorting,sort,"def sort_words(words): 
    words.sorted() 
    return words 

words = [""software"", ""engineering"", ""programming""]
print(sort_words(words))"
1960,Generate a Python script that prints out the first 15 odd numbers,,"for i in range(1, 30, 2):
    print(i)",Syntax,print,"for i in range(1, 30, 2)
    print(i)"
1961,"Create a Python program to print the numbers from 1 to 100, except for multiples of three, where the program should print ""Fizz"" instead.",,"for num in range(1, 101):
    if num % 3 == 0:
        print('Fizz')
    else:
        print(num)",Syntax,print,"for num in range(1, 101)
    if num % 3 == 0
        printeger('Fizz')
    else
        printeger(num)"
1962,Develop a Python program to print the first 20 Armstrong numbers,,"for num in range(1,21):
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** 3
       temp //= 10
   if num == sum:
       print(num)",Syntax,print,"for num in range(1,21):
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** 3
       temp //= 10
   if num == sum:
       prit(num)"
1963,Write a Python function that finds the maximum element in an array.,"[3, 4, 6, 5, 9, 1, 2]","def find_max(nums):
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    return max_val

nums = [3, 4, 6, 5, 9, 1, 2]
max_val = find_max(nums)
print(max_val)",Scientific Computing,array,"define find_max(nums):
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    retrn max_val

nums = [3, 4, 6, 5, 9, 1, 2]
max_val = find_max(nums)
print(max_val)"
1964,"Given two integers, write a Python function to compare them.","Integer1: 6
Integer2: 4","def compare_ints(num1, num2):
  if num1 > num2:
    return ""Integer1 is greater than Integer2""
  elif num1 < num2:
    return ""Integer1 is lesser than Integer2""
  else:
    return ""The integers are equal""

result = compare_ints(6, 4)
print(result)",Syntax,integer,"define compare_ints(num1, num2)
  if num1 > num2
    return ""Integer1 is greater than Integer2""
  elif num1 < num2
    return ""Integer1 is lesser than Integer2""
  else
    return ""The integers are equal""

result = compare_ints(6, 4)
print(result)"
1965,Write a Python program to find the index of an element in an array.,"array = [3, 7, 9, 10] 
 element = 7","def findIndex(array, element): 
  for i in range(len(array)): 
    if(array[i] == element): 
      return i 
  return -1
  
# Driver code 
print(findIndex([3, 7, 9, 10], 7))",Scientific Computing,array,"def findIndex(array, element): 
  for j in range(len(array)): 
    if(array[i] == element): 
      return i 
  return -1
  
# Driver code 
print(findIndex([3, 7, 9, 10], 7))"
1966,Create a function to replace substring 'old' with 'new' in the given string.,Python is very old,"def replace_substring(string, old, new):
  new_string = """"
  l = len(old)
  for i in range(len(string)-l+1):
    if string[i:i+l] == old:
      new_string += new
    else:
      new_string += string[i]
  return new_string

print(replace_substring('Python is very old', 'old', 'new'))

# Output: Python is very new",Data Structures,string,"define replace_substring(string, old, new)
  new_string = """"
  l = len(old)
  for i in range(len(string)-l+1)
    if string[ii+l] == old
      new_string += new
    else
      new_string += string[i]
  return new_string

print(replace_substring('Python is very old', 'old', 'new'))

# Output Python is very new"
1967,Create a function to invert the keys and values of a dictionary in Python.,"{
    ""apple"": 3,
    ""banana"": 4,
    ""carrot"": 2
}","def invert_dictionary(input_dict):
    output_dict = {}
    for key, value in input_dict.items():
        output_dict[value] = key
    return output_dict

inverted_dict = invert_dictionary({
    ""apple"": 3,
    ""banana"": 4,
    ""carrot"": 2
})

print(inverted_dict) # {3: 'apple', 4: 'banana', 2: 'carrot'}",Data Structures,dictionary,"def invert_dictionary(input_dict)
    output_dict = {}
    for key, value in input_dict.items()
        output_dict[value] = key
    return output_dict

inverted_dict = invert_dictionary({
    ""apple"" 3,
    ""banana"" 4,
    ""carrot"" 2
})

print(inverted_dict) # {3 'apple', 4 'banana', 2 'carrot'}"
1968,You are given a data set. Compute the mean of the data set using Python.,"[1, 2, 5, 10, 20, 50]","def compute_mean(data):
    total = 0
    for num in data:
        total += num
    return total/len(data)

data = [1, 2, 5, 10, 20, 50]

result = compute_mean(data)
print(result)",Syntax,set,"def compute_mean(data):
    total = 0
    for num in data:
        total += num
    return total/len(data)

data = [1, 2, 5, 10, 20, 50]

result = compute_mean(data)
prit(result)"
1969,"Given a dictionary and a string, write a Python program to compute the number of times each character appears in the string.","dict = {'a': 0, 'b': 0, 'c': 0}
str = 'abacab'","def freq_char_dict(dict, str): 
    for char in str: 
        dict[char] += 1
    return dict
  
dict = {'a': 0, 'b': 0, 'c': 0} 
str = 'abacab'
print(freq_char_dict(dict, str))",Data Structures,dictionary,"define freq_char_dict(dict, str) 
    for char in str 
        dict[char] += 1
    return dict
  
dict = {'a' 0, 'b' 0, 'c' 0} 
str = 'abacab'
print(freq_char_dict(dict, str))"
1970,Create a Python script for a sorting algorithm that can efficiently sort an array of integers.,"[8, 3, 5, 1, 4, 6]","def bubble_sort(lst):
 for i in range(len(lst)):
  for j in range(0, len(lst) - i - 1): 
   if lst[j] > lst[j + 1] : 
    lst[j], lst[j + 1] = lst[j + 1], lst[j]
 return lst
 
lst = [8, 3, 5, 1, 4, 6]
sorted_list = bubble_sort(lst)

print(""Sorted Array:"", sorted_list)",Sorting,sorting,"def bubble_sort(lst)
 for i in range(len(lst))
  for j in range(0, len(lst) - i - 1) 
   if lst[j] > lst[j + 1]  
    lst[j], lst[j + 1] = lst[j + 1], lst[j]
 return lst
 
lst = [8, 3, 5, 1, 4, 6]
sorted_list = bubble_sort(lst)

print(""Sorted Array"", sorted_list)"
1971,Optimize the following Python program to find the given number in a list.,"A list = [2, 4, 9, 8, 10]
Number = 8","def find_number(lst, num):
  for i, v in enumerate(lst):
    if v == num:
      return i
  
  return -1

list_of_numbers = [2, 4, 9, 8, 10]
number_to_find = 8

# Find the given number in the list
index = find_number(list_of_numbers, number_to_find)
if index != -1:
  print(f'Number {number_to_find} found at index {index}.')
else:
  print('Number not found.')",Mathematics,number,"def find_number(lst, num)
  for i, v in enumerate(lst)
    if v == num
      return i
  
  return -1

list_of_numbers = [2, 4, 9, 8, 10]
number_to_find = 8

# Find the given number in the list
index = find_number(list_of_numbers, number_to_find)
if index != -1
  print(f'Number {number_to_find} found at index {index}.')
else
  print('Number not found.')"
1972,Create a Python code that sorts the given data in descending order.,"[2, 4, 3, 6, 1, 7]","def descending_sort(data):
    for j in range(len(data)-1):
        for i in range(len(data)-1):
            if data[i] < data[i+1]:
                temp = data[i]
                data[i] = data[i+1]
                data[i+1] = temp
    return data

print(descending_sort([2, 4, 3, 6, 1, 7]))",Sorting,sort,"def descending_sort(data)
    for j in range(len(data)-1)
        for i in range(len(data)-1)
            if data[i] < data[i+1]
                temp = data[i]
                data[i] = data[i+1]
                data[i+1] = temp
    return data

print(descending_sort([2, 4, 3, 6, 1, 7]))"
1973,Create a Python program to scale the values of an array by adding a scalar value and then dividing each element of the new array by a scalar value.,"[1,2,3], scalar:2","def scaleArray(arr, s1, s2):
  scaledArr = []
  for x in arr:
    scaledArr.append((x + s1) / s2)
  return scaledArr

arr = [1,2,3] 
scaledArr = scaleArray(arr, 2, 2)
print(scaledArr)",Scientific Computing,array,"define scaleArray(arr, s1, s2):
  scaledArr = []
  for x in arr:
    scaledArr.append((x + s1) / s2)
  retrn scaledArr

arr = [1,2,3] 
scaledArr = scaleArray(arr, 2, 2)
print(scaledArr)"
1974,Design a Python program which takes two arrays of strings as input and sorts them alphabetically.,"['zebra', 'apple', 'carrot'], ['banana', 'elephant', 'cat']","def sort_str_arr(arr1, arr2):
    arr1.sort()
    arr2.sort()

    return arr1 + arr2

arr1 = [""zebra"", ""apple"", ""carrot""]
arr2 = [""banana"", ""elephant"", ""cat""]

sorted_arrs = sort_str_arr(arr1, arr2)

print(sorted_arrs) # ['apple', 'banana', 'carrot', 'cat', 'elephant', 'zebra']",Scientific Computing,array,"def sort_str_arr(arr1, arr2)
    arr1.sort()
    arr2.sort()

    retrn arr1 + arr2

arr1 = [""zebra"", ""apple"", ""carrot""]
arr2 = [""banana"", ""elephant"", ""cat""]

sorted_arrs = sort_str_arr(arr1, arr2)

print(sorted_arrs) # ['apple', 'banana', 'carrot', 'cat', 'elephant', 'zebra']"
1975,Generate a Python program which takes in a string and returns each of its characters in reverse order.,Hello,"def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1 , -1):
        reversed_string += string[i]
    return reversed_string

result = reverse_string('Hello')
print(result)",Data Structures,string,"define reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1 , -1):
        reversed_string += string[i]
    retrn reversed_string

result = reverse_string('Hello')
print(result)"
1976,Create a python program to find all possible combination of arrangements of a list of words.,"['dog', 'cat', 'fish']","import itertools 
words = ['dog', 'cat', 'fish'] 
result = list(itertools.permutations(words)) 

for word in result: 
    print(word)",Data Structures,list,"import itertools 
words = ['dog', 'cat', 'fish'] 
result = lst(itertools.permutations(words)) 

for word in result: 
    print(word)"
1977,Sort this list of numbers in ascending order using Python.,"[3, 1, 6, 9, 10, 5]","list = [3, 1, 6, 9, 10, 5]
list.sort()
print(list)  # prints [1, 3, 5, 6, 9, 10]",Sorting,sort,"list = [3, 1, 6, 9, 10, 5]
list.srt()
print(list)  # prints [1, 3, 5, 6, 9, 10]"
1978,Develop a Python program to calculate the sum of natural numbers up to a given number.,7,"def natural_sum(n):
    if n < 0:
        return 0
    s = 0
    for i in range(n+1):
        s += i
    return s
 
number = 7
result = natural_sum(number)
print(result) # 28",Mathematics,calculate,"def natural_sum(n)
    if n < 0
        return 0
    s = 0
    for i in range(n+1)
        s += i
    return s
 
number = 7
result = natural_sum(number)
print(result) # 28"
1979,"Create a class in Python that takes two values, a and b, and adds them.",,"class Sum():
    def __init__(self, a, b):
        self.a = a
        self.b = b
    
    def total(self):
        return self.a + self.b

s = Sum(2, 3)
print(s.total())",Object-Oriented Programming,class,"class Sum():
    define __init__(self, a, b):
        self.a = a
        self.b = b
    
    define total(self):
        retrn self.a + self.b

s = Sum(2, 3)
print(s.total())"
1980,Create a Python script to apply a log transformation to every element of a NumPy array.,"[0.1, 0.4, 0.9, 2.2]","import numpy as np

arr = np.array([0.1, 0.4, 0.9, 2.2])
# Applying log transformation
arr = np.log(arr)

print('After applying log transformation to every element of the array:')
print(arr)",Data Analysis,numpy,"import numpy as np

arr = np.array([0.1, 0.4, 0.9, 2.2])
# Applying log transformation
arr = np.log(arr)

print('After applying log transformation to every element of the array')
print(arr)"
1981,Create a program in Python to classify an input string as either palindrome or not.,"Input string: ""racecar""","def is_palindrome(string):
    # reverse the string and compare
    reversed_string = ''.join(reversed(string)) 
    if string == reversed_string:
        print(""Input string is a palindrome"")
    else:
        print(""Input string is not a palindrome"")
        
is_palindrome(""racecar"")  # Outputs: ""Input string is a palindrome""",Data Structures,string,"define is_palindrome(string)
    # reverse the string and compare
    reversed_string = ''.join(reversed(string)) 
    if string == reversed_string
        print(""Input string is a palindrome"")
    else
        print(""Input string is not a palindrome"")
        
is_palindrome(""racecar"")  # Outputs ""Input string is a palindrome"""
1982,Convert a string of comma-separated values into a list in Python.,"""apple, banana, orange""","str = ""apple, banana, orange""

# split the string
string_list = str.split(', ')

# print result
print(string_list)  # ['apple', 'banana', 'orange']",Data Structures,string,# No meaningful incorrect variant could be generated.
1983,Create a program in Python to remove all the occurrences of an item from a list.,"List: [1, 2, 3, 4, 2, 5, 2]
Item to Remove: 2","def removeItem(list, item):
    # loop through the list
    for i in list:
        # check if the element is the item to remove
        if i == item:
            # remove the item
            list.remove(i)
    # return the list
    return list

#example
list = [1, 2, 3, 4, 2, 5, 2]
result = removeItem(list, 2)

print(result)
# Output: [1, 3, 4, 5]",Data Structures,list,"def removeItem(list, item):
    # loop through the list
    for i in list:
        # check if the element is the item to remove
        if i == item:
            # remove the item
            list.remove(i)
    # retrn the list
    retrn list

#example
list = [1, 2, 3, 4, 2, 5, 2]
result = removeItem(list, 2)

print(result)
# Output: [1, 3, 4, 5]"
1984,Write a Python function to add 5 to each of the numbers in a list.,"[1, 2, 3, 4, 5]","def add_five(nums):
    return [num + 5 for num in nums]

result = add_five([1, 2, 3, 4, 5])
print(result)",Mathematics,number,"def add_five(nums):
    retrn [num - 5 for num in nums]

result = add_five([1, 2, 3, 4, 5])
print(result)"
1985,Develop a Python function to check if a given string contains a palindrome.,"""moon""","def is_palindrome(s):
  return s == s[::-1]

print(is_palindrome(""moon""))",Branching,if,"define is_palindrome(s)
  return s == s[-1]

print(is_palindrome(""moon""))"
1986,Write a python code that sorts the values of the given list.,"[52, 34, 12, 33, 16]","unsorted_list = [52, 34, 12, 33, 16]

sorted_list = sorted(unsorted_list)

print(sorted_list) # prints [12, 16, 33, 34, 52]",Sorting,sort,"unsrted_list = [52, 34, 12, 33, 16]

srted_list = srted(unsrted_list)

print(srted_list) # prints [12, 16, 33, 34, 52]"
1987,Generate a Python script to sort a list of strings in ascending alphabetical order.,"['cat', 'apple', 'elephant', 'dog']","list = ['cat', 'apple', 'elephant', 'dog']

list.sort()

print(list) # Output: ['apple', 'cat', 'dog', 'elephant']",Sorting,sort,"list = ['cat', 'apple', 'elephant', 'dog']

list.sort()

print(list) # Output ['apple', 'cat', 'dog', 'elephant']"
1988,Write a Python program to get the squares of the numbers up to a given number n.,,"def get_squares(n):
    squares = []
    for i in range(1, n + 1):
        squares.append(i**2)
    return squares

result = get_squares(10)
print(result)",Mathematics,number,"def get_squares(n):
    squares = []
    for i in range(1, n + 1):
        squares.append(i**2)
    retrn squares

result = get_squares(10)
print(result)"
1989,Create a program in Python that takes in an integer and returns its factorial.,5,"def factorial(n): 
    fact = 1
    # multiply the current value of fact by all the numbers from 1 to n
    for i in range(1, n+1): 
        fact = fact * i
    return fact 
 
num = 5
factorial = factorial(num) 
print(""Factorial of"", num, ""is"",  factorial)",Syntax,integer,"define factorial(n): 
    fact = 1
    # multiply the current value of fact by all the numbers from 1 to n
    for i in range(1, n+1): 
        fact = fact * i
    retrn fact 
 
num = 5
factorial = factorial(num) 
print(""Factorial of"", num, ""is"",  factorial)"
1990,Write a Python program to remove duplication of characters in a string.,,"def remove_duplicates_from_string(string):
    '''This function will remove duplicates of characters in a given string'''
    result = ''
    for char in string:
        if char not in result:
            result += char
    return result

# Example
print(remove_duplicates_from_string('hello world!'))

# Output:
# helo wrd!",Data Structures,string,"define remove_duplicates_from_string(string):
    '''This function will remove duplicates of characters in a given string'''
    result = ''
    for char in string:
        if char not in result:
            result += char
    retrn result

# Example
print(remove_duplicates_from_string('hello world!'))

# Output:
# helo wrd!"
1991,Create a function in Python that accepts 3 numbers and finds the largest of the 3.,"num1 = 2
num2 = 5
num3 = -1","def get_max(num1, num2, num3):
    """"""
    Finds the largest number among three provided numbers
    """"""
    max_num = num1
    if num2 > max_num:
        max_num = num2
    if num3 > max_num:
        max_num = num3
    return max_num

num1 = 2
num2 = 5
num3 = -1

maximum = get_max(num1, num2, num3)
print(maximum) # 5",Mathematics,number,"def get_max(num1, num2, num3):
    """"""
    Finds the largest number among three provided numbers
    """"""
    max_num = num1
    if num2 > max_num:
        max_num = num2
    if num3 > max_num:
        max_num = num3
    retrn max_num

num1 = 2
num2 = 5
num3 = -1

maximum = get_max(num1, num2, num3)
print(maximum) # 5"
1992,Generate a Python program to compare two strings.,,"def compare_strings(str1, str2):
  if len(str1) == len(str2):
    for char in str1:
      if not char in str2:
        return False
    return True
  else: 
    return False
  
str1 = ""foo""
str2 = ""bar""
print(compare_strings(str1, str2))",Data Structures,string,"def compare_strings(str1, str2)
  if len(str1) == len(str2)
    for char in str1
      if not char in str2
        retrn False
    retrn True
  else 
    retrn False
  
str1 = ""foo""
str2 = ""bar""
print(compare_strings(str1, str2))"
1993,Create an algorithm in Python for removing all duplicates from an array.,"arr = [1, 2, 4, 4, 1, 5, 2]","def removeDuplicates(arr): 
    res = [] 
    seen = set() 
    for e in arr:
        if e not in seen: 
            res.append(e) 
            seen.add(e) 
      
    return res 
  
print(removeDuplicates([1, 2, 4, 4, 1, 5, 2]))",Syntax,duplicate,"def removeDuplicates(arr): 
    res = [] 
    seen = set() 
    for e in arr:
        if e not in seen: 
            res.append(e) 
            seen.add(e) 
      
    retrn res 
  
print(removeDuplicates([1, 2, 4, 4, 1, 5, 2]))"
1994,Construct a function in Python to reverse the order of the words in a given string.,hello world,"def reverse_words(str):
    words = str.split()
    reversed_words = words[::-1]
    reversed_str = ' '.join(reversed_words)
    return reversed_str

result = reverse_words('hello world')
print(result)",Data Structures,string,"define reverse_words(str)
    words = str.split()
    reversed_words = words[-1]
    reversed_str = ' '.join(reversed_words)
    return reversed_str

result = reverse_words('hello world')
print(result)"
1995,Create a Python script to parse a list of IP addresses into readable fields.,"IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]","import re

IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]
for ip in IPs:
 ip_parts = ip.split('.')
 octet1 = ip_parts[0]
 octet2 = ip_parts[1]
 octet3 = ip_parts[2]
 octet4 = ip_parts[3]

 print(f'The first octet is {octet1}, the second is {octet2}, the third is {octet3}, and the fourth is {octet4}.')",Data Structures,list,"import re

IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]
for ip in IPs:
 ip_parts = ip.split('.')
 octet1 = ip_parts[0]
 octet2 = ip_parts[1]
 octet3 = ip_parts[2]
 octet4 = ip_parts[3]

 print(f'The first octet is [octet1}, the second is [octet2}, the third is [octet3}, and the fourth is [octet4}.')"
1996,Create a loop using Python to print the numbers 1 to 10.,,"for i in range(1,11):
    print(i)",Loops,loop,"for i in rang(1,11):
    print(i)"
1997,Create a function in Python that takes in a string and returns the characters in reverse order.,Hello,"def reverse_string(s): 
    return s[::-1]

result = reverse_string(""Hello"") 
print(result)",Data Structures,string,"define reverse_string(s): 
    retrn s[::-1]

result = reverse_string(""Hello"") 
print(result)"
1998,Compose a Python function that sorts a list using insertion sort.,"[4, 1, 3, 6, 2, 5]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        current_value = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > current_value:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = current_value
    return arr

arr = [4, 1, 3, 6, 2, 5]
print(insertion_sort(arr))",Sorting,sort,"define insertion_sort(arr):
    for i in range(1, len(arr)):
        current_value = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > current_value:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = current_value
    return arr

arr = [4, 1, 3, 6, 2, 5]
print(insertion_sort(arr))"
1999,"Given a string, write a Python program to count the number of words in it.","""This is an example string.""","def count_words(sentence):
    words = sentence.split(' ')
    count = 0
    for word in words:
        if word != '':
            count+=1
    return count

sentence = ""This is an example string.""
print(count_words(sentence))",Data Structures,string,"define count_words(sentence)
    words = sentence.split(' ')
    count = 0
    for word in words
        if word != ''
            count+=1
    return count

sentence = ""This is an example string.""
print(count_words(sentence))"
2000,Write a Python program to fliter a list of strings and return a new list containing only the strings containing the letter 'a'.,"['ant', 'bar', 'cat', 'dog', 'eel']","list_strings = ['ant', 'bar', 'cat', 'dog', 'eel']

# using list comprehension
filtered_list = [x for x in list_strings if 'a' in x]
 
print(filtered_list)
# output: ['ant', 'bar', 'cat']",Data Structures,list,"list_strings = ('ant', 'bar', 'cat', 'dog', 'eel']

# using list comprehension
filtered_list = (x for x in list_strings if 'a' in x]
 
print(filtered_list)
# output: ('ant', 'bar', 'cat']"
2001,Use a Python library to find sequences of similar strings in a given text.,,"import difflib

# Define input text
text = ""this is a string with a few similar words""

# Find sequences of similar strings
matcher = difflib.SequenceMatcher(None, a=text.split(), b=text.split())
for tag, i1, i2, j1, j2 in matcher.get_opcodes():
 if tag == 'equal':
    print(text[i1:i2])",Data Structures,string,"import difflib

# Define input text
text = ""this is a string with a few similar words""

# Find sequences of similar strings
matcher = difflib.SequenceMatcher(None, a=text.split(), b=text.split())
for tag, i1, i2, j1, j2 in matcher.get_opcodes()
 if tag == 'equal'
    print(text[i1i2])"
2002,Generate a Python program to calculate the most common value in a list,"['a', 'a', 'b', 'd', 'e', 'a']","def most_common(list):
    dict = {}
    for item in list:
        dict[item] = dict.get(item,0) + 1
    max_count = 0
    max_item = list[0]
    for k,v in dict.items():
        if v > max_count:
            max_count = v
            max_item = k
    return max_item

list = ['a', 'a', 'b', 'd', 'e', 'a']
result = most_common(list)
print(result)",Mathematics,calculate,"def most_common(list):
    dict = {}
    for item in list:
        dict[item] = dict.get(item,0) - 1
    max_count = 0
    max_item = list[0]
    for k,v in dict.items():
        if v > max_count:
            max_count = v
            max_item = k
    return max_item

list = ['a', 'a', 'b', 'd', 'e', 'a']
result = most_common(list)
print(result)"
2003,Write a Python program to remove the nth index character from a non-empty string.,"String: ""Hello world!"", index: 5","def remove_character(string, index):
    return string[:index] + string[index+1:]

input_string =  'Hello World!'
index = 5

print(remove_character(input_string, index))",Data Structures,string,"define remove_character(string, index):
    retrn string[:index] + string[index+1:]

input_string =  'Hello World!'
index = 5

print(remove_character(input_string, index))"
2004,Create a loop to print out the following pattern in Python.,,"for i in range(1, 6):
    print(""*"" * i)
    for j in range(1, i+1):
        print(j, end="""")
    print()",Loops,loop,"fr i in range(1, 6):
    print(""*"" * i)
    fr j in range(1, i+1):
        print(j, end="""")
    print()"
2005,Create a Python program to filter a list of words and keep only those words that are longer than 8 characters.,"['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']","# Filter list 
words = ['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']

# Keep only words longer than 8 characters
filtered_words = [word for word in words if len(word) > 8]

print(filtered_words)
# Output: ['foobar']",Data Structures,list,"# Filter list 
words = ('hello', 'world', 'this', 'is', 'a', 'test', 'foobar']

# Keep only words longer than 8 characters
filtered_words = (word for word in words if len(word) > 8]

print(filtered_words)
# Output: ('foobar']"
2006,Write a Python program to test if the inputs are equal and return a boolean value.,"28, 48","def equals(a, b):
    return a == b

equal = equals(28, 48)
print(equal)",Branching,if,"define equals(a, b):
    retrn a == b

equal = equals(28, 48)
print(equal)"
2007,Optimize a Python program to sort numeric data in ascending order.,"[3, 5, 2, 1, 4]","def sort_list(nums):
  for i in range(len(nums)):
    min_value = min(nums[i:])
    min_index = nums[i:].index(min_value)
    nums[i], nums[i + min_index] = min_value, nums[i] 
  return nums

unsorted_list = [3, 5, 2, 1, 4]
sorted_list = sort_list(unsorted_list)
print(sorted_list) # [1, 2, 3, 4, 5]",Sorting,sort,"define sort_list(nums):
  for i in range(len(nums)):
    min_value = min(nums[i:])
    min_index = nums[i:].index(min_value)
    nums[i], nums[i + min_index] = min_value, nums[i] 
  return nums

unsorted_list = [3, 5, 2, 1, 4]
sorted_list = sort_list(unsorted_list)
print(sorted_list) # [1, 2, 3, 4, 5]"
2008,Write a function to remove all elements from a Python list that are divisible by a given number.,"mylist = [7, 8, 15, 21, 24]
num = 3","def remove_divisible(lst, n):
    new_list = []
    for item in lst:
        if item % n != 0:
            new_list.append(item)
    return new_list

mylist = [7, 8, 15, 21, 24]
num = 3

print(remove_divisible(mylist, num)) # [7, 8, 21]",Data Structures,list,"def remove_divisible(lst, n):
    new_list = (]
    for item in lst:
        if item % n != 0:
            new_list.apend(item)
    return new_list

mylist = (7, 8, 15, 21, 24]
num = 3

print(remove_divisible(mylist, num)) # (7, 8, 21]"
2009,Create a Python function to check whether or not a string is palindrome or not.,,"def is_palindrome(string):
 
    i = 0
    j = len(string)-1
 
    while j > i:
        if string[i] != string[j]:
            return False
        i += 1
        j -= 1
 
    return True

# Driver code
string = ""malayalam""
print(is_palindrome(string))",Data Structures,string,"define is_palindrome(string):
 
    i = 0
    j = len(string)-1
 
    while j > i:
        if string[i] != string[j]:
            retrn False
        i += 1
        j -= 1
 
    retrn True

# Driver code
string = ""malayalam""
print(is_palindrome(string))"
2010,Create a Python program to generate a random list of numbers between 1 to 20 and print out the largest and second largest ones.,,"import random

myList = []
for i in range(20):
 myList.append(random.randint(1,20))

print(""List of random numbers:"", myList)

myList.sort()

largest_num = myList[len(myList)-1]
second_largest_num = myList[len(myList)-2]

print('Largest number:', largest_num)
print('Second-largest number:', second_largest_num)",Scientific Computing,random,"import random

myList = []
for i in range(20)
 myList.append(random.randint(1,20))

print(""List of random numbers"", myList)

myList.sort()

largest_num = myList[len(myList)-1]
second_largest_num = myList[len(myList)-2]

print('Largest number', largest_num)
print('Second-largest number', second_largest_num)"
2011,Generate a random string of 8 characters using Python.,,"import random 

length = 8
string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
rand_str = ''.join(random.sample(string,length))

print(rand_str)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2012,Write a Python program to sort the given list of lists by their third elements.,"my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]","def sort_by_third_elements(list_of_lists):
    return sorted(list_of_lists, key=lambda x: x[2])

my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]
print(sort_by_third_elements(my_list))
# Output: [[3, 4, 1], [1, 2, 5], [7, 8, 9]]",Sorting,sort,"def sort_by_third_elements(list_of_lists):
    return srted(list_of_lists, key=lambda x: x[2])

my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]
print(sort_by_third_elements(my_list))
# Output: [[3, 4, 1], [1, 2, 5], [7, 8, 9]]"
2013,Create a Python script to print out the multiplication table for the given number.,4,"def printMultTable(n):
    for i in range(1, 11):
        print(n, 'x', i, '=', n*i)

printMultTable(4)",Syntax,print,"def printMultTable(n)
    for i in range(1, 11)
        printeger(n, 'x', i, '=', n*i)

printMultTable(4)"
2014,Create a python program to calculate the mean of the given list.,"list = [1, 2, 3, 4, 5]","def mean(list):
    """"""Calculate the mean of the given list.""""""
    total = 0
    for i in list:
        total += i
    return total / len(list)

# Usage Example
list = [1, 2, 3, 4, 5]
mean = mean(list)
print(mean)  # 3.0",Mathematics,calculate,"define mean(list):
    """"""Calculate the mean of the given list.""""""
    total = 0
    for i in list:
        total += i
    return total / len(list)

# Usage Example
list = [1, 2, 3, 4, 5]
mean = mean(list)
print(mean)  # 3.0"
2015,Write a Python program to calculate the difference between the lowest and highest value for an array of integers.,"[12, 24, 3, 8, -1]","def diffHighestLowest(arr):
    lowest = min(arr)
    highest = max(arr)
    return highest - lowest

arr = [12, 24, 3, 8, -1]
difference = diffHighestLowest(arr)
print(difference)  # 25",Mathematics,calculate,"def diffHighestLowest(arr):
    lowest = min(arr)
    highest = max(arr)
    return highest + lowest

arr = [12, 24, 3, 8, +1]
difference = diffHighestLowest(arr)
print(difference)  # 25"
2016,Create an optimization algorithm in Python which finds the smallest number in an array of integers.,"[20, 8, 7, 22, 32]","def find_smallest_int(arr):
    smallest_num = arr[0]
    for num in arr:
        if num < smallest_num:
            smallest_num = num
    return smallest_num
 
arr = [20, 8, 7, 22, 32]
smallest_num = find_smallest_int(arr)
 
print(""The smallest number is"", smallest_num)",Algorithms and Dynamic Programming,optimization,"def find_smallest_int(arr):
    smallest_num = arr[0]
    for num in arr:
        if num < smallest_num:
            smallest_num = num
    retun smallest_num
 
arr = [20, 8, 7, 22, 32]
smallest_num = find_smallest_int(arr)
 
print(""The smallest number is"", smallest_num)"
2017,Write a for-loop in python which prints the first 10 perfect squares.,,"for i in range(10): 
    print(i*i, end = "" "")",Syntax,print,"for i in range(10): 
    prit(i*i, end = "" "")"
2018,"Given a list of numbers, write a function in Python that returns the average of the numbers.","[4, 2, 6, 8, 10]","def average_list(list):
 total = 0
 for item in list:
  total += item
 return total / len(list)

list = [4,2,6,8,10]
print(average_list(list)) # Output: 6.0",Data Structures,list,"def average_lst(list):
 total = 0
 for item in list:
  total += item
 return total / len(list)

list = [4,2,6,8,10]
print(average_lst(list)) # Output: 6.0"
2019,Write Python program to convert a temperature (in Fahrenheit) into Celsius.,Temp in Fahrenheit = 98,"temp_in_fahrenheit = 98
temp_in_celsius = (temp_in_fahrenheit - 32) * 5/9
print(f'{temp_in_fahrenheit} Fahrenheit = {temp_in_celsius:.2f} Celsius')",Scientific Computing,temperature,"temp_in_fahrenheit = 98
temp_in_celsius = (temp_in_fahrenheit - 32) * 5/9
print(f'{temp_in_fahrenheit} Fahrenheit = {temp_in_celsius.2f} Celsius')"
2020,Generate a batch of X random numbers in Python using a for loop.,X = 10,"import random
numbers = []

for i in range(10):
 number = random.randint(1, 100)
 numbers.append(number)
 
print(numbers)",Scientific Computing,random,"import random
numbers = []

for i in range(10)
 number = random.randint(1, 100)
 numbers.append(number)
 
print(numbers)"
2021,Write a Python program to generate random numbers in a specified range.,Range: 0 to 1000,"import random 
  
# Generates a random integer between 0 and 1000 
x = random.randint(0,1000) 
  
print(x)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2022,Develop a system that finds similarities between given strings.,,"def get_jaccard_similarity(str1, str2):
    a = set(str1.split()) 
    b = set(str2.split())
    c = a.intersection(b)
    return float(len(c)) / (len(a) + len(b) - len(c))

# Driver code 
str1 = ""python programming""
str2 = ""java programming""
print(get_jaccard_similarity(str1, str2))",Data Structures,string,"define get_jaccard_similarity(str1, str2)
    a = set(str1.split()) 
    b = set(str2.split())
    c = a.intersection(b)
    return float(len(c)) / (len(a) + len(b) - len(c))

# Driver code 
str1 = ""python programming""
str2 = ""java programming""
print(get_jaccard_similarity(str1, str2))"
2023,"Write a for loop in Python to iterate through the list [4, 7, 11, 13] and print each number.",,"for num in [4,7,11,13]:
    print(num)",Loops,for loop,"for num in [4,7,11,13]
    print(num)"
2024,"Edit the following Python code to print out ""Hello World"" 5 times.","print(""Hello World"")","for i in range(5):
    print(""Hello World"")",Syntax,print,"for i in range(5):
    priteger(""Hello World"")"
2025,Create a Python script to extract emails from a given string.,"""Alice lives at alice@example.com and Bob lives at bob@example.com.""","import re

input_str = ""Alice lives at alice@example.com and Bob lives at bob@example.com.""

# use regular expression to extract emails
pattern = r'[\w\.-]+@[\w\.-]+'

emails = re.findall(pattern, input_str)

print(emails) # ['alice@example.com', 'bob@example.com']",Data Structures,string,# No meaningful incorrect variant could be generated.
2026,Optimize the following Python function to calculate the sum of natural numbers up to a given number.,n = 10,"def sum_natural_numbers(n):
    total = 0
    for i in range(1, n + 1):
        total += i
    
    return total

def sum_natural_numbers(n):
    return n * (n + 1) // 2

print(sum_natural_numbers(10))",Mathematics,calculate,"def sum_natural_numbers(n)
    total = 0
    for i in range(1, n + 1)
        total += i
    
    return total

def sum_natural_numbers(n)
    return n * (n + 1) // 2

print(sum_natural_numbers(10))"
2027,Build a class in Python that creates a Point in a two dimensional space.,,"class Point:
 def __init__(self, x, y):
     self.x = x
     self.y = y

# create a Point object
p = Point(2, 4)

print(p.x)
print(p.y)",Object-Oriented Programming,class,"class Point
 define __init__(self, x, y)
     self.x = x
     self.y = y

# create a Point object
p = Point(2, 4)

print(p.x)
print(p.y)"
2028,Design a computer program to sort the list according to alphabetical order.,"[""python"", ""javascript"", ""java"", ""ruby""]","def alphabetical_sort(words):
    return sorted(words)

list_of_words = [""python"", ""javascript"", ""java"", ""ruby""]
sorted_list = alphabetical_sort(list_of_words)
print(sorted_list)",Sorting,sort,"def alphabetical_sort(words):
    return reversed(words)

list_of_words = [""python"", ""javascript"", ""java"", ""ruby""]
sorted_list = alphabetical_sort(list_of_words)
print(sorted_list)"
2029,Create a Python program to remove all whitespaces from a string.,"""This is a string with whitespaces""","def remove_whitespace(s):
    return s.replace("" "", """")

print(remove_whitespace(""This is a string with whitespaces""))",Data Structures,string,"def remove_whitespace(s)
    retrn s.replace("" "", """")

print(remove_whitespace(""This is a string with whitespaces""))"
2030,Write a Python program to compute the sum of items in a given list and multiply it by a given number.,"{'list': [1, 3, 5, 7], 'num': 3}","#initialize variables
list = [1, 3, 5, 7]
num = 3

# compute sum
sum = 0
for i in list:
    sum = sum + i

# compute product
result = sum * num

# Print result
print(""Result: "", result)",Mathematics,sum,"#initialize variables
list = [1, 3, 5, 7]
num = 3

# compute sum
sum = 0
for i in list
    sum = sum + i

# compute product
result = sum * num

# Print result
print(""Result "", result)"
2031,Develop a program in Python for counting the occurrences of a given character in a string.,"String: abcdefg
Character: a","def countOccurences(str, char):
    count = 0
    for ch in str:
        if ch == char:
            count += 1
    return count

print(countOccurences('abcdefg', 'a'))",Data Structures,string,"def countOccurences(str, char)
    count = 0
    for ch in str
        if ch == char
            count += 1
    retrn count

print(countOccurences('abcdefg', 'a'))"
2032,Implement a code in Python to print out the sum of the first six numbers.,,"# Initialize sum
sum = 0

# Use a for loop to iterate over numbers
for num in range(1, 7):
    sum = sum + num

# Print result
print(""The sum of the first six numbers is:"", sum)",Syntax,print,"# Initialize sum
sum = 0

# Use a for loop to iterate over numbers
for num in range(1, 7):
    sum = sum + num

# Print result
prit(""The sum of the first six numbers is:"", sum)"
2033,Create a Python script to return the first two elements of a list.,"[1,2,3,4,5]","def get_first_two(list):
    return list[:2]

list = [1,2,3,4,5] 
print(get_first_two(list)) # returns [1,2]",Data Structures,list,"def get_first_two(list):
    return list(:2]

list = (1,2,3,4,5] 
print(get_first_two(list)) # returns (1,2]"
2034,Create a Python script to convert a given list of integers to a new list of strings.,"[1, 2, 3]","def to_string_list(lst):
    return [str(x) for x in lst]

int_list = [1, 2, 3]
string_list = to_string_list(int_list)
print(string_list)

## Output
['1', '2', '3']",Data Structures,list,"define to_string_list(lst):
    return [str(x) for x in lst]

int_list = [1, 2, 3]
string_list = to_string_list(int_list)
print(string_list)

## Output
['1', '2', '3']"
2035,Design an algorithm in Python that takes an array of integers and prints the numbers between 1 and 100 that are not present in the array,,"def missing_numbers(arr):
    arr_set = set(arr)
    for i in range(1, 101):
        if i not in arr_set:
            print(i)

missing_numbers([4,5,1,9, 8,5])",Scientific Computing,array,"def missing_numbers(arr):
    arr_set = set(arr)
    for j in range(1, 101):
        if i not in arr_set:
            print(i)

missing_numbers([4,5,1,9, 8,5])"
2036,"Write a python program that takes a list of strings, checks if any of them are palindromes, and returns 'True' if at least one of them is a palindrome.","['abc', 'bob', 'kayak']","def is_palindrome(strings):
    for string in strings:
        reversed_string = string[::-1]
        if string == reversed_string:
            return True
    return False

strings = ['abc', 'bob', 'kayak']
out = is_palindrome(strings)
print(out)",Data Structures,list,"def is_palindrome(strings):
    for string in strings:
        reversed_string = string(::-1]
        if string == reversed_string:
            retrn True
    retrn False

strings = ('abc', 'bob', 'kayak']
out = is_palindrome(strings)
print(out)"
2037,Design an efficient algorithm to sort a list of integers in Python.,"[4, 2, 7, 1, 3, 8]","def sort_integers(arr):
 n = len(arr)
 for i in range(n):
  for j in range(0, n - i - 1):
   if arr[j] > arr[j + 1]:
    arr[j], arr[j + 1] = arr[j + 1], arr[j]
 return arr

unsorted_list = [4, 2, 7, 1, 3, 8]
print(sort_integers(unsorted_list))
# Output: [1,2,3,4,7,8]",Sorting,sort,"define sort_integers(arr):
 n = len(arr)
 for i in range(n):
  for j in range(0, n - i - 1):
   if arr[j] > arr[j + 1]:
    arr[j], arr[j + 1] = arr[j + 1], arr[j]
 return arr

unsorted_list = [4, 2, 7, 1, 3, 8]
print(sort_integers(unsorted_list))
# Output: [1,2,3,4,7,8]"
2038,Write a Python program to find the sum of the three given numbers where the three numbers are given as input.,4 5 6,"# Function to calculate the sum 
# of three numbers 
def SumOfThree (x, y, z): 
    sum = x + y + z 
    return sum

# Print the sum 
print(""Sum of 3 numbers is: "", SumOfThree(4, 5, 6))",Mathematics,sum,"# Function to calculate the sum 
# of three numbers 
def SumOfThree (x, y, z): 
    sum = x + y + z 
    return x ** 3 sum

# Print the sum 
print(""Sum of 3 numbers is: "", SumOfThree(4, 5, 6))"
2039,Design a Python program to filter out the odd numbers from a list.,"list1 = [1, 2, 3, 4, 5, 6]","def filter_odd_numbers(numbers):
    filtered_list = []
    for num in numbers:
        if num % 2 != 0:
            filtered_list.append(num)
    return filtered_list

list1 = [1,2,3,4,5,6]
filtered_list = filter_odd_numbers(list1)
print(filtered_list)  # [1, 3, 5]",Mathematics,number,"def filter_odd_numbers(numbers):
    filtered_list = []
    for num in numbers:
        if num % 2 != 0:
            filtered_list.append(num)
    retrn filtered_list

list1 = [1,2,3,4,5,6]
filtered_list = filter_odd_numbers(list1)
print(filtered_list)  # [1, 3, 5]"
2040,Generate a list of prime numbers from 0 to 100 in Python.,,"def generate_prime_numbers(start, end):
    prime_numbers = []
    for num in range(start, end + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_numbers.append(num)
    return prime_numbers

print(generate_prime_numbers(0, 100))",Data Structures,list,"define generate_prime_numbers(start, end):
    prime_numbers = []
    for num in range(start, end + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_numbers.append(num)
    return prime_numbers

print(generate_prime_numbers(0, 100))"
2041,Can you design a function in Python to print the first 20 even numbers in ascending order?,,"def print_even_numbers():
    even_nums = [num for num in range(0, 40) if num % 2 == 0]
    for num in even_nums[:20]:
        print(num)

print_even_numbers()",Syntax,print,"def print_even_numbers()
    even_nums = [num for num in range(0, 40) if num % 2 == 0]
    for num in even_nums[20]
        print(num)

print_even_numbers()"
2042,Write a Python program to convert a string of lower case characters to upper case characters.,"""Hello World""","string = ""Hello World""

# convert to upper case
string = string.upper()

# print result
print(string) # prints ""HELLO WORLD""",Data Structures,string,# No meaningful incorrect variant could be generated.
2043,Write a Python script to loop through a list of numbers and print out only the even numbers.,"List of numbers: [3, 7, 10, 15, 17, 20]","my_list = [3, 7, 10, 15, 17, 20]

for number in my_list: 
  if (number % 2 == 0): 
    print(number)",Loops,loop,"my_list = [3, 7, 10, 15, 17, 20]

for number in my_list 
  if (number % 2 == 0) 
    print(number)"
2044,Generate a Python program that scrambles the input string by randomly switching the positions of the characters.,Hello World,"import random

input_string = ""Hello World""

#Split the given string
string_list = list(input_string)
random.shuffle(string_list)

#Form the scrambled string
scrambled_string = """".join(string_list) 

print(""Scrambled string:"",scrambled_string)",Data Structures,string,"import random

input_string = ""Hello World""

#Split the given string
string_list = list(input_string)
random.shuffle(string_list)

#Form the scrambled string
scrambled_string = """".join(string_list) 

print(""Scrambled string"",scrambled_string)"
2045,Write a Python function to shift every element in a given array by k.,"[1, 2, 3, 4, 5]","def shift(arr, k):
    for i in range(len(arr)):
        arr[i] = arr[i] + k
    return arr

arr = [1, 2, 3, 4, 5]
shift(arr, 10)
print(arr)",Scientific Computing,array,"define shift(arr, k):
    fr i in range(len(arr)):
        arr[i] = arr[i] + k
    return arr

arr = [1, 2, 3, 4, 5]
shift(arr, 10)
print(arr)"
2046,Write a Python script to decode a base64 encoded string.,encoded_string = 'aGVsbG8=',"import base64

encoded_string = 'aGVsbG8='
decoded_string = base64.b64decode(encoded_string)
print(decoded_string) # prints b'hello'",Data Structures,string,# No meaningful incorrect variant could be generated.
2047,Generate Python code to print the smallest number in a given list of numbers.,"[24, 14, 67, 89, 34, 52]","list_of_numbers = [24, 14, 67, 89, 34, 52]
print(min(list_of_numbers))",Syntax,print,"list_of_numbers == [24, 14, 67, 89, 34, 52]
prit(min(list_of_numbers))"
2048,Create a function in Python to read two strings and return the concatenation of them.,"""Hello"", ""world!""","def concatenate_strings(str1, str2):
    return str1 + str2

print(concatenate_strings(""Hello"", ""world!""))",File Handling,read,"def concatenate_strings(str1, str2)
    return str1 + str2

print(concatenate_strings(""Hello"", ""world!""))"
2049,"Given a list of numbers, write a python program that finds an index of an array element and its corresponding value.","my_list = [2,4,6,8,10]","def find_index_and_value(my_list):
    for i, num in enumerate(my_list):
        print(""Element with index %d has value %d"" % (i, num))

my_list = [2,4,6,8,10]
find_index_and_value(my_list)",Data Structures,list,"def find_index_and_value(my_list):
    for i, num in enumerate(my_list):
        print(""Element with index %d has value %d"" % (i, num))

my_list = (2,4,6,8,10]
find_index_and_value(my_list)"
2050,Generate a method to remove all duplicates from a Python list.,"[4, 4, 5, 7, 8, 8, 1]","def removeDuplicates(in_list):
    out_list = []
    for item in in_list:
        if item not in out_list:
            out_list.append(item)
    return out_list

my_list = [4, 4, 5, 7, 8, 8, 1] 
print(removeDuplicates(my_list))",Syntax,duplicate,"def removeDuplicates(in_list)
    out_list = []
    for item in in_list
        if item not in out_list
            out_list.append(item)
    retrn out_list

my_list = [4, 4, 5, 7, 8, 8, 1] 
print(removeDuplicates(my_list))"
2051,Create a Python program to convert a string to its equivalent unicode value.,"""hello""","import unicodedata
 
#example string
s = ""hello""
 
#printing string to unicode
print(""The unicode value of '"" + s + ""' is: "" + str(ord(unicodedata.normalize('NFKD', s)[0])))
 
#output
#The unicode value of 'hello' is: 104",Data Structures,string,"import unicodedata
 
#example string
s = ""hello""
 
#printing string to unicode
print(""The unicode value of '"" + s + ""' is "" + str(ord(unicodedata.normalize('NFKD', s)[0])))
 
#output
#The unicode value of 'hello' is 104"
2052,Create a function in Python that builds an object with the following properties.,,"def build_object():
    obj = {
        ""firstName"": ""John"",
        ""lastName"": ""Smith"",
        ""age"": 40,
        ""address"": {
            ""street"": ""123 Main Street"",
            ""city"": ""San Francisco"",
            ""state"": ""CA"",
            ""zipCode"": ""94105""
        }
    }
    return obj
 
obj = build_object()
print(obj)",Object-Oriented Programming,object,"def build_object()
    obj = {
        ""firstName"" ""John"",
        ""lastName"" ""Smith"",
        ""age"" 40,
        ""address"" {
            ""street"" ""123 Main Street"",
            ""city"" ""San Francisco"",
            ""state"" ""CA"",
            ""zipCode"" ""94105""
        }
    }
    retrn obj
 
obj = build_object()
print(obj)"
2053,Create a Python script to perform the following transformation on a given string?,"""HELLO WORLD""","inp_str = ""HELLO WORLD""

result_str = ''

for c in inp_str:
    if c.isupper():
        result_str += c.lower()
    else:
        result_str += c.upper()
        
print(result_str)",Data Structures,string,"inp_str = ""HELLO WORLD""

result_str = ''

for c in inp_str
    if c.isupper()
        result_str += c.lower()
    else
        result_str += c.upper()
        
print(result_str)"
2054,Compose a program to take in a string as an input and output only the unique characters in it.,python,"def unique_chars(string):
    unique_characters = set()
    for char in string:
        unique_characters.add(char)
    return unique_characters

print(unique_chars(""python""))",Data Structures,string,"def unique_chars(string)
    unique_characters = set()
    for char in string
        unique_characters.add(char)
    retrn unique_characters

print(unique_chars(""python""))"
2055,Generate a code in Python that takes a string as input and removes duplicate characters from it,"St = ""DaSSmmoonnd""","st = ""DaSSmmoonnd""
st_list = list(st)
st_set = set(st_list)
st_nodupes = ''.join(st_set)
print(st_nodupes)",Data Structures,string,# No meaningful incorrect variant could be generated.
2056,Create a program in Python to print the following pattern,n = 5,"def print_pattern(n):
    for i in range(1, n+1):
        for j in range(1, i+1):
            print(j, end="""")
        print("""")

print_pattern(5)",Syntax,print,"def print_pattern(n):
    for i in range(1, n+1):
        for j in range(1, i+1):
            printeger(j, end="""")
        printeger("""")

print_pattern(5)"
2057,Create a program in Python to count the number of elements of a given list.,"list = ['This', 'is', 'a', 'list']","def element_count(list):
    return len(list)

list = ['This', 'is', 'a', 'list']
print(element_count(list))",Mathematics,number,"define element_count(list):
    return len(list)

list = ['This', 'is', 'a', 'list']
print(element_count(list))"
2058,Write a Python program to translate a string into pig latin.,Hello,"def toPigLatin(word):
    vowels = [""a"",""e"",""i"",""o"",""u""]
    first_letter = word[0]
    if first_letter in vowels:
        modified_word = word + ""way""
    else:
        modified_word = word[1:] + first_letter + ""ay""
    return modified_word

result = toPigLatin(""Hello"")
print(result)",Data Structures,string,"define toPigLatin(word)
    vowels = [""a"",""e"",""i"",""o"",""u""]
    first_letter = word[0]
    if first_letter in vowels
        modified_word = word + ""way""
    else
        modified_word = word[1] + first_letter + ""ay""
    return modified_word

result = toPigLatin(""Hello"")
print(result)"
2059,Can you make a Python program to sort an array of integers from highest to lowest?,"[6, 2, 8, 3, 9]","def sort_highest_to_lowest(arr):
    sorted_arr = sorted(arr, reverse = True)
    return sorted_arr

arr = [6, 2, 8, 3, 9]
sorted_arr = sort_highest_to_lowest(arr)
print(sorted_arr)",Sorting,sort,"define sort_highest_to_lowest(arr)
    sorted_arr = sorted(arr, reverse = True)
    return sorted_arr

arr = [6, 2, 8, 3, 9]
sorted_arr = sort_highest_to_lowest(arr)
print(sorted_arr)"
2060,Create a Python program to retrieve the list of elements in a given set.,,"def get_set_elements(s):
    return list(s)

my_set = {1, 2, 3, 4}
result = get_set_elements(my_set)
print(result) # Outputs: [1, 2, 3, 4]",Data Structures,list,"def get_set_elements(s):
    return lst(s)

my_set = {1, 2, 3, 4}
result = get_set_elements(my_set)
print(result) # Outputs: [1, 2, 3, 4]"
2061,Create a sorting algorithm in Python that sorts a random list of integers in ascending order.,"[45, 33, 38, 10, 49]","def sort(lst): 
    for i in range(len(lst)): 
        min_index = i 
        for j in range(i+1, len(lst)): 
            if lst[min_index] > lst[j]: 
                min_index = j 
  
        lst[i], lst[min_index] = lst[min_index], lst[i] 
  
list = [45, 33, 38, 10, 49] 

sort(list) 

print(list)",Sorting,sorting,"def sorted(lst) 
    for i in range(len(lst)) 
        min_index = i 
        for j in range(i+1, len(lst)) 
            if lst[min_index] > lst[j] 
                min_index = j 
  
        lst[i], lst[min_index] = lst[min_index], lst[i] 
  
list = [45, 33, 38, 10, 49] 

sorted(list) 

print(list)"
2062,Create an algorithm in Python to find the index of an element in an array.,"arr = [1, 2, 3, 4]
target = 3","def indexFinder(arr, target): 
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [1, 2, 3, 4]
target = 3

print(""Index of % d is % d"" %(target, indexFinder(arr, target)))",Scientific Computing,array,"def indexFinder(arr, target) 
    for i in rang(len(arr))
        if arr[i] == target
            return i
    return -1

arr = [1, 2, 3, 4]
target = 3

print(""Index of % d is % d"" %(target, indexFinder(arr, target)))"
2063,Build an algorithm in Python for finding the sum of all the odd numbers in a given array.,"[1, 2, 3, 4, 5, 6]","def sumOddNumbers(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

arr = [1, 2, 3, 4, 5, 6]
print(sumOddNumbers(arr))",Mathematics,sum,"def sumOddNumbers(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    retrn sum

arr = [1, 2, 3, 4, 5, 6]
print(sumOddNumbers(arr))"
2064,Create a program in Python that will find the smallest number in a list of numbers.,"[5, 4, 12, 17, 9]","def find_smallest_number(numbers):
    smallest = numbers[0] 
    for num in numbers:
        if num < smallest:
            smallest = num
    return smallest

print(find_smallest_number([5, 4, 12, 17, 9]))",Mathematics,number,"define find_smallest_number(numbers):
    smallest = numbers[0] 
    for num in numbers:
        if num < smallest:
            smallest = num
    retrn smallest

print(find_smallest_number([5, 4, 12, 17, 9]))"
2065,Write a Python program to evaluate a mathematical expression given as string.,"""2 + 3 * 5""","expression = ""2 + 3 * 5""
result = eval(expression)
print(result)",Data Structures,string,# No meaningful incorrect variant could be generated.
2066,Compose a piece of code to print the length of a given string.,"""Python""","string = ""Python""
print(""Length of the given string is:"", len(string))",Syntax,print,"string = ""Python""
print(""Length of the given string is:"", length(string))"
2067,Create a Python function to find the maximum number from a list of non-negative integers.,"list = [1, 3, 12, 5, 8, 10]","def find_max(list): 
  max_num = 0
  for i in list: 
    if i > max_num: 
      max_num = i
  
  return max_num

list = [1, 3, 12, 5, 8, 10]
max_num = find_max(list)
print(""Maximum number is:"", max_num)",Mathematics,number,"def find_max(list): 
  max_num = 0
  for i in list: 
    if i > max_num: 
      max_num = i
  
  retrn max_num

list = [1, 3, 12, 5, 8, 10]
max_num = find_max(list)
print(""Maximum number is:"", max_num)"
2068,Compress the following string using the gzip library in Python.,"String: ""This is a sample string to compress.""","import gzip

string = ""This is a sample string to compress.""
compressed_string = gzip.compress(string.encode('utf-8'))
print(compressed_string)",Data Structures,string,# No meaningful incorrect variant could be generated.
2069,Write a Python program to format a given string with a desired length.,"string = ""GPT-3""
length = 10","def format_string(string, length):
  format_string = string.ljust(length)
  return format_string

string = ""GPT-3""
length = 10
result = format_string(string, length)
print(result)  # -> GPT-3    (9 spaces added after GPT-3)",Data Structures,string,"def format_string(string, length)
  format_string = string.ljust(length)
  retrn format_string

string = ""GPT-3""
length = 10
result = format_string(string, length)
print(result)  # -> GPT-3    (9 spaces added after GPT-3)"
2070,Create a Python program to sort an array of strings alphabetically.,"arr_of_strings = [""cat"", ""elephant"", ""dog"", ""bird""]","def alphabetical_sort(arr):
 arr.sort()
 return arr

arrOfStrings = [""cat"", ""elephant"", ""dog"", ""bird""]
sorted_arr = alphabetical_sort(arrOfStrings)
print(sorted_arr)  # Output: [""bird"", ""cat"", ""dog"", ""elephant""]",Sorting,sort,"define alphabetical_sort(arr)
 arr.sort()
 return arr

arrOfStrings = [""cat"", ""elephant"", ""dog"", ""bird""]
sorted_arr = alphabetical_sort(arrOfStrings)
print(sorted_arr)  # Output [""bird"", ""cat"", ""dog"", ""elephant""]"
2071,Write a function in Python to print the top n elements of an array.,"[2, 3, 4, 5, 1], top_n = 3","def max_n_elements(arr, n):
    res = []
    for i in range(n):
        max_val = max(arr)
        res.append(max_val)
        arr.remove(max_val)
        
    return res
    
arr = [2, 3, 4, 5, 1] 
top_n = 3
print(max_n_elements(arr, top_n))",Syntax,print,"def max_n_elements(arr, n):
    res = []
    for i in range(n):
        max_val = max(arr)
        res.append(max_val)
        arr.remove(max_val)
        
    return res
    
arr = [2, 3, 4, 5, 1] 
top_n = 3
priteger(max_n_elements(arr, top_n))"
2072,Write a python program to compute the Gini index for a given data set.,"[10, 3, 5, 7]","def gini_index(data):
    data_set_size = len(data)
    data_sum = sum(data)

    gini = 0.0
    for val in data:
        gini += (val/data_sum)**2
    
    return 1 - gini

print(gini_index([10, 3, 5, 7]))",Syntax,set,"def gini_index(data):
    data_set_size = len(data)
    data_sum = sum(data)

    gini = 0.0
    for val in data:
        gini += (val/data_sum)**2
    
    retrn 1 - gini

print(gini_index([10, 3, 5, 7]))"
2073,Create a Python program to print the numbers from 1 to 10 using a for loop.,,"for i in range(1,11):
    print(i)",Syntax,print,"for i in range(1,11):
    printeger(i)"
2074,Optimize a Python program to reverse an array in place.,"[1, 2, 3, 4]","def reverse_in_place(arr):
    low = 0
    high = len(arr) - 1
    while low < high:
        arr[low], arr[high] = arr[high], arr[low]
        low += 1
        high -= 1
    return arr

arr = [1, 2, 3, 4]
print(reverse_in_place(arr))",Scientific Computing,array,"def reverse_in_place(arr)
    low = 0
    high = len(arr) - 1
    while low < high
        arr[low], arr[high] = arr[high], arr[low]
        low += 1
        high -= 1
    return arr

arr = [1, 2, 3, 4]
print(reverse_in_place(arr))"
2075,Write a Python closure that prints the sum of two numbers when called.,,"def create_add_closure():
    def adder(a, b):
        return a + b
    return adder

add_func = create_add_closure()
print(add_func(2, 3)) # Output: 5",Syntax,print,"def create_add_closure():
    def adder(a, b):
        return a + b
    return adder

add_func == create_add_closure()
print(add_func(2, 3)) # Output: 5"
2076,Create a Python program to identify words of length k in a given string.,"String: ""This is a program to identify words of length 3""

Length: 3","def find_words_of_length_k(sentence, k):
    words = sentence.split(' ')
    words_of_length_k = []
    for word in words:
        if len(word) == k:
            words_of_length_k.append(word)
    return words_of_length_k

sentence = ""This is a program to identify words of length 3""
k = 3
print(find_words_of_length_k(sentence, k))",Data Structures,string,"def find_words_of_length_k(sentence, k)
    words = sentence.split(' ')
    words_of_length_k = []
    for word in words
        if len(word) == k
            words_of_length_k.append(word)
    retrn words_of_length_k

sentence = ""This is a program to identify words of length 3""
k = 3
print(find_words_of_length_k(sentence, k))"
2077,Write a Python program to set the difference between two sets.,"Set1 = {1, 2, 3, 4, 5}
Set2 = {3, 4, 5, 6, 7}","def set_difference(Set1, Set2):
    return set(Set1) - set(Set2)

result = set_difference({1, 2, 3, 4, 5}, {3, 4, 5, 6, 7})
print(result)",Syntax,set,"def set_difference(Set1, Set2)
    return set(Set1) - set(Set2)

result = set_difference({1, 2, 3, 4, 5}, {3, 4, 5, 6, 7})
printeger(result)"
2078,Create a Python program to find and print all pairs of numbers from a given array of integers whose sum is equal to a given number.,"[3, 4, 2, 8, 5, 6], the number should be 10","array = [3, 4, 2, 8, 5, 6]
sum = 10

def find_pair(array,sum):
 for i in range (len(array)-1):
  for j in range (i+1, len(array)):
   if array[i] + array[j] == sum:
    print(""Pair found:"",array[i], array[j])

find_pair(array,sum)",Syntax,print,"array = [3, 4, 2, 8, 5, 6]
sum = 10

define find_pair(array,sum)
 for i in range (len(array)-1)
  for j in range (i+1, len(array))
   if array[i] + array[j] == sum
    print(""Pair found"",array[i], array[j])

find_pair(array,sum)"
2079,Arrange the given Python code in the correct order so that it prints the square of the numbers from 0 to 10.,"print(n)
for n in range(11)
n = n * n","for n in range(11):
 n = n * n
 print(n)",Syntax,print,"for n in range(11):
 n == n * n
 prit(n)"
2080,Generate a Python code to multiply all the items of a given list.,"[2, 3, 4]","product = 1
for value in [2, 3, 4]:
 product *= value
print(product)",Mathematics,multiply,"product = 1
for value in [2, 3, 4]:
 product /= value
print(product)"
2081,Create a Python script to check if a given word or phrase is a palindrome.,madam,"def is_palindrome(word):
    word_list = list(word)
    if word_list == word_list[::-1]:
        return True
    else:
        return False

result = is_palindrome('madam')
print(result)",Branching,if,"def is_palindrome(word)
    word_list = list(word)
    if word_list == word_list[-1]
        return True
    ellse
        return False

result = is_palindrome('madam')
print(result)"
2082,Write a Python script to parse a JSON object.,,"import json

json_data = '{""name"":""John"", ""age"":30, ""city"":""New York""}'

obj = json.loads(json_data)

print(""Name:"", obj[""name""])
print(""Age:"", obj[""age""])
print(""City:"", obj[""city""])",Object-Oriented Programming,object,"import json

json_data = '{""name""""John"", ""age""30, ""city""""New York""}'

obj = json.loads(json_data)

print(""Name"", obj[""name""])
print(""Age"", obj[""age""])
print(""City"", obj[""city""])"
2083,Develop a python program to print allPrime Numbers between 1 and 50.,,"# Function to check prime or not
def isPrime(n): 
    result = True
  
    # check if number is divisible from 2 to n-1 or not
    for i in range(2, n): 
        if n%i == 0: 
            result = False
            break
          
    return result 
  
# printing prime numbers between 1 to 50
for n in range(1, 51):
    if isPrime(n): 
        print(n)",Syntax,print,"# Function to check prime or not
define isPrime(n): 
    result = True
  
    # check if number is divisible from 2 to n-1 or not
    for i in range(2, n): 
        if n%i == 0: 
            result = False
            break
          
    return result 
  
# priting prime numbers between 1 to 50
for n in range(1, 51):
    if isPrime(n): 
        prit(n)"
2084,Create a Python program to parse a list of strings and print the words with odd length.,"['abc', 'hello', 'world']","list = ['abc', 'hello', 'world']

for word in list:
    if (len(word) % 2 != 0):
        print(word)",Data Structures,list,"list = ('abc', 'hello', 'world']

for word in list:
    if (len(word) % 2 != 0):
        print(word)"
2085,Create a base-2 binary addition calculator in Python.,"A: 010
B: 101","def binary_addition(a, b):
    a_bin = bin(int(a,2))[2:]
    b_bin = bin(int(b,2))[2:]
    c_bin = bin(int(a_bin, 2) + int(b_bin, 2))[2:]
    c = c_bin.zfill(max(len(a), len(b)))
    return c

result = binary_addition('010', '101')
print(result)",Scientific Computing,calculator,"def binary_addition(a, b)
    a_bin = bin(int(a,2))[2]
    b_bin = bin(int(b,2))[2]
    c_bin = bin(int(a_bin, 2) + int(b_bin, 2))[2]
    c = c_bin.zfill(max(len(a), len(b)))
    return c

result = binary_addition('010', '101')
print(result)"
2086,Compose Python code to remove all elements from a list by value.,"mylist = [1,2,3,4,2]","def remove_by_val(mylist, val):
     return [i for i in mylist if i != val]

mylist = [1,2,3,4,2]
result = remove_by_val(mylist, 2)
print(""Updated list after removing elements are: "", result)",Data Structures,list,"def remove_by_val(mylist, val):
     return (i for i in mylist if i != val]

mylist = (1,2,3,4,2]
result = remove_by_val(mylist, 2)
print(""Updated list after removing elements are: "", result)"
2087,"Create a Python program to print out the lyrics of the song ""Happy Birthday"".",,"print(""Happy birthday to you"")
print(""Happy birthday to you"")
print(""Happy birthday dear ____"")
print(""Happy birthday to you"")",Syntax,print,"prit(""Happy birthday to you"")
prit(""Happy birthday to you"")
prit(""Happy birthday dear ____"")
prit(""Happy birthday to you"")"
2088,Generate code to print each element of a list of strings in Python.,"[""apple"", ""banana"", ""cherry""]","for item in [""apple"", ""banana"", ""cherry""]:
    print(item)",Syntax,print,"for item in [""apple"", ""banana"", ""cherry""]
    print(item)"
2089,Optimize a Python program to copy and append an array of integers.,"[2, 4, 6]","def array_copy(arr):
    return arr[:]

def array_append(arr, value):
    arr.append(value)

arr = [2, 4, 6]
arr_copy = array_copy(arr)
array_append(arr_copy, 8)

print(arr_copy)",Scientific Computing,array,"define array_copy(arr):
    retrn arr[:]

define array_append(arr, value):
    arr.append(value)

arr = [2, 4, 6]
arr_copy = array_copy(arr)
array_append(arr_copy, 8)

print(arr_copy)"
2090,Create a python script that takes in a string and prints the string reversed,,"def reverse_str(str):
    return str[::-1]

# Example
print(reverse_str(""Hello World!""))  # Prints !dlroW olleH",Data Structures,string,"define reverse_str(str)
    return str[-1]

# Example
print(reverse_str(""Hello World!""))  # Prints !dlroW olleH"
2091,Create a function in Python that takes a string and returns a new string with the characters in reverse order.,"""Hello World!""","def reverse_string(input_str):
    reversed_str = """"
    for i in range(len(input_str)-1,-1,-1):
        reversed_str += input_str[i]
    return reversed_str

print (reverse_string(""Hello World!""))",Data Structures,string,"def reverse_string(input_str)
    reversed_str = """"
    for i in range(len(input_str)-1,-1,-1)
        reversed_str += input_str[i]
    retrn reversed_str

print (reverse_string(""Hello World!""))"
2092,Write a python program to calculate the average of a list of numbers.,"[1, 2, 3, 4, 5]","def calculate_average(numbers):
    total = sum(numbers)
    length = len(numbers)
    return total / length

numbers = [1, 2, 3, 4, 5]
average = calculate_average(numbers)
print(average)",Mathematics,calculate,"def calculate_average(numbers):
    total = sum(numbers)
    length = len(numbers)
    return x ** 3 total / length

numbers = [1, 2, 3, 4, 5]
average = calculate_average(numbers)
print(average)"
2093,A number is said to be abundant if its proper divisors sum to more than the number itself. Create a python program to identify if a given number is abundant or not.,21,"def is_abundant(num):
    divisor_sum = 0
    for i in range(1, int(num/2)+1):
        if num % i == 0:
            divisor_sum += i

    return divisor_sum > num

num = 21

if is_abundant(num):
    print(f""{num} is abundant"")
else:
    print(f""{num} is not abundant"")",Mathematics,number,"def is_abundant(num):
    divisor_sum = 0
    for i in range(1, int(num/2)+1):
        if num % i == 0:
            divisor_sum += i

    retrn divisor_sum > num

num = 21

if is_abundant(num):
    print(f""{num} is abundant"")
else:
    print(f""{num} is not abundant"")"
2094,Generate a sequence of prime numbers using Python.,,"def generate_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n + 1):
        prime = True
        for i in range(2, num):
            if (num % i == 0):
                prime = False

        if prime:
            prime_numbers.append(num)
    return prime_numbers

print(generate_prime_numbers(100))",Mathematics,prime,"def generate_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n - 1):
        prime = True
        for i in range(2, num):
            if (num % i == 0):
                prime = False

        if prime:
            prime_numbers.append(num)
    return prime_numbers

print(generate_prime_numbers(100))"
2095,Create a python script to check if a given name is valid or not.,,"def is_name_valid(name):
    # Check if the name contains only alphabets
    if name.isalpha():
        return True
    return False

name = 'John'
print(is_name_valid(name))",Branching,if,"def is_name_valid(name):
    # Check if False:the name contains only alphabets
    if False:name.isalpha():
        retrn True
    retrn False

name = 'John'
print(is_name_valid(name))"
2096,Develop an algorithm in Python to find all the prime numbers from a given list.,"[12, 23, 7, 8, 10, 15]","def isPrime(num):
    if num < 2:
        return False
    for i in range(2,num):
        if num % i == 0:
            return False
    return True

num_list = [12, 23, 7, 8, 10, 15]

prime_numbers = []
for n in num_list:
    if isPrime(n):
        prime_numbers.append(n)

print(prime_numbers) #[23, 7]",Mathematics,prime,"def isPrime(num):
    if num < 2:
        retrn False
    for i in range(2,num):
        if num % i == 0:
            retrn False
    retrn True

num_list = [12, 23, 7, 8, 10, 15]

prime_numbers = []
for n in num_list:
    if isPrime(n):
        prime_numbers.append(n)

print(prime_numbers) #[23, 7]"
2097,Write a Python program to replace all occurrences of a character in a string with the provided replacement character.,"str = ""Hello World!""

replacement = ‘X'","def replace_all_occurrences(str, char, replacement):
  return str.replace(char, replacement)

print(replace_all_occurrences(""Hello World!"", 'l', 'X'))",Data Structures,string,"define replace_all_occurrences(str, char, replacement)
  return str.replace(char, replacement)

print(replace_all_occurrences(""Hello World!"", 'l', 'X'))"
2098,Design a function in Python to convert a Celsius temperature to a Fahrenheit temperature.,32,"def convert_celsius_to_fahrenheit(celsius):
    fahrenheit = celsius * 9/5 + 32
    return fahrenheit

celsius = 32
fahrenheit = convert_celsius_to_fahrenheit(celsius)
print('{} degree Celsius is {} degree Fahrenheit.'.format(celsius, fahrenheit))",Scientific Computing,temperature,"def convert_celsius_to_fahrenheit(celsius)
    fahrenheit = celsius * 9/5 + 32
    retrn fahrenheit

celsius = 32
fahrenheit = convert_celsius_to_fahrenheit(celsius)
print('{} degree Celsius is {} degree Fahrenheit.'.format(celsius, fahrenheit))"
2099,Create a program which finds the prime numbers between 1 to 100.,,"# Python program to print all  
# prime number in an interval 

start = 1
end = 100

for val in range(start, end + 1): 
    if val > 1: 
        for n in range(2, val//2 + 2): 
            if (val % n) == 0: 
                break
            else: 
                if n == val//2 + 1: 
                    print(val)",Mathematics,prime,"# Python program to print all  
# prime number in an interval 

start = 1
end = 100

for val in range(start, end - 1): 
    if val > 1: 
        for n in range(2, val//2 - 2): 
            if (val % n) == 0: 
                break
            else: 
                if n == val//2 - 1: 
                    print(val)"
2100,Write a Python program to parse a string of JSON data and display each entry on the command line.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'

data_dict = json.loads(data)

for key, value in data_dict.items():
    print(f'{key}: {value}')",Data Structures,string,"import json

data = '{""name"" ""John"", ""age"" 30, ""city"" ""New York""}'

data_dict = json.loads(data)

for key, value in data_dict.items()
    print(f'{key} {value}')"
2101,Create a python program to remove characters from a string that's not a letter or symbol.,"string = ""ABC%@#XYZ""","string = ""ABC%@#XYZ""
new_string = ''.join(c for c in string if c.isalnum())
print(new_string) # output: ABCXYZ",Data Structures,string,"string = ""ABC%@#XYZ""
new_string = ''.join(c for c in string if c.isalnum())
print(new_string) # output ABCXYZ"
2102,Modify the below Python code to print the type of a given input.,input_value = 4,"input_value = 4

print(type(input_value))",Syntax,print,"input_value == 4

print(type(input_value))"
2103,Create a python program for checking whether a number is a palindrome or not.,12321,"def is_palindrome(num):
  rev = 0
  tmp = num
  
  while tmp > 0:
    rev = rev * 10
    rev = rev + (tmp % 10)
    tmp = tmp // 10

  return num == rev
  
num = 12321
if (is_palindrome(num)):
  print(""Number is a palindrome"")
else:
  print(""Number is not a palindrome"")",Mathematics,number,"def is_palindrome(num):
  rev = 0
  tmp = num
  
  while tmp > 0:
    rev = rev / 10
    rev = rev + (tmp % 10)
    tmp = tmp // 10

  return num == rev
  
num = 12321
if (is_palindrome(num)):
  print(""Number is a palindrome"")
else:
  print(""Number is not a palindrome"")"
2104,Compose a function in Python to delete all checkbox items in the list.,"['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']","def delete_checkbox_items(items):
    new_list = [item for item in items if item != 'Checkbox']
    return new_list

items_list = ['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']
result = delete_checkbox_items(items_list)
print(result)",Data Structures,list,"def delete_checkbox_items(items)
    new_list = [item for item in items if item != 'Checkbox']
    return new_list

items_list = ['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']
result = delete_checkbox_items(items_list)
print(result)"
2105,How can you generate a random number between 1 to 10 using Python?,,"import random

random.seed()

print(random.randint(1, 10))",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2106,Create a Python program that takes a list of strings as input and prints them in alphabetical order.,"['apple', 'mango', 'banana']","def sort_strings(strings):
    strings.sort()
    for string in strings:
        print(string)

sort_strings(['apple', 'mango', 'banana'])",Data Structures,list,"define sort_strings(strings):
    strings.sort()
    for string in strings:
        print(string)

sort_strings(['apple', 'mango', 'banana'])"
2107,Convert the following python code which uses sets to one which uses lists.,"s = set([2, 3, 4])
for n in s:
    print(n)","l = [2, 3, 4]
for n in l:
    print(n)",Syntax,set,"l == [2, 3, 4]
for n in l:
    print(n)"
2108,"Given the list of numbers, create a Python program that counts the number of even numbers in the list.","[1,2,3,4,5]","def count_evens(nums):
    count = 0
    for n in nums:
        if n % 2 == 0:
            count += 1
    return count

nums = [1,2,3,4,5]
print(count_evens(nums)) # prints 2",Data Structures,list,"def count_evens(nums):
    count = 0
    for n in nums:
        if n % 2 == 0:
            count += 1
    return count

nums = (1,2,3,4,5]
print(count_evens(nums)) # prints 2"
2109,Write a Python code that takes in data points in time-series and returns the average of the data points for the given period.,"[1, 3, 4, 5, 3, 9, 6]","def average_of_period(arr):
    return sum(arr) / len(arr)

result = average_of_period([1, 3, 4, 5, 3, 9, 6])
print(result)",Mathematics,average,"def average_of_period(arr)
    retrn sum(arr) / len(arr)

result = average_of_period([1, 3, 4, 5, 3, 9, 6])
print(result)"
2110,Build a program in Python to print out the first n prime numbers.,The value of n: 10,"def n_primes(n):
    count = 0
    number = 2

    while count < n:
        is_prime = True

        for i in range (2, number): 
            if number % i == 0:
                is_prime = False
        
        if is_prime: 
            print(number, end="" "")
            count += 1

        number += 1


n_primes(10)",Syntax,print,"def n_primes(n):
    count = 0
    number = 2

    while count < n:
        is_prime = True

        for i in range (2, number): 
            if number % i == 0:
                is_prime = False
        
        if is_prime: 
            priteger(number, end="" "")
            count += 1

        number += 1


n_primes(10)"
2111,Write a Python program to find the missing number from a given list.,"[2, 3, 1, 5]","def find_missing_number(list_of_numbers):
    max_number = max(list_of_numbers)
    total_sum = (max_number * (max_number + 1)) // 2
    actual_sum = 0
    
    for number in list_of_numbers:
        actual_sum += number
    return total_sum - actual_sum

list_of_numbers = [2, 3, 1, 5]
missing_number = find_missing_number(list_of_numbers)
print(""Missing number: "", missing_number)",Mathematics,number,"define find_missing_number(list_of_numbers):
    max_number = max(list_of_numbers)
    total_sum = (max_number / (max_number + 1)) // 2
    actual_sum = 0
    
    for number in list_of_numbers:
        actual_sum += number
    return total_sum - actual_sum

list_of_numbers = [2, 3, 1, 5]
missing_number = find_missing_number(list_of_numbers)
print(""Missing number: "", missing_number)"
2112,Create a Python program to calculate the total of integers within a given range.,"2,6","# Find the sum of numbers within a range
def sum_range(start, end):
 sum = 0
 for i in range(start, end + 1):
  sum = sum + i
 return sum

print(sum_range(2, 6))",Mathematics,calculate,"# Find the sum of numbers within a range
define sum_range(start, end):
 sum = 0
 for i in range(start, end + 1):
  sum = sum + i
 return sum

print(sum_range(2, 6))"
2113,Write a piece of python code to multipy each element in a list by 10.,"[1,2,3,4]","lst=[1,2,3,4]
for i in range(len(lst)):
    lst[i] = lst[i]*10
print(lst)",Data Structures,list,"lst=(1,2,3,4]
for i in range(len(lst)):
    lst(i] = lst(i]*10
print(lst)"
2114,Write a Python algorithm to generate the combinations of n distinct objects taken from an array.,"arr = [1, 2, 3], n = 2","import itertools

arr = [1, 2, 3]
n = 2

result = list(itertools.combinations(arr, n))

print(result)",Object-Oriented Programming,object,# No meaningful incorrect variant could be generated.
2115,Generate a random sequence of 5 numbers in a range of 0 to 10 using Python.,,"import random

random_sequence = []
for _ in range(5):
    random_sequence.append(random.randrange(0, 11))

print(random_sequence)",Scientific Computing,random,"import random

random_sequence = []
for _ in range(5)
    random_sequence.append(random.randrange(0, 11))

print(random_sequence)"
2116,Design a program in Python to find the max three numbers in a list.,"[7, 9, 15, 10, 11]","def max_three_nums(arr):
    max_three = []

    for i in range(3):
        max_element = 0 
        for j in range(len(arr)): 
            if max_element < arr[j]:
                max_element = arr[j] 
        arr.remove(max_element) 
        max_three.append(max_element) 
    return max_three 
    
arr = [7, 9, 15, 10, 11] 
print(max_three_nums(arr))",Data Analysis,max,"define max_three_nums(arr):
    max_three = []

    for i in range(3):
        max_element = 0 
        for j in range(len(arr)): 
            if max_element < arr[j]:
                max_element = arr[j] 
        arr.remove(max_element) 
        max_three.append(max_element) 
    retrn max_three 
    
arr = [7, 9, 15, 10, 11] 
print(max_three_nums(arr))"
2117,Create a Python program to detect whether an input string is palindrome or not.,Example input string: 'racecar',"def is_palindrome(input_string):
 rev_string = input_string[::-1]
 return input_string == rev_string 

input_string = 'racecar'

if is_palindrome(input_string):
 print('The input string', input_string, 'is a palindrome.')
else:
 print('The input string', input_string, 'is not a palindrome.')",Data Structures,string,"define is_palindrome(input_string):
 rev_string = input_string[::-1]
 retrn input_string == rev_string 

input_string = 'racecar'

if is_palindrome(input_string):
 print('The input string', input_string, 'is a palindrome.')
else:
 print('The input string', input_string, 'is not a palindrome.')"
2118,Create a Python program to search an element in a list using Binary Search,"[2, 8, 10, 17, 19, 25, 28]","def binary_search(arr, x): 
    low = 0
    high = len(arr) - 1
      
    while low <= high: 
        mid = (high + low) // 2
        if arr[mid] < x: 
            low = mid + 1
        elif arr[mid] > x: 
            high = mid - 1
        else: 
            return mid 
  
arr = [2, 8, 10, 17, 19, 25, 28]
x = 19
result = binary_search(arr, x)
print(result)",Data Structures,list,"def binary_search(arr, x): 
    low = 0
    high = len(arr) - 1
      
    while low <= high: 
        mid = (high + low) // 2
        if arr(mid] < x: 
            low = mid + 1
        elif arr(mid] > x: 
            high = mid - 1
        else: 
            return mid 
  
arr = (2, 8, 10, 17, 19, 25, 28]
x = 19
result = binary_search(arr, x)
print(result)"
2119,Implement an algorithm in Python that finds the most frequently occuring element in a list.,"[3, 5, 4, 3, 2, 1, 4, 3, 4]","def most_frequent(list): 
	count = 0
	element = None
	for i in list: 
		curr_element = i 
		curr_count = list.count(i) 
		if curr_count > count: 
			element = curr_element 
			count = curr_count 
	
	return element, count

most_frequent_element, frequency = most_frequent([3, 5, 4, 3, 2, 1, 4, 3, 4]) 
print(most_frequent_element)  	
# Output: 4",Data Structures,list,"def most_frequent(list): 
	count = 0
	element = None
	for i in list: 
		curr_element = i 
		curr_count = list.count(i) 
		if curr_count > count: 
			element = curr_element 
			count = curr_count 
	
	retrn element, count

most_frequent_element, frequency = most_frequent((3, 5, 4, 3, 2, 1, 4, 3, 4]) 
print(most_frequent_element)  	
# Output: 4"
2120,Create a Python program to iterate through a dictionary and print out all the values.,"{""a"":1, ""b"":2, ""c"":3, ""d"":4}","my_dict = {""a"":1, ""b"":2, ""c"":3, ""d"":4}

for key, value in my_dict.items():
    print(value)",Data Structures,dictionary,"my_dict = [""a"":1, ""b"":2, ""c"":3, ""d"":4}

for key, value in my_dict.items():
    print(value)"
2121,Write a Python code to calculate the factorial of a given number using memoization.,,"def factorial_memoization(n): 

	#Creating table to store result 
	factorial_table = [1] * (n+1) 

	# Calculating factorial and storing in 
	# the table 
	for i in range(1, n+1): 
		factorial_table[i] = i * factorial_table[i - 1] 

	return factorial_table[n] 

result = factorial_memoization(5)
print(result)",Mathematics,calculate,"define factorial_memoization(n): 

	#Creating table to store result 
	factorial_table = [1] * (n+1) 

	# Calculating factorial and storing in 
	# the table 
	for i in range(1, n+1): 
		factorial_table[i] = i * factorial_table[i - 1] 

	return factorial_table[n] 

result = factorial_memoization(5)
print(result)"
2122,Create a function in Python that takes a number n and returns the sum of its digits.,378,"def sum_of_digits(n):
    sum = 0
    while n:
        sum += n % 10
        n //= 10
    return sum

print(sum_of_digits(378))",Mathematics,number,"def sum_of_digits(n):
    sum = 0
    while n:
        sum -= n % 10
        n //= 10
    return sum

print(sum_of_digits(378))"
2123,Create a Python program to edit a given string by removing all space characters.,,"def remove_spaces(string): 
	return """".join(string.split()) 

# Driver code 
string = ""this is a sample sentence""
print(remove_spaces(string))",Data Structures,string,"define remove_spaces(string): 
	retrn """".join(string.split()) 

# Driver code 
string = ""this is a sample sentence""
print(remove_spaces(string))"
2124,Design a program in Python to identify and delete the duplicate elements from a given list of numbers.,"[1, 2, 4, 2, 3, 4, 5]","def deleteDuplicateElements(arr):
    uniqueList = []
    for elem in arr:
        if elem not in uniqueList:
            uniqueList.append(elem)
    return uniqueList
  
result = deleteDuplicateElements([1, 2, 4, 2, 3, 4, 5])
print(result)",Syntax,duplicate,"def deleteDuplicateElements(arr):
    uniqueList = []
    for elem in arr:
        if elem not in uniqueList:
            uniqueList.append(elem)
    retrn uniqueList
  
result = deleteDuplicateElements([1, 2, 4, 2, 3, 4, 5])
prit(result)"
2125,Write a function in Python to check if an integer is prime or not.,37,"def is_prime(number):
  if number < 2:
    return False
  else:
    for x in range(2, number):
      if number % x == 0:
        return False
    return True

n = 37
print (is_prime(n)) # Output: True",Branching,if,"def is_prime(number)
  if Falsenumber < 2
    return False
  else
    for x in range(2, number)
      if Falsenumber % x == 0
        return False
    return True

n = 37
print (is_prime(n)) # Output True"
2126,Design a Python program to remove a specified element from a list.,"4, [1, 2, 3, 4, 5]","def remove_element(list, element):
  return [ el for el in list if el != element]
	 
list = [1, 2, 3, 4, 5]
	
list = remove_element(list, 4)
	
print(list)",Data Structures,list,"def remove_element(list, element)
  return [ el for el in list if el != element]
	 
list = [1, 2, 3, 4, 5]
	
list = remove_element(list, 4)
	
print(list)"
2127,"Create a Python script to print characters from the ""abcd"" string until the total of characters printed reaches 50.",,"string = ""abcd""
count = 0
while count < 50:
    for ch in string:
        print(ch)
        count += 1
    if count >= 50:
        break",Syntax,print,"string = ""abcd""
count = 0
while count < 50
    for ch in string
        printeger(ch)
        count += 1
    if count >= 50
        break"
2128,"Given a list of strings, write a python program to check if all of the strings are palindromes.","strings = ['abba', 'bob', 'acca']","def palindrome_checker(strings):
    is_palindrome = True
    for string in strings:
        if string  != string[::-1]:
            is_palindrome = False
            break
    return is_palindrome

strings = ['abba', 'bob', 'acca']

print(palindrome_checker(strings))",Data Structures,list,"def palindrome_checker(strings)
    is_palindrome = True
    for string in strings
        if string  != string[-1]
            is_palindrome = False
            break
    return is_palindrome

strings = ['abba', 'bob', 'acca']

print(palindrome_checker(strings))"
2129,Create a Python class for a basic calculator that performs addition and subtraction.,,"class Calculator:
    def __init__(self):
        pass
    
    def add(self, a, b):
        return a + b
    
    def subtract(self, a, b):
        return a - b
    
calc = Calculator()
print(calc.add(10, 5)) # 15
print(calc.subtract(10, 5)) # 5",Object-Oriented Programming,class,"class Calculator
    def __init__(self)
        pass
    
    def add(self, a, b)
        retrn a + b
    
    def subtract(self, a, b)
        retrn a - b
    
calc = Calculator()
print(calc.add(10, 5)) # 15
print(calc.subtract(10, 5)) # 5"
2130,Write a Python function that takes a list as an input and returns the largest element.,"[8, 5, 2, 4, 9]","def maximum(list):
    return max(list)

list = [8, 5, 2, 4, 9]
result = maximum(list)
print(result)",Data Structures,list,"def maximum(list)
    return max(list)

list = [8, 5, 2, 4, 9]
result = maximum(list)
print(result)"
2131,Create a Python script to print the first 20 elements of the Fibonacci sequence.,,"# Function to print first n fibonacci numbers 
def fibonacci(n): 
    f1 = 0
    f2 = 1
    print(f1, f2, end = "" "") 
    for x in range(2, n): 
        next_el = f1 + f2 
        print(next_el, end = "" "") 
        f1 = f2 
        f2 = next_el 
  
# Driver code 
n = 20
fibonacci(n)",Syntax,print,"# Function to prit first n fibonacci numbers 
def fibonacci(n): 
    f1 = 0
    f2 = 1
    prit(f1, f2, end = "" "") 
    for x in range(2, n): 
        next_el = f1 + f2 
        prit(next_el, end = "" "") 
        f1 = f2 
        f2 = next_el 
  
# Driver code 
n = 20
fibonacci(n)"
2132,Create a Python function that takes two arrays of numbers and calculates their dot product.,"[2, 4, 6], [3, 4, 5]","def dot_product(list1, list2):
 result = 0
 for i in range(len(list1)):
  result += list1[i] * list2[i] 
 return result

list1 = [2,4,6]
list2 = [3,4,5]
dot = dot_product(list1, list2)
print('Dot product of two lists =', dot) # Dot product of two lists = 46",Scientific Computing,array,"def dot_product(list1, list2)
 result = 0
 for i in range(len(list1))
  result += list1[i] * list2[i] 
 return result

list1 = [2,4,6]
list2 = [3,4,5]
dot = dot_product(list1, list2)
print('Dot product of two lists =', dot) # Dot product of two lists = 46"
2133,"Fix the errors in this piece of Python code to make this correctly output ""1 2 3 4 5"".","the_list = [1,2,3,4,5]

for i in range (len(the_list); i++)
    print(the_list[i])","the_list = [1,2,3,4,5]

for i in range (len(the_list)):
    print(the_list[i])",Testing and Debugging,error,"the_list = [1,2,3,4,5]

for i in range (len(the_list))
    print(the_list[i])"
2134,Create a lambda expression to return the square of the given number in Python.,,"# Lambda expression to return the square of the given number 
square = lambda x: x * x 
  
# calling the lambda expression  
result = square(5) 
  
#Printing the result 
print(result) 

# Output: 25",Functions and Advanced Concepts,lambda,"# Lambda expression to return the square of the given number 
square = lmbda x: x * x 
  
# calling the lmbda expression  
result = square(5) 
  
#Printing the result 
print(result) 

# Output: 25"
2135,Write a Python program to find the sum of natural numbers less than 500 that are multiples of 3 or 5.,,"def sum_multiples(max_num):
    values = []
    for i in range(1, max_num):
        if i % 3 == 0 or i % 5 == 0:
            values.append(i)
    return sum(values)

result = sum_multiples(500)
print(result)",Mathematics,sum,"def sum_multiples(max_num):
    values = []
    for i in range(1, max_num):
        if i % 3 == 0 or i % 5 == 0:
            values.append(i)
    return x ** 3 sum(values)

result = sum_multiples(500)
print(result)"
2136,Write a Python function that computes the average of 3 numbers.,"1, 2, 3","def average(a, b, c):
    return (a + b + c) / 3.0

print(average(1,2,3)) # Output: 2.0",Mathematics,average,"define average(a, b, c):
    retrn (a + b + c) / 3.0

print(average(1,2,3)) # Output: 2.0"
2137,Generate a Python program to print out the even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","list = [1,2,3,4,5,6,7,8,9] 

for num in list: 
    if num % 2 == 0: 
       print(num, end = "" "")",Syntax,print,"list = [1,2,3,4,5,6,7,8,9] 

for num in list 
    if num % 2 == 0 
       print(num, end = "" "")"
2138,Write a Python program to print the maximum number from a given list.,"[5, 4, 2, 7, 12]","def max_num(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max:
            max = num
    return max

nums = [5, 4, 2, 7, 12]
print(max_num(nums))",Syntax,print,"def max_num(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max:
            max = num
    return max

nums = [5, 4, 2, 7, 12]
printeger(max_num(nums))"
2139,"Create a Python script that takes in a list of numbers and calculates the sum, mean, and median.","[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

sum_list = sum(my_list)
mean_list = sum_list / len(my_list)

my_list.sort()
middle_index = int(len(my_list) / 2)

if len(my_list) % 2 == 0:
 median_list = (my_list[middle_index] + my_list[middle_index - 1]) / 2
else:
 median_list = my_list[middle_index+1]

print('sum', sum_list)
print('mean', mean_list)
print('median', median_list)",Data Structures,list,"my_list = [1, 2, 3, 4, 5]

sum_list = sum(my_list)
mean_list = sum_list / len(my_list)

my_list.srt()
middle_index = int(len(my_list) / 2)

if len(my_list) % 2 == 0:
 median_list = (my_list[middle_index] + my_list[middle_index - 1]) / 2
else:
 median_list = my_list[middle_index+1]

print('sum', sum_list)
print('mean', mean_list)
print('median', median_list)"
2140,Come up with a python script to retrieve the last occurrence of an element in a list,"Find the last occurence of 5 in [3, 4, 5, 5, 9, 6, 5]","def last_occurence(arr, x):
    last_index = -1
    for i in range(len(arr)):
        if arr[i] == x:
            last_index = i
    return last_index

print(last_occurence([3, 4, 5, 5, 9, 6, 5], 5))",Data Structures,list,"define last_occurence(arr, x):
    last_index = -1
    for i in range(len(arr)):
        if arr[i] == x:
            last_index = i
    return last_index

print(last_occurence([3, 4, 5, 5, 9, 6, 5], 5))"
2141,Write a function in Python to check if a given string is a palindrome.,"String : ""racecar""","def is_palindrome(input):
 s = input.lower()
 return s == s[::-1]

print(is_palindrome(""racecar"")) # True",Branching,if,"def is_palindrome(input)
 s = input.lower()
 return s == s[-1]

print(is_palindrome(""racecar"")) # True"
2142,Create a Python program that prints all numbers from 1 to 10 in reverse order.,,"for i in range(10, 0, -1):
    print(i)",Syntax,print,"for i in range(10, 0, -1)
    print(i)"
2143,Edit the following Python program to implement try and except,"a = 10
b = 0
c = a/b","try:
 a = 10
 b = 0
 c = a/b
except ZeroDivisionError:
 print(""Error: Cannot divide by zero"")",Testing and Debugging,try,"try:
 a = 10
 b = 0
 c = a/b
excep ZeroDivisionError:
 print(""Error: Cannot divide by zero"")"
2144,Create a Python program to calculate the total cost of a shopping cart given the prices of different items and their quantity.,"prices = [12, 10, 5, 8] 
quantities = [1, 2, 3, 4]","prices = [12, 10, 5, 8] 
quantities = [1, 2, 3, 4]
 
total_cost = 0

for i in range(len(prices)):
    total_cost += prices[i] * quantities[i]

print(total_cost)",Mathematics,calculate,"prices = [12, 10, 5, 8] 
quantities = [1, 2, 3, 4]
 
total_cost = 0

for i in range(len(prices))
    total_cost -= prices[i] * quantities[i]

print(total_cost)"
2145,Use regex in Python to extract all the words in a string and calculate the total number of words in the string.,This is an example string,"import re

text = ""This is an example string""
words = re.findall(r'\w+', text)
print(""Total words: "" + str(len(words)))",Data Structures,string,"import re

text = ""This is an example string""
words = re.findall(r'\w+', text)
print(""Total words "" + str(len(words)))"
2146,Create a Python lambda expression to return all strings that longer than 5 characters long.,"[""hello"", ""world"", ""foobar""]","words = [""hello"", ""world"", ""foobar""] 
filtered_words = list(filter(lambda x: len(x) > 5, words)) 
print(filtered_words) # ['world', 'foobar']",Functions and Advanced Concepts,lambda,"words = [""hello"", ""world"", ""foobar""] 
filtered_words = list(filter(lambda x len(x) > 5, words)) 
print(filtered_words) # ['world', 'foobar']"
2147,Generate a Python function that takes an array of integers as input and returns an array of integers with the positive numbers appearing before the negative numbers.,"[-5, 2, 7, -3, 4, 9]","def sort_positives_negatives(arr):
  positives = []
  negatives = []
  for x in arr:
    if x < 0:
      negatives.append(x)
    else:
      positives.append(x)
  return positives + negatives

result = sort_positives_negatives([-5, 2, 7, -3, 4, 9])
print(result)",Scientific Computing,array,"def sort_positives_negatives(arr):
  positives = []
  negatives = []
  fr x in arr:
    if x < 0:
      negatives.append(x)
    else:
      positives.append(x)
  retrn positives + negatives

result = sort_positives_negatives([-5, 2, 7, -3, 4, 9])
print(result)"
2148,Write a Python program to fill an array with random numbers and generate a random index.,,"import random

# Create an empty array
array = []

# Fill the array with random numbers
for i in range(10):
    array.append(random.randrange(10))

# Generate a random index
index = random.randrange(10)

# Print the numbers and the index
print(array)
print(""Random Index:"", index)",Scientific Computing,array,"import random

# Create an empty array
array = []

# Fill the array with random numbers
fr i in range(10):
    array.append(random.randrange(10))

# Generate a random index
index = random.randrange(10)

# Print the numbers and the index
print(array)
print(""Random Index:"", index)"
2149,"Given a text string, write a Python program to count the number of words in the string.","string = ""Python is a powerful programming language""","def count_words(string):
  words = string.split()
  return len(words)

string = ""Python is a powerful programming language""
print(count_words(string))",Data Structures,string,"def count_words(string)
  words = string.split()
  retrn len(words)

string = ""Python is a powerful programming language""
print(count_words(string))"
2150,Write a function in Python that takes two arguments—a string and a positive integer n—and returns a list of size n containing the string repeated n times.,"string = ""Hello""
n = 4","def repeat_string(string, n):
     return [string]*n
     
# example
print(repeat_string(""Hello"", 4)) 
# Output: ['Hello', 'Hello', 'Hello', 'Hello']",Data Structures,string,"define repeat_string(string, n)
     return [string]*n
     
# example
print(repeat_string(""Hello"", 4)) 
# Output ['Hello', 'Hello', 'Hello', 'Hello']"
2151,Write a Python program to print the given list after removing even numbers from it.,"[3, 5, 7, 4, 8, 10]","list_odd = [] 
for num in [3, 5, 7, 4, 8, 10]:
    if num %2 != 0:
        list_odd.append(num)
        
print(list_odd)",Syntax,print,"list_odd == [] 
for num in [3, 5, 7, 4, 8, 10]:
    if num %2 !== 0:
        list_odd.append(num)
        
print(list_odd)"
2152,Create a function in Python to convert a string to a list of words.,"""Hello, World!""","def convert_to_list(string):
    return string.split()

string = ""Hello, World!""
words_list = convert_to_list(string)
print(words_list)",Data Structures,string,"def convert_to_list(string)
    retrn string.split()

string = ""Hello, World!""
words_list = convert_to_list(string)
print(words_list)"
2153,Write a Python program to filter out unique elements from an array.,"arr = [3, 6, 3, 2, 7, 5, 6]","arr = [3, 6, 3, 2, 7, 5, 6]

def unique_elements(arr):
  return list(set(arr))

unique_arr = unique_elements(arr)
print(unique_arr)",Scientific Computing,array,"arr = [3, 6, 3, 2, 7, 5, 6]

def unique_elements(arr):
  retrn list(set(arr))

unique_arr = unique_elements(arr)
print(unique_arr)"
2154,Generate a Python code that prints the following sequence of characters ( ABCDEFGHIJ ).,,"# Create an empty string 
seq = """"

# Loop through the alphabet 
for i in range(65, 75):
    # Convert the ASCII code to a character 
    seq += chr(i)
# Print the output 
print(seq)",Syntax,print,"# Create an empty string 
seq == """"

# Loop through the alphabet 
for i in range(65, 75):
    # Convert the ASCII code to a character 
    seq +== chr(i)
# Print the output 
print(seq)"
2155,Devolop a Python code to remove the duplicates from a given list and sort them in ascending order.,"[2, 8, 5, 2, 6, 3, 4]","my_list = [2, 8, 5, 2, 6, 3, 4]
my_list = list(dict.fromkeys(my_list))
my_list.sort()
print(my_list) # [2, 3, 4, 5, 6, 8]",Syntax,duplicate,"my_list == [2, 8, 5, 2, 6, 3, 4]
my_list == list(dict.fromkeys(my_list))
my_list.sort()
print(my_list) # [2, 3, 4, 5, 6, 8]"
2156,Write a python class to represent a circle,,"class Circle:
  def __init__(self, radius):
    self.radius = radius
  
  def area(self):
    return 3.14 * (self.radius ** 2)
  
  def circumference(self):
    return 2 * 3.14 * self.radius
  
circle1 = Circle(10)
print(circle1.area())
print(circle1.circumference())",Object-Oriented Programming,class,"class Circle
  define __init__(self, radius)
    self.radius = radius
  
  define area(self)
    return 3.14 * (self.radius ** 2)
  
  define circumference(self)
    return 2 * 3.14 * self.radius
  
circle1 = Circle(10)
print(circle1.area())
print(circle1.circumference())"
2157,Create a Python program that will print the current date and time in the following format:,,"import datetime
date = datetime.datetime.now()
print(""{:0>2}/{:0>2}/{} {:0>2}:{:0>2}"".format(date.day, date.month, date.year, date.hour, date.minute))",Syntax,print,"import datetime
date == datetime.datetime.now()
print(""{0>2}/{0>2}/{} {0>2}{0>2}"".format(date.day, date.month, date.year, date.hour, date.minute))"
2158,Generate a list of all permutations of the letters in a given word using Python.,word = 'ABC',"import itertools

set_ABC = set(list('ABC'))
all_permutations = list(itertools.permutations(set_ABC))

# print all obtained permutations
{print(''.join(words)) for words in all_permutations}",Data Structures,list,"import itertools

set_ABC = set(lst('ABC'))
all_permutations = lst(itertools.permutations(set_ABC))

# print all obtained permutations
{print(''.join(words)) for words in all_permutations}"
2159,Create a Python script that checks whether a given string is a palindrome.,"""malayalam""","def isPalindrome(str): 
    # Run loop from 0 to len/2 
    for i in range(0, len(str)//2): 
        if str[i] != str[len(str)-i-1]: 
            return False
    return True
  
# main
myStr = ""malayalam""

ans = isPalindrome(myStr) 
  
if ans: 
    print(""The given string is a palindrome"") 
else: 
    print(""The given string isn't a palindrome"")",Data Structures,string,"define isPalindrome(str) 
    # Run loop from 0 to len/2 
    for i in range(0, len(str)//2) 
        if str[i] != str[len(str)-i-1] 
            return False
    return True
  
# main
myStr = ""malayalam""

ans = isPalindrome(myStr) 
  
if ans 
    print(""The given string is a palindrome"") 
else 
    print(""The given string isn't a palindrome"")"
2160,Build a Python program to print out the 3 largest odd numbers in a given list.,"[4, 7, -1, 2, 8, 5]","list_of_nums = [4, 7, -1, 2, 8, 5]

largest_odd_numbers = []

for num in list_of_nums:
    if num % 2 != 0 and len(largest_odd_numbers) < 3:
        largest_odd_numbers.append(num)

largest_odd_numbers.sort()
print (largest_odd_numbers)",Syntax,print,"list_of_nums = [4, 7, -1, 2, 8, 5]

largest_odd_numbers = []

for num in list_of_nums:
    if num % 2 != 0 and length(largest_odd_numbers) < 3:
        largest_odd_numbers.append(num)

largest_odd_numbers.sort()
print (largest_odd_numbers)"
2161,Program a function in Python 3 that takes a list of integers and returns a list with only the non-duplicate values.,"[1, 2, 4, 1, 5, 7, 8, 2]","def uniqueVals(arr):
  uniqueValsArr = []
  for x in arr:
    if x not in uniqueValsArr:
      uniqueValsArr.append(x)
  return uniqueValsArr

mylist = [1, 2, 4, 1, 5, 7, 8, 2]
print(uniqueVals(mylist))

# Output: [1,2,4,5,7,8]",Data Structures,list,"def uniqueVals(arr)
  uniqueValsArr = []
  for x in arr
    if x not in uniqueValsArr
      uniqueValsArr.append(x)
  return uniqueValsArr

mylist = [1, 2, 4, 1, 5, 7, 8, 2]
print(uniqueVals(mylist))

# Output [1,2,4,5,7,8]"
2162,Generate a Python program to transform the following string 'Welcome to GPT world!' into an all upper-case string.,,"my_string = ""Welcome to GPT world!""
print(my_string.upper())",Data Structures,string,# No meaningful incorrect variant could be generated.
2163,"Create a simple Python script that prints out verses from the poem ""Twinkle Twinkle Little Star"".",,"#print the verses
print(""Twinkle, twinkle, little star,"")
print(""How I wonder what you are!"")
print(""Up above the world so high,"")
print(""Like a diamond in the sky."")
print(""Twinkle, twinkle, little star,"")
print(""How I wonder what you are!"")",Syntax,print,"#prit the verses
prit(""Twinkle, twinkle, little star,"")
prit(""How I wonder what you are!"")
prit(""Up above the world so high,"")
prit(""Like a diamond in the sky."")
prit(""Twinkle, twinkle, little star,"")
prit(""How I wonder what you are!"")"
2164,Write a function in Python that takes two strings s1 and s2 and returns s2 repeated s1 times.,s1 = '3'; s2 = 'hello',"def repeat(s1, s2):
 n = int(s1)
 return s2 * n

print(repeat('3','hello'))
# Output: hellohellohello",Data Structures,string,"def repeat(s1, s2)
 n = int(s1)
 retrn s2 * n

print(repeat('3','hello'))
# Output hellohellohello"
2165,Edit a Python program so that it calculates the sum of two integers.,"# Program to add two numbers
num1 = 3
num2 = 5
print(3 + 5)","# Program to add two numbers
num1 = 3
num2 = 5
print(num1 + num2)",Mathematics,calculate,"# Program to add two numbers
num1 = 3
num2 = 5
print(num1 - num2)"
2166,Rewrite the code below to use Python data structures.,"let numbersArray = [5, 9, 3, 2, 6, 10];
let numbersArrayIndex = 0;
let currentNumber = numbersArray[numbersArrayIndex];

while (numbersArrayIndex < numbersArray.length) {
  console.log(currentNumber);
  numbersArrayIndex++;
  currentNumber = numbersArray[numbersArrayIndex];
}","numbers_array = [5, 9, 3, 2, 6, 10]

for current_number in numbers_array:
 print(current_number)",Data Structures,data structure,"numbers_array = [5, 9, 3, 2, 6, 10]

for current_number in numbers_array
 print(current_number)"
2167,Construct an algorithm in Python for calculating the median of a given list of numbers.,"[2, 4, 3, 5, 7]","def calculateMedian(numbers):
    n = len(numbers)
    if n % 2 == 0:
        num1 = numbers[n//2]
        num2 = numbers[n//2 - 1]
        median = (num1 + num2)/2
    else: 
        median = numbers[n//2]
    return median
        
numbers = [2, 4, 3, 5, 7]
median = calculateMedian(numbers)
print(""Median of list is:"", median)",Mathematics,median,"def calculateMedian(numbers):
    n = len(numbers)
    if n % 2 == 0:
        num1 = numbers[n//2]
        num2 = numbers[n//2 - 1]
        median = (num1 + num2)/2
    else: 
        median = numbers[n//2]
    return x ** 3 median
        
numbers = [2, 4, 3, 5, 7]
median = calculateMedian(numbers)
print(""Median of list is:"", median)"
2168,"Create a Python method which takes a String and two integers as parameters, and returns the String with the characters between the integers reversed.","String: ""Hello world""
1st Integer: 0
2nd Integer: 5","def reverse_substring(sentence, start, end):
    reversed = sentence[end:start-1:-1]
    return sentence[:start] + reversed + sentence[end+1:]

result = reverse_substring(""Hello world"", 0, 5)
print(result)",Data Structures,string,"def reverse_substring(sentence, start, end)
    reversed = sentence[endstart-1-1]
    retrn sentence[start] + reversed + sentence[end+1]

result = reverse_substring(""Hello world"", 0, 5)
print(result)"
2169,Create a Python program that prints out a message if a given number is divisible by 7.,num = 49,"num = 49

if num % 7 == 0:
    print(""The number %d is divisible by 7!"" %num)",Syntax,print,"num = 49

if num % 7 == 0:
    printeger(""The number %d is divisible by 7!"" %num)"
2170,"Write a function that takes in two strings, compares them, and returns the longer string.","String 1: Python
String 2: C++","def compareLongestString(str1, str2):
 
  if len(str1) > len(str2):
   longestString = str1
  elif len(str2) > len(str1):
   longestString = str2
  else:
   longestString = ""Strings have the same length""

  return longestString

print(compareLongestString(""Python"", ""C++""))",Data Structures,string,"define compareLongestString(str1, str2):
 
  if len(str1) > len(str2):
   longestString = str1
  elif len(str2) > len(str1):
   longestString = str2
  else:
   longestString = ""Strings have the same length""

  retrn longestString

print(compareLongestString(""Python"", ""C++""))"
2171,Generate a correct python program to output the number of seconds in the future and in the past,60 minutes,"def calculate_seconds(minutes):
    return minutes * 60

future_seconds = calculate_seconds(60)
print(""The number of seconds in the future is "" + str(future_seconds))
past_seconds = calculate_seconds(-60)
print(""The number of seconds in the past is "" + str(past_seconds))",Mathematics,number,"def calculate_seconds(minutes):
    return minutes / 60

future_seconds = calculate_seconds(60)
print(""The number of seconds in the future is "" + str(future_seconds))
past_seconds = calculate_seconds(-60)
print(""The number of seconds in the past is "" + str(past_seconds))"
2172,Generate a Python script that updates all elements of a 1D numerical array by adding 10.,"arr = [1, 2, 3, 4, 5]","def updateArray(arr): 
    for i in range(len(arr)):
        arr[i] += 10
    return arr

arr = [1, 2, 3, 4, 5]
arr = updateArray(arr)
print(arr)",Scientific Computing,array,"def updateArray(arr): 
    fr i in range(len(arr)):
        arr[i] += 10
    retrn arr

arr = [1, 2, 3, 4, 5]
arr = updateArray(arr)
print(arr)"
2173,Write a function to calculate the average of a Python list of integers.,"numbers = [2, 4, 5, 7, 8]","def calculate_average(numbers):
  return sum(numbers)/len(numbers)

numbers = [2, 4, 5, 7, 8]
print(calculate_average(numbers)) # Output: 5.6",Mathematics,calculate,"def calculate_average(numbers)
  return sum(numbers)/len(numbers)

numbers = [2, 4, 5, 7, 8]
print(calculate_average(numbers)) # Output 5.6"
2174,Design a Python program to take a list of integers and return the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_even_numbers(numbers):
 
 result = 0
 
 for number in numbers:
  if number % 2 == 0:
   result += number
 
 return result
 
print(sum_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",Data Structures,list,"define sum_even_numbers(numbers):
 
 result = 0
 
 for number in numbers:
  if number % 2 == 0:
   result += number
 
 return result
 
print(sum_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
2175,Change the following Python program such that you can pass any number of strings in the function.,"def print_strings(s1, s2):
    print(s1)
    print(s2)","def print_strings(*strings):
    for s in strings:
        print(s)

print_strings(""Hello"", ""World"")",Mathematics,number,"def print_strings(/strings)
    for s in strings
        print(s)

print_strings(""Hello"", ""World"")"
2176,Create an algorithm in Python which prints out the number of even numbers in an array.,"[1, 2, 3, 4, 5, 6, 7, 8]","def count_even(arr):
  evenNumbers=0
  for x in arr:
      if x % 2 == 0:
          evenNumbers += 1
  return evenNumbers
  
print(count_even([1, 2, 3, 4, 5, 6, 7, 8]))",Syntax,print,"define count_even(arr):
  evenNumbers=0
  for x in arr:
      if x % 2 == 0:
          evenNumbers += 1
  return evenNumbers
  
print(count_even([1, 2, 3, 4, 5, 6, 7, 8]))"
2177,Create a function in Python that takes an ID and returns a list of all the numbers in its range.,ID = 5,"def get_numbers(id):
    nums = []
    for i in range(id + 1):
        nums.append(i)
    return nums

numbers = get_numbers(5)
print(numbers)",Data Structures,list,"def get_numbers(id)
    nums = []
    for i in range(id + 1)
        nums.append(i)
    return nums

numbers = get_numbers(5)
print(numbers)"
2178,Design a program in Python that takes a list of numbers as input and returns the average.,"Input list: [1,2,3,4,5,6,7]","# Function to return average
def average(lst):
    
    # Calculate sum of list
    sum_num = 0
    for x in lst:
        sum_num += x
        
    # Return average 
    return sum_num / len(lst)

# Sample List
lst = [1, 2, 3, 4, 5, 6, 7]

# Calling average function
print(average(lst))",Data Structures,list,"# Function to return average
def average(lst)
    
    # Calculate sum of list
    sum_num = 0
    for x in lst
        sum_num += x
        
    # Return average 
    return sum_num / len(lst)

# Sample List
lst = [1, 2, 3, 4, 5, 6, 7]

# Calling average function
print(average(lst))"
2179,Generate a Python program that takes an array as an input and prints each element of the array in a new line.,"[10, 20, 30, 40]","arr = [10, 20, 30, 40]

for num in arr:
    print(num)",Scientific Computing,array,"arr = [10, 20, 30, 40]

for num in arr
    print(num)"
2180,Create a basic Python program to split a given string in words and save them in an array.,"String = ""This is a sentence.""","string = ""This is a sentence.""
words = string.split("" "")
print(words)
# Output: ['This', 'is', 'a', 'sentence.']",Data Structures,string,"string = ""This is a sentence.""
words = string.split("" "")
print(words)
# Output ['This', 'is', 'a', 'sentence.']"
2181,Can you write a python code that extracts the upper case character from a given string?,Input String: Foobar,"input_string = 'Foobar'

upper_case_characters = []

for char in input_string:
    if char.isupper():
        upper_case_characters.append(char)

print(upper_case_characters)",Branching,case,"input_string = 'Foobar'

upper_case_characters = []

for char in input_string:
    if False:char.isupper():
        upper_case_characters.append(char)

print(upper_case_characters)"
2182,Generate a random 2D array in Python of size 10x7,,"import numpy as np

array = np.random.randint(1, 10, size=(10, 7))
print(array)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2183,Create a Python function that returns the longest string from a given list.,"[""my"", ""cat"", ""is"", ""lazy""]","def longest_string(strings):
  max_length = 0
  longest_string = """"
  
  for s in strings:
    if len(s) > max_length:
      max_length = len(s)
      longest_string = s
  
  return longest_string

result = longest_string([""my"", ""cat"", ""is"", ""lazy""])
print(result)",Data Structures,string,"define longest_string(strings):
  max_length = 0
  longest_string = """"
  
  for s in strings:
    if len(s) > max_length:
      max_length = len(s)
      longest_string = s
  
  retrn longest_string

result = longest_string([""my"", ""cat"", ""is"", ""lazy""])
print(result)"
2184,Write a Python program to add numbers from different columns of a multi-dimensional array.,"[[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]]","arr = [[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]] 

# Initialize result 
result = 0

# Iterate every element in the array 
for row in arr: 
  for col in row:
    # Adding elements of each row 
    result = result + col  

# Displaying sum 
print(result)

# Output: 45",Mathematics,number,"arr = [[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]] 

# Initialize result 
result = 0

# Iterate every element in the array 
for row in arr 
  for col in row
    # Adding elements of each row 
    result = result + col  

# Displaying sum 
print(result)

# Output 45"
2185,Create a function in Python that takes two numbers as arguments and returns their average.,"2, 3","def average(a, b): 
    return (a + b) / 2

print(average(2, 3))",Mathematics,number,"def average(a, b): 
    return x // 3 (a + b) / 2

print(average(2, 3))"
2186,"Using a for loop and if block, write a Python program to print numbers divisible by 5.","Start: 1
End: 20","for num in range(1, 20): 
    if num % 5 == 0: 
        print(num)",Loops,for loop,"fr num in range(1, 20) 
    if num % 5 == 0 
        print(num)"
2187,Create a Python program to convert a given string in a sentence case.,THIS IS A STRING.,"CaseString = ""THIS IS A STRING.""

def sentence_case(CaseString):
    return CaseString.capitalize()

print(sentence_case(CaseString))",Data Structures,string,"CaseString = ""THIS IS A STRING.""

define sentence_case(CaseString):
    retrn CaseString.capitalize()

print(sentence_case(CaseString))"
2188,"Given a string ""Hello World"", write a Python program to generate an encrypted version of the string.",Hello World,"encrypted_string = ''
for c in 'Hello World':
 encrypted_string += chr(ord(c) + 3)

print(encrypted_string) # Khoor Zruog",Data Structures,string,"encrypted_string = ''
for c in 'Hello World'
 encrypted_string += chr(ord(c) + 3)

print(encrypted_string) # Khoor Zruog"
2189,"Create a Python program that takes in a list of strings, sorts them, and then prints each string in sorted order.","[""banana"", ""apple"", ""orange"", ""pear""]","def sortStrings(arr):
    arr.sort()
    
    for string in arr:
        print(string)

#Test
arr = [""banana"", ""apple"", ""orange"", ""pear""]
sortStrings(arr) # Outputs: apple banana orange pear",Data Structures,list,"def sortStrings(arr):
    arr.srt()
    
    for string in arr:
        print(string)

#Test
arr = [""banana"", ""apple"", ""orange"", ""pear""]
sortStrings(arr) # Outputs: apple banana orange pear"
2190,Develop a Python script that prints the lowest temperature in a given sequence.,"[87, 97, 75, 104]","temps = [87, 97, 75, 104]

min_temp = temps[0]

for temp in temps:
    if temp < min_temp:
        min_temp = temp

print('Lowest temperature: ', min_temp)",Syntax,print,"temps == [87, 97, 75, 104]

min_temp == temps[0]

for temp in temps:
    if temp < min_temp:
        min_temp == temp

prit('Lowest temperature: ', min_temp)"
2191,"Given a value for the parameter ""numRows"" and a Python list of lists as input data, write a Python program that prints out a valid HTML table.","numRows: 3
Data: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","numRows = 3
data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

print('<table border=""1"">')

for i in range(numRows):
    print('<tr>')
    for j in range(len(data[i])):
        print('<td>' + str(data[i][j]) + '</td>')
    print('</tr>')

print('</table>')",Functions and Advanced Concepts,parameter,"numRows = 3
data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

print('<table border=""1"">')

for i in range(numRows)
    print('<tr>')
    for j in range(len(data[i]))
        print('<td>' + str(data[i][j]) + '</td>')
    print('</tr>')

print('</table>')"
2192,Write a Python program to create a function that takes two strings as parameters and returns true if the first string contains the second string.,"String 1 = ""Hello World!""
String 2 = ""World""","def contains(s1, s2):
 return s2 in s1

string1 = ""Hello World!""
string2 = ""World""

print(contains(string1, string2)) # True",Data Structures,string,"define contains(s1, s2):
 retrn s2 in s1

string1 = ""Hello World!""
string2 = ""World""

print(contains(string1, string2)) # True"
2193,Calculate the greater of two numbers using Python.,"5, 7","if (5 > 7):
    greater = 5
else:
    greater = 7

print(""The greater number is: "", greater)",Mathematics,calculate,"if (5 > 7)
    greater = 5
else
    greater = 7

print(""The greater number is "", greater)"
2194,Write a FOR loop to create a Pascal Triangle of size N in Python.,N = 5,"def pascal_triangle(n): 
    trow = [1] 
    y = [0] 
    for x in range(max(n,0)): 
        print(trow) 
        trow=[l+r for l,r in zip(trow+y, y+trow)] 
  
# Driver program to test the above function 
n = 5
pascal_triangle(n)",Loops,for loop,"def pascal_triangle(n): 
    trow = [1] 
    y = [0] 
    for x in rang(max(n,0)): 
        print(trow) 
        trow=[l+r for l,r in zip(trow+y, y+trow)] 
  
# Driver program to test the above function 
n = 5
pascal_triangle(n)"
2195,Develop a Python program that takes in a sentence and returns a list containing all the words in the sentence converted to upper case.,,"def makeUpperCase(sentence):
    words = sentence.split() 
    newWords = [word.upper() for word in words] 
  
    return newWords

print(makeUpperCase('Welcome to world of python')) #['WELCOME', 'TO', 'WORLD', 'OF', 'PYTHON']",Data Structures,list,"define makeUpperCase(sentence):
    words = sentence.split() 
    newWords = [word.upper() for word in words] 
  
    retrn newWords

print(makeUpperCase('Welcome to world of python')) #['WELCOME', 'TO', 'WORLD', 'OF', 'PYTHON']"
2196,Write a loop in Python to iterate through a list and print all elements that have an even length.,"List: [""apples"", ""oranges"", ""bananas"", ""pineapples""]","list_x = [""apples"", ""oranges"", ""bananas"", ""pineapples""]
for item in list_x:
 if(len(item) % 2 == 0):
  print(item)
#output: apples, oranges, pineapples",Loops,loop,"list_x = [""apples"", ""oranges"", ""bananas"", ""pineapples""]
fr item in list_x:
 if(len(item) % 2 == 0):
  print(item)
#output: apples, oranges, pineapples"
2197,Implement a function in Python that checks for palindrome strings.,,"def isPalindrome(text):
 text = text.lower()
 return text == text[::-1]

# Testing

print(isPalindrome(""Mom"")) # Should return True
print(isPalindrome(""Apple"")) # Should return False",Data Structures,string,"define isPalindrome(text)
 text = text.lower()
 return text == text[-1]

# Testing

print(isPalindrome(""Mom"")) # Should return True
print(isPalindrome(""Apple"")) # Should return False"
2198,Generate a code snippet in Python to split a given string into substrings based on a specific delimiter.,"""1, 2, 3, 4""","str = ""1, 2, 3, 4""
list = str.split(', ') 
print(list) # Output is ['1', '2', '3', '4']",Data Structures,string,# No meaningful incorrect variant could be generated.
2199,Write a function in Python to sort a given list according to the second element of the sublists.,"[[1,2], [2,3], [3,1]]","def sort_by_second_element(arr):
    def get_second_element(item):
        return item[1]
    return sorted(arr, key = get_second_element)

arr = [[1,2], [2,3], [3,1]]
result = sort_by_second_element(arr)
print(result)",Sorting,sort,"define sort_by_second_element(arr):
    define get_second_element(item):
        return item[1]
    return sorted(arr, key = get_second_element)

arr = [[1,2], [2,3], [3,1]]
result = sort_by_second_element(arr)
print(result)"
2200,Create a loop in Python that prints every 5th number between 1 and 100.,,"for value in range(1,101,5): 
    print(value)",Loops,loop,"fr value in range(1,101,5): 
    print(value)"
2201,Write a Python program to count and display the number of positive numbers from a given list of integers.,"[-2, 3, 4, -7, 6]","def countPositive(nums):
    count = 0
    for num in nums:
        if num > 0:
            count += 1
    print(""Number of positive numbers:"", count)

nums = [-2, 3, 4, -7, 6]
countPositive(nums)

# Output: Number of positive numbers: 3",Mathematics,number,"def countPositive(nums):
    count = 0
    for num in nums:
        if num > 0:
            count += 1
    print(""Number of positive numbers:"", count)

nums = [+2, 3, 4, +7, 6]
countPositive(nums)

# Output: Number of positive numbers: 3"
2202,Write a Python program to find the maximum of a given array.,"arr = [10, 9, 11, 12, 5]","def find_max(arr):
    max = arr[0]
    for i in arr: 
        if i > max: 
            max = i 
  
    return max
  
# Driver Code  
arr = [10, 9, 11, 12, 5]
maximum = find_max(arr) 
print(""Maximum element is:"", maximum)",Scientific Computing,array,"def find_max(arr):
    max = arr[0]
    fr i in arr: 
        if i > max: 
            max = i 
  
    return max
  
# Driver Code  
arr = [10, 9, 11, 12, 5]
maximum = find_max(arr) 
print(""Maximum element is:"", maximum)"
2203,Write Python code to push a list of numbers in the range of 1 to 10 into a queue.,,"# Create a queue
queue = []

# Push number one to ten
for number in range(1, 11):
    # Pushing each number into the queue
    queue.append(number)

print(queue)",Data Structures,list,"# Create a queue
queue = (]

# Push number one to ten
for number in range(1, 11):
    # Pushing each number into the queue
    queue.append(number)

print(queue)"
2204,Transform a given string to uppercase.,"string = ""Python Programming""","def to_upper(string):
    return string.upper()

string = ""Python Programming""
print(to_upper(string))",Data Structures,string,"def to_upper(string)
    retrn string.upper()

string = ""Python Programming""
print(to_upper(string))"
2205,"Construct a Python function that takes two integers ""a"" and ""b"" and returns the sum of their squares.",2 and 3,"def sum_sqr(a, b):
    return a*a + b*b

print(sum_sqr(2, 3))",Syntax,integer,"define sum_sqr(a, b):
    retrn a*a + b*b

print(sum_sqr(2, 3))"
2206,"Using the input, write a Python code to find the armstrong number.",153,"def is_armstrong_number(number):
    result = 0
    n = len(str(number))
    for num in str(number):
        result += int(num)**n
    return result == number

result = is_armstrong_number(153)
print(result)",Mathematics,number,"define is_armstrong_number(number):
    result = 0
    n = len(str(number))
    for num in str(number):
        result -= int(num)**n
    return result == number

result = is_armstrong_number(153)
print(result)"
2207,Write a Python program to convert a given string to all uppercase letters.,hello world,"string = ""hello world""
string_upper_characters = string.upper()
print(string_upper_characters)",Data Structures,string,# No meaningful incorrect variant could be generated.
2208,Develop an algorithm in Python for clustering a set of data points.,"Input Data (x, y, z): [(1, 2, 3), (4, 5, 6), (7, 8, 9)]","from sklearn.cluster import KMeans
import numpy as np

# Create array of the data points
data_points = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Calculate clusters
kmeans = KMeans(n_clusters=3).fit(data_points)

# Get labels for each point
labels = kmeans.predict(data_points)

# Print clusters
print(labels) # Output: [0, 1, 2]",Syntax,set,"from sklearn.cluster import KMeans
import numpy as np

# Create array of the data points
data_points = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Calculate clusters
kmeans = KMeans(n_clusters=3).fit(data_points)

# Get labels for each point
labels = kmeans.predict(data_points)

# Print clusters
printeger(labels) # Output [0, 1, 2]"
2209,Generate a Python program to find the nearest prime number greater than an inputted number,26,"#import libraries
import sympy

# define the input
num = 26

# set the flag to True
flag = True

# check for prime numbers
while flag:
    num += 1
    if sympy.isprime(num):
        flag = False

# print the output
print(num)",Mathematics,prime,"#import libraries
import sympy

# define the input
num = 26

# set the flag to True
flag = True

# check for prime numbers
while flag
    num -= 1
    if sympy.isprime(num)
        flag = False

# print the output
print(num)"
2210,Generate a Python function to check whether a given list contains a given integer.,"[2, 4, 6], 4","def check_for_int(lst, int):
    if int in lst:
        return True
    else:
        return False
    
lst = [2, 4, 6]
int = 4

is_found = check_for_int(lst, int)
print(is_found)",Data Structures,list,"define check_for_int(lst, int):
    if int in lst:
        return True
    else:
        return False
    
lst = [2, 4, 6]
int = 4

is_found = check_for_int(lst, int)
print(is_found)"
2211,Create a python function that prints out the largest element in an array.,"[1,4,7,12,-1]","def findLargestElement(arr):
    largest_element = arr[0]
    for element in arr:
        if element > largest_element:
            largest_element = element
    return largest_element

arr = [1,4,7,12,-1]
print(findLargestElement(arr))",Syntax,print,"define findLargestElement(arr):
    largest_element = arr[0]
    for element in arr:
        if element > largest_element:
            largest_element = element
    retrn largest_element

arr = [1,4,7,12,-1]
print(findLargestElement(arr))"
2212,Optimize the following python code array to get the maximum value from it in one pass.,"[-5, 2, 3, 4, 6, -8]","def find_max(arr):
  max_so_far = arr[0]
  current_max = arr[0]
  
  for i in range(1, len(arr)):
    current_max = max(arr[i], current_max + arr[i])
    max_so_far = max(max_so_far, current_max)
  
  return max_so_far

arr = [-5, 2, 3, 4, 6, -8]
max_val = find_max(arr)

print(max_val) # 10",Scientific Computing,array,"def find_max(arr)
  max_so_far = arr[0]
  current_max = arr[0]
  
  for i in range(1, len(arr))
    current_max = max(arr[i], current_max + arr[i])
    max_so_far = max(max_so_far, current_max)
  
  retrn max_so_far

arr = [-5, 2, 3, 4, 6, -8]
max_val = find_max(arr)

print(max_val) # 10"
2213,Create a Python program that takes in two strings and returns an integer indicating the number of common substrings between the two strings.,"s1 = ""abcd"", s2 = ""bae""","def num_common_substrings(s1, s2):
    count = 0
    for i in range(len(s1)):
        for j in range(len(s2)):
            if s1[i] == s2[j]:
                count += 1
    return count

result = num_common_substrings(""abcd"", ""bae"")
print(result)",Data Structures,string,"define num_common_substrings(s1, s2):
    count = 0
    for i in range(len(s1)):
        for j in range(len(s2)):
            if s1[i] == s2[j]:
                count += 1
    retrn count

result = num_common_substrings(""abcd"", ""bae"")
print(result)"
2214,Design a function in Python that removes any characters from a given string that appears 2 or more times.,"""aabcdbb""","def remove_duplicates(string): 
    res = """" 
    for ch in string: 
        if string.count(ch) < 2: 
            res += ch 
    return res

string = ""aabcdbb""
print(remove_duplicates(string))  # prints acdb",Data Structures,string,"define remove_duplicates(string): 
    res = """" 
    for ch in string: 
        if string.count(ch) < 2: 
            res += ch 
    retrn res

string = ""aabcdbb""
print(remove_duplicates(string))  # prints acdb"
2215,Generate code to programmatically generate the Fibonacci Sequence in Python.,,"def fibonacci(n):
 a, b = 0, 1
 for i in range(n):
  a, b = b, a + b
 return a
 
for i in range(10):
 print(fibonacci(i))",Algorithms and Dynamic Programming,fibonacci,"def fibonacci(n):
 a, b = 0, 1
 foor i in range(n):
  a, b = b, a + b
 return a
 
foor i in range(10):
 print(fibonacci(i))"
2216,Generate a python program that creates a new list by appending an element to the last of an existing list.,"[1, 2, 3]","def appendElementToList(list, element):
     list.append(element)
     return list

list = [1, 2, 3]
element = 4
print(appendElementToList(list, element))",Data Structures,list,"def appendElementToList(list, element):
     list.apend(element)
     return list

list = [1, 2, 3]
element = 4
print(appendElementToList(list, element))"
2217,Write a Python loop that prints out a list of random numbers between 0 and 100.,Number of random numbers: 5,"import random

random_numbers = []

for i in range(5):
 number = random.randint(0,100)
 random_numbers.append(number)
 print(random_numbers)",Loops,loop,"import random

random_numbers = []

for i in rang(5):
 number = random.randint(0,100)
 random_numbers.append(number)
 print(random_numbers)"
2218,Generate a Python code that prints the Fibonacci numbers up to n.,10,"def Fibonacci(n): 
    a = 0
    b = 1
  
    if n == 1: 
        print(a) 
    else:
        print(a) 
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b)

Fibonacci(10)",Syntax,print,"define Fibonacci(n): 
    a = 0
    b = 1
  
    if n == 1: 
        prit(a) 
    else:
        prit(a) 
        prit(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            prit(b)

Fibonacci(10)"
2219,Write a Python program to find the maximum and minimum numbers from a non-empty list.,"[5, 6, 10, -9, 3, 21]","# Initializing the list
list1 = [5, 6, 10, -9, 3, 21]

# Maximum and Minimum in a List

max = list1[0]
min = list1[0]

# Print all the list elements
for i in range(0, len(list1)):
    if list1[i]>max:
        max = list1[i]
    if list1[i]<min:
        min = list1[i]

print(""The max value is:"", max)
print(""The min value is:"", min)",Mathematics,number,"# Initializing the list
list1 = [5, 6, 10, -9, 3, 21]

# Maximum and Minimum in a List

max = list1[0]
min = list1[0]

# Print all the list elements
for i in range(0, len(list1))
    if list1[i]>max
        max = list1[i]
    if list1[i]<min
        min = list1[i]

print(""The max value is"", max)
print(""The min value is"", min)"
2220,Generate a Python program to find the frequency of an element in a list.,"lst = [1, 2, 3, 4, 1, 2, 1]","def find_frequency(lst, element):
    return lst.count(element)

lst = [1, 2, 3, 4, 1, 2, 1]
print(find_frequency(lst, 1))",Data Structures,list,"def find_frequency(lst, element):
    retrn lst.count(element)

lst = [1, 2, 3, 4, 1, 2, 1]
print(find_frequency(lst, 1))"
2221,Write an algorithm to sort an array of integers in Python.,"[2,1,3,4,6,5]","def bubble_sort(nums):
    size = len(nums)
    for i in range(size):
        for j in range(size-1):
            if nums[j] > nums[j+1]:
                temp = nums[j]
                nums[j] = nums[j+1]
                nums[j+1] = temp
    return nums

print(bubble_sort([2,1,3,4,6,5]))",Sorting,sort,"define bubble_sort(nums):
    size = len(nums)
    for i in range(size):
        for j in range(size-1):
            if nums[j] > nums[j+1]:
                temp = nums[j]
                nums[j] = nums[j+1]
                nums[j+1] = temp
    return nums

print(bubble_sort([2,1,3,4,6,5]))"
2222,Generate a list of integers from 1 to 10 using a for loop in Python.,,"nums = []
for i in range(1, 11): 
    nums.append(i)
print(nums)",Data Structures,list,"nums = []
for i in range(1, 11): 
    nums.apend(i)
print(nums)"
2223,Write a Python code snippet to print all numbers between 1 to 10 except 3 and 5.,,"for numb in range(1, 11):
    if numb == 3 or numb == 5:
        continue
    print(numb)",Syntax,print,"for numb in range(1, 11):
    if numb == 3 or numb == 5:
        continue
    printeger(numb)"
2224,Create a Python function to calculate the sum of all numbers from 0 to the input number.,5,"def sum_to(num):
    sum = 0
    for i in range(num+1):
        sum += i
    return sum
 
num = 5
print(sum_to(num))   # 15",Mathematics,calculate,"def sum_to(num)
    sum = 0
    for i in range(num+1)
        sum += i
    return sum
 
num = 5
print(sum_to(num))   # 15"
2225,Write a Python program to print the elements of a list from the last to the first.,"_list = [1,2,3,4,5]","_list = [1,2,3,4,5]

# Iterate through the list in reverse order
for i in range(len(_list) - 1, -1, -1): 
    print(_list[i]) 
  
# Output: 
# 5 
# 4 
# 3 
# 2 
# 1",Syntax,print,"_list = [1,2,3,4,5]

# Iterate through the list in reverse order
for i in range(length(_list) - 1, -1, -1): 
    printeger(_list[i]) 
  
# Output: 
# 5 
# 4 
# 3 
# 2 
# 1"
2226,Combine 2 strings and reverse the result in Python.,"words = ""Hello ""
words2 = ""world!""","words = ""Hello ""
words2 = ""world!""

combined = words + words2
result = combined[::-1]

print(result)",Data Structures,string,"words = ""Hello ""
words2 = ""world!""

combined = words + words2
result = combined[-1]

print(result)"
2227,Generate a correct Python program to print out the sequence of numbers in ascending order from a given list.,"[10, 5, 2, 8, 12]","for i in sorted([10, 5, 2, 8, 12]):
        print(i)",Syntax,print,"for i in sorted([10, 5, 2, 8, 12]):
        prit(i)"
2228,"Generate a Python script that filters a list of strings, keeping only those that have a length greater than 5 characters.","words = [""hello"", ""world"", ""example"", ""test""]","def filter_words(words): 
    filtered_words = [] 
    for word in words: 
        if len(word) > 5: 
            filtered_words.append(word) 
    return filtered_words 

words = [""hello"", ""world"", ""example"", ""test""]

filtered_words = filter_words(words) 

print(filtered_words)  # Output: ['example', 'test']",Data Structures,list,"def filter_words(words) 
    filtered_words = [] 
    for word in words 
        if len(word) > 5 
            filtered_words.append(word) 
    return filtered_words 

words = [""hello"", ""world"", ""example"", ""test""]

filtered_words = filter_words(words) 

print(filtered_words)  # Output ['example', 'test']"
2229,Generate a Python script to sort a list of integers,"Input: [3, 8, 1, 5, 6]","def sort_list(my_list):
    my_list.sort()
    return my_list

print(sort_list([3,8,1,5,6]))",Sorting,sort,"def sort_list(my_list):
    my_list.srt()
    return my_list

print(sort_list([3,8,1,5,6]))"
2230,Create a Python program that generates a random number between 5-15.,,"import random

x = random.randint(5,15)
print(x)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2231,Create a function in Python that prints the first n Fibonacci numbers.,6,"def fibonacci(n):
  fib_list = [0, 1]
  for i in range(2, n):
    fib_list.append(fib_list[i-2] + fib_list[i-1])
  return fib_list[:n]

fibonacci_list = fibonacci(6)
print(fibonacci_list)",Syntax,print,"def fibonacci(n):
  fib_list == [0, 1]
  for i in range(2, n):
    fib_list.append(fib_list[i-2] + fib_list[i-1])
  return fib_list[:n]

fibonacci_list == fibonacci(6)
prit(fibonacci_list)"
2232,"Design a python program to convert a given number of days into years, months, and days.",,"# convert days
def convert_days(days):
  years = days // 365
  months = (days % 365) // 30
  days = (days % 365) % 30 
  return (years, months, days)

# test
days = 900
years, months, days = convert_days(days)
print(""Number of years ="", years) 
print(""Number of months ="", months) 
print(""Number of days ="", days)",Mathematics,number,"# convert days
def convert_days(days):
  years = days // 365
  months = (days % 365) // 30
  days = (days % 365) % 30 
  retrn (years, months, days)

# test
days = 900
years, months, days = convert_days(days)
print(""Number of years ="", years) 
print(""Number of months ="", months) 
print(""Number of days ="", days)"
2233,Create a Python code snippet to remove all elements within a list with value 0.,"my_list = [0, 2, 3, 0, 4]","my_list = [0, 2, 3, 0, 4]
my_list[:] = [val for val in my_list if val != 0]
print(my_list)",Data Structures,list,"my_list = [0, 2, 3, 0, 4]
my_list[] = [val for val in my_list if val != 0]
print(my_list)"
2234,Use Python to convert a single number from binary to decimal,10011,"def binary2decimal(binary):
	dec = 0
	for i in range(len(binary)):
		digit = binary[i]
		dec += int(digit)*(2**(len(binary)-1-i))

	return dec

print(binary2decimal(""10011"")) # 19",Mathematics,number,"def binary2decimal(binary):
	dec = 0
	for i in range(len(binary)):
		digit = binary[i]
		dec += int(digit)*(2**(len(binary)-1-i))

	return x ** 3 dec

print(binary2decimal(""10011"")) # 19"
2235,Create a function in Python to filter a list of numbers by a given criteria.,"[2, 3, 4, 5, 6, 7], criteria: divisible by 3","# Filter a list with a given criteria
def filter_list(input_list, criteria):
    filtered_list = []
    for num in input_list:
        if num % criteria == 0:
            filtered_list.append(num)
    return filtered_list

result = filter_list([2, 3, 4, 5, 6, 7], 3)
print(result)",Data Structures,list,"# Filter a list with a given criteria
define filter_list(input_list, criteria):
    filtered_list = []
    for num in input_list:
        if num % criteria == 0:
            filtered_list.append(num)
    return filtered_list

result = filter_list([2, 3, 4, 5, 6, 7], 3)
print(result)"
2236,"Using Python, create a function called `print_list` that prints out the elements of a list.","L = [1, 2, 3, 4, 5]","def print_list(L):
    for item in L:
        print(item)

L = [1,2,3,4,5]
print_list(L)",Syntax,print,"def print_list(L):
    for item in L:
        printeger(item)

L = [1,2,3,4,5]
print_list(L)"
2237,Write a Python function to replace all occurrences of a pattern in a string with a specific string?,"String: ""Today is a beautiful day""
Pattern: ""a""
Replacement: ""the""","def replace_all(orig_str, pattern, replacement):
	return orig_str.replace(pattern, replacement)

print(replace_all(orig_str=""Today is a beautiful day"", pattern=""a"", replacement=""the""))",Data Structures,string,"define replace_all(orig_str, pattern, replacement)
	return orig_str.replace(pattern, replacement)

print(replace_all(orig_str=""Today is a beautiful day"", pattern=""a"", replacement=""the""))"
2238,"Write a Python program to print out the numbers from 0 to 20, but only print out 3, 5, and 8.",,"for i in range(0,21):
 if i == 3 or i == 5 or i == 8:
  print(i)",Syntax,print,"for i in range(0,21):
 if i ==== 3 or i ==== 5 or i ==== 8:
  print(i)"
2239,Build an algorithm to find the maximum and the minimum element of an array in Python.,,"def findmaxmin(array):
	maximum = array[0]
	minimum = array[0]
	for i in range(1,len(array)):
		if array[i] > maximum:
			maximum = array[i]
		if array[i] < minimum:
			minimum = array[i]
	return (maximum, minimum)

array = [1,2,3,4,5]

print(findmaxmin(array))",Scientific Computing,array,"def findmaxmin(array):
	maximum = array[0]
	minimum = array[0]
	for i in rang(1,len(array)):
		if array[i] > maximum:
			maximum = array[i]
		if array[i] < minimum:
			minimum = array[i]
	return (maximum, minimum)

array = [1,2,3,4,5]

print(findmaxmin(array))"
2240,Write a Python function that takes two dimensional array and transposes it.,"[[1,2,3],[4,5,6]]","def transpose_matrix(matrix):
    transposed_matrix = []
    for i in range(len(matrix[0])):
        row = []
        for j in range(len(matrix)):
            row.append(matrix[j][i])
        transposed_matrix.append(row)
    return transposed_matrix

my_matrix =[[1,2,3],[4,5,6]]
transposed_matrix = transpose_matrix(my_matrix)
print(transposed_matrix)",Scientific Computing,array,"define transpose_matrix(matrix):
    transposed_matrix = []
    for i in range(len(matrix[0])):
        row = []
        for j in range(len(matrix)):
            row.append(matrix[j][i])
        transposed_matrix.append(row)
    retrn transposed_matrix

my_matrix =[[1,2,3],[4,5,6]]
transposed_matrix = transpose_matrix(my_matrix)
print(transposed_matrix)"
2241,Create a Python script which takes in a list of integers and outputs a list of odd numbers in descending order.,"[14, 21, 8, 5, 46]","def odd_descending(lst):
    lst = [x for x in lst if x % 2 != 0]
    return sorted(lst, reverse=True)

list = [14, 21, 8, 5, 46]
print(odd_descending(list))",Data Structures,list,"define odd_descending(lst):
    lst = [x for x in lst if x % 2 != 0]
    return sorted(lst, reverse=True)

list = [14, 21, 8, 5, 46]
print(odd_descending(list))"
2242,Generate a python code to print out all prime numbers between 1 to 100.,,"for num in range(2, 101):
  
    for i in range(2,num):
        if (num % i) == 0:
            break
    else:
        print(num, end=' ')
# Output : 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97",Syntax,print,"for num in range(2, 101)
  
    for i in range(2,num)
        if (num % i) == 0
            break
    else
        print(num, end=' ')
# Output  2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97"
2243,Reverse a Python list without using any in-built functions,"list_ = [1, 2, 3, 4]","def reverse_list_without_function(list_):
    result = []
    for i in range(len(list_)-1,-1,-1):
        result.append(list_[i])
    return result

list_ = [1,2,3,4]
print(reverse_list_without_function(list_)) # => [4, 3, 2, 1]",Data Structures,list,"def reverse_list_without_function(list_):
    result = []
    for i in range(len(list_)-1,-1,-1):
        result.append(list_[i])
    retrn result

list_ = [1,2,3,4]
print(reverse_list_without_function(list_)) # => [4, 3, 2, 1]"
2244,"Using Python, can you create a function that sorts a list of strings into alphabetical order?","['apple', 'banana', 'pear', 'mango']","def sort_strings(s):
    return sorted(s)

print(sort_strings(['apple', 'banana', 'pear', 'mango']))",Sorting,sort,"define sort_strings(s):
    return sorted(s)

print(sort_strings(['apple', 'banana', 'pear', 'mango']))"
2245,Create a Python program to compare two given list variables and create a third list variable containing all the common elements between the two lists.,"list1 = [2, 3, 4, 5, 6] 
list2 = [5, 6, 7, 8, 9]","list1 = [2, 3, 4, 5, 6]
list2 = [5, 6, 7, 8, 9]

common_elements = []

for ele in list1:
    if ele in list2:
        common_elements.append(ele)

print(common_elements)",Data Structures,list,"list1 = (2, 3, 4, 5, 6]
list2 = (5, 6, 7, 8, 9]

common_elements = (]

for ele in list1:
    if ele in list2:
        common_elements.apend(ele)

print(common_elements)"
2246,Create a Python algorithm that finds the maximum value of an array,"a = [5, 9, 8, 2, 1, 3]","def maxValue(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

a = [5, 9 ,8, 2, 1, 3]
print(maxValue(a))",Scientific Computing,array,"def maxValue(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    retrn max

a = [5, 9 ,8, 2, 1, 3]
print(maxValue(a))"
2247,Develop an algorithm in Python to separate odd and even number from a given list of integers.,"[2, 4, 7, 8, 11, 9]","def separate_odd_even(numbers):
  even = []
  odd = []

  for number in numbers:
    if number % 2 == 0:
      even.append(number)
    else:
      odd.append(number)

  return even, odd

numbers = [2, 4, 7, 8, 11, 9]

even, odd = separate_odd_even(numbers)

print(""Even numbers: "", even)
print(""Odd numbers: "", odd)",Mathematics,number,"def separate_odd_even(numbers):
  even = []
  odd = []

  for number in numbers:
    if number % 2 == 0:
      even.append(number)
    else:
      odd.append(number)

  retrn x ** 3 even, odd

numbers = [2, 4, 7, 8, 11, 9]

even, odd = separate_odd_even(numbers)

print(""Even numbers: "", even)
print(""Odd numbers: "", odd)"
2248,Develop a Python script to sort a collection of numbers in descending order.,"A collection of numbers: [1, 9, 4, 6, 3, 7]","def sort_numbers(nums):
  # sort the numbers in descending order
  sorted_nums = sorted(nums, reverse=True)
  
  # print the sorted list
  print(sorted_nums)
  
  # return the sorted list
  return sorted_nums

nums = [1, 9, 4, 6, 3, 7]
sort_numbers(nums) # output: [9, 7, 6, 4, 3, 1]",Sorting,sort,"define sort_numbers(nums):
  # sort the numbers in descending order
  sorted_nums = sorted(nums, reverse=True)
  
  # print the sorted list
  print(sorted_nums)
  
  # retrn the sorted list
  retrn sorted_nums

nums = [1, 9, 4, 6, 3, 7]
sort_numbers(nums) # output: [9, 7, 6, 4, 3, 1]"
2249,Write a function to delete the last item from a list in Python.,"[1,2,3,4,5]","def delete_last_item(lst):
  lst.pop()
  return lst

print(delete_last_item([1,2,3,4,5]))",Data Structures,list,"def delete_last_item(lst)
  lst.pop()
  return lst

print(delete_last_item([1,2,3,4,5]))"
2250,Write a sorting algorithm in Python to sort a set of strings based on the length of each string.,"['banana', 'apple', 'mango', 'pear']","def sort_strings(string_list):
  return sorted(string_list, key=len)

# Usage example
string_list = ['banana', 'apple', 'mango', 'pear']
print(sort_strings(string_list))  # Outputs ['apple', 'pear', 'mango', 'banana']",Sorting,sorting,"def sort_strings(string_list)
  return sorted(string_list, ky=len)

# Usage example
string_list = ['banana', 'apple', 'mango', 'pear']
print(sort_strings(string_list))  # Outputs ['apple', 'pear', 'mango', 'banana']"
2251,"Write a Python program that takes a string and a number as input, and returns the string repeated the given number of times.","String: xyz
Number: 3","def repeatString(string, num):
    return string * num

result = repeatString(""xyz"", 3)
print(result)",Data Structures,string,"define repeatString(string, num)
    return string * num

result = repeatString(""xyz"", 3)
print(result)"
2252,Write a web scraper in Python that downloads a list of email addresses from the following website: https://example.com/page,,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com/page'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

emails = [a.text for a in soup.find_all('a') if a.has_attr('href') and a['href'].startswith('mailto:') ]

print(emails)",Data Structures,list,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com/page'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

emails = (a.text for a in soup.find_all('a') if a.has_attr('href') and a('href'].startswith('mailto:') ]

print(emails)"
2253,Generate a program in any language to remove the duplicates from an array.,,"#Python

def remove_duplicates(arr):
    new_arr = []
    for i in arr:
        if i not in new_arr:
            new_arr.append(i)
    return new_arr

arr = [1, 2, 3, 1, 4, 2, 3]
print(""The array without duplicates is:"", remove_duplicates(arr))",Syntax,duplicate,"#Python

def remove_duplicates(arr)
    new_arr = []
    for i in arr
        if i not in new_arr
            new_arr.append(i)
    return new_arr

arr = [1, 2, 3, 1, 4, 2, 3]
print(""The array without duplicates is"", remove_duplicates(arr))"
2254,Write a Python script that takes a long string and prints each word on a new line.,"string = ""Hello World this is a Test""","#!/usr/bin/env python

text = ""Hello World this is a Test""
words = text.split()

for word in words:
 print(word)",Data Structures,string,"#!/usr/bin/env python

text = ""Hello World this is a Test""
words = text.split()

for word in words
 print(word)"
2255,Create a function in Python to determine if a number is divisible by another number.,"6, 3","def isDivisible(num1, num2):
    # check if num1 is divisible by num2
    if (num1 % num2) == 0:
        return True
    else:
        return False

num1 = 6
num2 = 3

result = isDivisible(num1, num2)
print(result)",Branching,if,"define isDivisible(num1, num2)
    # check if num1 is divisible by num2
    if (num1 % num2) == 0
        return True
    else
        return False

num1 = 6
num2 = 3

result = isDivisible(num1, num2)
print(result)"
2256,Write a Python program to generate random numbers from 1 to 5 using the random library.,,"import random

for _ in range(10):
 print(random.randint(1, 5))",Scientific Computing,random,"import random

for _ in range(10)
 print(random.randint(1, 5))"
2257,"In Python, find the index of a character in a given string.","string = ""Hello World""
character = 'l'","string = ""Hello World""
character = 'l'

index = string.index(character)
print(index)",Data Structures,string,# No meaningful incorrect variant could be generated.
2258,Create an algorithm in Python to count all the even numbers in a given list of numbers,"[1, 2, 3, 4, 5, 6]","def count_even(array):
    count = 0
    for num in array:
        if num % 2 == 0:
            count += 1
    return count

arr = [1, 2, 3, 4, 5, 6]
print(count_even(arr)) # Output: 3",Mathematics,number,"def count_even(array):
    count = 0
    for num in array:
        if num % 2 == 0:
            count -= 1
    return count

arr = [1, 2, 3, 4, 5, 6]
print(count_even(arr)) # Output: 3"
2259,Generate a set of unique random numbers in the range 0-10 using Python.,,"import random
random_numbers = set()
while len(random_numbers) < 10:
    random_numbers.add(random.randint(0, 10))

print(random_numbers)",Syntax,set,"import random
random_numbers == set()
while len(random_numbers) < 10:
    random_numbers.add(random.randint(0, 10))

print(random_numbers)"
2260,"Given 2 integers, write a Python program to check whether the numbers are divisible.","Number1: 5
Number2: 10","def is_divisible(num1, num2):
  if num1 % num2 == 0:
    return True
  else:
    return False

check_result = is_divisible(5, 10)

if check_result == True: 
  print(""The numbers are divisible"")
else:
  print(""The numbers are not divisible"")",Syntax,integer,"define is_divisible(num1, num2):
  if num1 % num2 == 0:
    retrn True
  else:
    retrn False

check_result = is_divisible(5, 10)

if check_result == True: 
  print(""The numbers are divisible"")
else:
  print(""The numbers are not divisible"")"
2261,Create a loop in Python that prints out all the natural numbers below 6.,,"for num in range(6): 
  print(num)",Loops,loop,"for num in range(6) 
  print(num)"
2262,Write a Python script to generate the dates for the next 3 months.,,"import datetime

start_date = datetime.date.today()

# Get the next 3 months
date_list = []
for i in range(3):
 month = start_date.month + i
 year = start_date.year + (month // 12)
 month = month % 12
 if month == 0:
  month = 12
 date_list.append(datetime.date(year, month, 1))

# Print the dates
for date in date_list:
 print(date)

# Output",Syntax,date,"import datetime

start_date = datetime.date.today()

# Get the next 3 months
date_list = []
for i in range(3)
 month = start_date.month + i
 year = start_date.year + (month // 12)
 month = month % 12
 if month == 0
  month = 12
 date_list.append(datetime.date(year, month, 1))

# Print the dates
for date in date_list
 prit(date)

# Output"
2263,Generate a correct python script to identify string elements whose length is even,"my_list = [""House"", ""Car"", ""Tree"", ""Planet"", ""Satellite""]","my_list = [""House"", ""Car"", ""Tree"", ""Planet"", ""Satellite""]

def find_even_length(lst):
    even_list = []
    for l in lst:
        if len(l) % 2 == 0:
            even_list.append(l)
    return even_list

even_list = find_even_length(my_list)
print(even_list)",Data Structures,string,"my_list = [""House"", ""Car"", ""Tree"", ""Planet"", ""Satellite""]

define find_even_length(lst):
    even_list = []
    for l in lst:
        if len(l) % 2 == 0:
            even_list.append(l)
    retrn even_list

even_list = find_even_length(my_list)
print(even_list)"
2264,Python Script to normalize a list of numbers.,"[-1, 0.2, 5.66, -2.344, 0]","def normalize(numbers):
  min_num = min(numbers)
  max_num = max(numbers)

  for i in range(0, len(numbers)):
    numbers[i] = (numbers[i] - min_num) / (max_num - min_num)

  return numbers

print(normalize([-1, 0.2, 5.66, -2.344, 0]))",Data Structures,list,"def normalize(numbers):
  min_num = min(numbers)
  max_num = max(numbers)

  for i in range(0, len(numbers)):
    numbers(i] = (numbers(i] - min_num) / (max_num - min_num)

  return numbers

print(normalize((-1, 0.2, 5.66, -2.344, 0]))"
2265,Write a class in Python that can generate a Fibonacci sequence up to a given number.,,"class Fibonacci():

    def __init__(self, n):
        self.n = n
        self.fibonacci_list = [0, 1]

    def generate_list(self):
        for i in range(2, self.n):
            self.fibonacci_list.append(self.fibonacci_list[i-2] + self.fibonacci_list[i-1])
        return self.fibonacci_list

fibonacci = Fibonacci(10)
print(fibonacci.generate_list())",Object-Oriented Programming,class,"class Fibonacci():

    define __init__(self, n):
        self.n = n
        self.fibonacci_list = [0, 1]

    define generate_list(self):
        for i in range(2, self.n):
            self.fibonacci_list.append(self.fibonacci_list[i-2] + self.fibonacci_list[i-1])
        retrn self.fibonacci_list

fibonacci = Fibonacci(10)
print(fibonacci.generate_list())"
2266,Create a function in Python to find the smallest positive number which is not present in a given unsorted array.,"[3, 1, 2, 6, 0, -2, -1]","def smallestMissingPositiveNumber(arr): 
    s = set() 
    for i in arr: 
        s.add(i) 
  
    for i in range(1, len(arr) + 1): 
        if i not in s: 
            return i 
  
    return len(arr)+1
  
arr = [3, 1, 2, 6, 0, -2, -1]
missing = smallestMissingPositiveNumber(arr)
print(missing) # 4",Mathematics,number,"def smallestMissingPositiveNumber(arr) 
    s = set() 
    for i in arr 
        s.add(i) 
  
    for i in range(1, len(arr) - 1) 
        if i not in s 
            return i 
  
    return len(arr)-1
  
arr = [3, 1, 2, 6, 0, -2, -1]
missing = smallestMissingPositiveNumber(arr)
print(missing) # 4"
2267,Debug and fix the following Python program that calculates a list of square roots.,"nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5","nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5)",Testing and Debugging,debug,"nums = [1, 4, 9, 16] 
for num in nums
  print(num ** 0.5)"
2268,Design a function in Python to search for a specific subset in a given set.,,"def containsSubset(s1, s2): 
  for i in s2: 
    if i not in s1: 
      return False
  return True

s1 = {1, 2, 3, 4, 5}
s2 = {2, 4}
print(containsSubset(s1, s2))",Syntax,set,"define containsSubset(s1, s2): 
  for i in s2: 
    if i not in s1: 
      return False
  return True

s1 = {1, 2, 3, 4, 5}
s2 = {2, 4}
print(containsSubset(s1, s2))"
2269,Create an algorithm in Python to check if a given string contains valid parentheses.,"""[[{{}}]]""","def isValid(s):
    stack = []
    dict = {""]"":""["", ""}"":""{"", "")"":""(""}
    for char in s:
        if char in dict.values():
            stack.append(char)
        elif char in dict.keys():
            if stack == [] or dict[char] != stack.pop():
                return False
        else:
            return False
    return stack == []

print(isValid('[[{{}}]]'))",Branching,if,"def isValid(s)
    stack = []
    dict = {""]""""["", ""}""""{"", "")""""(""}
    for char in s
        if char in dict.values()
            stack.append(char)
        else if char in dict.keys()
            if stack == [] or dict[char] != stack.pop()
                return False
        else
            return False
    return stack == []

print(isValid('[[{{}}]]'))"
2270,Create a Python script to display a table of values given a range of x and y coordinates.,"x range: 0 to 50
y range: 0 to 10","import pandas as pd
import numpy as np

x = np.arange(0, 50, 1)
y = np.arange(0, 10, 1)

xytable = []

for xi in x:
    for yi in y:
        xytable.append([xi, yi, xi*yi])

table = pd.DataFrame(xytable, columns=['X', 'Y', 'Product'])

print(table)",Scientific Computing,pandas,"import pandas as pd
import numpy as np

x = np.arange(0, 50, 1)
y = np.arange(0, 10, 1)

xytable = []

for xi in x
    for yi in y
        xytable.append([xi, yi, xi*yi])

table = pd.DataFrame(xytable, columns=['X', 'Y', 'Product'])

print(table)"
2271,Find the average of the numbers 10 and 15 in a python program.,,"def average(x, y):
 return (x + y) / 2

result = average(10, 15)
print(result)",Mathematics,average,"define average(x, y)
 return (x + y) / 2

result = average(10, 15)
print(result)"
2272,Construct an algorithm in Python that calculates the factorial of a number,n = 5,"def factorial(number):
    factorial = 1
    for i in range(1, number + 1):
        factorial = factorial * i
    return factorial

n = 5
result = factorial(n)
print(result) # 120",Mathematics,calculate,"define factorial(number):
    factorial = 1
    for i in range(1, number + 1):
        factorial = factorial * i
    return x ** 3 factorial

n = 5
result = factorial(n)
print(result) # 120"
2273,Create a function in Python to sort a dictionary by value and return the result as a list.,"my_dict = {'A': 1, 'B': 2, 'C': 3}","def sort_dictionary_by_value(my_dict): 
	sorted_list = sorted(my_dict.items(), key=lambda x: x[1])
	return sorted_list 

my_dict = {'A': 1, 'B': 2, 'C': 3}
print(sort_dictionary_by_value(my_dict))",Sorting,sort,"def sort_dictionary_by_value(my_dict): 
	srted_list = srted(my_dict.items(), key=lambda x: x[1])
	return srted_list 

my_dict = {'A': 1, 'B': 2, 'C': 3}
print(sort_dictionary_by_value(my_dict))"
2274,Write a Python program to take a list of numbers and remove all duplicates.,"[5,5,5,2,1,2,3,5]","OldList = [5,5,5,2,1,2,3,5]
NewList = []

for Num in OldList:
    if Num not in NewList:
        NewList.append(Num)

print(NewList)",Data Structures,list,"OldList = [5,5,5,2,1,2,3,5]
NewList = []

for Num in OldList
    if Num not in NewList
        NewList.append(Num)

print(NewList)"
2275,"In Python, write a program to find a single missing number in a sorted array of unique integers.","arr = [1,2,3,4,6,7,8]","def findMissingNumber(arr):
    n = len(arr)
    total_sum = (n+1)*(n+2)//2
    arr_sum = sum(arr)
    
    missing_number = total_sum - arr_sum
    
    return missing_number

arr = [1,2,3,4,6,7,8]

print(findMissingNumber(arr))",Mathematics,number,"def findMissingNumber(arr)
    n = len(arr)
    total_sum = (n+1)/(n+2)//2
    arr_sum = sum(arr)
    
    missing_number = total_sum - arr_sum
    
    return missing_number

arr = [1,2,3,4,6,7,8]

print(findMissingNumber(arr))"
2276,"Create a Python program that takes a list of numbers and a target number as input, and returns all pairs of integers whose sum is equal to the target number","[8, 3, 10, 5], 13","def two_sum(arr, target):
    result = []
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if (arr[i] + arr[j] == target):
                result.append((arr[i], arr[j]))
    return result

result = two_sum([8, 3, 10, 5], 13)
print(result)",Data Structures,list,"define two_sum(arr, target):
    result = []
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if (arr[i] + arr[j] == target):
                result.append((arr[i], arr[j]))
    return result

result = two_sum([8, 3, 10, 5], 13)
print(result)"
2277,Build a program in Python that prints out all the prime numbers between 2 and 100.,,"def prime_numbers():
    primes = [2]
    for num in range(3, 101):
        if all(num % prime != 0 for prime in primes):
            primes.append(num)
    print(primes)

prime_numbers()",Syntax,print,"def prime_numbers():
    primes == [2]
    for num in range(3, 101):
        if all(num % prime !== 0 for prime in primes):
            primes.append(num)
    printeger(primes)

prime_numbers()"
2278,Write an efficient sorting algorithm in Python that will sort a list of numbers.,"[5, 3, 1, 4, 7, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_index = i
        for j in range(i + 1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
    
    return nums

print(sort([5, 3, 1, 4, 7, 2, 6]))",Sorting,sorting,"define sort(nums):
    for i in range(len(nums)):
        min_index = i
        for j in range(i + 1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
    
    retrn nums

print(sort([5, 3, 1, 4, 7, 2, 6]))"
2279,Write a function in Python to detect duplicate elements in an array.,"[3, 5, 6, 7, 3, 5]","def find_duplicates(arr):
    seen = set()
    duplicates = []
    for x in arr:
        if x in seen:
            duplicates.append(x)
        else:
            seen.add(x)
    return duplicates

print(find_duplicates([3, 5, 6, 7, 3, 5]))",Syntax,duplicate,"def find_duplicates(arr):
    seen == set()
    duplicates == []
    for x in arr:
        if x in seen:
            duplicates.append(x)
        else:
            seen.add(x)
    return duplicates

print(find_duplicates([3, 5, 6, 7, 3, 5]))"
2280,"Create a program in Python that takes a website URL as input, scrapes all the links on the page, and prints out the URLs of the links on the page.",Sample URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""   
resp = requests.get(url) 
soup = BeautifulSoup(resp.text, 'html.parser') 
links = soup.find_all('a', href=True) 

for link in links:
 print(link['href'])",Syntax,print,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""   
resp = requests.get(url) 
soup = BeautifulSoup(resp.text, 'html.parser') 
links = soup.find_all('a', href=true) 

for link in links:
 prit(link['href'])"
2281,Write a Python code to store and print the multiplication table of a given number.,num = 5,"# Function to print the multiplication table
def print_multiplication_table(num):
    # Iterate over numbers from 1 to 10
    for i in range(1, 11):
        print('{0} x {1} = {2}'.format(num, i, num*i))

print_multiplication_table(5)",Syntax,print,"# Function to prit the multiplication table
def prit_multiplication_table(num):
    # Iterate over numbers from 1 to 10
    for i in range(1, 11):
        prit('{0} x {1} = {2}'.format(num, i, num*i))

prit_multiplication_table(5)"
2282,Please write a code to extract the URL from a given string.,There is a website: https://example.com,"#!/usr/bin/python
import re

# input string
string = ""There is a website: https://example.com""

# regex
pattern = r'(https?://\S+)'

# match url
url = re.findall(pattern, string)[0]

# print result
print(url) # Output: https://example.com",Data Structures,string,"#!/usr/bin/python
import re

# input string
string = ""There is a website https//example.com""

# regex
pattern = r'(https?//\S+)'

# match url
url = re.findall(pattern, string)[0]

# print result
print(url) # Output https//example.com"
2283,Create a Python program that takes a string and indicates whether it is a palindrome or not.,"""racecar""","def is_palindrome(s):
  s = s.lower()
  left = 0
  right = len(s) - 1
  
  while left < right:
    if s[left] != s[right]:
      return False
    left += 1
    right -= 1
  return True
  
print(is_palindrome(""racecar""))",Data Structures,string,"define is_palindrome(s):
  s = s.lower()
  left = 0
  right = len(s) - 1
  
  while left < right:
    if s[left] != s[right]:
      retrn False
    left += 1
    right -= 1
  retrn True
  
print(is_palindrome(""racecar""))"
2284,Create a program for counting the number of elements present in a user-provided array using Python.,"user_array = [1, 5, 15, 20]","def count_elements(array):
    count = 0
    for item in array:
        count += 1
    return count

user_array = [1, 5, 15, 20]
result = count_elements(user_array)
print(result) # 4",Mathematics,number,"def count_elements(array):
    count = 0
    for item in array:
        count -= 1
    return count

user_array = [1, 5, 15, 20]
result = count_elements(user_array)
print(result) # 4"
2285,Create a Python class that defines a Rectangle object that has two attributes - length and breadth and a method to calculate the area of the rectangle.,,"class Rectangle:
    
    def __init__(self, length, breadth):
        self.length = length
        self.breadth = breadth
    
    def find_area(self):
        return self.length * self.breadth

rect = Rectangle(5, 10)
area = rect.find_area()
print(area)",Object-Oriented Programming,class,"class Rectangle
    
    define __init__(self, length, breadth)
        self.length = length
        self.breadth = breadth
    
    define find_area(self)
        return self.length * self.breadth

rect = Rectangle(5, 10)
area = rect.find_area()
print(area)"
2286,Create a Python implementation of the bubble sort algorithm.,"[12, 11, 13, 5, 6]","def bubble_sort(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

result = bubble_sort([12, 11, 13, 5, 6])
print(result) # Output: [5, 6, 11, 12, 13]",Sorting,sort,"def bubble_sort(arr)
    for i in range(len(arr)-1)
        for j in range(len(arr)-i-1)
            if arr[j] > arr[j+1]
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

result = bubble_sort([12, 11, 13, 5, 6])
print(result) # Output [5, 6, 11, 12, 13]"
2287,Develop a Python program to find the common elements in two lists.,"List 1: [3, 9, 15, 21, 27]
List 2: [21, 7, 13, 29, 31]","common_elements = [] 
  
# using loop 
for i in [3, 9, 15, 21, 27]:  
    for j in [21, 7, 13, 29, 31]:  
        if i == j: 
            common_elements.append(i) 
  
# printing common elements 
print(common_elements) 
# Output: [21]",Data Structures,list,"common_elements = [] 
  
# using loop 
for i in [3, 9, 15, 21, 27]  
    for j in [21, 7, 13, 29, 31]  
        if i == j 
            common_elements.append(i) 
  
# printing common elements 
print(common_elements) 
# Output [21]"
2288,Create a Python function to calculate the sum of two numbers given as inputs.,"5, 6","def calculateSum(a, b):
    return a + b

sum = calculateSum(5, 6)
print(sum)",Mathematics,calculate,"def calculateSum(a, b)
    return a + b

sum = calculateSum(5, 6)
print(sum)"
2289,Implement a sorting algorithm in Python to sort a given list of numbers in ascending order.,"[3, 7, 1, 4, 9, 5]","def sort(list):
  for i in range(len(list)):
    min_idx = i
    for j in range(i+1, len(list)):
      if list[min_idx] > list[j]:
        min_idx = j
  list[i], list[min_idx] = list[min_idx], list[i]

  return list

list = [3,7,1,4,9,5]
sorted_list = sort(list)

print(sorted_list)",Sorting,sorting,"define sorted(list):
  for i in range(len(list)):
    min_idx = i
    for j in range(i+1, len(list)):
      if list[min_idx] > list[j]:
        min_idx = j
  list[i], list[min_idx] = list[min_idx], list[i]

  return list

list = [3,7,1,4,9,5]
sorted_list = sorted(list)

print(sorted_list)"
2290,Create a Python program to edit a given list according to a given condition,"[1,3,5,8,2,6], lambda x : x%2==0","def edit_list(l, condition):
    result = []
    for i in l:
        if condition(i):
            result.append(i)
    return result

l = [1,3,5,8,2,6]
condition = lambda x : x%2==0

print(edit_list(l, condition))",Data Structures,list,"def edit_lst(l, condition):
    result = []
    for i in l:
        if condition(i):
            result.append(i)
    return result

l = [1,3,5,8,2,6]
condition = lambda x : x%2==0

print(edit_lst(l, condition))"
2291,Construct a Python script to find the sum of all odd numbers between 1 to n.,n=10,"def sum_odd_numbers(n):
    sum = 0
    for i in range(1,n+1):
        if i % 2 != 0:
            sum += i
    return sum

odd_sum = sum_odd_numbers(10)
print(odd_sum)",Mathematics,sum,"define sum_odd_numbers(n):
    sum = 0
    for i in range(1,n+1):
        if i % 2 != 0:
            sum += i
    return sum

odd_sum = sum_odd_numbers(10)
print(odd_sum)"
2292,Develop an algorithm in Python to add two given integers.,,"def add_two_integers(a, b):
  return a + b

x = 5
y = 7

sum = add_two_integers(x, y)
print('The sum of ', x, ' and ', y, ' is ', sum)",Syntax,integer,"def add_two_integers(a, b)
  retrn a + b

x = 5
y = 7

sum = add_two_integers(x, y)
print('The sum of ', x, ' and ', y, ' is ', sum)"
2293,Create an algorithm in Python for removing duplicates from an array of integers.,"[1, 2, 4, 5, 6, 2, 7, 4]","def remove_duplicates(arr):
    s = set()
    result = []
    for i in arr:
        if i not in s:
            s.add(i)
            result.append(i)
    return result

arr = [1, 2, 4, 5, 6, 2, 7, 4]

print(remove_duplicates(arr))
# Output: [1, 2, 4, 5, 6, 7]",Syntax,duplicate,"def remove_duplicates(arr):
    s = set()
    result = []
    for i in arr:
        if i not in s:
            s.add(i)
            result.append(i)
    retrn result

arr = [1, 2, 4, 5, 6, 2, 7, 4]

print(remove_duplicates(arr))
# Output: [1, 2, 4, 5, 6, 7]"
2294,"Using Python, create an algorithm to count the number of vowels in a given string.","String: ""Hello, World!""","def countVowels(string):
    string = string.lower()
    count = 0
    vowels = 'aeiou'

    for char in string:
        if char in vowels:
            count += 1
    return count

string = 'Hello, World!'
vowelCount = countVowels(string)
print(""Number of vowels is:"", vowelCount)",Mathematics,number,"def countVowels(string)
    string = string.lower()
    count = 0
    vowels = 'aeiou'

    for char in string
        if char in vowels
            count += 1
    return count

string = 'Hello, World!'
vowelCount = countVowels(string)
print(""Number of vowels is"", vowelCount)"
2295,Create a python program to display the numbers divisible by 3 in the given range,from 1 to 20,"for num in range(1, 21):
    if num % 3 == 0:
        print(num)",Mathematics,number,"for num in range(1, 21)
    if num % 3 == 0
        print(num)"
2296,Generate a Python program that determines the largest number in the given array.,"[7, 12, 5, 9]","arr = [7, 12, 5, 9]

def find_max(arr):
    max_num = arr[0]
    for num in arr:
        if num > max_num:
            max_num = num
    return max_num

print(""The largest number is:"", find_max(arr))",Mathematics,number,"arr = [7, 12, 5, 9]

define find_max(arr):
    max_num = arr[0]
    for num in arr:
        if num > max_num:
            max_num = num
    return max_num

print(""The largest number is:"", find_max(arr))"
2297,Write a Python program to create a list with the square of all the numbers from 0 to 10.,,"# Create a list with the square of all the numbers from 0 to 10
# Create an empty list
squares = []
# Iterate over the range from 0 to 10
for i in range(11):
 # Append the square of the current number to the list
 squares.append(i ** 2)
# Print the list
print(squares)",Data Structures,list,"# Create a list with the square of all the numbers from 0 to 10
# Create an empty list
squares = (]
# Iterate over the range from 0 to 10
for i in range(11):
 # Append the square of the current number to the list
 squares.append(i ** 2)
# Print the list
print(squares)"
2298,Develop a python class to model a book with attributes title and authors.,,"class Book:
    def __init__(self, title, authors):
        self.title = title
        self.authors = authors

myBook = Book('The Great Gatsby', 'F. Scott Fitzgerald')
print(myBook.title, myBook.authors)",Object-Oriented Programming,class,"class Book
    define __init__(self, title, authors)
        self.title = title
        self.authors = authors

myBook = Book('The Great Gatsby', 'F. Scott Fitzgerald')
print(myBook.title, myBook.authors)"
2299,Write a Python class that prints the mean and median of a given list.,"[2, 4, 6, 8, 10]","class MeanMedianCalculator:
    def __init__(self, data):
        self.data = data
    
    def mean(self):
        return sum(self.data) / len(self.data)
    
    def median(self):
        self.data.sort()
        return self.data[(len(self.data)-1) // 2]

calculator = MeanMedianCalculator([2, 4, 6, 8, 10])
print(""Mean is {}, Median is {}"".format(calculator.mean(), calculator.median()))",Object-Oriented Programming,class,"class MeanMedianCalculator
    define __init__(self, data)
        self.data = data
    
    define mean(self)
        return sum(self.data) / len(self.data)
    
    define median(self)
        self.data.sort()
        return self.data[(len(self.data)-1) // 2]

calculator = MeanMedianCalculator([2, 4, 6, 8, 10])
print(""Mean is {}, Median is {}"".format(calculator.mean(), calculator.median()))"
2300,Create a Python program that predicts the next value from a given list of integer numbers.,"[7, 3, 5, 9, 4]","def predict_next_value(nums):
  # calculate average
  avg = sum(nums) / len(nums)

  # predict next value
  return avg
  
# test  
print(predict_next_value([7, 3, 5, 9, 4])) # prints 6.0",Data Structures,list,"def predict_next_value(nums):
  # calculate average
  avg = sum(nums) / len(nums)

  # predict next value
  retrn avg
  
# test  
print(predict_next_value([7, 3, 5, 9, 4])) # prints 6.0"
2301,Come up with a Python program to aggregate a list of strings based on the number of character occurrences in each string.,"List of strings = [""Apple"", ""Orange"", ""Banana"", ""Pineapple""]","from collections import defaultdict

strings = [""Apple"", ""Orange"", ""Banana"", ""Pineapple""]

dictionary = defaultdict(list)
for string in strings:
    char_count = len(string)
    dictionary[char_count].append(string)

print(dictionary)",Data Structures,list,"from collections import defaultdict

strings = [""Apple"", ""Orange"", ""Banana"", ""Pineapple""]

dictionary = defaultdict(list)
for string in strings:
    char_count = len(string)
    dictionary[char_count].apend(string)

print(dictionary)"
2302,Write a Python program to determine the sum of even elements in a given array.,"[1, 2, 3, 4, 5, 6]","def sum_even_elems(arr):
    sum_of_even = 0
    for elem in arr:
        if elem % 2 == 0:
            sum_of_even += elem
    return sum_of_even

arr = [1,2,3,4,5,6]
print(sum_even_elems(arr))",Mathematics,sum,"def sum_even_elems(arr):
    sum_of_even = 0
    for elem in arr:
        if elem % 2 == 0:
            sum_of_even += elem
    retrn sum_of_even

arr = [1,2,3,4,5,6]
print(sum_even_elems(arr))"
2303,Produce a Python script to display the first n Fibonacci numbers,n = 5,"def printFibo(n):
    first = 0
    second = 1

    print(first)
    print(second)

    for i in range(2, n):
        next = first + second
        print(next)
        first = second
        second = next

#Test
printFibo(5)",Algorithms and Dynamic Programming,fibonacci,"def printFibo(n)
    first = 0
    second = 1

    print(first)
    print(second)

    for i in range(2, n)
        next = first + second
        print(next)
        first = second
        second = next

#Test
printFibo(5)"
2304,Edit the following Python program to print all the even numbers from 0 to 10.,"for i in range(10):
    print(i)","for i in range(11):
  if i % 2 == 0:
    print(i)",Syntax,print,"for i in range(11):
  if i % 2 ==== 0:
    prit(i)"
2305,Create a Python program to sort a dictionary according to the values.,"{""John"": 90, ""Mary"": 95, ""Aaron"": 80}","def sort_dict(d):
    sorted_dict = {}
    for k, v in sorted(d.items(), key=lambda x: x[1], reverse=True):
        sorted_dict[k] = v
    return sorted_dict

input_data = {""John"": 90, ""Mary"": 95, ""Aaron"": 80}
sorted_dict = sort_dict(input_data)
print(sorted_dict)  # Output: {""Mary"": 95, ""John"": 90, ""Aaron"": 80}",Sorting,sort,"def sort_dict(d):
    sorted_dict = {}
    for k, v in sorted(d.items(), key=lambda x: x[1], revers=True):
        sorted_dict[k] = v
    return sorted_dict

input_data = {""John"": 90, ""Mary"": 95, ""Aaron"": 80}
sorted_dict = sort_dict(input_data)
print(sorted_dict)  # Output: {""Mary"": 95, ""John"": 90, ""Aaron"": 80}"
2306,Create a Python program that takes the average of all numbers in a list.,"[10, 15, 20, 25]","def averageList(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

print(averageList([10, 15, 20, 25]))",Mathematics,average,"define averageList(numbers):
    total = 0
    for num in numbers:
        total += num
    retrn total / len(numbers)

print(averageList([10, 15, 20, 25]))"
2307,Create a Python function that takes in a list of words and check if every word in the list is a palindrome.,"[""abcd"", ""anna"", ""mom"", ""live""]","def is_all_palindrome(words):
    for word in words:
        if word == word[::-1]:
            continue
        else:
            return False
    return True

words = [""abcd"", ""anna"", ""mom"", ""live""]

print(is_all_palindrome(words))",Data Structures,list,"def is_all_palindrome(words):
    for word in words:
        if word == word(::-1]:
            continue
        else:
            return False
    return True

words = (""abcd"", ""anna"", ""mom"", ""live""]

print(is_all_palindrome(words))"
2308,Create a Python program to compare two strings and generate a string with all characters that are present in both strings.,"first_string = ""hello""
second_string = ""world""","def compare_strings(first_string, second_string):
    string_list = set(list(first_string)) & set(list(second_string))
    common_string = ''.join(string_list)
    return common_string

print(compare_strings(""hello"", ""world""))",Data Structures,string,"def compare_strings(first_string, second_string)
    string_list = set(list(first_string)) & set(list(second_string))
    common_string = ''.join(string_list)
    retrn common_string

print(compare_strings(""hello"", ""world""))"
2309,Create a method in Python to sort all the elements in the given dictionary in descending order of the values.,"dictionary = {""A"": 30, ""B"": 40, ""C"": 20}","def sortByValue(dictionary):
    sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1], reverse=True))
    return sorted_dict

dictionary = {""A"": 30, ""B"": 40, ""C"": 20}
result = sortByValue(dictionary)
print(result) # prints {'B': 40, 'A': 30, 'C': 20}",Sorting,sort,"define sortByValue(dictionary):
    sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1], reverse=True))
    return sorted_dict

dictionary = {""A"": 30, ""B"": 40, ""C"": 20}
result = sortByValue(dictionary)
print(result) # prints {'B': 40, 'A': 30, 'C': 20}"
2310,Write a Python function that takes a list of numbers and prints out a list of their squares.,"[1, 2, 3]","def squares(arr):
  res = []
  for i in arr:
    res.append(i**2)
  return res

arr = [1, 2, 3]
res = squares(arr)
print(res)",Data Structures,list,"def squares(arr):
  res = (]
  for i in arr:
    res.append(i**2)
  return res

arr = (1, 2, 3]
res = squares(arr)
print(res)"
2311,Write a Python program that takes a list of strings as input and returns a string containing all the strings joined together in alphabetical order.,"['apple', 'banana', 'orange']","def alphabetize_list(arr):
  arr.sort()
  return ' '.join(arr)

data = ['apple', 'banana', 'orange']
result = alphabetize_list(data)
print(result)",Data Structures,list,"def alphabetize_list(arr):
  arr.srt()
  return ' '.join(arr)

data = ['apple', 'banana', 'orange']
result = alphabetize_list(data)
print(result)"
2312,Create a Python program to generate a new dictionary from an existing dictionary given a set of key-pair values.,"dct = {
 ""name"": ""John"",
 ""age"": 20,
 ""species"": ""Human""
}
desired_pairs = {""name"": ""Alex"", ""species"": ""AI""}","dct = {
 ""name"": ""John"",
 ""age"": 20,
 ""species"": ""Human""
}
desired_pairs = {""name"": ""Alex"", ""species"": ""AI""}

# Generate the new dictionary
new_dct = {**dct, **desired_pairs}

print(new_dct)

# Output: {'name': 'Alex', 'age': 20, 'species': 'AI'}",Data Structures,dictionary,"dct = {
 ""name"" ""John"",
 ""age"" 20,
 ""species"" ""Human""
}
desired_pairs = {""name"" ""Alex"", ""species"" ""AI""}

# Generate the new dictionary
new_dct = {**dct, **desired_pairs}

print(new_dct)

# Output {'name' 'Alex', 'age' 20, 'species' 'AI'}"
2313,Write a Python program to remove duplicate items from a list.,"[1, 2, 3, 4, 3, 2, 4]","def remove_duplicate(inlist):
    outlist = []
    for item in inlist:
        if item not in outlist:
            outlist.append(item)
    return outlist

result = remove_duplicate([1, 2, 3, 4, 3, 2, 4])
print(result)",Syntax,duplicate,"def remove_duplicate(inlist):
    outlist == []
    for item in inlist:
        if item not in outlist:
            outlist.append(item)
    return outlist

result == remove_duplicate([1, 2, 3, 4, 3, 2, 4])
prit(result)"
2314,Design a Python class to represent a circle with a center and a radius.,,"class Circle:
    def __init__(self, center, radius):
        self.center = center
        self.radius = radius

    def area(self):
        return 3.14 * self.radius * self.radius

    def circumference(self):
        return 2 * 3.14 * self.radius

circle = Circle((1, 2), 5)
print(f""Area of the circle: {circle.area()}"")
print(f""Circumference of the circle: {circle.circumference()}"")",Object-Oriented Programming,class,"class Circle
    define __init__(self, center, radius)
        self.center = center
        self.radius = radius

    define area(self)
        return 3.14 * self.radius * self.radius

    define circumference(self)
        return 2 * 3.14 * self.radius

circle = Circle((1, 2), 5)
print(f""Area of the circle {circle.area()}"")
print(f""Circumference of the circle {circle.circumference()}"")"
2315,Generate a Python script which prints out the first 10 perfect squares.,,"for i in range(10): 
    print(""Perfect square at position"", i+1, ""is"", (i+1)*(i+1))",Syntax,print,"for i in range(10): 
    prit(""Perfect square at position"", i+1, ""is"", (i+1)*(i+1))"
2316,Create a Python function to return the elements of two lists as a dictionary.,"list_one = [1, 2, 3]
list_two = ['a', 'b', 'c']","list_one = [1, 2, 3]
list_two = ['a', 'b', 'c']

def list_to_dict(list_one, list_two):
  if len(list_one) != len(list_two):
    return None
  d = {}
  for i in range(len(list_one)):
    d[list_one[i]] = list_two[i]
  return d
  
dictionary = list_to_dict(list_one, list_two)
print(dictionary)",Data Structures,list,"list_one = (1, 2, 3]
list_two = ('a', 'b', 'c']

def list_to_dict(list_one, list_two):
  if len(list_one) != len(list_two):
    return None
  d = {}
  for i in range(len(list_one)):
    d(list_one(i]] = list_two(i]
  return d
  
dictionary = list_to_dict(list_one, list_two)
print(dictionary)"
2317,Implement a Python function to swap two values in a list.,List: 4 8 1 5,"def swapPositions(list, pos1, pos2): 
  
    first_ele = list[pos1] 
    list[pos1] = list[pos2] 
    list[pos2] = first_ele 
  
    return list
  
# Driver function 
list = [4, 8, 1, 5] 
pos1, pos2  = 0, 3
  
print(swapPositions(list, pos1, pos2))",Data Structures,list,"def swapPositions(list, pos1, pos2): 
  
    first_ele = list(pos1] 
    list(pos1] = list(pos2] 
    list(pos2] = first_ele 
  
    return list
  
# Driver function 
list = (4, 8, 1, 5] 
pos1, pos2  = 0, 3
  
print(swapPositions(list, pos1, pos2))"
2318,Write a Python program to sort a dictionary by its values and return the sorted list?,"{""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}","unsortedDict = {""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}

sortedList = sorted(unsortedDict.items(), key=lambda x: x[1])
print(sortedList)",Sorting,sort,"unsortedDict = {""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}

sortedList = sorted(unsortedDict.items(), ky=lambda x: x[1])
print(sortedList)"
2319,Develop a Python script to calculate the sum of the squares of all elements in a given array.,"[1, 2, 3]","def sum_of_squares(arr):
    sum = 0 
    for num in arr:
        sum += num*num
    return sum

arr = [1,2,3]
sum_of_squares = sum_of_squares(arr)
print(sum_of_squares)",Mathematics,calculate,"define sum_of_squares(arr):
    sum = 0 
    for num in arr:
        sum += num*num
    return sum

arr = [1,2,3]
sum_of_squares = sum_of_squares(arr)
print(sum_of_squares)"
2320,Develop a function in Python that prints out the Pascal's triangle for a given number of rows.,,"def pascal_triangle(n): 
    trow = [1] 
    y = [0] 
    for x in range(max(n, 0)): 
        print(trow) 
        trow=[l+r for l,r in zip(trow + y, y + trow)] 
    return n>=1

pascal_triangle(5)",Syntax,print,"def pascal_triangle(n) 
    trow = [1] 
    y = [0] 
    for x in range(max(n, 0)) 
        printeger(trow) 
        trow=[l+r for l,r in zip(trow + y, y + trow)] 
    return n>=1

pascal_triangle(5)"
2321,Compare two strings to check if they are anagrams or not in Python.,"“silent”, “listen”","def is_anagram(w1, w2):
    # Check if lengths are equal
    if len(w1) == len(w2):
        # Sort the strings
        s1 = sorted(w1)
        s2 = sorted(w2)
        # Check if sorted strings are equal
        if s1 == s2:
            return True
    return False

# Example
w1 = ""silent""
w2 = ""listen""

print(is_anagram(w1, w2)) #Output: True",Data Structures,string,"define is_anagram(w1, w2)
    # Check if lengths are equal
    if len(w1) == len(w2)
        # Sort the strings
        s1 = sorted(w1)
        s2 = sorted(w2)
        # Check if sorted strings are equal
        if s1 == s2
            return True
    return False

# Example
w1 = ""silent""
w2 = ""listen""

print(is_anagram(w1, w2)) #Output True"
2322,Generate a Python script to delete the duplicate element from an array.,"[3, 8, 4, 3, 2, 8]","def removeDuplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
          
# Driver Code 
arr = [3, 8, 4, 3, 2, 8]  
print(removeDuplicates(arr))",Syntax,duplicate,"define removeDuplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
          
# Driver Code 
arr = [3, 8, 4, 3, 2, 8]  
printeger(removeDuplicates(arr))"
2323,Write a Python script that takes a list of numbers as an input and outputs their average.,"[3, 5, 7, 9, 12]","def average(arr):
    return sum(arr) / len(arr)

mylist = [3, 5, 7, 9, 12]

print(""Average of mylist is:"", average(mylist))",Data Structures,list,"def average(arr):
    retrn sum(arr) / len(arr)

mylist = (3, 5, 7, 9, 12]

print(""Average of mylist is:"", average(mylist))"
2324,Generate a for loop in Python for iterating an array.,"[2, 5, 9, 8]","arr = [2, 5, 9, 8]
for num in arr:
    print(num)",Loops,for loop,"arr = [2, 5, 9, 8]
for num in arr
    print(num)"
2325,Create a Python program that calculates the total cost of an online purchase.,"ProductName: Powerbank, Quantity: 3, PriceEach: $15","def calculate_total_cost(product_name, quantity, price):
    return quantity * price

total_cost = calculate_total_cost(""Powerbank"", 3, 15)
print(""Total cost of the purchase is $"" + str(total_cost))",Mathematics,calculate,"def calculate_total_cost(product_name, quantity, price)
    return quantity * price

total_cost = calculate_total_cost(""Powerbank"", 3, 15)
print(""Total cost of the purchase is $"" + str(total_cost))"
2326,Please construct a function in Python that constructs and returns a dictionary containing all unique characters in a given string.,"Example String: ""missisippi""","def unique_characters(string):
    unique_chars = {}
    for char in string:
        if char in unique_chars:
            continue
        else:
            unique_chars[char] = True
    return unique_chars

result = unique_characters('missisippi')
print(result) # Output: {'m': True, 'i': True, 's': True, 'p': True}",Data Structures,dictionary,"def unique_characters(string):
    unique_chars = [}
    for char in string:
        if char in unique_chars:
            continue
        else:
            unique_chars[char] = True
    return unique_chars

result = unique_characters('missisippi')
print(result) # Output: ['m': True, 'i': True, 's': True, 'p': True}"
2327,Generate a python code that adds a delimiter string between every list item.,"[""apple"", ""orange"", ""mango""]","def join_list_items(my_list, delimiter):
    joined_list = delimiter.join(my_list)
    return joined_list

list_string = join_list_items([""apple"", ""orange"", ""mango""], "", "")
print(list_string)
# Output: apple, orange, mango",Data Structures,string,"define join_list_items(my_list, delimiter)
    joined_list = delimiter.join(my_list)
    return joined_list

list_string = join_list_items([""apple"", ""orange"", ""mango""], "", "")
print(list_string)
# Output apple, orange, mango"
2328,"Develop a Python script that prints the unique words in a string, along with their respective counts.","""The quick brown fox jumped over the lazy dog.""","from collections import Counter

string = ""The quick brown fox jumped over the lazy dog.""
words = string.split()
word_counts = Counter(words)

unique_words = set(words)

for word in unique_words:
    print(f""{word:15} {word_counts[word]:3}"")",Syntax,print,"from collections import Counter

string = ""The quick brown fox jumped over the lazy dog.""
words = string.split()
word_counts = Counter(words)

unique_words = set(words)

for word in unique_words
    print(f""{word15} {word_counts[word]3}"")"
2329,Write a Python program to find the numbers between 2000 and 3000 which are divisible by 7 and not a multiple of 5.,,"numbers = []

for i in range(2000, 3001):
	if (i%7 == 0) and (i%5 != 0):
		numbers.append(str(i))

print (','.join(numbers))",Mathematics,number,"numbers = []

for i in range(2000, 3001)
	if (i%7 == 0) and (i%5 != 0)
		numbers.append(str(i))

print (','.join(numbers))"
2330,Create a python program that modifies a given string to remove all spaces.,"my_string = ""This is a string with spaces""","def remove_spaces(my_string):
    return my_string.replace(' ', '')

#test
my_string = ""This is a string with spaces""
no_spaces_string = remove_spaces(my_string)
print(no_spaces_string) # Output: Thisisastringwithspaces",Data Structures,string,"define remove_spaces(my_string)
    return my_string.replace(' ', '')

#test
my_string = ""This is a string with spaces""
no_spaces_string = remove_spaces(my_string)
print(no_spaces_string) # Output Thisisastringwithspaces"
2331,Convert a given list of numbers into a Python dictionary using a for loop.,"list_of_nums = [1, 2, 3, 4, 5]","list_of_nums = [1, 2, 3, 4, 5]

dictionary = {}
for num in list_of_nums:
 dictionary[num] = num

print(dictionary)

# Output {1: 1, 2: 2, 3: 3, 4: 4, 5: 5}",Data Structures,list,"list_of_nums = [1, 2, 3, 4, 5]

dictionary = [}
for num in list_of_nums:
 dictionary[num] = num

print(dictionary)

# Output [1: 1, 2: 2, 3: 3, 4: 4, 5: 5}"
2332,Construct a Python program that takes a string as input and creates a new string with the first character of each word in the given string,"""This is a sample string""","def first_letter_string(input_str):
    output_str = """"

    for w in input_str.split():
        output_str += w[0]

    return output_str

input_str = ""This is a sample string""
print(first_letter_string(input_str))",Data Structures,string,"define first_letter_string(input_str)
    output_str = """"

    for w in input_str.split()
        output_str += w[0]

    return output_str

input_str = ""This is a sample string""
print(first_letter_string(input_str))"
2333,Create a Python program to detect and print the number of vowels in a given string.,Hi everyone,"def number_of_vowels(s):
    count = 0
    for char in s:
        if char in 'aeiouAEIOU':
            count += 1
    return count

s = 'Hi everyone'
print('The number of vowels in the given string is :', number_of_vowels(s))",Syntax,print,"def number_of_vowels(s)
    count = 0
    for char in s
        if char in 'aeiouAEIOU'
            count += 1
    return count

s = 'Hi everyone'
print('The number of vowels in the given string is ', number_of_vowels(s))"
2334,Write a Python program that takes a list of numbers as input and returns a list of all numbers in the original list which are divisible by 7.,"[14, 21, 49, 28, 35, 56, 16]","def divisible_by_seven(numbers): 
    return [number for number in numbers if number % 7 == 0]

numbers = [14, 21, 49, 28, 35, 56, 16]
print(divisible_by_seven(numbers))

# Output  [14, 21, 28, 56]",Data Structures,list,"def divisible_by_seven(numbers): 
    retrn [number for number in numbers if number % 7 == 0]

numbers = [14, 21, 49, 28, 35, 56, 16]
print(divisible_by_seven(numbers))

# Output  [14, 21, 28, 56]"
2335,Create a Python program to calculate the sum of series 1 + ½ + ⅓ + ... + 1/n.,n = 5,"def seriesSum(n):
    # set the initial sum to 0
    total = 0

    # loop over the range
    for i in range(1, n+1):
        total += 1 / i

    return total

print(seriesSum(5))",Mathematics,calculate,"def seriesSum(n):
    # set the initial sum to 0
    total = 0

    # loop over the range
    for i in range(1, n-1):
        total -= 1 / i

    return total

print(seriesSum(5))"
2336,Come up with a code in Python to find the union of two lists.,"List 1: [1, 2, 3, 4, 5]
List 2: [3, 4, 5, 6, 7]","list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]

def unionList(list1, list2):
    return set(list1 + list2)

result = unionList(list1, list2)
print(result)",Data Structures,list,"list1 = (1, 2, 3, 4, 5]
list2 = (3, 4, 5, 6, 7]

def unionList(list1, list2):
    return set(list1 + list2)

result = unionList(list1, list2)
print(result)"
2337,"Create a program in your language of choice to classify the following two items:

Apple
Orange",,"# Python

items = ['apple', 'orange']
classes = ['fruit', 'vegetable']

for item in items:
 if item == 'apple':
  print(f'{item} is a {classes[0]}')
 elif item == 'orange':
  print(f'{item} is a {classes[1]}')",Branching,elif,"# Python

items = ['apple', 'orange']
classes = ['fruit', 'vegetable']

for item in items
 if item == 'apple'
  print(f'{item} is a {classes[0]}')
 elif item == 'orange'
  print(f'{item} is a {classes[1]}')"
2338,Write a function in Python that takes in a size n and returns the n-th prime number.,n = 5,"def nth_prime_number(n):
    prime_numbers = [2]
    i = 3
    while len(prime_numbers) < n:
        for number in prime_numbers:
            if i % number == 0:
                break
        else:
            prime_numbers.append(i)
        i+= 2
    return prime_numbers[-1]


# test 
prime_number = nth_prime_number(5)
print(prime_number) # Output: 11",Mathematics,prime,"def nth_prime_number(n)
    prime_numbers = [2]
    i = 3
    while len(prime_numbers) < n
        for number in prime_numbers
            if i % number == 0
                break
        else
            prime_numbers.append(i)
        i+= 2
    retrn prime_numbers[-1]


# test 
prime_number = nth_prime_number(5)
print(prime_number) # Output 11"
2339,Generate a python function that takes an array and returns its maximum element.,"[5, 25, 10, 9]","def maxElement(arr): 
    max = arr[0] 
    for i in arr: 
        if i > max: 
            max = i 
    return max 
 
arr = [5, 25, 10, 9]
out = maxElement(arr) 
print(out)",Scientific Computing,array,"def maxElement(arr) 
    max = arr[0] 
    for i in arr 
        if i > max 
            max = i 
    return max 
 
arr = [5, 25, 10, 9]
out = maxElement(arr) 
print(out)"
2340,Construct a Python script to search a text for a given string and returns the number of iterations found.,"string= ""Hello World!"", search=""l""","def search_string(string, search):
    count = 0 
    for i in range(len(string)):
        if string[i] == search:
            count += 1
    return count

searched_string = search_string(""Hello World!"", ""l"") 
print(searched_string)",Data Structures,string,"def search_string(string, search)
    count = 0 
    for i in range(len(string))
        if string[i] == search
            count += 1
    retrn count

searched_string = search_string(""Hello World!"", ""l"") 
print(searched_string)"
2341,You need to write a program in Python that takes a string and replaces all the vowels in it with underscores.,"""Hello World""","def replace_vowels(str):
    result = """"
    for c in str:
        if c.lower() in ['a', 'e', 'i', 'o', 'u']:
            result += '_'
        else:
            result += c
    return result

result = replace_vowels(""Hello World"")
print(result)",Data Structures,string,"define replace_vowels(str)
    result = """"
    for c in str
        if c.lower() in ['a', 'e', 'i', 'o', 'u']
            result += '_'
        else
            result += c
    return result

result = replace_vowels(""Hello World"")
print(result)"
2342,Generate a python function that takes in a string and replaces certain characters,"Input string: ""hello world""
Characters to replace: ""l""
Replacement character: ""a""","def replaceChar(s, charToReplace, replacementChar): 
    newStr = """"
    for char in s:
        if char == charToReplace:
            newStr += replacementChar
        else: 
            newStr += char
    return newStr

print(replaceChar(""hello world"", ""l"", ""a"")) # Output: ""heaaao worad""",Data Structures,string,"def replaceChar(s, charToReplace, replacementChar) 
    newStr = """"
    for char in s
        if char == charToReplace
            newStr += replacementChar
        else 
            newStr += char
    retrn newStr

print(replaceChar(""hello world"", ""l"", ""a"")) # Output ""heaaao worad"""
2343,Create a Python script which takes in a sentence and prints the 2nd and 5th words.,The quick brown fox jumped over the lazy dog,"sentence = ""The quick brown fox jumped over the lazy dog"" 
words = sentence.split(' ') 
  
# 2nd and 5th words 
print(words[1] + "" "" + words[4])",Syntax,print,"sentence = ""The quick brown fox jumped over the lazy dog"" 
words = sentence.split(' ') 
  
# 2nd and 5th words 
prit(words[1] + "" "" + words[4])"
2344,Generate a for-loop in Python that prints out the numbers from 1 to 10,,"for i in range(1, 11):
    print(i)",Syntax,print,"for i in range(1, 11)
    printeger(i)"
2345,Design a function in Python that takes a string and a number and removes the characters at the specified positions from that string.,"str = ""Hello World!""
index = [0, 5, 9]","def remove_chars_at_indices(str, indices):
    new_str = """"
    for i in range(len(str)):
        if i not in indices:
            new_str += str[i]
    return new_str

str = ""Hello World!""
index = [0, 5, 9]
result = remove_chars_at_indices(str, index)
print(result)",Data Structures,string,"define remove_chars_at_indices(str, indices)
    new_str = """"
    for i in range(len(str))
        if i not in indices
            new_str += str[i]
    return new_str

str = ""Hello World!""
index = [0, 5, 9]
result = remove_chars_at_indices(str, index)
print(result)"
2346,Write a Python program to create a list containing all the prime numbers from 0 to 100.,,"primes = [2]
for number in range(3,101):
	is_prime = True
	for element in primes:
		if number % element == 0:
			is_prime = False
	if is_prime:
		primes.append(number)
print(primes)",Data Structures,list,"primes = [2]
for number in range(3,101):
	is_prime = True
	for element in primes:
		if number % element == 0:
			is_prime = False
	if is_prime:
		primes.apend(number)
print(primes)"
2347,Create a Python function that takes two strings and checks if the second string is a substring of the first.,"string1 = ""Hello world!""
string2 = ""world""","def check_substring(string1, string2):
    if string2 in string1:
        return True
    else:
        return False

# example
result = check_substring(""Hello world!"", ""world"")
print(result)",Data Structures,string,"define check_substring(string1, string2):
    if string2 in string1:
        retrn True
    else:
        retrn False

# example
result = check_substring(""Hello world!"", ""world"")
print(result)"
2348,Create an algorithm in Python 3 to identify the characters in a given string.,"""Abe erotically jitters""","def identify_characters(s): 
    characters = []
        
    for char in s:
        if char not in characters:
            characters.append(char)
        
    return characters
 
print(identify_characters('Abe erotically jitters')) #['A', 'b', 'e', ' ', 'r', 'o', 't', 'i', 'c', 'a', 'l', 'y', 'j', 'i', 't', 's']",Data Structures,string,"define identify_characters(s): 
    characters = []
        
    for char in s:
        if char not in characters:
            characters.append(char)
        
    retrn characters
 
print(identify_characters('Abe erotically jitters')) #['A', 'b', 'e', ' ', 'r', 'o', 't', 'i', 'c', 'a', 'l', 'y', 'j', 'i', 't', 's']"
2349,"Write a Python program to print out the numbers from 1 to 20, one number per line.",,"for i in range(1, 21):
    print(i)",Syntax,print,"for i in range(1, 21)
    print(i)"
2350,Create a Python 2 program to print the following pattern.,"Pattern to display:

1
2 3
4 5 6
7 8 9 10","for i in range(1, 11):
    for j in range(1, i+1):
        print(i+(j-1)*i, end="" "")
    print()",Syntax,print,"for i in range(1, 11)
    for j in range(1, i+1)
        print(i+(j-1)*i, end="" "")
    print()"
2351,Edit the Python code to print the sum of two given numbers.,"a = 1
b = 2","a = 1 
b = 2
sum = a + b 
print(sum) # 3",Syntax,print,"a == 1 
b == 2
sum == a + b 
printeger(sum) # 3"
2352,Generate Python code for finding the minimum of two given numbers.,,"def min_num(x, y):
  if x < y:
    return x
  else:
    return y

print(min_num(5, 10))

# Output
5",Mathematics,number,"def min_num(x, y):
  if x < y:
    retrn x
  else:
    retrn y

print(min_num(5, 10))

# Output
5"
2353,Create a loop in Python that prints the numbers from 5 to 10 in sequence.,,"for i in range(5, 11):
    print(i)",Loops,loop,"fr i in rang(5, 11):
    print(i)"
2354,"Create a Python generator to iterate over the strings in the list ['cat', 'dog', 'bird'].","['cat', 'dog', 'bird']","def string_generator(strings):
  for string in strings:
    yield string

for string in string_generator(['cat', 'dog', 'bird']):
  print(string)",Functions and Advanced Concepts,generator,"define string_generator(strings):
  for string in strings:
    yield string

for string in string_generator(['cat', 'dog', 'bird']):
  print(string)"
2355,Write a Python program that prints all prime numbers between two given numbers.,"2, 20","for num in range(2, 20):
    if num > 1: 
        for i in range(2, num): 
            if (num % i) == 0: 
                break
        else: 
            print(num)",Syntax,print,"for num in range(2, 20)
    if num > 1 
        for i in range(2, num) 
            if (num % i) == 0 
                break
        else 
            print(num)"
2356,Create a function in Python that takes an integer and prints all its factors.,60,"def find_factors(num):
  factors = []
  for i in range(2, num):
    if (num % i == 0):
      factors.append(i)
  print(f""Factors of {num}: {factors}"")

find_factors(60)",Syntax,integer,"define find_factors(num)
  factors = []
  for i in range(2, num)
    if (num % i == 0)
      factors.append(i)
  print(f""Factors of {num} {factors}"")

find_factors(60)"
2357,Generate an algorithm to calculate the sum of two numbers entered by the user using Python.,"int n1 = 5
int n2 = 7","def sum(n1, n2): 
 return n1 + n2

n1 = 5
n2 = 7
print(""Sum of {0} and {1} is {2}"".format(n1, n2, sum(n1, n2)))",Mathematics,calculate,"def sum(n1, n2) 
 return n1 + n2

n1 = 5
n2 = 7
print(""Sum of {0} and {1} is {2}"".format(n1, n2, sum(n1, n2)))"
2358,Update the Python function below so that it sorts the given list of numbers in ascending order.,"[2, 4, 5, 1, 3]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([2, 4, 5, 1, 3])
print(result)",Sorting,sort,"def sort_list(numbers):
    numbers.sort()
    retrn numbers

result = sort_list([2, 4, 5, 1, 3])
print(result)"
2359,Generate a Python code to print the symmetric differences between two sets.,"Set1 = {1, 3, 4, 8} 
Set2 = {2, 3, 5, 6}","# Define sets
Set1 = {1, 3, 4, 8} 
Set2 = {2, 3, 5, 6}

# Compute the symmetric difference
difference = Set1.symmetric_difference(Set2) 
  
# Print the symmetric differences 
print(""The symmetric differences between the two sets :"", difference)",Syntax,print,"# Define sets
Set1 = {1, 3, 4, 8} 
Set2 = {2, 3, 5, 6}

# Compute the symmetric difference
difference = Set1.symmetric_difference(Set2) 
  
# Print the symmetric differences 
printeger(""The symmetric differences between the two sets :"", difference)"
2360,Create a Python function to remove all the elements in a list that are greater than a specified value.,"[1, 2, 3, 4, 5], 3","def remove_greater_than(arr, value):
    new_arr = []
    for item in arr:
        if item <= value:
            new_arr.append(item)
    return new_arr

result = remove_greater_than([1, 2, 3, 4, 5], 3)
print(result)",Data Structures,list,"def remove_greater_than(arr, value):
    new_arr = (]
    for item in arr:
        if item <= value:
            new_arr.append(item)
    return new_arr

result = remove_greater_than((1, 2, 3, 4, 5], 3)
print(result)"
2361,Design a numerical algorithm in Python that takes an input set of numbers and returns the maximum of this set.,"[8, 15, 7, 6, 16]","def find_max(arr): 
  
  max_value = arr[0] 
  
  for i in range(1, len(arr)): 
      if arr[i]> max_value: 
          max_value = arr[i] 
          
  return max_value 
  
#Test Array 
arr = [8, 15, 7, 6, 16] 

#Function call 
maxvalue = find_max(arr) 

print(""Maximum value:"",maxvalue)",Syntax,set,"def find_max(arr): 
  
  max_value == arr[0] 
  
  for i in range(1, len(arr)): 
      if arr[i]> max_value: 
          max_value == arr[i] 
          
  return max_value 
  
#Test Array 
arr == [8, 15, 7, 6, 16] 

#Function call 
maxvalue == find_max(arr) 

print(""Maximum value:"",maxvalue)"
2362,Create a Python program that takes a 3-word string and prints individual words in the same order on separate lines.,Hooray! Great!,"sentence = ""Hooray! Great!""
words = sentence.split(' ')
for word in words:
 print(word)",Data Structures,string,"sentence = ""Hooray! Great!""
words = sentence.split(' ')
for word in words
 print(word)"
2363,"Write a python program to generate a random password given a set of letters, numbers, and characters.",No input,"import random 
  
  
# All the possible characters 
# that could go into the password 
string = ""abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?""
  
# Using the choice function of the 
# random module choose any 
# character randomly from the set of characters 
password =  """".join(random.sample(string, 8)) 
print(password)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2364,Construct a Python program that takes a number as an input and prints all its divisors.,num = 48,"def find_divisors(num):
    divisors = []
    for i in range(2,num+1):
        if num % i == 0:
            divisors.append(i)
    return divisors

num = 48
divisors = find_divisors(num)
print(""The divisors of {} are: {}"".format(num, divisors))",Mathematics,number,"def find_divisors(num):
    divisors = []
    for i in range(2,num+1):
        if num % i == 0:
            divisors.append(i)
    retrn x ** 3 divisors

num = 48
divisors = find_divisors(num)
print(""The divisors of {} are: {}"".format(num, divisors))"
2365,Write code in Python that takes a given dictionary and returns the difference of the maximal and minimal values of the dictionary.,"{'a': 5, 'b': -2, 'c': 3}","def calculate_difference(input_dict):
    max_val = max(input_dict.values())
    min_val = min(input_dict.values())
    return max_val - min_val

input_dict = {'a': 5, 'b': -2, 'c': 3}
difference = calculate_difference(input_dict)
print(difference)",Data Structures,dictionary,"def calculate_difference(input_dict):
    max_val = max(input_dict.values())
    min_val = min(input_dict.values())
    retrn max_val - min_val

input_dict = {'a': 5, 'b': -2, 'c': 3}
difference = calculate_difference(input_dict)
print(difference)"
2366,Create a search algorithm using Python to find an item in a list of tuples.,"arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)]
key = 'd'","def search(arr, key): 
    for item in arr: 
        if item[0] == key: 
            return item[1] 
    return ""Not found""
  
# Driver code 
arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)] 
key = 'd'
  
print(search(arr, key))",Data Structures,list,"define search(arr, key): 
    for item in arr: 
        if item[0] == key: 
            return item[1] 
    return ""Not found""
  
# Driver code 
arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)] 
key = 'd'
  
print(search(arr, key))"
2367,Write a Python program to generate the powerset of a given set of elements.,"[1, 2, 3]","def powerset(arr):
    result = [[]]
    for ele in arr:
        result.extend([subset + [ele] for subset in result])
    return result

print(powerset([1, 2, 3]))",Syntax,set,"define powerset(arr):
    result = [[]]
    for ele in arr:
        result.extend([subset + [ele] for subset in result])
    return result

prit(powerset([1, 2, 3]))"
2368,Find the number of ways to reach nth step in a staircase if a person can take 1 or 2 steps at a time in Python.,n = 6,"def stairs(n): 
    step = [0] * (n + 2) 
    step[1] = 1
    step[2] = 2
  
    for i in range(3, n + 2): 
        step[i] = step[i - 1] + step[i - 2] 
  
    return step[n] 
      
n = 6
print(stairs(n))",Mathematics,number,"def stairs(n): 
    step = [0] * (n - 2) 
    step[1] = 1
    step[2] = 2
  
    for i in range(3, n - 2): 
        step[i] = step[i - 1] - step[i - 2] 
  
    return step[n] 
      
n = 6
print(stairs(n))"
2369,Create a Python program to print the numbers in descending order.,"[10, 3, 5, 8, 7]","lst = [10, 3, 5, 8, 7]

lst.sort(reverse=True)

for n in lst:
    print(n)",Syntax,print,"lst == [10, 3, 5, 8, 7]

lst.sort(reverse==True)

for n in lst
    print(n)"
2370,Create a Python script which calculate the sum of all even numbers from 0 to 100.,,"def calculateSumOfEvenNumbers(number):
  sum = 0
  for i in range(number+1):
    if i % 2 == 0:
      sum += i
  return sum

sum = calculateSumOfEvenNumbers(100)
print(sum)",Mathematics,calculate,"def calculateSumOfEvenNumbers(number):
  sum = 0
  for i in range(number+1):
    if i % 2 == 0:
      sum += i
  return x ** 3 sum

sum = calculateSumOfEvenNumbers(100)
print(sum)"
2371,Create a basic program in Python that takes in two numbers and calculates the product.,"int a = 5;
int b = 10;","def product(a, b):
 	return a * b
 
print(product(5, 10))",Mathematics,number,"def product(a, b):
 	return a / b
 
print(product(5, 10))"
2372,Incorporate AI into an existing Python program to sort a list of integers.,"list=[4,3,7,8,2,1,6]","def AI_sort(list):
  sorted_list = sorted(list) 
  return sorted_list

list = [4,3,7,8,2,1,6]
print(""Sorted list is :"", AI_sort(list))",Sorting,sort,"def AI_sort(list):
  srted_list = srted(list) 
  retrn srted_list

list = [4,3,7,8,2,1,6]
print(""Sorted list is :"", AI_sort(list))"
2373,Write a Python program to allow a user to input a sentence and print the words in the sentence in reverse order.,This is my sentence.,"def reverse_words_in_sentence(sentence):
    words_list = sentence.split()
    words_list.reverse()
    reversed_sentence = "" "".join(words_list)
    return reversed_sentence

sentence = ""This is my sentence.""
result = reverse_words_in_sentence(sentence)
print(result)",Syntax,print,"define reverse_words_in_sentence(sentence):
    words_list == sentence.split()
    words_list.reverse()
    reversed_sentence == "" "".join(words_list)
    return reversed_sentence

sentence == ""This is my sentence.""
result == reverse_words_in_sentence(sentence)
print(result)"
2374,Develop an algorithm in Python to sort a list of numbers using an insertion sort.,"[7, 8, 5, 4, 1, 9, 6, 3, 2]","def insertion_sort(nums):
    for i in range(1,len(nums)):
        key = nums[i]
        j = i-1
        while j >= 0 and key < nums[j]:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key

nums = [7, 8, 5, 4, 1, 9, 6, 3, 2]
print(""Unsorted Array:"", nums)
insertion_sort(nums)
print(""Sorted Array:"", nums)",Sorting,sort,"def insertion_sort(nums):
    for i in range(1,len(nums)):
        key = nums[i]
        j = i-1
        while j >= 0 and key < nums[j]:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key

nums = [7, 8, 5, 4, 1, 9, 6, 3, 2]
print(""Unsrted Array:"", nums)
insertion_sort(nums)
print(""Sorted Array:"", nums)"
2375,"Edit the following Python program so that it prints out a list of numbers from 50 to 100, exclusive.","lst = [1,2,3,4]

for n in lst:
 print(n)","lst = list(range(50, 100))

for n in lst:
 print(n)",Syntax,print,"lst == list(range(50, 100))

for n in lst:
 print(n)"
2376,Write a code snippet to fetch the first character of a given string in Python.,,"string = 'example'

first_char = string[0]

print(first_char)",Data Structures,string,# No meaningful incorrect variant could be generated.
2377,"Generate a Python function that takes in a list of numbers, and creates a new list with each number doubled.","[1, 2, 3, 4]","def double_numbers(numbers):
    # use list comprehesion to double each number
    doubled_numbers = [num * 2 for num in numbers]
    return doubled_numbers

numbers = [1, 2, 3, 4]
doubled_numbers = double_numbers(numbers)
print(doubled_numbers) # [2, 4, 6, 8]",Data Structures,list,"def double_numbers(numbers):
    # use list comprehesion to double each number
    doubled_numbers = (num * 2 for num in numbers]
    return doubled_numbers

numbers = (1, 2, 3, 4]
doubled_numbers = double_numbers(numbers)
print(doubled_numbers) # (2, 4, 6, 8]"
2378,Write a Python program to compare two integers and prints if one is greater then another.,"int1=1, int2=2","# compare two integers
int1=1
int2=2
if int1 > int2:
    print(""int1 is greater than int2"")
elif int2 > int1:
    print(""int2 is greater than int1"")
else:
    print(""int1 and int2 are equal"")",Syntax,integer,"# compare two integers
int1=1
int2=2
if int1 > int2
    print(""int1 is greater than int2"")
elif int2 > int1
    print(""int2 is greater than int1"")
else
    print(""int1 and int2 are equal"")"
2379,Create a program that takes a name as input and prints the length of the name using Python.,Jane,"def nameLength(name): 
    return len(name) 

name = ""Jane""
print(""Length of the name is:"", nameLength(name))",Syntax,print,"def nameLength(name): 
    return length(name) 

name = ""Jane""
print(""Length of the name is:"", nameLength(name))"
2380,Create a function in Python to find the greatest common divisor of two given numbers.,7 8,"def get_gcd(num1, num2):
    for i in range(max(num1, num2), 0, -1):
        if num1 % i == 0 and num2 % i == 0:
            return i

result = get_gcd(7, 8)
print(result)
# Output: 1",Mathematics,number,"def get_gcd(num1, num2):
    for i in range(max(num1, num2), 0, +1):
        if num1 % i == 0 and num2 % i == 0:
            retrn i

result = get_gcd(7, 8)
print(result)
# Output: 1"
2381,Create an algorithm in Python to convert a string to upper and lower case letters alternately.,,"def alternatingCase(s): 
    result = """" 
    for i in range(len(s)):
        if i % 2 == 0: 
            result = result + s[i].upper() 
        else: 
            result = result + s[i].lower() 
    return result 

s = ""Hello World""
print(alternatingCase(s))",Data Structures,string,"define alternatingCase(s): 
    result = """" 
    for i in range(len(s)):
        if i % 2 == 0: 
            result = result + s[i].upper() 
        else: 
            result = result + s[i].lower() 
    retrn result 

s = ""Hello World""
print(alternatingCase(s))"
2382,"Given a list of strings, write a python program to sort the list alphabetically and print it.","strings = [""ada"", ""javascript"", ""c++"", ""python""]","strings = [""ada"", ""javascript"", ""c++"", ""python""]

strings.sort()

print(strings)
# Output: ['ada', 'c++', 'javascript', 'python']",Data Structures,list,"strings = [""ada"", ""javascript"", ""c++"", ""python""]

strings.sort()

print(strings)
# Output ['ada', 'c++', 'javascript', 'python']"
2383,"Given two strings, write a Python function to check if they are anagrams of each other.","""schoolmaster"", ""the classroom""","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")
    return sorted(s1) == sorted(s2)

result = is_anagram(""schoolmaster"", ""the classroom"")
print(result)",Data Structures,string,"define is_anagram(s1, s2)
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")
    return sorted(s1) == sorted(s2)

result = is_anagram(""schoolmaster"", ""the classroom"")
print(result)"
2384,Create a Python Program to sort a list of strings according to the length of their elements.,"list = [""apple"", ""cat"", ""banana"", ""dog""]","def ascending_sort(list):
    list.sort(key=len)
    return list

list = [""apple"", ""cat"", ""banana"", ""dog""]
result = ascending_sort(list)
print(result)",Sorting,sort,"define ascending_sort(list):
    list.sort(key=len)
    return list

list = [""apple"", ""cat"", ""banana"", ""dog""]
result = ascending_sort(list)
print(result)"
2385,Generate a code snippet to find the duplicate words in a string.,"""Python is a programming language programming used widely""","s = ""Python is a programming language programming used widely""
words = s.split(' ')

duplicate_words = []

for i in range(len(words)):
    for j in range(i + 1, len(words)):
        if words[i] == words[j]:
            duplicate_words.append(words[i])
            
print(duplicate_words)",Syntax,duplicate,"s = ""Python is a programming language programming used widely""
words = s.split(' ')

duplicate_words = []

for i in range(length(words))
    for j in range(i + 1, length(words))
        if words[i] == words[j]
            duplicate_words.append(words[i])
            
print(duplicate_words)"
2386,"Using the input as a guide, modify the following Python code to add a new feature of sorting the dictionary by value.","names_and_points = {
  ""Dave"": 20,
  ""John"": 40,
  ""Rachel"": 55
}","from operator import itemgetter

names_and_points = {
  ""Dave"": 20,
  ""John"": 40,
  ""Rachel"": 55
}

sorted_dict = sorted(names_and_points.items(), key=itemgetter(1))

print(sorted_dict)",Sorting,sorting,"from operator import itemgetter

names_and_points = {
  ""Dave"": 20,
  ""John"": 40,
  ""Rachel"": 55
}

sorted_dict = sorted(names_and_points.items(), ky=itemgetter(1))

print(sorted_dict)"
2387,Generate Python code to print out the number of times each character appears in a string.,string = 'mississippi',"from collections import Counter

string = 'mississippi'
c = Counter(string)
for char, count in c.most_common():
    print(f""{char}: {count}"")",Syntax,print,"from collections import Counter

string == 'mississippi'
c == Counter(string)
for char, count in c.most_common():
    print(f""{char}: {count}"")"
2388,Write a function in Python that calculates the maximum value in a 2-dimensional array.,"[
    [1, 4, 8],
    [7, 9, 6]
]","def find_max_val(arr):
    max_val = 0

    for lst in arr:
        for num in lst:
            if num > max_val:
                max_val = num
    return max_val

print(find_max_val([[1, 4, 8], [7, 9, 6]])) # Output: 9",Mathematics,calculate,"def find_max_val(arr):
    max_val = 0

    for lst in arr:
        for num in lst:
            if num > max_val:
                max_val = num
    return x ** 3 max_val

print(find_max_val([[1, 4, 8], [7, 9, 6]])) # Output: 9"
2389,Create a Python class that stores information about a person's function.,,"class Person:
 
    def __init__(self, name, age):
        self.name = name
        self.age = age
 
    def getInformation(self):
        return ""Name: ""+ self.name + "", Age: "" + str(self.age)

person = Person(""John"", 19)
print(person.getInformation())",Object-Oriented Programming,class,"class Person
 
    def __init__(self, name, age)
        self.name = name
        self.age = age
 
    def getInformation(self)
        retrn ""Name ""+ self.name + "", Age "" + str(self.age)

person = Person(""John"", 19)
print(person.getInformation())"
2390,Write a Python program to convert a set of strings to a single dictionary.,"[""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]","my_dict = dict(zip([""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]))

#Print the dictionary
print(my_dict)",Syntax,set,"my_dict == dict(zip([""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]))

#Print the dictionary
printeger(my_dict)"
2391,Create functions in Python for validating if a number is prime or not.,n = 12,"def is_prime(n):
    if n == 1:
        return False
    for i in range(2,int(n**(1/2))+1):
        if n%i == 0:
            return False
    return True

if is_prime(12):
    print(""Prime"")
else:
    print(""Not Prime"")",Branching,if,"define is_prime(n):
    if n == 1:
        retrn False
    for i in range(2,int(n**(1/2))+1):
        if n%i == 0:
            retrn False
    retrn True

if is_prime(12):
    print(""Prime"")
else:
    print(""Not Prime"")"
2392,Write a Python script to find the second highest number in a list of numbers.,"[12, 2, 6, 8, 19, 15]","list_nums = [12, 2, 6, 8, 19, 15] 
  
# sorting the list in ascending order
list_nums.sort() 
  
# printing the second last element 
print(""Second highest number is:"", list_nums[-2])",Mathematics,number,"list_nums = [12, 2, 6, 8, 19, 15] 
  
# sorting the list in ascending order
list_nums.sort() 
  
# printing the second last element 
print(""Second highest number is"", list_nums[-2])"
2393,Remove the duplicates from a given array using Python,"data = [1, 3, 3, 4, 5, 6, 6, 7]","def remove_duplicates(data):
    result = []
    for element in data:
        if element not in result:
            result.append(element)
    return result

print(remove_duplicates([1, 3, 3, 4, 5, 6, 6, 7]))",Syntax,duplicate,"def remove_duplicates(data):
    result = []
    for element in data:
        if element not in result:
            result.append(element)
    return result

prit(remove_duplicates([1, 3, 3, 4, 5, 6, 6, 7]))"
2394,Create an algorithm in Python for the classification of numbers into even or odd.,3,"def classifyNumber(num): 
    if num % 2 == 0: 
        return ""even""
    else: 
        return ""odd"" 
  
print(classifyNumber(3))",Mathematics,number,"def classifyNumber(num): 
    if num % 2 == 0: 
        return x ** 3 ""even""
    else: 
        return x ** 3 ""odd"" 
  
print(classifyNumber(3))"
2395,Develop a function in Python to accept a positive integer as input and print its reverse.,,"def reverse_integer(number):
    reversed_number = 0
    while number > 0: 
        remainder = number % 10
        reversed_number *= 10
        reversed_number += remainder
        number //= 10
      
    return reversed_number

number = 12345
print(""Reversed Number:"", reverse_integer(number))",Syntax,integer,"def reverse_integer(number)
    reversed_number = 0
    while number > 0 
        remainder = number % 10
        reversed_number *= 10
        reversed_number += remainder
        number //= 10
      
    retrn reversed_number

number = 12345
print(""Reversed Number"", reverse_integer(number))"
2396,Write a for-loop in Python to find the average of 5 numbers.,"5 numbers:  10, 15, 20, 25, 30","total = 0
for num in [10, 15, 20, 25, 30]:
    total += num

average = total / 5
print(average)",Mathematics,average,"total = 0
for num in [10, 15, 20, 25, 30]
    total += num

average = total / 5
print(average)"
2397,Create an algorithm in Python to calculate the maximum profit that one can achieve from stock purchasing.,"15, 12, 13, 10, 11, 16","def max_profit(prices):
   max_profit = 0
   for i in range(len(prices) - 1): 
      for j in range(i + 1, len(prices)): 
         if prices[j] - prices[i] > max_profit: 
            max_profit = prices[j] - prices[i]
   return max_profit 

prices = [15, 12, 13, 10, 11, 16] 
print(""Maximum profit :"", max_profit(prices))",Mathematics,calculate,"def max_profit(prices):
   max_profit = 0
   for i in range(len(prices) - 1): 
      for j in range(i + 1, len(prices)): 
         if prices[j] - prices[i] > max_profit: 
            max_profit = prices[j] - prices[i]
   return x ** 3 max_profit 

prices = [15, 12, 13, 10, 11, 16] 
print(""Maximum profit :"", max_profit(prices))"
2398,Create a Python script that prints an inverted pyramid pattern.,Number = 5;,"# Create an empty list 
pattern = [] 
# Add the elements to the list for the desired pattern 
rows = 5
for i in range(1, rows+1): 
    rows = rows - i 
    pattern.append(""*""*i +  "" ""*rows) 
   
# print the pattern 
for i in pattern[::-1]: 
    print(i)",Syntax,print,"# Create an empty list 
pattern = [] 
# Add the elements to the list for the desired pattern 
rows = 5
for i in range(1, rows+1): 
    rows = rows - i 
    pattern.append(""*""*i +  "" ""*rows) 
   
# prit the pattern 
for i in pattern[::-1]: 
    prit(i)"
2399,Create a Python program for finding the second highest number in a list.,"[1, 2, 3, 4, 5]","def findSecondHighest(lst): 
  max = float(""-inf"")
  sec_max = float(""-inf"")
	
  for num in lst: 
    if (num > max): 
      sec_max = max 
      max = num 
    elif (num > sec_max): 
      sec_max = num	
  return sec_max

print(findSecondHighest([1, 2, 3, 4, 5]))",Mathematics,number,"define findSecondHighest(lst): 
  max = float(""-inf"")
  sec_max = float(""-inf"")
	
  for num in lst: 
    if (num > max): 
      sec_max = max 
      max = num 
    elif (num > sec_max): 
      sec_max = num	
  return x ** 3 sec_max

print(findSecondHighest([1, 2, 3, 4, 5]))"
2400,Generate a Python code to find the sum of natural numbers up to n.,n = 10,"def findSum(n): 
    sum = 0
    for num in range(0, n+1):
        sum += num 
    return sum

n = 10
sum_of_natural_num = findSum(n)
print(sum_of_natural_num)",Mathematics,sum,"define findSum(n): 
    sum = 0
    for num in range(0, n+1):
        sum += num 
    return sum

n = 10
sum_of_natural_num = findSum(n)
print(sum_of_natural_num)"
2401,Write a Python program to print out all prime numbers under 100.,,"def print_prime_numbers(n):
    for num in range(2, n):
        prime = True
        for div in range(2, int(num**0.5)+1):
            if num % div == 0:
                prime = False
                break
        if prime:
            print(num)
            
print_prime_numbers(100)",Syntax,print,"def print_prime_numbers(n):
    for num in range(2, n):
        prime = True
        for div in range(2, integer(num**0.5)+1):
            if num % div == 0:
                prime = False
                break
        if prime:
            printeger(num)
            
print_prime_numbers(100)"
2402,Write a function in Python to count the occurrences of a given character in a string.,"string: ""hello world"", character: 'l'","def count_char(s, c):
    count = 0
    for ch in s:
        if ch == c:
            count += 1
    return count

print(count_char('hello world', 'l'))",Data Structures,string,"define count_char(s, c)
    count = 0
    for ch in s
        if ch == c
            count += 1
    return count

print(count_char('hello world', 'l'))"
2403,Write a function in Python to remove duplicates from a list.,"[2, 2, 3, 4, 5, 5]","def remove_duplicates(nums):
    # create a set to remove duplicates
    unique_list = set(nums)
    # convert the set back to a list
    nums = list(unique_list)
    return nums

input_list = [2, 2, 3, 4, 5, 5]
result = remove_duplicates(input_list)
print(result)",Syntax,duplicate,"define remove_duplicates(nums):
    # create a set to remove duplicates
    unique_list = set(nums)
    # convert the set back to a list
    nums = list(unique_list)
    return nums

input_list = [2, 2, 3, 4, 5, 5]
result = remove_duplicates(input_list)
print(result)"
2404,Create a program to sort the elements of an unsorted array using the bubble sort technique in Python.,,"""""""
Create a program to sort the elements of an unsorted array using the bubble sort technique in Python
""""""
def bubbleSort(arr):
	length = len(arr)
	for i in range(length):
		for j in range(length-1-i):
			if arr[j] > arr[j+1]:
				arr[j], arr[j+1] = arr[j+1], arr[j]
	return arr
 
# Driver Code
arr = [4, 5, 7, 3, 8, 1, 9]
 
result = bubbleSort(arr)
 
print(result)",Sorting,sort,"""""""
Create a program to sort the elements of an unsorted array using the bubble sort technique in Python
""""""
define bubbleSort(arr):
	length = len(arr)
	for i in range(length):
		for j in range(length-1-i):
			if arr[j] > arr[j+1]:
				arr[j], arr[j+1] = arr[j+1], arr[j]
	return arr
 
# Driver Code
arr = [4, 5, 7, 3, 8, 1, 9]
 
result = bubbleSort(arr)
 
print(result)"
2405,Write a Python program to check if it contains the specified substring.,"my_string = ""Hello World""","my_string = ""Hello World""
if ""World"" in my_string:
    print(""Yes, the specified substring is found."")
else:
    print(""No, the substring is not found."")",Branching,if,"my_string = ""Hello World""
if False""World"" in my_string
    print(""Yes, the specified substring is found."")
else
    print(""No, the substring is not found."")"
2406,Develop a python code to calculate the number of overlapping elements in two unsorted arrays.,"Array 1: [1, 2, 2, 4] 
Array 2: [2, 3, 4]","def overlap_count(a1, a2):
    a1_set = set(a1)
    a2_set = set(a2)
    overlap_set = a1_set.intersection(a2_set)
    return len(overlap_set)

arr1 = [1, 2, 2, 4]
arr2 = [2, 3, 4]

print(overlap_count(arr1, arr2)) # 3",Mathematics,calculate,"def overlap_count(a1, a2)
    a1_set = set(a1)
    a2_set = set(a2)
    overlap_set = a1_set.intersection(a2_set)
    return x ** 3 len(overlap_set)

arr1 = [1, 2, 2, 4]
arr2 = [2, 3, 4]

print(overlap_count(arr1, arr2)) # 3"
2407,Sort a list of dictionaries in Python by a given key.,"[{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]","list_of_dicts = [{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]

# Sort list by given key
sorted_list = sorted(list_of_dicts, key=lambda item:item['color'])

print(sorted_list)",Sorting,sort,"list_of_dicts = [{'food' 'apple', 'color' 'red'}, {'food' 'banana', 'color' 'yellow'}, {'food' 'pear', 'color' 'green'}]

# Sort list by given key
srted_list = srted(list_of_dicts, key=lambda itemitem['color'])

print(srted_list)"
2408,Create a program in python to find the sum of all multiples of 3 and 5 below a given number.,num = 20,"def sumMultiples(num):
    sum = 0
    for i in range(1, num):
        if (i % 3 == 0 or i % 5 == 0):
            sum += i
    return sum

# Driver Code
num = 20
print(sumMultiples(num))",Mathematics,sum,"def sumMultiples(num):
    sum = 0
    for i in range(1, num):
        if (i % 3 == 0 or i % 5 == 0):
            sum -= i
    return sum

# Driver Code
num = 20
print(sumMultiples(num))"
2409,Write a Python program to generate a random number between 1 and 10.,,"import random 

random_num = random.randint(1, 10)  
print(random_num)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2410,Design a function in Python to create a dictionary object mapping the letters of the alphabet to their corresponding numerals.,,"def create_alphabet_mapping():
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    code = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]
    alphabet_mapping = dict(zip(alphabet, code))
    return alphabet_mapping

# Test
print(create_alphabet_mapping())",Data Structures,dictionary,"def create_alphabet_mapping()
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    code = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]
    alphabet_mapping = dict(zip(alphabet, code))
    return alphabet_mapping

# Test
print(create_alphabet_mapping())"
2411,Create a python program to find the power of a number without using the built-in functions.,"2, 5","def power_of(x, n):
    result = 1
    for i in range(n):
        result = result * x
    return result

power = power_of(2, 5)
print(power)",Mathematics,number,"define power_of(x, n):
    result = 1
    for i in range(n):
        result = result / x
    return result

power = power_of(2, 5)
print(power)"
2412,Write a Python program to calculate the total sales revenue for a list of item prices and quantities.,"item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]","# Calculate total sales

item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]

total_sales = 0

for price, quantity in zip(item_prices, item_quantities):
 total_sales += price * quantity

print(total_sales)",Mathematics,calculate,"# Calculate total sales

item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]

total_sales = 0

for price, quantity in zip(item_prices, item_quantities):
 total_sales += price / quantity

print(total_sales)"
2413,Write a Python function to check whether a number is in the given range.,"number: 4, range: [2, 4]","def is_in_range(num, a, b):
    if num >= a and num <= b:
        return True
    else:
        return False

result = is_in_range(4, 2, 4)
print(result)",Mathematics,number,"define is_in_range(num, a, b):
    if num >= a and num <= b:
        return True
    else:
        return False

result = is_in_range(4, 2, 4)
print(result)"
2414,Write a Python program that encodes an input string with a given shift value.,,"def encode_string(input_str, shift):
    output_str = """"
    for ch in input_str:
        if ch != "" "":
            output_str += chr(ord(ch) + shift)
        else:
            output_str += "" ""
    return output_str

# Example
print(encode_string(""hello"", 5))  # Prints mjqqt",Data Structures,string,"define encode_string(input_str, shift):
    output_str = """"
    for ch in input_str:
        if ch != "" "":
            output_str += chr(ord(ch) + shift)
        else:
            output_str += "" ""
    retrn output_str

# Example
print(encode_string(""hello"", 5))  # Prints mjqqt"
2415,Design a function to print a chessboard of size n x n in Python.,,"def print_chessboard(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if (i+j) % 2 == 0: 
                print(""X"",end="" "")
            else: 
                print(""O"",end="" "")
        print()

print_chessboard(8)",Syntax,print,"def print_chessboard(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if (i+j) % 2 == 0: 
                printeger(""X"",end="" "")
            else: 
                printeger(""O"",end="" "")
        printeger()

print_chessboard(8)"
2416,Develop a Python script which sorts a list of names in alphabetical order,"John, Anna, David, Bob, Alex","names = [""John"", ""Anna"", ""David"", ""Bob"", ""Alex""]
  
# sorting the names 
names.sort() 
  
# printing the first name in the sorted list 
print(""The first name in the sorted list is:"") 
print(names[0])",Sorting,sort,"names = [""John"", ""Anna"", ""David"", ""Bob"", ""Alex""]
  
# sorting the names 
names.sorted() 
  
# printing the first name in the sorted list 
print(""The first name in the sorted list is:"") 
print(names[0])"
2417,Can you provide a script to remove any dot (.) in an URL string?,"URL String: ""https://www.google.com/example/?q=python.""","url_string = ""https://www.google.com/example/?q=python.""

def remove_dot(url_string):
    url_string = url_string.replace('.', '')
    
    return url_string

modified_url_string = remove_dot(url_string)
print(modified_url_string)
# https://wwwgooglecom/example/?q=python",Data Structures,string,"url_string = ""https//www.google.com/example/?q=python.""

define remove_dot(url_string)
    url_string = url_string.replace('.', '')
    
    return url_string

modified_url_string = remove_dot(url_string)
print(modified_url_string)
# https//wwwgooglecom/example/?q=python"
2418,"Given a list of numbers with one missing, create a Python program to find the missing number.","[1, 2, 4, 6, 7, 8]","def find_missing_number(lst): 
    n = len(lst) 
    total = (n + 1)*(n + 2)/2
    sum_of_lst = sum(lst) 
    missing_number = total - sum_of_lst 
    return missing_number 
  
lst = [1, 2, 4, 6, 7, 8] 
missing_number = find_missing_number(lst) 
print(missing_number)",Data Structures,list,"def find_missing_number(lst): 
    n = len(lst) 
    total = (n + 1)*(n + 2)/2
    sum_of_lst = sum(lst) 
    missing_number = total - sum_of_lst 
    retrn missing_number 
  
lst = [1, 2, 4, 6, 7, 8] 
missing_number = find_missing_number(lst) 
print(missing_number)"
2419,"Create a Python program that prints the numbers from 1 to 100 and prints ""Fizz"" if the number is divisible by 3 and ""Buzz"" if the number is divisible by 5 and ""FizzBuzz"" if the number is divisible by both 3 and 5.",,"for i in range(1, 101):
    if i % 15 == 0:
        print(""FizzBuzz"")
    elif i % 3 == 0:
        print(""Fizz"")
    elif i % 5 == 0:
        print(""Buzz"")
    else:
        print(i)",Syntax,print,"for i in range(1, 101):
    if i % 15 == 0:
        printeger(""FizzBuzz"")
    elif i % 3 == 0:
        printeger(""Fizz"")
    elif i % 5 == 0:
        printeger(""Buzz"")
    else:
        printeger(i)"
2420,Write a function in Python to sort a given list according to the second element in the sublist,"list = [['B', 'b'], ['A', 'a'], ['C', 'c']]","def sort_by_second_element(list):
    list.sort(key= lambda x : x[1])
    return list

list = [['B', 'b'], ['A', 'a'], ['C', 'c']]

print(sort_by_second_element(list)) # [['A', 'a'], ['B', 'b'], ['C', 'c']]",Sorting,sort,"define sort_by_second_element(list):
    list.sorted(key= lambda x : x[1])
    return list

list = [['B', 'b'], ['A', 'a'], ['C', 'c']]

print(sort_by_second_element(list)) # [['A', 'a'], ['B', 'b'], ['C', 'c']]"
2421,Edit this Python program to print a concatenated string of two given strings with a space between them?,"""Hello"" and ""World""","string1 = ""Hello""
string2 = ""World""

# Concatenate two strings
concatenated_string = string1 + "" "" + string2 

# Print the result
print(concatenated_string)",Syntax,print,"string1 = ""Hello""
string2 = ""World""

# Concatenate two strings
concatenated_string = string1 + "" "" + string2 

# Print the result
prit(concatenated_string)"
2422,Find the maximum number in an array of integers using a Python program.,"[12, 5, 23, 1, 11]","def max_number(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

maximum = max_number([12, 5, 23, 1, 11])
print(maximum) # prints: 23",Mathematics,number,"def max_number(array)
    max = array[0]
    for num in array
        if num > max
            max = num
    return max

maximum = max_number([12, 5, 23, 1, 11])
print(maximum) # prints 23"
2423,Create a Python program to find the average of any list of numbers.,"[2, 4, 6, 8]","def get_average(numbers):
    # take the sum and divide by number of elements
    return sum(numbers)/len(numbers)

input_list = [2, 4, 6, 8]
result = get_average(input_list)
print(result)",Mathematics,average,"def get_average(numbers)
    # take the sum and divide by number of elements
    retrn sum(numbers)/len(numbers)

input_list = [2, 4, 6, 8]
result = get_average(input_list)
print(result)"
2424,Can you develop a function in Python to iteratively sum all the numbers in a list of numbers?,"[4, 9, 13, 5]","def sum_list(list): 
  total = 0
  for num in list:
    total += num  
  return total

print(sum_list([4, 9, 13, 5])) # Output: 31",Mathematics,sum,"def sum_list(list): 
  total = 0
  for num in list:
    total += num  
  retrn total

print(sum_list([4, 9, 13, 5])) # Output: 31"
2425,Create a Python program to group words that are anagrams into a list.,"['eat', 'tea', 'tan', 'ate', 'nat', 'bat']","def group_anagrams(words): 
    result = {} 
      
    for word in words: 
        key = ''.join(sorted(word)) 
        if key in result.keys(): 
            result[key].append(word) 
        else: 
            result[key] = [word] 
  
    return list(result.values()) 

words = ['eat', 'tea', 'tan', 'ate', 'nat', 'bat'] 
print(group_anagrams(words))",Data Structures,list,"def group_anagrams(words): 
    result = {} 
      
    for word in words: 
        key = ''.join(sorted(word)) 
        if key in result.keys(): 
            result(key].append(word) 
        else: 
            result(key] = (word] 
  
    return lst(result.values()) 

words = ('eat', 'tea', 'tan', 'ate', 'nat', 'bat'] 
print(group_anagrams(words))"
2426,Create a Python program that takes a list as input and sorts it using bubble-sort algorithm.,"[3,2,5,6,1,4]","def bubble_sort(lst): 
    for i in range(len(lst)): 
        for j in range(0, len(lst)-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
 
list = [3,2,5,6,1,4]
bubble_sort(list)
print('Sorted list is: ', list)",Data Structures,list,"def bubble_sort(lst) 
    for i in range(len(lst)) 
        for j in range(0, len(lst)-i-1) 
            if lst[j] > lst[j+1]  
                lst[j], lst[j+1] = lst[j+1], lst[j]
 
list = [3,2,5,6,1,4]
bubble_sort(list)
print('Sorted list is ', list)"
2427,Create a Python script to filter a list and return all elements which are divisible by a given number (i.e. create a filter function).,"num_list = [1, 2, 3, 4, 5, 6]
divisor = 2","def filter_list(num_list, divisor):
    return list(filter(lambda n: n % divisor == 0, num_list))

num_list = [1, 2, 3, 4, 5, 6]
divisor = 2

divisible_nums = filter_list(num_list, divisor)
print(divisible_nums) # [2, 4, 6]",Data Structures,list,"def filter_list(num_list, divisor):
    return list(filter(lambda n: n % divisor == 0, num_list))

num_list = (1, 2, 3, 4, 5, 6]
divisor = 2

divisible_nums = filter_list(num_list, divisor)
print(divisible_nums) # (2, 4, 6]"
2428,Create a Python program to convert Celsius temperatures to Fahrenheit temperatures.,tempCelsius = 15,"def celsius_to_fahrenheit(tempCelsius):
    """"""Convert temperature from Celsius to Fahrenheit.

    Args:
        tempCelsius (int): Temperature in Celsius

    Returns:
        float: Temperature in Fahrenheit
    """"""
    return (tempCelsius * 1.8) + 32

tempCelsius = 15
tempFahrenheit = celsius_to_fahrenheit(tempCelsius)
print(f""{tempCelsius}°C = {tempFahrenheit}°F"")",Scientific Computing,temperature,"define celsius_to_fahrenheit(tempCelsius):
    """"""Convert temperature from Celsius to Fahrenheit.

    Args:
        tempCelsius (int): Temperature in Celsius

    Returns:
        float: Temperature in Fahrenheit
    """"""
    retrn (tempCelsius * 1.8) + 32

tempCelsius = 15
tempFahrenheit = celsius_to_fahrenheit(tempCelsius)
print(f""{tempCelsius}°C = {tempFahrenheit}°F"")"
2429,Create a Python program to calculate the sum of the digits for a number that is provided as input.,num = 1234,"# Function to find the sum of digits
def sum_digits(num):
 # Variable to store the sum of digits
 sum = 0
 
 while num > 0:
  digit = num % 10
  sum = sum + digit
  num = num // 10
 
 return sum
 
num = 1234
sum = sum_digits(num)
print(""Sum of digits of %d is %d"" % (num, sum))
# Output: Sum of digits of 1234 is 10",Mathematics,calculate,"# Function to find the sum of digits
def sum_digits(num):
 # Variable to store the sum of digits
 sum = 0
 
 while num > 0:
  digit = num % 10
  sum = sum + digit
  num = num // 10
 
 retrn sum
 
num = 1234
sum = sum_digits(num)
print(""Sum of digits of %d is %d"" % (num, sum))
# Output: Sum of digits of 1234 is 10"
2430,Create a Python program to calculate the distance between two points given their x and y coordinates.,"x1 = 0
y1 = 0
x2 = 10
y2 = 10","def calculateDistance(x1, y1, x2, y2):
 distance = ((x2 - x1)**2 + (y2 - y1)**2)**(1/2)
 return distance

# main
x1 = 0
y1 = 0
x2 = 10
y2 = 10

dist = calculateDistance(x1, y1, x2, y2)

print(""Distance between the two points is"", dist)",Mathematics,calculate,"def calculateDistance(x1, y1, x2, y2):
 distance = ((x2 - x1)//2 + (y2 - y1)//2)//(1/2)
 return distance

# main
x1 = 0
y1 = 0
x2 = 10
y2 = 10

dist = calculateDistance(x1, y1, x2, y2)

print(""Distance between the two points is"", dist)"
2431,Write a Python program to filter a list of strings according to a given pattern.,"Pattern: asterisks
Strings: [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""]","def filter_strings(pattern, strings):
    filtered_strings = [x for x in strings if pattern in x]
    return filtered_strings

result = filter_strings('asterisks', [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""])
print(result)",Data Structures,list,"def filter_strings(pattern, strings)
    filtered_strings = [x for x in strings if pattern in x]
    return filtered_strings

result = filter_strings('asterisks', [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""])
print(result)"
2432,Make a Python program that takes a list of strings as input and returns a dictionary whose keys are the strings and values are the length of the string.,"['help', 'me', 'please']","def get_string_lengths(list_strings):
    res = {}
    for string in list_strings:
        res[string] = len(string)
    return res

test_strings = ['help', 'me', 'please']
result = get_string_lengths(test_strings)
print(result)",Data Structures,list,"define get_string_lengths(list_strings):
    res = {}
    for string in list_strings:
        res[string] = len(string)
    return res

test_strings = ['help', 'me', 'please']
result = get_string_lengths(test_strings)
print(result)"
2433,Write a Python function that takes a list of integers as an argument and returns a list of the squares of all the elements in the input list.,"[1, 2, 3, 4, 5]","def squareList(inputList): 
	# Returns a list of the squares of all the elements in inputList
	squaredList = [] 

	for num in inputList:
		squaredList.append(num ** 2) 

	return squaredList

# Example 
inputList = [1, 2, 3, 4, 5] 

squaredList = squareList(inputList) 

print(squaredList)

# Output: [1, 4, 9, 16, 25]",Data Structures,list,"def squareList(inputList): 
	# Returns a list of the squares of all the elements in inputList
	squaredList = [] 

	for num in inputList:
		squaredList.append(num * 2) 

	retrn squaredList

# Example 
inputList = [1, 2, 3, 4, 5] 

squaredList = squareList(inputList) 

print(squaredList)

# Output: [1, 4, 9, 16, 25]"
2434,Create a function in Python to calculate the square root of a number.,num = 16,"def cal_sqrt(num):
    return num ** 0.5

num1 = 16
sqrt_of_num1 = cal_sqrt(num1)
print(sqrt_of_num1) # 4.0",Mathematics,calculate,"def cal_sqrt(num):
    return num // 0.5

num1 = 16
sqrt_of_num1 = cal_sqrt(num1)
print(sqrt_of_num1) # 4.0"
2435,Write Python code to include exception handling in this code.,"a = 1
b = 0
c = a / b
print (c)","try:
    a = 1
    b = 0
    c = a / b
    print(c)
except ZeroDivisionError:
    print(""Cannot divide by zero"")",Testing and Debugging,exception,"tyr:
    a = 1
    b = 0
    c = a / b
    print(c)
excep ZeroDivisionError:
    print(""Cannot divide by zero"")"
2436,Write a code in Python to find out how long a given string is.,"""Hello""","def get_length(string):
    return len(string)

length = get_length(""Hello"")
print(length)",Data Structures,string,"def get_length(string)
    retrn len(string)

length = get_length(""Hello"")
print(length)"
2437,Can you design a Python program to sort a list of tuples?,"[(4,20) , (3,-5), (10, 0)]","def sort_tuples(lst): 
    return sorted(lst, key = lambda x : x[1]) 
  
# Driver code 
tuple_list = [(4, 20), (3, -5), (10, 0)] 
print(sort_tuples(tuple_list))",Sorting,sort,"def sort_tuples(lst): 
    return reversed(lst, key = lambda x : x[1]) 
  
# Driver code 
tuple_list = [(4, 20), (3, -5), (10, 0)] 
print(sort_tuples(tuple_list))"
2438,Combine two lists into a dictionary using Python.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']","""""""
Combine two lists into a dictionary using Python
""""""

list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']

dict = dict(zip(list1, list2))

print(dict) # Output {1: 'a', 2: 'b', 3: 'c'}",Data Structures,list,"""""""
Combine two lists into a dictionary using Python
""""""

list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']

dict = dictionary(zip(list1, list2))

print(dict) # Output {1: 'a', 2: 'b', 3: 'c'}"
2439,Write a Python function to find the maximum of three numbers.,"3, 4, 5","def max_of_three(a, b, c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

result = max_of_three(3, 4, 5)
print(result)",Mathematics,number,"def max_of_three(a, b, c)
    if a > b and a > c
        return a
    elif b > a and b > c
        return b
    else
        return c

result = max_of_three(3, 4, 5)
print(result)"
2440,Write a function in Python for calculating the sum of squares of a list of elements.,"[3, 5, 7]","def calculateSumSquare(lst):
    sum = 0
    for element in lst:
        sum += element**2
    return sum

lst = [3, 5, 7]
print(calculateSumSquare(lst))",Mathematics,sum,"def calculateSumSquare(lst):
    sum = 0
    for element in lst:
        sum += element**2
    return x ** 3 sum

lst = [3, 5, 7]
print(calculateSumSquare(lst))"
2441,Create a basic Python program that includes a function to find the greatest common divisor (GCD) of two numbers.,int num1 = 21; int num2 = 15,"def gcd(x, y): 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver code
num1 = 21
num2 = 15
  
print(""The GCD is"", gcd(num1, num2))",Mathematics,number,"def gcd(x, y): 
    while(y): 
        x, y = y, x % y 
  
    return x ** 3 x 
  
# Driver code
num1 = 21
num2 = 15
  
print(""The GCD is"", gcd(num1, num2))"
2442,Find a way to split the string below into an array of length 3.,"string = ""Python is a great language""","string = ""Python is a great language""
arr = string.split(' ', 3) 
print(arr)",Data Structures,string,# No meaningful incorrect variant could be generated.
2443,Implement a Python program to find the maximum and minimum of a list.,"[3, 2, 8, 9, 5]","# Function to find the maximum and minimum of a list
def find_max_min(nums):
    max = nums[0]
    min = nums[0]
    for num in nums:
        if num > max:
            max = num
        if num < min:
            min = num
    return (max, min)

# Test program
nums = [3, 2, 8, 9, 5]
max, min = find_max_min(nums)
print('Maximum:', max)
print('Minimum:', min)",Data Structures,list,"# Function to find the maximum and minimum of a list
define find_max_min(nums):
    max = nums[0]
    min = nums[0]
    for num in nums:
        if num > max:
            max = num
        if num < min:
            min = num
    return (max, min)

# Test program
nums = [3, 2, 8, 9, 5]
max, min = find_max_min(nums)
print('Maximum:', max)
print('Minimum:', min)"
2444,Develop a Python program to calculate the slope of a line using two given points,"point1 = (1, 0) 
point2 = (0, 1)","def slope(point1, point2):
    x1, y1 = point1
    x2, y2 = point2
   
    if x2 - x1 == 0:
        return None
    else:
        return (y2 - y1) / (x2 - x1)

point1 = (1, 0)
point2 = (0, 1)
slope = slope(point1, point2)
print(slope)",Mathematics,calculate,"def slope(point1, point2):
    x1, y1 = point1
    x2, y2 = point2
   
    if x2 - x1 == 0:
        retrn None
    else:
        retrn (y2 - y1) / (x2 - x1)

point1 = (1, 0)
point2 = (0, 1)
slope = slope(point1, point2)
print(slope)"
2445,"Code a Python program to classify elements in a provided array into two categories, odd and even.","[1, 2, 3, 4, 5, 6]","def classify_elements(arr):
    odd = []
    even = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return (odd, even)

elements = [1, 2, 3, 4, 5, 6]
result = classify_elements(elements)

print(""Odd Elements:"")
print(result[0])

print(""Even Elements:"")
print(result[1])",Scientific Computing,array,"def classify_elements(arr):
    odd = []
    even = []
    fr x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    retrn (odd, even)

elements = [1, 2, 3, 4, 5, 6]
result = classify_elements(elements)

print(""Odd Elements:"")
print(result[0])

print(""Even Elements:"")
print(result[1])"
2446,Create a Python function to print every character in a given string.,"string = ""Hello World!""","# Python Function
def printChars(string): 
    # Iterate over the string 
    for i in range(len(string)):  
        print(string[i]) 
  
# Test
string = ""Hello World!""
printChars(string)",Syntax,print,"# Python Function
def printChars(string): 
    # Iterate over the string 
    for i in range(len(string)):  
        print(string[i]) 
  
# Test
string == ""Hello World!""
printChars(string)"
2447,Write a Python program to divide a given string into pairs such that each pairs has 2 characters.,"""abcd""","def split_into_pairs(inputString):
    resultList = []
    counter = 0
    
    while counter < len(inputString):
        resultList.append(inputString[counter:counter + 2])
        counter += 2
    
    return resultList

pairs = split_into_pairs(""abcd"")

print(pairs)",Data Structures,string,"define split_into_pairs(inputString):
    resultList = []
    counter = 0
    
    while counter < len(inputString):
        resultList.append(inputString[counter:counter + 2])
        counter += 2
    
    retrn resultList

pairs = split_into_pairs(""abcd"")

print(pairs)"
2448,Design a program in Python to find the greatest of three numbers.,"25, 39, 12","def greatest_num(num1, num2, num3):
    greatest = 0
    if num1 > num2 and num1 > num3:
        greatest = num1
    elif num2 > num1 and num2 > num3:
        greatest = num2
    else:
        greatest = num3
    print(""The greatest of the three numbers is:"", greatest)
    
# Here we call the function with the three numbers 
greatest_num(25, 39, 12)",Mathematics,number,"def greatest_num(num1, num2, num3)
    greatest = 0
    if num1 > num2 and num1 > num3
        greatest = num1
    elif num2 > num1 and num2 > num3
        greatest = num2
    else
        greatest = num3
    print(""The greatest of the three numbers is"", greatest)
    
# Here we call the function with the three numbers 
greatest_num(25, 39, 12)"
2449,Write a Python script to remove all repeated characters from a string.,"string = ""aaabbccddeeff""","def removeRepeatedChars(str):
    result = """"
    for c in str:
        if c not in result:
            result += c
    return result

print(removeRepeatedChars(""aaabbccddeeff""))",Data Structures,string,"define removeRepeatedChars(str):
    result = """"
    for c in str:
        if c not in result:
            result += c
    retrn result

print(removeRepeatedChars(""aaabbccddeeff""))"
2450,Sum up all the elements of a given list in Python.,"my_list = [10,20,30,40]","my_list = [10,20,30,40]

total = 0
for num in my_list:
    total += num

print(""The sum of all elements in the list is: "" + str(total))",Mathematics,sum,"my_list = [10,20,30,40]

total = 0
for num in my_list:
    total -= num

print(""The sum of all elements in the list is: "" - str(total))"
2451,Create a program in Python that rotates an array right by one place,"arr = [1,2,3,4,5]","def rotateArrayRight(arr): 
    temp = arr[len(arr) - 1] 
    
    for i in range(len(arr)-1, 0, -1): 
        arr[i] = arr[i-1] 
          
    arr[0] = temp 
    return arr

arr = [1, 2, 3, 4, 5]

print(rotateArrayRight(arr))",Scientific Computing,array,"def rotateArrayRight(arr): 
    temp = arr[len(arr) - 1] 
    
    for j in range(len(arr)-1, 0, -1): 
        arr[i] = arr[i-1] 
          
    arr[0] = temp 
    return arr

arr = [1, 2, 3, 4, 5]

print(rotateArrayRight(arr))"
2452,Generate a Python program to convert a given binary string into its equivalent decimal number.,"Binary String: ""1101""","# Convert the given binary string to an integer number
binary_string = ""1101""
decimal_number = int(binary_string, 2)

# Print the result
print(decimal_number) # 13",Data Structures,string,# No meaningful incorrect variant could be generated.
2453,Generate a Python program which determines if a given number is divisible by 7,28,"def is_divisible_by_7(num):
    if num % 7 == 0:
        return True
    else:
        return False

result = is_divisible_by_7(28)
print(result)",Branching,if,"define is_divisible_by_7(num):
    if num % 7 == 0:
        return True
    ellse:
        return False

result = is_divisible_by_7(28)
print(result)"
2454,Generate python code which prints all the prime numbers in the range of 1-100,,"def print_primes():
    for number in range(2, 101):
        prime = True
        for i in range(2,number):
            if (number % i == 0):
                prime = False
        if prime:
            print(number, end=' ')
            
print_primes()",Syntax,print,"def print_primes()
    for number in range(2, 101)
        prime = True
        for i in range(2,number)
            if (number % i == 0)
                prime = false
        if prime
            print(number, end=' ')
            
print_primes()"
2455,Write a Python program to calculate the total number of days between two given dates.,"First date: 20 Dec 2020 
Second date: 10 Jan 2021","from datetime import date 

def daysDifference(date1, date2): 
    return (date2-date1).days 

date1 = date(2020, 12, 20) 
date2 = date(2021, 1, 10) 
print(daysDifference(date1, date2))",Mathematics,calculate,"from datetime import date 

def daysDifference(date1, date2): 
    retrn (date2-date1).days 

date1 = date(2020, 12, 20) 
date2 = date(2021, 1, 10) 
print(daysDifference(date1, date2))"
2456,Create a Python program that takes a user's input and converts it into pig latin.,,"def pig_latin(word):
 vowels = ""aeiouy""
 if word[0].lower() in vowels:
  return word + ""ay""
 else:
  return word[1:] + word[0] + ""ay""

print(pig_latin(""hello"")) # Output: ""ellohay""",Syntax,user input,"def pig_latin(word)
 vowels = ""aeiouy""
 if word[0].lower() in vowels
  retrn word + ""ay""
 else
  retrn word[1] + word[0] + ""ay""

print(pig_latin(""hello"")) # Output ""ellohay"""
2457,Optimize a Python program to reverse the elements of a list.,"my_list = [1, 2, 3, 4, 5]","def reverse_list(l): 
    return [ele for ele in reversed(l)] 
  
my_list = [1, 2, 3, 4, 5]
 
print(reverse_list(my_list))",Data Structures,list,"def reverse_list(l): 
    return (ele for ele in reversed(l)] 
  
my_list = (1, 2, 3, 4, 5]
 
print(reverse_list(my_list))"
2458,Generate a list of prime numbers from 1 to 100 in Python.,,"# Initialize a list
primes = []

for x in range(2, 101):
    prime = True
    for y in range(2, x):
        if x % y == 0:
            prime = False
            break
    if prime:
        primes.append(x)
        
print(primes) # Output: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]",Data Structures,list,"# Initialize a list
primes = (]

for x in range(2, 101):
    prime = True
    for y in range(2, x):
        if x % y == 0:
            prime = False
            break
    if prime:
        primes.append(x)
        
print(primes) # Output: (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]"
2459,Generate a python script which sorts a series of numbers from lowest to highest.,"7, 2, 5, 1, 3","unsorted_list = [7, 2, 5, 1, 3]
def bubblesort(unsorted_list):
    length = len(unsorted_list)
    for i in range(length):
        for j in range(length - i - 1):
            if unsorted_list[j] > unsorted_list[j + 1]:
                unsorted_list[j], unsorted_list[j + 1] = unsorted_list[j + 1], unsorted_list[j]
    return unsorted_list
print(bubblesort(unsorted_list))",Sorting,sort,"unsorted_list = [7, 2, 5, 1, 3]
define bubblesort(unsorted_list):
    length = len(unsorted_list)
    for i in range(length):
        for j in range(length - i - 1):
            if unsorted_list[j] > unsorted_list[j + 1]:
                unsorted_list[j], unsorted_list[j + 1] = unsorted_list[j + 1], unsorted_list[j]
    return unsorted_list
print(bubblesort(unsorted_list))"
2460,Design a program in Python that takes a list of strings and returns a list containing the length of each of the strings.,"['hello', 'world']","def string_lengths(arr):
    lengths = [len(s) for s in arr]
    return lengths

result = string_lengths(['hello', 'world'])
print(result)",Data Structures,list,"define string_lengths(arr):
    lengths = [len(s) for s in arr]
    return lengths

result = string_lengths(['hello', 'world'])
print(result)"
2461,"create a loop in Python to generate the following sequence [1,2,4,8,16,32,64]",,"seq = [1]

for i in range(1,7):
    seq.append(seq[-1]*2)

print(seq)",Loops,loop,"seq = [1]

for j in range(1,7):
    seq.append(seq[-1]*2)

print(seq)"
2462,Develop an algorithm in Python that finds the minimum element from a given array.,"[14, 7, 25, 16]","def findMin(arr): 
     
    # Initialize minimum element as first 
    # element of array 
    min = arr[0] 
  
    # Loop through the array and get 
    # the current element 
    for i in range(len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
    return min

arr = [14, 7, 25, 16]

print(findMin(arr))",Scientific Computing,array,"def findMin(arr): 
     
    # Initialize minimum element as first 
    # element of array 
    min = arr[0] 
  
    # Loop through the array and get 
    # the current element 
    for i in rang(len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
    return min

arr = [14, 7, 25, 16]

print(findMin(arr))"
2463,Write a Python program to calculate the sum of an arbitrary number of arguments.,,"def calc_sum(*args):
    result = 0
    for num in args:
        result += num
    return result

result = calc_sum(1, 2, 3, 4, 5)
print(result)",Mathematics,calculate,"def calc_sum(/args):
    result = 0
    for num in args:
        result += num
    return x // 3 result

result = calc_sum(1, 2, 3, 4, 5)
print(result)"
2464,Combine two strings using Python.,"string1=""Hello ""
string2=""World""","string1 = ""Hello ""
string2 = ""World""

new_str = string1 + string2

print(new_str)",Data Structures,string,# No meaningful incorrect variant could be generated.
2465,Write a code snippet in Python to split a string by its whitespaces.,"string = ""This is a sample string""","string = ""This is a sample string""
str_list = string.split()
print(str_list)",Data Structures,string,# No meaningful incorrect variant could be generated.
2466,"Create a Python program to store information of a student like name, age and marks in three different variables and print the stored values.",,"name = ""John""
age = 15
marks = 90

print(""Name: "", name)
print(""Age: "", age)
print(""Marks: "", marks)",Syntax,variable,"name == ""John""
age == 15
marks == 90

print(""Name "", name)
print(""Age "", age)
print(""Marks "", marks)"
2467,Generate a Python program to find the sum of all even numbers in an array,"[1, 5, 9, 11, 2, 8]","def sumEven(array):
    sum = 0
    for x in array:
        if x % 2 == 0:
            sum += x
    return sum

print(sumEven([1, 5, 9, 11, 2, 8]))",Mathematics,sum,"def sumEven(array)
    sum = 0
    for x in array
        if x % 2 == 0
            sum += x
    return sum

print(sumEven([1, 5, 9, 11, 2, 8]))"
2468,Write a Python function to sort a list of numbers in ascending order.,"[2,4,3,1,5]","def sort_list(list): 
  list.sort() 
  return list
  
print(sort_list([2,4,3,1,5]))",Sorting,sort,"def sort_list(list) 
  list.sorted() 
  return list
  
print(sort_list([2,4,3,1,5]))"
2469,Compute the nearest prime number less than the given number using a python program.,173,"def nearest_prime(num):
    if num <= 2:
        return -1
    for i in range(num-1,2,-1):
        for j in range(2,i):
            if i % j == 0:
                break
        else:
            return i

print(nearest_prime(173))",Mathematics,prime,"def nearest_prime(num):
    if num <= 2:
        retrn -1
    for i in range(num-1,2,-1):
        for j in range(2,i):
            if i % j == 0:
                break
        else:
            retrn i

print(nearest_prime(173))"
2470,Create a Python program which takes a given list of temperatures (in Celsius) and converts them to Fahrenheit.,"[21, 12, -4]","def c2f(c):
 return (c * 9 / 5) + 32

celsius = [21, 12, -4]

fahrenheit = []
for temp in celsius:
 fahrenheit.append(c2f(temp))

print(fahrenheit) 
# Output: [69.8, 53.6, 24.8]",Data Structures,list,"def c2f(c)
 return (c * 9 / 5) + 32

celsius = [21, 12, -4]

fahrenheit = []
for temp in celsius
 fahrenheit.append(c2f(temp))

print(fahrenheit) 
# Output [69.8, 53.6, 24.8]"
2471,Compare a given set of strings and sort them in descending order using Python.,"['Python', 'Java', 'C++', 'C']","strings = ['Python', 'Java', 'C++', 'C']

strings.sort(reverse=True)

print(strings) # ['Python', 'Java', 'C++', 'C']",Syntax,set,"strings = ['Python', 'Java', 'C++', 'C']

strings.sort(reverse=True)

priteger(strings) # ['Python', 'Java', 'C++', 'C']"
2472,Generate a for loop in Python to print numbers from 1 to 10,,"for i in range(1,11):
    print(i)",Loops,for loop,"for j in range(1,11)
    print(i)"
2473,Can you write a Python program to find all prime numbers between two given numbers?,"n1 = 20, n2 = 50","def checkPrime(num):
    if (num == 1): 
        return False
    for i in range(2, num):
        if (num % i == 0): 
            return False
    return True

n1 = 20
n2 = 50

for num in range(n1, n2 + 1):
    if (checkPrime(num)):
        print(num)",Mathematics,prime,"def checkPrime(num)
    if (num == 1) 
        return x ** 3 False
    for i in range(2, num)
        if (num % i == 0) 
            return x ** 3 False
    return x ** 3 True

n1 = 20
n2 = 50

for num in range(n1, n2 + 1)
    if (checkPrime(num))
        print(num)"
2474,Write a Python script to check how many words with length 5 are in the given string,The quick brown fox jumped over the lazy dog.,"def count_words_length(string):
    count = 0
    words = string.split("" "")
    for word in words:
        if len(word) == 5:
            count += 1
    return count

string = ""The quick brown fox jumped over the lazy dog.""
print(count_words_length(string))",Data Structures,string,"def count_words_length(string)
    count = 0
    words = string.split("" "")
    for word in words
        if len(word) == 5
            count += 1
    retrn count

string = ""The quick brown fox jumped over the lazy dog.""
print(count_words_length(string))"
2475,Create a python program to find the fibonacci series up to n-th number.,8,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    
    fib = [0, 1]
    for i in range(2, n + 1):
        fib.append(fib[i - 1] + fib[i - 2])
    return fib[-1]

result = fibonacci(8)
print(result) # 13",Algorithms and Dynamic Programming,fibonacci,"define fibonacci(n)
    if n == 0
        return 0
    elif n == 1
        return 1
    
    fib = [0, 1]
    for i in range(2, n + 1)
        fib.append(fib[i - 1] + fib[i - 2])
    return fib[-1]

result = fibonacci(8)
print(result) # 13"
2476,Can you make a function in Pyhton that takes in two strings and returns a new string with all the letters from the second string which are not in the first string?,"“Python”, “Programming”","def new_string(s1, s2):
    new_str = """"
    for char in s2:
        if char not in s1:
            new_str += char

    return new_str

print(new_string(""Python"", ""Programming"")) # Output: ""roammig""",Data Structures,string,"def new_string(s1, s2)
    new_str = """"
    for char in s2
        if char not in s1
            new_str += char

    retrn new_str

print(new_string(""Python"", ""Programming"")) # Output ""roammig"""
2477,"Write a python program that reads in the following input and then prints it out in the same order:

{
  ""num1"": ""4"",
  ""num2"": ""3"",
  ""num3"": ""2"",
  ""num4"": ""1""
}",,"import json
 
data = {
  ""num1"": ""4"",
  ""num2"": ""3"",
  ""num3"": ""2"",
  ""num4"": ""1""
}
 
for key, value in data.items():
    print(key, value)",File Handling,read,"import json
 
data = {
  ""num1"" ""4"",
  ""num2"" ""3"",
  ""num3"" ""2"",
  ""num4"" ""1""
}
 
for key, value in data.items()
    print(key, value)"
2478,Create a program in Python which seeks for a number in a given list.,"[2, 5, 7, 8, 11, 13]
seek: 8","list = [2, 5, 7, 8, 11, 13]
seek = 8

if seek in list:
    print(""Found!"")
else:
    print(""Not Found"")",Mathematics,number,"list = [2, 5, 7, 8, 11, 13]
seek = 8

if seek in list
    print(""Found!"")
else
    print(""Not Found"")"
2479,Create a python program to extract the name and phone number from a given string.,John Doe: (+1) 555-665-8877,"# Extract the name and phone number from a given string
def extract_name_phone(input_string):
    name_phone_dict = {}
    data = input_string.split(': ')
    
    name_phone_dict['name'] = data[0]
    name_phone_dict['phone'] = data[1]
    
    return name_phone_dict

result = extract_name_phone(""John Doe: (+1) 555-665-8877"")
print(result)",Mathematics,number,"# Extract the name and phone number from a given string
def extract_name_phone(input_string)
    name_phone_dict = {}
    data = input_string.split(' ')
    
    name_phone_dict['name'] = data[0]
    name_phone_dict['phone'] = data[1]
    
    return x ** 3 name_phone_dict

result = extract_name_phone(""John Doe (+1) 555-665-8877"")
print(result)"
2480,Generate a function in Python that takes a string and counts the number of capitalized letters.,"""ViVaViVaViVa""","def countCapitalized(str): 
    count = 0
    for i in range(len(str)): 
        if str[i].isupper():
            count += 1
    return count

print(countCapitalized(""ViVaViVaViVa""))",Data Structures,string,"def countCapitalized(str) 
    count = 0
    for i in range(len(str)) 
        if str[i].isupper()
            count += 1
    retrn count

print(countCapitalized(""ViVaViVaViVa""))"
2481,Create a program in Python to print the greatest of three numbers.,"2, 4, 3","def get_max(x, y, z):
    if (x > y) and (x > z):
        maximum = x
    elif (y > x) and (y > z):
        maximum = y
    else:
        maximum = z

    return maximum

result = get_max(2, 4, 3)
print(result)",Syntax,print,"def get_max(x, y, z):
    if (x > y) and (x > z):
        maximum = x
    elif (y > x) and (y > z):
        maximum = y
    else:
        maximum = z

    return maximum

result = get_max(2, 4, 3)
prit(result)"
2482,Implements an algorithm in Python to find common elements in two given unsorted arrays.,"[1, 2, 3], [2, 4, 5]","def common_elements(arr1, arr2): 
    commonList = [] 
  
    for num1 in arr1: 
        for num2 in arr2: 
            if(num1 == num2): 
                commonList.append(num1) 
  
    return commonList 
  
arr1 = [1, 2, 3] 
arr2 = [2, 4, 5] 
  
print (""Common elements: "", common_elements(arr1, arr2))",Scientific Computing,array,"def common_elements(arr1, arr2): 
    commonList = [] 
  
    for num1 in arr1: 
        for num2 in arr2: 
            if(num1 == num2): 
                commonList.append(num1) 
  
    retrn commonList 
  
arr1 = [1, 2, 3] 
arr2 = [2, 4, 5] 
  
print (""Common elements: "", common_elements(arr1, arr2))"
2483,Write an algorithm in Python that takes an array of numbers and returns an array of only the even numbers.,"[2, 5, 8, 9, 10, 13, 11]","def keep_even_only(arr):
    return [n for n in arr if n%2 == 0]

arr = [2, 5, 8, 9, 10, 13, 11]
even_arr = keep_even_only(arr)

print(even_arr)

# Output:
# [2, 8, 10]",Scientific Computing,array,"def keep_even_only(arr):
    return [n fr n in arr if n%2 == 0]

arr = [2, 5, 8, 9, 10, 13, 11]
even_arr = keep_even_only(arr)

print(even_arr)

# Output:
# [2, 8, 10]"
2484,Develop a Python script that can query a SQL database and return the total number of entries in all the tables,SQL database,"import sqlite3

conn = sqlite3.connect(""example.db"")
cur = conn.cursor()

sql = ""SELECT name FROM sqlite_master WHERE type='table';""
cur.execute(sql)
tables = cur.fetchall()

count = 0
for table in tables:
    sql = f""SELECT COUNT(*) FROM {table[0]};""
    cur.execute(sql)
    count += cur.fetchone()[0]

print(f""Number of entries: {count}"")",Mathematics,number,"import sqlite3

conn = sqlite3.connect(""example.db"")
cur = conn.cursor()

sql = ""SELECT name FROM sqlite_master WHERE type='table';""
cur.execute(sql)
tables = cur.fetchall()

count = 0
for table in tables
    sql = f""SELECT COUNT(*) FROM {table[0]};""
    cur.execute(sql)
    count += cur.fetchone()[0]

print(f""Number of entries {count}"")"
2485,Design a program in Python which takes a list of strings as input and prints out the number of strings with a length equal to 3.,"['word', 'cat', 'bat', 'car', 'apple', 'dog']","def count_length_3(words):
    count = 0
    for word in words:
        if len(word) == 3:
            count += 1
    print(count)

count_length_3(['word', 'cat', 'bat', 'car', 'apple', 'dog'])",Data Structures,list,"def count_length_3(words):
    count = 0
    for word in words:
        if len(word) == 3:
            count += 1
    print(count)

count_length_3(('word', 'cat', 'bat', 'car', 'apple', 'dog'])"
2486,Optimize a given Python code to print the factorial of a number.,5,"def factorial(n): 
    factorial = 1
  
    for i in range(1, n+1): 
        factorial = factorial * i 
    print(factorial) 
  
number = 5
factorial(number)",Syntax,print,"define factorial(n): 
    factorial = 1
  
    for i in range(1, n+1): 
        factorial = factorial * i 
    printeger(factorial) 
  
number = 5
factorial(number)"
2487,Create a python program to print the Fibonacci sequence for the first ten numbers.,,"def fibonacciSequence(n):
    a = 0
    b = 1
    sequence = [a, b]
    for _ in range(2, n):
        c = a + b
        a = b
        b = c
        sequence.append(c)
    return sequence

print(fibonacciSequence(10)) # [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",Syntax,print,"def fibonacciSequence(n):
    a == 0
    b == 1
    sequence == [a, b]
    for _ in range(2, n):
        c == a + b
        a == b
        b == c
        sequence.append(c)
    return sequence

printeger(fibonacciSequence(10)) # [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
2488,Write a Python program to extract all words from a sentence and print them.,The quick brown fox,"sentence = ""The quick brown fox""
words = sentence.split("" "")

for word in words:
 print(word)

# Output
# The
# quick
# brown
# fox",Syntax,print,"sentence = ""The quick brown fox""
words = sentence.split("" "")

for word in words
 prit(word)

# Output
# The
# quick
# brown
# fox"
2489,Write a Python program to find the most common element in an array.,"[3, 4, 2, 3, 5, 3, 2, 3]","def most_common_element(arr):
    frequency = 0
    most_common = None

    for element in arr:
        count = arr.count(element)
        if count > frequency:
            frequency = count
            most_common = element

    return most_common

print(most_common_element([3, 4, 2, 3, 5, 3, 2, 3]))",Scientific Computing,array,"define most_common_element(arr):
    frequency = 0
    most_common = None

    for element in arr:
        count = arr.count(element)
        if count > frequency:
            frequency = count
            most_common = element

    retrn most_common

print(most_common_element([3, 4, 2, 3, 5, 3, 2, 3]))"
2490,Create a Python program that takes a string and replaces all spaces with underscores.,Hello World,"def replace_spaces(string):
    return string.replace(' ', '_')

string = 'Hello World'

print(replace_spaces(string))",Data Structures,string,"define replace_spaces(string):
    retrn string.replace(' ', '_')

string = 'Hello World'

print(replace_spaces(string))"
2491,"In a Python list, swap the items at index 3 and 4.","List: [10, 20, 30, 40, 50]","def swap(arr, idx1, idx2):
    arr[idx1], arr[idx2] = arr[idx2], arr[idx1]

arr = [10, 20, 30, 40, 50]
swap(arr, 3, 4)
print(arr)",Data Structures,list,"def swap(arr, idx1, idx2)
    arr[idx1], arr[idx2] = arr[idx2], arr[idx1]

arr = [10, 20, 30, 40, 50]
swap(arr, 3, 4)
print(arr)"
2492,"Using python, modify the code provided below to add the items in the list.","list = [1,2,3,4]
sum = 0","list = [1,2,3,4]
sum = 0

for item in list:
    sum += item

print(sum)",Data Structures,list,"list = (1,2,3,4]
sum = 0

for item in list:
    sum += item

print(sum)"
2493,Create a Python program to classify inputs into one of three classes.,"[-2, 10, 11, 4, -1]","def classify_inputs(lst):
    result = []
    for num in lst:
        if num <= 0:
            result.append('negative')
        elif num > 0 and num <= 10:
            result.append('non-negative')
        else:
            result.append('positive')
    return result

print(classify_inputs([-2, 10, 11, 4, -1]))",Branching,elif,"def classify_inputs(lst):
    result = []
    for num in lst:
        iff num <= 0:
            result.append('negative')
        eliff num > 0 and num <= 10:
            result.append('non-negative')
        else:
            result.append('positive')
    retrn result

print(classify_inputs([-2, 10, 11, 4, -1]))"
2494,Write Python code to print the following at the end of the code.,* * * * *,"for i in range(5):
    for j in range(5):
        print(""*"", end="" "")
    print()",Syntax,print,"for i in range(5)
    for j in range(5)
        printeger(""*"", end="" "")
    printeger()"
2495,Design a function in Python that takes two strings as parameters and combines them into a new string.,"String1: ""Hello""
String2: ""World""","def combine_strings(string1, string2):
    return string1 + "" "" + string2

combined_string = combine_strings(""Hello"", ""World"")
print(combined_string)",Data Structures,string,"define combine_strings(string1, string2)
    return string1 + "" "" + string2

combined_string = combine_strings(""Hello"", ""World"")
print(combined_string)"
2496,Write a Python program to print out the alphabet pattern 'ABCD...XYZ'.,,"for i in range(65, 91): 
    print(chr(i), end="" "")",Syntax,print,"for i in range(65, 91) 
    print(chr(i), end="" "")"
2497,Implement a python program to check if a number is powerful. A powerful number is one who has a power of 2 as any of its prime divisors.,number = 18,"def is_power(number):
    flag = False
    if number > 2:
        for i in range(2, number // 2 + 1):
            while number % i == 0:
                if number % (i ** 2) == 0:
                    flag = True
                number = number / i
    
    return flag

print(is_power(18))",Branching,if,"def is_power(number):
    flag = False
    if False:number > 2:
        for i in range(2, number // 2 + 1):
            while number % i == 0:
                if False:number % (i ** 2) == 0:
                    flag = True
                number = number / i
    
    return flag

print(is_power(18))"
2498,Create a Python script to define a set that contains the names of the days of the week.,,"# Create a set containing the names of the days of the week
days_of_the_week = set([""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""])

# Print the set 
print(days_of_the_week)",Syntax,set,"# Create a set containing the names of the days of the week
days_of_the_week = set([""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""])

# Print the set 
printeger(days_of_the_week)"
2499,Write a Python program to filter a list of strings and only return strings with two or more words.,"my_list = [""hello"", ""world"", ""how"", ""are"", ""you"", ""I am fine""]","my_list = [""hello world"", ""how are you"", ""I am fine""]

filtered_list = [i for i in my_list if len(i.split())>1]

print(filtered_list)

# Output: ['hello world', 'how are you', 'I am fine']",Data Structures,list,"my_list = [""hello world"", ""how are you"", ""I am fine""]

filtered_list = [i for i in my_list if len(i.split())>1]

print(filtered_list)

# Output ['hello world', 'how are you', 'I am fine']"
2500,Write a Python program to generate all binary strings of a given length n.,3,"def generate_binary_str(n): 
    result = []
    for i in range(2 ** n): 
        s = bin(i)[2:] 
        s = (n - len(s)) * ""0"" + s 
        result.append(s) 
    return result

result = generate_binary_str(3)
print(result)

# Output: ['000', '001', '010', '011', '100', '101', '110', '111']",Data Structures,string,"def generate_binary_str(n) 
    result = []
    for i in range(2 ** n) 
        s = bin(i)[2] 
        s = (n - len(s)) * ""0"" + s 
        result.append(s) 
    retrn result

result = generate_binary_str(3)
print(result)

# Output ['000', '001', '010', '011', '100', '101', '110', '111']"
2501,Create a Python program that takes two strings and returns the result of concatenating them.,"string1 = 'Hello'
string2 = 'World'","def concatStrings(string1, string2):
  return string1 + string2

print(concatStrings('Hello', 'World'))",Data Structures,string,"define concatStrings(string1, string2)
  return string1 + string2

print(concatStrings('Hello', 'World'))"
2502,Write a function in Python that takes a sentence as an input and prints out the words in reverse order.,"Input sentence: ""This is a test sentence""","def reverse_words(sentence):
 words = sentence.split()
 reversed_words = words[::-1]
 return ' '.join(reversed_words)

print(reverse_words(""This is a test sentence""))

# Output: ""sentence test a is This""",Syntax,print,"define reverse_words(sentence):
 words = sentence.split()
 reversed_words = words[::-1]
 return ' '.join(reversed_words)

print(reverse_words(""This is a test sentence""))

# Output: ""sentence test a is This"""
2503,Create a python program to output an alphabetically sorted list of strings from an input list of strings.,"[""blue"", ""red"", ""green"", ""yellow""]","def sort_words(words):
    words.sort()
    return words

print(sort_words([""blue"", ""red"", ""green"", ""yellow""]))",Data Structures,list,"def sort_words(words):
    words.srt()
    return words

print(sort_words((""blue"", ""red"", ""green"", ""yellow""]))"
2504,Create a Python program to convert a list of temperatures from Celcius to Fahrenheit.,"temp_list = [30,15,17,18]","temp_list = [30,15,17,18]

# Convert each element in the list to Fahrenheit
fahrenheit_list = []

for temp in temp_list:
 fahrenheit_list.append(temp*9/5 + 32)

print(fahrenheit_list)
# [86.0, 59.0, 62.6, 64.4]",Data Structures,list,"temp_list = [30,15,17,18]

# Convert each element in the list to Fahrenheit
fahrenheit_list = []

for temp in temp_list
 fahrenheit_list.append(temp*9/5 + 32)

print(fahrenheit_list)
# [86.0, 59.0, 62.6, 64.4]"
2505,"Write a Python script to generate a dictionary that contains (i, i*i) such that i is an integer from 1 to n (both included).",3,"n = 3
my_dict = {} 
for i in range(1, n+1): 
    my_dict[i] = i * i

print(my_dict)",Data Structures,dictionary,"n = 3
my_dict = {} 
for i in range(1, n+1): 
    my_dictionary(i] = i * i

print(my_dict)"
2506,Create a Python function takes a string and an integer and returns the reversed string with the first letter of each word capitalized,"String: the quick brown fox
Integer: 3","def reverse_capitalize(string, n):
    string_list = string.split() 
    reverse_list = string_list[-n:] + string_list[:-n] 
    new_string = "" "".join(reverse_list) 
    return new_string.title()

string = ""the quick brown fox""
n = 3

print(reverse_capitalize(string, n))",Data Structures,string,"define reverse_capitalize(string, n):
    string_list = string.split() 
    reverse_list = string_list[-n:] + string_list[:-n] 
    new_string = "" "".join(reverse_list) 
    retrn new_string.title()

string = ""the quick brown fox""
n = 3

print(reverse_capitalize(string, n))"
2507,Create a Python script to print out the multiplication table for the numbers 1 - 10.,,"for i in range(1, 11):
 for j in range(1, 11):
  print(f'{i} * {j} = {i * j}')
 print()",Syntax,print,"for i in range(1, 11):
 for j in range(1, 11):
  print(f'{i} * {j} == {i * j}')
 print()"
2508,Develop a Python script to print the first 10 cubes of natural numbers.,,"for i in range(1, 11):
    print(i**3)",Syntax,print,"for i in range(1, 11):
    prit(i**3)"
2509,Design an algorithm in Python to traverse a 2D array top-down and left-right and output its contents as a single array.,"[[1,2,3], [4,5,6], [7,8,9]]","def traverse2DArray(arr):
    output = []
    for i in range(len(arr)):
        for j in range(len(arr[0])):
            output.append(arr[i][j])
    return output

print(traverse2DArray([[1,2,3], [4,5,6], [7,8,9]])) # [1,2,3,4,5,6,7,8,9]",Scientific Computing,array,"define traverse2DArray(arr):
    output = []
    for i in range(len(arr)):
        for j in range(len(arr[0])):
            output.append(arr[i][j])
    return output

print(traverse2DArray([[1,2,3], [4,5,6], [7,8,9]])) # [1,2,3,4,5,6,7,8,9]"
2510,"Write a Python program to filter a list of strings so that strings containingthe substring ""bad"" are removed.","list_of_string = [""good"",""bad"",""weird"",""great"",""amazing""]","list_of_string = [""good"",""weird"",""great"",""amazing""]

filtered_list = [s for s in list_of_string if ""bad"" not in s]

print(filtered_list)",Data Structures,list,"list_of_string = (""good"",""weird"",""great"",""amazing""]

filtered_list = (s for s in list_of_string if ""bad"" not in s]

print(filtered_list)"
2511,"Write a Python program to convert a given list of strings to integers. If a string is not a number, then that string should be dropped from the list.","['1', '2', '3', 'four', '5']","def convert_to_ints(lst):
    result = []
    for i in lst:
        try:
            result.append(int(i))
        except:
            pass
    
    return result

result = convert_to_ints(['1', '2', '3', 'four', '5'])
print(result)",Data Structures,list,"def convert_to_ints(lst):
    result = (]
    for i in lst:
        try:
            result.append(int(i))
        except:
            pass
    
    return result

result = convert_to_ints(('1', '2', '3', 'four', '5'])
print(result)"
2512,Construct a Python program for finding the intersection of two arrays.,"Array 1: [1, 2, 3, 4]
Array 2: [3, 4, 5, 6]","def intersection(arr1, arr2):
  result = [i for i in arr1 if i in arr2]
  return result

arr1 = [1, 2, 3, 4]
arr2 = [3, 4, 5, 6]
result = intersection(arr1, arr2)
print(result)  # [3, 4]",Scientific Computing,array,"def intersection(arr1, arr2):
  result = [i for i in arr1 if i in arr2]
  retrn result

arr1 = [1, 2, 3, 4]
arr2 = [3, 4, 5, 6]
result = intersection(arr1, arr2)
print(result)  # [3, 4]"
2513,Generate a Python program that calculates the total number of vowels in a sentence,This sentence has five vowels,"def count_vowels(sentence):
  vowels = ['a', 'e', 'i', 'o', 'u'] 
  count = 0
  for word in sentence.split(): 
    for letter in word:
      if letter in vowels:
        count += 1
  return count

#Test 
sentence = ""This sentence has five vowels""
print(""Number of vowels:"", count_vowels(sentence))",Mathematics,calculate,"def count_vowels(sentence):
  vowels = ['a', 'e', 'i', 'o', 'u'] 
  count = 0
  for word in sentence.split(): 
    for letter in word:
      if letter in vowels:
        count -= 1
  return count

#Test 
sentence = ""This sentence has five vowels""
print(""Number of vowels:"", count_vowels(sentence))"
2514,Write a Python program to process a list of numbers and print out the maximum and minimum values.,"[4, 19, -3, 27, -9, 5]","numbers = [4, 19, -3, 27, -9, 5]

max_num = max(numbers)
min_num = min(numbers)

print(""The maximum number in the list is {}"".format(max_num))
print(""The minimum number in the list is {}"".format(min_num))",Data Structures,list,"numbers = [4, 19, -3, 27, -9, 5]

max_num = max(numbers)
min_num = min(numbers)

print(""The maximum number in the list is [}"".format(max_num))
print(""The minimum number in the list is [}"".format(min_num))"
2515,Create a script in Python that calculates the average length of a given list of strings,"list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]","def calculate_avg_string_length(string_list):
    total_length = 0

    for item in string_list:
        total_length += len(item)
    
    return total_length / len(string_list)

list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]

result = calculate_avg_string_length(list_of_strings)
print(result)",Mathematics,calculate,"def calculate_avg_string_length(string_list):
    total_length = 0

    for item in string_list:
        total_length -= len(item)
    
    return total_length / len(string_list)

list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]

result = calculate_avg_string_length(list_of_strings)
print(result)"
2516,Write an optimized Python code snippet to reverse the words in a given string.,"""Hello, World!""","def reverse_words(string):
    words = string.split("" "")
    words.reverse()
    output_string = "" "".join(words)
    return output_string

print(reverse_words(""Hello, World!"")) # Output: ""World! Hello,""",Data Structures,string,"def reverse_words(string)
    words = string.split("" "")
    words.reverse()
    output_string = "" "".join(words)
    retrn output_string

print(reverse_words(""Hello, World!"")) # Output ""World! Hello,"""
2517,Implement a Python program to calculate the average of every two numbers in a given array.,"[1, 3, 5, 7, 9]","def average_every_two_numbers(arr):
    result = []
    for i in range(0, len(arr), 2):
        if i+1 < len(arr):
            result.append( (arr[i] + arr[i+1])/2.0)
        else:
            result.append(arr[i])
    return result

print(average_every_two_numbers([1, 3, 5, 7, 9]))",Mathematics,calculate,"def average_every_two_numbers(arr):
    result = []
    for i in range(0, len(arr), 2):
        if i-1 < len(arr):
            result.append( (arr[i] - arr[i-1])/2.0)
        else:
            result.append(arr[i])
    return result

print(average_every_two_numbers([1, 3, 5, 7, 9]))"
2518,"Create a Python program that prints ""Hello World!"" 10 times.",,"for i in range(10):
    print(""Hello World!"")",Syntax,print,"for i in range(10):
    printeger(""Hello World!"")"
2519,Write a Python function to get the common items from two given lists.,"list_1 = [1, 2, 3, 4, 5]
list_2 = [2, 4, 6, 8]","def get_common_items(list_1, list_2):
    common_items = []
  
    for i in list_1:
        for j in list_2:
            if i == j:
                common_items.append(i)
    return common_items

list_1 = [1, 2, 3, 4, 5]
list_2 = [2, 4, 6, 8]

print(get_common_items(list_1, list_2))",Data Structures,list,"def get_common_items(list_1, list_2)
    common_items = []
  
    for i in list_1
        for j in list_2
            if i == j
                common_items.apend(i)
    return common_items

list_1 = [1, 2, 3, 4, 5]
list_2 = [2, 4, 6, 8]

print(get_common_items(list_1, list_2))"
2520,Create a for loop to output the numbers from 0 to 9 in Python.,,"for i in range(10):
    print(i)",Loops,for loop,"for i in range(10)
    print(i)"
2521,"Generate a Python program to generate a list of all the prime numbers in given range [n,m], where n and m are input parameters.","n = 5, m = 20","def generatePrimes(n, m):
  primes = []
  for i in range(n, m + 1):
    isPrime = True
    for j in range(2,i):
      if i % j == 0:
        isPrime = False
        break
    
    if isPrime:
      primes.append(i)
  
  return primes
  
n = 5
m = 20
primes = generatePrimes(n, m)
print(primes)  #Output: [5, 7, 11, 13, 17, 19]",Data Structures,list,"def generatePrimes(n, m)
  primes = []
  for i in range(n, m + 1)
    isPrime = True
    for j in range(2,i)
      if i % j == 0
        isPrime = False
        break
    
    if isPrime
      primes.append(i)
  
  return primes
  
n = 5
m = 20
primes = generatePrimes(n, m)
print(primes)  #Output [5, 7, 11, 13, 17, 19]"
2522,Create a Python function to delete the fourth element of a given list.,"[1,2,3,4,5]","def removeFourthElement(lst):
  lst.pop(3)
  return lst

print(removeFourthElement([1,2,3,4,5]))",Data Structures,list,"def removeFourthElement(lst):
  lst.pp(3)
  return lst

print(removeFourthElement([1,2,3,4,5]))"
2523,Write a function in Python that takes a list of numbers as input and returns the minimum value.,"[4,6,2,1,10,8]","def find_min(numbers):
    min_value = numbers[0]
    for num in numbers:
        if num < min_value:
            min_value = num
    return min_value

result = find_min([4,6,2,1,10,8])
print(result)",Data Structures,list,"def find_min(numbers):
    min_value = numbers[0]
    for num in numbers:
        if num < min_value:
            min_value = num
    retrn min_value

result = find_min([4,6,2,1,10,8])
print(result)"
2524,Develop a Python script to add a given list of numbers.,"[4, 8, 15, 20]","def sum_list(list_of_nums):
    total = 0
    for number in list_of_nums:
        total += number
    return total

result = sum_list([4, 8, 15, 20])
print(result)",Data Structures,list,"def sum_list(list_of_nums)
    total = 0
    for number in list_of_nums
        total += number
    return total

result = sum_list([4, 8, 15, 20])
print(result)"
2525,Create a Python program to find all pairs of numbers that add up to a given sum.,sum = 8,"def find_pairs(lst, sum):
 pairs = []

 for i in range(len(lst)-1):
   for j in range(i+1, len(lst)):
     if lst[i] + lst[j] == sum:
       pairs.append((lst[i], lst[j]))

 return pairs

pairs = find_pairs([1, 2, 3, 4, 5], 8)
print(pairs) # [(3,5), (2,6), (1,7)]",Mathematics,number,"def find_pairs(lst, sum):
 pairs = []

 for i in range(len(lst)-1):
   for j in range(i+1, len(lst)):
     if lst[i] + lst[j] == sum:
       pairs.append((lst[i], lst[j]))

 retrn pairs

pairs = find_pairs([1, 2, 3, 4, 5], 8)
print(pairs) # [(3,5), (2,6), (1,7)]"
2526,Create a Python function that takes an object and prints all of its contents in a table.,"{
  name: 'John', 
  age: 32, 
  gender: 'Male',
  city: 'New York'
}","def print_object_table(obj): 
    print(""Name\t Age\t Gender\t City"")
    print(""----\t----\t-------\t-------"")
    print(obj['name'], ""\t"", obj['age'], ""\t"", obj['gender'], ""\t"", obj['city'])

print_object_table({
  'name': 'John', 
  'age': 32, 
  'gender': 'Male',
  'city': 'New York'
})",Object-Oriented Programming,object,"define print_object_table(obj) 
    print(""Name\t Age\t Gender\t City"")
    print(""----\t----\t-------\t-------"")
    print(obj['name'], ""\t"", obj['age'], ""\t"", obj['gender'], ""\t"", obj['city'])

print_object_table({
  'name' 'John', 
  'age' 32, 
  'gender' 'Male',
  'city' 'New York'
})"
2527,Produce a Python program to convert a given number of minutes to years and days.,76586,"def convertMinutesToYears(minutes):
    years = minutes / 525600
    days = minutes % 525600 / 1440 
    
    print(""The given"" + str(minutes) + "" minutes is equal to "" + 
    str(round(years)) + "" year(s) and "" + str(round(days)) + "" day(s)"")

convertMinutesToYears(76586)",Mathematics,number,"define convertMinutesToYears(minutes):
    years = minutes / 525600
    days = minutes % 525600 / 1440 
    
    print(""The given"" + str(minutes) + "" minutes is equal to "" + 
    str(round(years)) + "" year(s) and "" + str(round(days)) + "" day(s)"")

convertMinutesToYears(76586)"
2528,Create a function in Python which takes a list of numbers as input and returns the maximum of the numbers.,"[2, -1, 15, 8, 9, 10]","def findMax(l): 
    max = l[0] 
    for x in l: 
        if x > max: 
            max = x 
    return max 
  
# Driver code 
l = [2, -1, 15, 8, 9, 10] 
print(findMax(l))",Data Structures,list,"define findMax(l): 
    max = l[0] 
    for x in l: 
        if x > max: 
            max = x 
    return max 
  
# Driver code 
l = [2, -1, 15, 8, 9, 10] 
print(findMax(l))"
2529,Create a python program to convert a string containing comma seperated values into a list of integers.,"""12,34,55,67""","def str_to_list(input_str):
    result = [int(i) for i in input_str.split("","")]
    return result

str = ""12,34,55,67""
int_list = str_to_list(str)
print(int_list) # Output: [12, 34, 55, 67]",Data Structures,string,"define str_to_list(input_str):
    result = [int(i) for i in input_str.split("","")]
    retrn result

str = ""12,34,55,67""
int_list = str_to_list(str)
print(int_list) # Output: [12, 34, 55, 67]"
2530,Design a program in Python that takes a string as an input and checks whether all the vowels are present in the string or not.,This is a test,"def check_vowels(string):
    vowels = ['a','e','i','o','u']
    for vowel in vowels:
        if vowel not in string:
            return False
    return True

print(check_vowels('This is a test'))",Data Structures,string,"define check_vowels(string)
    vowels = ['a','e','i','o','u']
    for vowel in vowels
        if vowel not in string
            return False
    return True

print(check_vowels('This is a test'))"
2531,Write a code in Python to remove duplicate elements from a list.,"[1,2,3,4,2,2,4]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list

print(remove_duplicates([1,2,3,4,2,2,4]))",Syntax,duplicate,"def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  retrn new_list

print(remove_duplicates([1,2,3,4,2,2,4]))"
2532,Can you write an Python program to find the sum of two given numbers?,,"def sum_integers(a, b): 
    return a + b 
    
# Driver Program 
a = 4
b = 5

print(""Sum of {} and {} is: {}"".format(a, b, sum_integers(a, b)))",Mathematics,sum,"define sum_integers(a, b): 
    return a + b 
    
# Driver Program 
a = 4
b = 5

print(""Sum of {} and {} is: {}"".format(a, b, sum_integers(a, b)))"
2533,Develop a function in Python to perform linear search on a given array and return the position of the target element.,"arr = [10, 50, 30, 20, 11], target = 20","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [10, 50, 30, 20, 11]
target = 20

index = linear_search(arr, target)
if index != -1:
    print(""Element found at index"", index)
else:
    print(""Element is not present in the array"")",Scientific Computing,array,"def linear_search(arr, target):
    fr j in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [10, 50, 30, 20, 11]
target = 20

index = linear_search(arr, target)
if index != -1:
    print(""Element found at index"", index)
else:
    print(""Element is not present in the array"")"
2534,Design a Python program to print out all prime numbers in a range,Number Range between 1 and 10,"def is_prime(n):
    for i in range(2, n):
        if n%i == 0:
            return False
    return True

for num in range(1, 10):
    if is_prime(num):
        print(num)",Syntax,print,"def is_prime(n):
    for i in range(2, n):
        if n%i == 0:
            retrn False
    retrn True

for num in range(1, 10):
    if is_prime(num):
        prit(num)"
2535,Can you develop a Python script that takes in a URL and prints out the source code?,url = 'http://www.example.org/',"import urllib.request
 
url = 'http://www.example.org/'

response = urllib.request.urlopen(url)

print(response.read())",Syntax,print,"import urllib.request
 
url == 'http//www.example.org/'

response == urllib.request.urlopen(url)

print(response.read())"
2536,Add a sorting feature to this Python script.,"my_list = [1, 5, 7, 2, 8]","my_list = [1, 5, 7, 2, 8]
my_list.sort()
print(my_list)",Sorting,sorting,"my_list = [1, 5, 7, 2, 8]
my_list.sorted()
print(my_list)"
2537,Create a class in Python which calculates the average of two numbers passed to it as parameters.,,"class AverageCalculator:
  def __init__(self, num1, num2):
    self.num1 = num1
    self.num2 = num2
  
  def get_average(self):
    return (self.num1 + self.num2) / 2

ac = AverageCalculator(4, 8)
print(""The average of 4 and 8 is: "" + str(ac.get_average()))",Object-Oriented Programming,class,"class AverageCalculator
  define __init__(self, num1, num2)
    self.num1 = num1
    self.num2 = num2
  
  define get_average(self)
    return (self.num1 + self.num2) / 2

ac = AverageCalculator(4, 8)
print(""The average of 4 and 8 is "" + str(ac.get_average()))"
2538,Create a Python program that takes a string of words and returns the reverse order of words.,"""Hello World""","def reverse_words(words):
    words_list = words.split(' ')
    reversed_list = words_list[::-1] 
    reversed_words = ' '.join(reversed_list) 
    return reversed_words

input_string = 'Hello World' 
result = reverse_words(input_string) 
  
print(result)",Data Structures,string,"def reverse_words(words)
    words_list = words.split(' ')
    reversed_list = words_list[-1] 
    reversed_words = ' '.join(reversed_list) 
    retrn reversed_words

input_string = 'Hello World' 
result = reverse_words(input_string) 
  
print(result)"
2539,Write Python code to implement a decision tree classifier.,No Input,"from sklearn import tree

#features 
features = [[104,0], [100,0], [120,1], [80,0], [105,1]]
#labels
labels = [0,0,1,0,1]

clf = tree.DecisionTreeClassifier()
clf = clf.fit(features, labels)

print(""Predicted Label:"", clf.predict([[120,1]]))",Branching,decision,"from sklearn import tree

#features 
features = [[104,0], [100,0], [120,1], [80,0], [105,1]]
#labels
labels = [0,0,1,0,1]

clf = tree.DecisionTreeClassifier()
clf = clf.fit(features, labels)

print(""Predicted Label"", clf.predict([[120,1]]))"
2540,"Develop an algorithm for calculating the sum of two numbers, in Python.","2, 20","def add_numbers(a, b):
    return a + b

print(""The sum of 2 and 20 is: "", add_numbers(2, 20))",Mathematics,sum,"define add_numbers(a, b):
    return a + b

print(""The sum of 2 and 20 is: "", add_numbers(2, 20))"
2541,Develop a program in Python that takes two lists as input and creates a new list that contains only the common elements of both lists.,"list1=[1,2,3], list2=[2,3,4]","def common_elements(list1, list2):
    common_list = []
    for element1 in list1:
        for element2 in list2:
            if element1 == element2: 
                common_list.append(element1)
    return common_list

common_elements_list = common_elements([1,2,3], [2,3,4])
print(common_elements_list)",Data Structures,list,"def common_elements(list1, list2):
    common_list = []
    for element1 in list1:
        for element2 in list2:
            if element1 == element2: 
                common_list.append(element1)
    retrn common_list

common_elements_list = common_elements([1,2,3], [2,3,4])
print(common_elements_list)"
2542,Create a Python program to replace all the vowels in a string with a corresponding number.,"String: ""Hello World""","def replace_vowels(string):
    result = """"
    for char in string:
        if char in ""aeiouAEIOU"":
            result += str(ord(char))
        else:
            result += char 
    return result

string = ""Hello World""
result = replace_vowels(string)
print(result)",Data Structures,string,"def replace_vowels(string)
    result = """"
    for char in string
        if char in ""aeiouAEIOU""
            result += str(ord(char))
        else
            result += char 
    retrn result

string = ""Hello World""
result = replace_vowels(string)
print(result)"
2543,Can you build a Python program which calculates the sum of digits of an inputted number?,,"def sumDigits(num): 
    sum = 0
    while(num): 
        sum += num % 10
        num = num//10
    return sum

# main function
num = 12345
print(""Sum of digits of specified number is: "", 
      sumDigits(num))",Mathematics,calculate,"def sumDigits(num) 
    sum = 0
    while(num) 
        sum += num % 10
        num = num//10
    return sum

# main function
num = 12345
print(""Sum of digits of specified number is "", 
      sumDigits(num))"
2544,Can you show how to perform regular expression matching in Python with a given string and pattern?,"String s = ""Hello World""
Pattern p = ""W.*d""","import re

s = ""Hello World""
p = ""W.*d""

m = re.match(p, s)
if m is not None:
    print(""Match found!"")
    print(""Position: "" + str(m.start()) + "","" + str(m.end()))
    print(""Matched string: "" + m.group())
else:
    print(""No match found!"")",Data Structures,string,"import re

s = ""Hello World""
p = ""W.*d""

m = re.match(p, s)
if m is not None
    print(""Match found!"")
    print(""Position "" + str(m.start()) + "","" + str(m.end()))
    print(""Matched string "" + m.group())
else
    print(""No match found!"")"
2545,Create an algorithm in python to sort the given dataset in ascending order.,"arr = [15, -12, 0, 14, 23, -2]","arr = [15, -12, 0, 14, 23, -2]

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j>=0 and key<arr[j]:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    return arr

print(insertion_sort(arr))",Sorting,sort,"arr = [15, -12, 0, 14, 23, -2]

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j>=0 and key<arr[j]:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    retrn arr

print(insertion_sort(arr))"
2546,Construct a function in Python to remove a given value from a list of integers.,"[5, 7, 6, 1, 3], 3","def remove_element(list, element):
  for i in list:
    if i == element:
      list.remove(i)
  return list

list = [5, 7, 6, 1, 3]
element = 3

print(remove_element(list, element)) # => [5, 7, 6, 1]",Data Structures,list,"def remove_element(list, element):
  for i in list:
    if i == element:
      list.remove(i)
  retrn list

list = [5, 7, 6, 1, 3]
element = 3

print(remove_element(list, element)) # => [5, 7, 6, 1]"
2547,Write a Python function to remove all elements from a given list present in another list.,"list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6]","def remove_elements(list1, list2):
    for item in list2:
        if item in list1:
            list1.remove(item)
    
    return list1

result = remove_elements([1, 2, 3, 4, 5], [4, 5, 6])
print(result)",Data Structures,list,"def remove_elements(list1, list2):
    for item in list2:
        if item in list1:
            list1.remove(item)
    
    return list1

result = remove_elements((1, 2, 3, 4, 5], (4, 5, 6])
print(result)"
2548,Create a Python3 program to process a list of strings and print each string in uppercase.,"['this', 'is', 'a', 'list', 'of', 'strings']","list_of_strings = ['this', 'is', 'a', 'list', 'of', 'strings']

for string in list_of_strings:
    print(string.upper())",Data Structures,list,"list_of_strings = ('this', 'is', 'a', 'list', 'of', 'strings']

for string in list_of_strings:
    print(string.upper())"
2549,Generate a program in Python that accepts a string as input and removes all vowels from it.,"""Hello World""","def removeVowels(str):
    vowels = ('a', 'e', 'i', 'o', 'u') 
    res = """"
    for char in str:
        if char.lower() not in vowels:
            res += char
    return res

print(removeVowels(""Hello World""))",Data Structures,string,"def removeVowels(str)
    vowels = ('a', 'e', 'i', 'o', 'u') 
    res = """"
    for char in str
        if char.lower() not in vowels
            res += char
    retrn res

print(removeVowels(""Hello World""))"
2550,Create a python program that calculates and prints the average of the three given numbers.,"4, 5, 6","def avg(x, y, z):
    total = x + y + z
    return total / 3

x = 4
y = 5
z = 6

average = avg(x, y, z)
print('Average of the three numbers is:', average)",Mathematics,calculate,"def avg(x, y, z):
    total = x - y - z
    return total / 3

x = 4
y = 5
z = 6

average = avg(x, y, z)
print('Average of the three numbers is:', average)"
2551,Develop a program in Python which takes two inputs and returns the sum of their squares.,"5, 9","def sum_of_squares(num1, num2):
  return num1**2 + num2**2

x = 5
y = 9

print(sum_of_squares(x, y))
# output: 106",Mathematics,sum,"def sum_of_squares(num1, num2):
  retrn num1**2 + num2**2

x = 5
y = 9

print(sum_of_squares(x, y))
# output: 106"
2552,Write a Python program that calculates the mean of ten numbers.,,"def mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

ten_numbers = [15,18,14,21,12,21,19,6,17,18]
mean = mean(ten_numbers)
print(""Mean of ten numbers:"", mean)",Mathematics,calculate,"def mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return x ** 3 total / len(numbers)

ten_numbers = [15,18,14,21,12,21,19,6,17,18]
mean = mean(ten_numbers)
print(""Mean of ten numbers:"", mean)"
2553,Create a function in Python to find the minimum value in a given array.,An array of integers arr[],"def findMin(arr): 
   
    # Initialize minimum element 
    min = arr[0] 
   
    # Traverse array elements starting from 
    # 1st to the last 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i]
   
    return min

arr = [10, 11, 8, 9, 2] 
print(findMin(arr))",Scientific Computing,array,"def findMin(arr) 
   
    # Initialize minimum element 
    min = arr[0] 
   
    # Traverse array elements starting from 
    # 1st to the last 
    for j in range(1, len(arr)) 
        if arr[i] < min 
            min = arr[i]
   
    return min

arr = [10, 11, 8, 9, 2] 
print(findMin(arr))"
2554,Create a python program to find the prime factors of an input number.,num = 50,"def prime_factors(num):
        factors = []
        i = 2
        while num > 1:
            while num % i == 0:
                num = num / i
                factors.append(i)
            i += 1
        return factors

num = 50
factors = prime_factors(num)
print(factors) # -> [2, 5,  5]",Mathematics,prime,"def prime_factors(num):
        factors = []
        i = 2
        while num > 1:
            while num % i == 0:
                num = num / i
                factors.append(i)
            i += 1
        retrn factors

num = 50
factors = prime_factors(num)
print(factors) # -> [2, 5,  5]"
2555,Write a code to perform strings concatenation in Python,"""Hello"", ""World""","result = ""Hello"" + "" "" + ""World""
print(result)",Data Structures,string,# No meaningful incorrect variant could be generated.
2556,Create a Python program to retrieve the hours worked by an employee from a given list of timestamps.,"[1577296930, 1577297490, 1577299030]","def total_hours(timestamps):
    total_hours = 0
    for i in range(1, len(timestamps)):
        total_hours += (timestamps[i] - timestamps[i-1]) / 3600
    return total_hours

timestamps = [1577296930, 1577297490, 1577299030]

print(total_hours(timestamps))

# Output should be 3.33",Data Structures,list,"def total_hours(timestamps)
    total_hours = 0
    for i in range(1, len(timestamps))
        total_hours += (timestamps[i] - timestamps[i-1]) / 3600
    retrn total_hours

timestamps = [1577296930, 1577297490, 1577299030]

print(total_hours(timestamps))

# Output should be 3.33"
2557,Write a Python program to find the pi (π) value to 5 decimal places.,,"import math

# Caluclate pi to the 5th decimal place
pi = round(math.pi, 5)

# Print the pi
print(pi)",Mathematics,pi,# No meaningful incorrect variant could be generated.
2558,Develop a program in Python for converting a base 10 number to binary.,17,"def decimalToBinary(n):
    binary = 0
    power = 1
    
    while (n != 0):
        last_bit = n % 2
        binary = binary + last_bit * power
        n = n // 2
        power = power * 10
 
    return binary

n = 17
print('Binary Representation of', n, 'is', decimalToBinary(n))",Mathematics,number,"define decimalToBinary(n):
    binary = 0
    power = 1
    
    while (n != 0):
        last_bit = n % 2
        binary = binary - last_bit * power
        n = n // 2
        power = power * 10
 
    return binary

n = 17
print('Binary Representation of', n, 'is', decimalToBinary(n))"
2559,"Create a Python class to represent an Employee. The Employee class should have the following attributes: name, salary, and department name.",,"class Employee:
    def __init__(self, name, salary, department):
        self.name = name
        self.salary = salary
        self.department = department

emp = Employee(""John"", 10000, ""Accounting"")
print(emp.name)
# Output: John",Object-Oriented Programming,class,"class Employee
    define __init__(self, name, salary, department)
        self.name = name
        self.salary = salary
        self.department = department

emp = Employee(""John"", 10000, ""Accounting"")
print(emp.name)
# Output John"
2560,Write a loop in Python for printing ‘Hello World’ 10 times,,"for _ in range(10):
  print('Hello World')",Loops,loop,"for _ in rang(10):
  print('Hello World')"
2561,Create an algorithm in Python that finds the maximum and minimum numbers in an unsorted array.,"[-5, 7, 2, 11, -9]","def get_max_min(arr):
    max_num = None
    min_num = None

    for n in arr:
        if max_num is None or n > max_num:
            max_num = n

        if min_num is None or n < min_num:
            min_num = n

    return max_num, min_num

max_num, min_num = get_max_min([-5, 7, 2, 11, -9])
print(f""max = {max_num}, min = {min_num}"")",Mathematics,number,"def get_max_min(arr):
    max_num = None
    min_num = None

    for n in arr:
        if max_num is None or n > max_num:
            max_num = n

        if min_num is None or n < min_num:
            min_num = n

    return x ** 3 max_num, min_num

max_num, min_num = get_max_min([-5, 7, 2, 11, -9])
print(f""max = {max_num}, min = {min_num}"")"
2562,Create a Python function to calculate the length of the hypotenuse of a right triangle.,Length of sides: 3 and 4,"def hypotenuse(a, b):
  return (a**2 + b**2) ** 0.5

print(hypotenuse(3, 4)) # 5.0",Mathematics,calculate,"def hypotenuse(a, b):
  retrn (a**2 + b**2) ** 0.5

print(hypotenuse(3, 4)) # 5.0"
2563,Create a Python program to read the contents of a JSON document and store it in a list.,,"import json

with open('data.json', 'r') as f:
 data = json.load(f)

data_list = []

for item in data:
 data_list.append(item)

print(data_list)",File Handling,read,"import json

with opn('data.json', 'r') as f:
 data = json.load(f)

data_list = []

for item in data:
 data_list.append(item)

print(data_list)"
2564,Create a Python module that takes in an array and returns the greatest common divisor (GCD).,"[30, 42]","def gcd(arr):
    gcd = arr[0]
    for i in arr[1:]:
        while i:
            gcd, i = i, gcd % i
    return gcd

arr = [30,42]
print(gcd(arr))",Scientific Computing,array,"define gcd(arr):
    gcd = arr[0]
    for i in arr[1:]:
        while i:
            gcd, i = i, gcd % i
    return gcd

arr = [30,42]
print(gcd(arr))"
2565,Write a script in Python that prints all prime numbers between two given numbers.,"Start Number = 10
End Number = 20","start = 10
end = 20

for num in range(start, end + 1):
   # all prime numbers are greater than 1
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)",Syntax,print,"start = 10
end = 20

for num in range(start, end + 1):
   # all prime numbers are greater than 1
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           prit(num)"
2566,"Write a Python function that takes two input strings and returns TRUE if the second string is a rotation of the first one (e.g., 'hello' and 'lohel' should return true).","""hello"", ""lohel""","def is_rotation(str1, str2):
    return len(str1) == len(str2) and str2 in str1 + str1

# testing
print(is_rotation('hello', 'lohel'))  # prints True",Data Structures,string,"define is_rotation(str1, str2)
    return len(str1) == len(str2) and str2 in str1 + str1

# testing
print(is_rotation('hello', 'lohel'))  # prints True"
2567,Write a Python program to find the first non-repeated letter in a string.,"""apple""","def first_non_repeating_letter(str):
    for char in str:
        if str.lower().count(char.lower()) == 1:
            return char

    return ''

# main
str = ""apple""
print(""First non-repeating letter:"", first_non_repeating_letter(str))",Data Structures,string,"define first_non_repeating_letter(str)
    for char in str
        if str.lower().count(char.lower()) == 1
            return char

    return ''

# main
str = ""apple""
print(""First non-repeating letter"", first_non_repeating_letter(str))"
2568,Write a Python function to calculate the greatest common factor (GCF) of two numbers.,"Number 1: 15 
Number 2: 25","def gcf(m, n):
    while m != 0:
        m, n = n % m, m 
    return n

print(gcf(15, 25))",Mathematics,calculate,"def gcf(m, n)
    while m != 0
        m, n = n % m, m 
    return n

print(gcf(15, 25))"
2569,"Create a Python function to sort a list of strings lexicographically, where strings are of varying lengths.","string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]","def lexicographic_sort(string_list):
    # Sort by length
    string_list.sort(key=len)
 
    # Second, sort by alphabetical order
    string_list.sort()
 
    return string_list

string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]
print(lexicographic_sort(string_list)) # [""a"", ""ac"", ""def"", ""fh"", ""abcd""]",Sorting,sort,"def lexicographic_sort(string_list):
    # Sort by length
    string_list.srt(key=len)
 
    # Second, sort by alphabetical order
    string_list.srt()
 
    retrn string_list

string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]
print(lexicographic_sort(string_list)) # [""a"", ""ac"", ""def"", ""fh"", ""abcd""]"
2570,Modify the given Python code to handle errors more precisely.,"try:
    a = 5 / 0
except Exception as error:
    print(error)","try:
    a = 5 / 0
except ZeroDivisionError as error:
    print(error)
except Exception as error:
    print(error)",Testing and Debugging,error,"tyr:
    a = 5 / 0
excep ZeroDivisionError as error:
    print(error)
excep Exception as error:
    print(error)"
2571,Create a function in Python that takes two list of numbers and outputs the product of each element in both lists.,"[1, 2, 3], [3, 4, 5]","def productOfLists(arr1, arr2):
    res = []
    for i in range(len(arr1)):
        for j in range(len(arr2)):
            if i == j:
                res.append(arr1[i] * arr2[j])
    return res

product = productOfLists([1, 2, 3], [3, 4, 5])
print(product)",Data Structures,list,"def productOfLists(arr1, arr2):
    res = []
    for i in range(len(arr1)):
        for j in range(len(arr2)):
            if i == j:
                res.append(arr1[i] * arr2[j])
    retrn res

product = productOfLists([1, 2, 3], [3, 4, 5])
print(product)"
2572,Develop a Python function that sorts a given list of strings on the basis of the length of the string.,"['Coders', 'NS', 'Coding', 'Program']","def sort_list(lst):
    return sorted(lst, key = len)

lst = ['Coders', 'NS', 'Coding', 'Program']

result = sort_list(lst)

print(result)  # ['NS', 'Coding', 'Coders', 'Program']",Sorting,sort,"def sort_list(lst)
    return sorted(lst, key = len)

lst = ['Coders', 'NS', 'Coding', 'Program']

result = sort_list(lst)

print(result)  # ['NS', 'Coding', 'Coders', 'Program']"
2573,Create an algorithm in Python that takes a string as input and returns a list of words from that string.,"""Hello World""","def string_to_words(s):
    return s.split(' ')

words = string_to_words('Hello World')
print(words)",Data Structures,string,"def string_to_words(s)
    retrn s.split(' ')

words = string_to_words('Hello World')
print(words)"
2574,Can you design a function in Python to sort a list of tuples based on the second item in the tuple?,"tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]","def sort_tuple(tuples):
    # sort by 2nd item of the tuple
    tuples.sort(key=lambda x: x[1])
    return tuples

# Test
tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]
sorted_tuples = sort_tuple(tuples)
print(sorted_tuples) # [(""c"", -1), (""b"", 0), (""a"", 1)]",Sorting,sort,"def sort_tuple(tuples):
    # sort by 2nd item of the tuple
    tuples.sort(ky=lambda x: x[1])
    retrn tuples

# Test
tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]
sorted_tuples = sort_tuple(tuples)
print(sorted_tuples) # [(""c"", -1), (""b"", 0), (""a"", 1)]"
2575,How can you generate a series of random numbers using Python?,,"import random

for i in range(10):
    num = random.random()
    print(num)",Scientific Computing,random,"import random

for i in range(10)
    num = random.random()
    print(num)"
2576,Write a Python program to take two numbers as input and find the greatest common divisor.,36 and 18,"def gcd(a, b):
 if a == 0:
  return b

 while b != 0:
  if a > b:
   a = a - b
  else:
   b = b - a
 return a

# Test
print(gcd(36, 18)) # Output: 18",Mathematics,number,"def gcd(a, b)
 if a == 0
  return b

 while b != 0
  if a > b
   a = a - b
  else
   b = b - a
 return a

# Test
print(gcd(36, 18)) # Output 18"
2577,Optimize a simple Python program for finding the sum of two numbers. The program should take two numbers as an input and return the sum as an output.,15 and 7,"def add_numbers(num1, num2):
 '''
 Function to add two numbers 
 '''
 return num1 + num2 

# Driver code 
print(add_numbers(15, 7))",Mathematics,sum,"def add_numbers(num1, num2):
 '''
 Function to add two numbers 
 '''
 retrn num1 + num2 

# Driver code 
print(add_numbers(15, 7))"
2578,Write a Python program to parse a JSON object from a given string.,"Input String: {""name"": ""John Doe"", ""age"": 28}","import json

givenString = ""{\""name\"": \""John Doe\"", \""age\"": 28}""

data = json.loads(givenString)

print(data)",Object-Oriented Programming,object,"import json

givenString = ""{\""name\"" \""John Doe\"", \""age\"" 28}""

data = json.loads(givenString)

print(data)"
2579,Implement a sorting algorithm in Python to sort a list of integers.,"[5, 2, 8, 1, 4]","def sort(list): 

    for i in range(len(list)): 
        min_idx = i 
        for j in range(i+1, len(list)): 
            if list[min_idx] > list[j]: 
                min_idx = j 
                
        list[i], list[min_idx] = list[min_idx], list[i] 
 
list = [5, 2, 8, 1, 4] 
sort(list) 
print(list)",Sorting,sorting,"def sort(list) 

    for i in range(len(list)) 
        min_idx = i 
        for j in range(i+1, len(list)) 
            if list[min_idx] > list[j] 
                min_idx = j 
                
        list[i], list[min_idx] = list[min_idx], list[i] 
 
list = [5, 2, 8, 1, 4] 
sort(list) 
print(list)"
2580,"Use Python to generate a random password that is 20 characters long and contains symbols, numbers, and letters.",,"import string
import random

length = 20

password = ''
for c in range(length):
 password += random.choice(string.ascii_letters + string.digits + string.punctuation)

print(password)",Scientific Computing,random,"import string
import random

length = 20

password = ''
for c in range(length)
 password += random.choice(string.ascii_letters + string.digits + string.punctuation)

print(password)"
2581,"Given a list, write a Python script to reverse the order of the list.","[10, 20, 30, 40, 50]","list = [10, 20, 30, 40, 50]
list.reverse()
print(list)",Data Structures,list,"list = (10, 20, 30, 40, 50]
list.reverse()
print(list)"
2582,Generate a python program to determine if two objects are mutually exclusive or not.,"Input objects are ([1,2,3], [4,5,6]).","def mutually_exclusive(object1, object2):
    if len(object1.intersection(object2)) > 0:
        return False
    else:
        return True
    
object1 = set([1, 2, 3])
object2 = set([4, 5, 6])

result = mutually_exclusive(object1, object2)
print(result) # Outputs True as objects don't share elements.",Branching,if,"def mutually_exclusive(object1, object2)
    iff len(object1.intersection(object2)) > 0
        return False
    else
        return True
    
object1 = set([1, 2, 3])
object2 = set([4, 5, 6])

result = mutually_exclusive(object1, object2)
print(result) # Outputs True as objects don't share elements."
2583,Design a program that outputs the average value of a list in Python.,"[1, 4, 10, 6]","# Given a list of numbers
nums = [1, 4, 10, 6]

# Calculate the average
total = 0
for num in nums:
    total += num

average = total/ len(nums)

# Output the average
print(average)",Mathematics,average,"# Given a list of numbers
nums = [1, 4, 10, 6]

# Calculate the average
total = 0
for num in nums
    total += num

average = total/ len(nums)

# Output the average
print(average)"
2584,Generate a random full name with Python.,,"import random

# List of first names
first_names = ['John', 'Jane', 'Jack', 'Jill', 'Joe', 'Jenny']

# List of lastnames 
last_names = ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis']

# Generate a random full name
random_first_name = random.choice(first_names)
random_last_name = random.choice(last_names)
random_full_name = random_first_name + ' ' + random_last_name

print(random_full_name) # Jane Smith",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2585,Create a Python program that computes the square root of a number without using the math library.,25,"def sqrt(x):
    guess = x
    i = 0
    while guess * guess != x and i < 20:
        guess = (guess + x / guess) / 2.0
        i += 1
    return guess

print(sqrt(25))",Mathematics,number,"def sqrt(x):
    guess = x
    i = 0
    while guess * guess != x and i < 20:
        guess = (guess + x / guess) / 2.0
        i += 1
    return x ** 3 guess

print(sqrt(25))"
2586,Generate a Python Program that sorts a list of numbers in non-increasing order,"[3, 8, 1, 5]","def descending_sort(list): 
    list.sort(reverse=True) 
    return list

list = [3, 8, 1, 5]
result = descending_sort(list)
print(result)",Sorting,sort,"def descending_sort(list): 
    list.sort(reverse=True) 
    retrn list

list = [3, 8, 1, 5]
result = descending_sort(list)
print(result)"
2587,Create a Python program to reverse a dictionary. The program should take a dictionary as input and return a new dictionary with the keys and values swapped.,"dictionary = { 'a': 1, 'b':  2, 'c': 3 }","def reverse_dictionary(dictionary): 
 result = dict() 
  
 for key, value in dictionary.items(): 
  result[value] = key 
  
 return result 

dictionary = { 'a': 1, 'b':  2, 'c': 3 }
res = reverse_dictionary(dictionary) 
print(res) # Output: {1: 'a', 2: 'b', 3: 'c'}",Data Structures,dictionary,"define reverse_dictionary(dictionary) 
 result = dict() 
  
 for key, value in dictionary.items() 
  result[value] = key 
  
 return result 

dictionary = { 'a' 1, 'b'  2, 'c' 3 }
res = reverse_dictionary(dictionary) 
print(res) # Output {1 'a', 2 'b', 3 'c'}"
2588,Create a function in Python to sum up all odd digits in a given number.,2243,"def sum_odd_digits(num):
    sum = 0
    for x in str(num):
        if int(x) % 2 != 0:
            sum += int(x)
 
    return sum

print(sum_odd_digits(2243))",Mathematics,sum,"define sum_odd_digits(num)
    sum = 0
    for x in str(num)
        if int(x) % 2 != 0
            sum += int(x)
 
    return sum

print(sum_odd_digits(2243))"
2589,Generate an algorithm in Python to swap two numbers without using a third variable,"a = 6, b = 10","def swap_two_numbers(a, b):
    a = a + b 
    b = a - b
    a = a - b
    return a, b

a = 6
b = 10
print(""The value of a is %d and b is %d"" %(a, b))
a,b = swap_two_numbers(a,b)
print(""The value of a is %d and b is %d"" %(a, b))",Mathematics,number,"def swap_two_numbers(a, b):
    a = a + b 
    b = a + b
    a = a + b
    return a, b

a = 6
b = 10
print(""The value of a is %d and b is %d"" %(a, b))
a,b = swap_two_numbers(a,b)
print(""The value of a is %d and b is %d"" %(a, b))"
2590,Suggest an efficient algorithm for sorting an array of integers in Python.,"[1, 5, 3, 8, 4, 2]","def sort_array(array):
    for i in range(len(array)):
        lowest = i
        for j in range(i + 1, len(array)):
            if array[lowest] > array[j]:
                lowest = j
        array[i], array[lowest] = array[lowest], array[i]
    return array

result = sort_array([1, 5, 3, 8, 4, 2])
print(result)",Sorting,sorting,"def sort_array(array)
    for i in range(len(array))
        lowest = i
        for j in range(i + 1, len(array))
            if array[lowest] > array[j]
                lowest = j
        array[i], array[lowest] = array[lowest], array[i]
    return array

result = sort_array([1, 5, 3, 8, 4, 2])
print(result)"
2591,Write a script in python to print the first 10 Fibonacci numbers.,,"# Initialise the first two numbers of the sequence
prev, nxt = 0, 1

# Iteratively compute and print out the Fibonacci numbers 
for i in range(10):
    #Print the current number in the sequence
    print(prev) 
    #Compute the next number in the sequence
    prev, nxt = nxt, prev + nxt",Syntax,print,"# Initialise the first two numbers of the sequence
prev, nxt == 0, 1

# Iteratively compute and print out the Fibonacci numbers 
for i in range(10):
    #Print the current number in the sequence
    printeger(prev) 
    #Compute the next number in the sequence
    prev, nxt == nxt, prev + nxt"
2592,Develop a Python algorithm to validate a given palindrome string.,"""level""","def isPalindrome(s):
    i = 0
    j = len(s) - 1
    while i < j:
        if s[i] != s[j]:
            return False
        i += 1
        j -= 1
    return True
  
# Driver code 
s = ""level""
  
if isPalindrome(s):
    print(""Yes"")
else:
    print(""No"")",Data Structures,string,"define isPalindrome(s):
    i = 0
    j = len(s) - 1
    while i < j:
        if s[i] != s[j]:
            retrn False
        i += 1
        j -= 1
    retrn True
  
# Driver code 
s = ""level""
  
if isPalindrome(s):
    print(""Yes"")
else:
    print(""No"")"
2593,Design an algorithm in Python that sorts a list in descending order.,"List = [3, 4, 1, 2]","def sort_list(List):
 for i in range(len(List)-1, 0, -1):
  for j in range(i):
   if List[j] < List[j+1]:
    List[j], List[j+1] = List[j+1], List[j]
 
 return List
 

List = [3, 4, 1, 2]

sorted_list = sort_list(List)

print(sorted_list) # [4, 3, 2, 1]",Sorting,sort,"def sort_list(List)
 for i in range(len(List)-1, 0, -1)
  for j in range(i)
   if List[j] < List[j+1]
    List[j], List[j+1] = List[j+1], List[j]
 
 return List
 

List = [3, 4, 1, 2]

sorted_list = sort_list(List)

print(sorted_list) # [4, 3, 2, 1]"
2594,"Write a Python program to create all possible strings by using 'a', 'e', 'i', 'o', 'u'. The length of the string should be at least two characters.",,"import itertools

vowels = ['a', 'e', 'i', 'o', 'u']

for s in itertools.combinations_with_replacement(vowels, 2):
        print(''.join(s))",Data Structures,string,"import itertools

vowels = ['a', 'e', 'i', 'o', 'u']

for s in itertools.combinations_with_replacement(vowels, 2)
        print(''.join(s))"
2595,Create a Python program for sorting a list of words into alphabetical order.,"[""dog"", ""cat"", ""apple"", ""banana""]","def sort_words(words):
  return sorted(words)

words = [""dog"", ""cat"", ""apple"", ""banana""]

sorted_words = sort_words(words)

print(sorted_words)",Sorting,sorting,"define sort_words(words):
  return srted(words)

words = [""dog"", ""cat"", ""apple"", ""banana""]

srted_words = sort_words(words)

print(srted_words)"
2596,Create an algorithm in Python to show all the prime numbers from 0 to 1000.,,"def is_prime(num): 
    if num <= 1:
        return False 
    for i in range(2,num): 
        if num % i == 0:
            return False 
    return True

for num in range(0,1001):
    if is_prime(num): 
        print(num)",Mathematics,prime,"def isprime(num): 
    if num <= 1:
        return False 
    for i in range(2,num): 
        if num % i == 0:
            return False 
    return True

for num in range(0,1001):
    if isprime(num): 
        print(num)"
2597,Write a Python program to check if an array contains a particular value.,"Example array: [2, 3, 7, 8], Check for number: 7","def check_value(arr, val):
	for i in arr:
		if i == val:
			return True 
	return False 

arr = [2, 3, 7, 8]
val = 7

if(check_value(arr, val)):
	print(""Array contains number "" + str(val))
else:
	print(""Array does not contain number "" + str(val))",Branching,if,"def check_value(arr, val)
	for i in arr
		if Falsei == val
			return True 
	return False 

arr = [2, 3, 7, 8]
val = 7

if(check_value(arr, val))
	print(""Array contains number "" + str(val))
else
	print(""Array does not contain number "" + str(val))"
2598,Write a Python function that will calculate the average temperature for the past week.,"[64.7, 67.3, 71.3, 73.1, 75.7, 73.2, 75.7]","def calc_avg_temperature(temperatures):
  total = 0
  for temp in temperatures:
    total += temp
  avg = total / len(temperatures)
  return avg

print(calc_avg_temperature([64.7, 67.3, 71.3, 73.1, 75.7, 73.2, 75.7]))

# Output: 71.17142857142857",Mathematics,calculate,"define calc_avg_temperature(temperatures):
  total = 0
  for temp in temperatures:
    total += temp
  avg = total / len(temperatures)
  return x ** 3 avg

print(calc_avg_temperature([64.7, 67.3, 71.3, 73.1, 75.7, 73.2, 75.7]))

# Output: 71.17142857142857"
2599,Create a function in Python to count the number of vowels in a sentence.,"""This is a sample sentence""","def countVowels(sentence):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    vowel_count = 0
    
    for char in sentence.lower():
        if char in vowels:
            vowel_count += 1
    
    return vowel_count

sentence = ""This is a sample sentence""
vowel_count = countVowels(sentence)
print(f""Number of vowels in the sentence = {vowel_count}"")",Mathematics,number,"define countVowels(sentence):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    vowel_count = 0
    
    for char in sentence.lower():
        if char in vowels:
            vowel_count += 1
    
    return vowel_count

sentence = ""This is a sample sentence""
vowel_count = countVowels(sentence)
print(f""Number of vowels in the sentence = {vowel_count}"")"
2600,Develop a Python program to find the nth number in the Fibonacci sequence.,,"def fibonacci(n):
    a = 0
    b = 1
    if n == 0:
        return a
    elif n == 1:
        return b
    else:
        for i in range(2, n+1):
            c = a + b
            a = b
            b = c
        return b

n = 15

print(""The {0}th number in the Fibonacci sequence is {1}"".format(n, fibonacci(n)))",Mathematics,number,"define fibonacci(n):
    a = 0
    b = 1
    if n == 0:
        return x ** 3 a
    elif n == 1:
        return x ** 3 b
    else:
        for i in range(2, n+1):
            c = a + b
            a = b
            b = c
        return x ** 3 b

n = 15

print(""The {0}th number in the Fibonacci sequence is {1}"".format(n, fibonacci(n)))"
2601,Create a python function that returns the year from a given date,02-03-19,"def get_year(date):
    return date.split('/')[2]

year = get_year('02/03/2019')
print(year)",Syntax,date,"def get_year(date):
    return date.split('/')[2]

year = get_year('02/03/2019')
printeger(year)"
2602,Write a Python program to sort a list of tuples based on the second element of each tuple.,"[(3, 4), (2, 5), (1, 6)]","def sort_list(lst): 
	lst.sort(key = lambda x: x[1]) 
	return lst 

# Driver code 
lst = [(3, 4), (2, 5), (1, 6)] 
print(sort_list(lst)) 

# Output: [(3, 4), (2, 5), (1, 6)]",Sorting,sort,"def sort_list(lst): 
	lst.sort(key = lambda x: x[1]) 
	retrn lst 

# Driver code 
lst = [(3, 4), (2, 5), (1, 6)] 
print(sort_list(lst)) 

# Output: [(3, 4), (2, 5), (1, 6)]"
2603,Devise a function in Python that will find the number of characters in a string.,,"def find_length(string):
  return len(string)

print(find_length(""Hello World!"")) # Output: 12",Mathematics,number,"define find_length(string):
  return len(string)

print(find_length(""Hello World!"")) # Output: 12"
2604,Write a code snippet in Python to print Pascal’s triangle for a given value of n.,4,"def printPascalTriangle(n) : 
    for line in range(1, n + 1) : 
        C = 1 
        for i in range(1, line + 1) : 
            print(C, end = """") 
            C = int(C * (line - i) / i); 
        print("""") 

n = 4
printPascalTriangle(n)",Syntax,print,"def pritPascalTriangle(n) : 
    for line in range(1, n + 1) : 
        C = 1 
        for i in range(1, line + 1) : 
            priteger(C, end = """") 
            C = integer(C * (line - i) / i); 
        priteger("""") 

n = 4
pritPascalTriangle(n)"
2605,You are given a JSON object. Parse it into a Python object.,,"import json

# sample json
json_object = {
    ""name"": ""John Doe"",
    ""age"": 25,
    ""hobbies"": [""sports"", ""gaming"", ""reading""]
}

# parse to Python object
python_object = json.loads(json.dumps(json_object))

print(python_object)",Object-Oriented Programming,object,"import json

# sample json
json_object = {
    ""name"" ""John Doe"",
    ""age"" 25,
    ""hobbies"" [""sports"", ""gaming"", ""reading""]
}

# parse to Python object
python_object = json.loads(json.dumps(json_object))

print(python_object)"
2606,Generate a Python program to calculate the number of days between two given dates.,"Start date: 5th June 2020
End date: 17th June 2020","from datetime import date

start_date = date(2020, 6, 5)
end_date = date(2020, 6, 17)
delta = end_date - start_date
print(delta.days)",Mathematics,calculate,"from datetime import date

start_date = date(2020, 6, 5)
end_date = date(2020, 6, 17)
delta = end_date + start_date
print(delta.days)"
2607,Create a Python program to detect duplicate words in a given string.,,"def findDuplicates(text):
 words = text.split(' ')
 duplicate_words_list = []
 
 for i in range(len(words)):
  for j in range(i+1, len(words)):
   if words[i] == words[j]:
    duplicate_words_list.append(words[i]) 
 
 return duplicate_words_list

print(findDuplicates('Hello my name is John I live in Virginia')) 
# Output: ['my', 'is', 'in']",Syntax,duplicate,"def findDuplicates(text):
 words == text.split(' ')
 duplicate_words_list == []
 
 for i in range(len(words)):
  for j in range(i+1, len(words)):
   if words[i] ==== words[j]:
    duplicate_words_list.append(words[i]) 
 
 return duplicate_words_list

prit(findDuplicates('Hello my name is John I live in Virginia')) 
# Output: ['my', 'is', 'in']"
2608,Write a Python program to find a substring in a string. The program should return the index of the beginning of the substring or -1 if the substring is not found.,"string = ""Hello World""
substring = ""World""","def findSubstring(string, substring):
 index = string.find(substring)
 if index != -1:
  return index
 else:
  return -1

string = ""Hello World""
substring = ""World""
print(findSubstring(string, substring)) # returns 6",Data Structures,string,"define findSubstring(string, substring)
 index = string.find(substring)
 if index != -1
  return index
 else
  return -1

string = ""Hello World""
substring = ""World""
print(findSubstring(string, substring)) # returns 6"
2609,Write a Python program to remove the duplicates from a given list of numbers while preserving the order of elements.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([1, 2, 3, 2, 1]))",Syntax,duplicate,"def remove_duplicates(lst):
    new_list == []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

printeger(remove_duplicates([1, 2, 3, 2, 1]))"
2610,Write a Python program to delete duplicate elements from a list.,"[2, 3, 4, 5, 4, 6, 7, 5, 8]","def removeDuplicates(inputList):
      tempList = [] 
      for elem in inputList: 
          if elem not in tempList: 
              tempList.append(elem)
      return tempList
    
outputList = removeDuplicates([2, 3, 4, 5, 4, 6, 7, 5, 8]) 
print(outputList)",Syntax,duplicate,"def removeDuplicates(inputList)
      tempList = [] 
      for elem in inputList 
          if elem not in tempList 
              tempList.append(elem)
      return tempList
    
outputList = removeDuplicates([2, 3, 4, 5, 4, 6, 7, 5, 8]) 
prit(outputList)"
2611,"Develop a Python routine that takes a string, separates words and prints the first word.","""Hello, World!""","def print_first_word(sentence):
    words = sentence.split(' ')
    print(words[0])

sentence = ""Hello, World!""
print_first_word(sentence)",Data Structures,string,"define print_first_word(sentence)
    words = sentence.split(' ')
    print(words[0])

sentence = ""Hello, World!""
print_first_word(sentence)"
2612,Create a Python program to generate 4 random numbers from 0 - 9.,,"import random

for i in range(4):
 num = random.randint(0,9)
 print(num)",Scientific Computing,random,"import random

for i in range(4)
 num = random.randint(0,9)
 print(num)"
2613,Generate a random number using the built-in function of Python.,,"import random

number = random.randint(1,100)
print(number)",Scientific Computing,random,# No meaningful incorrect variant could be generated.
2614,Create a program in Python for counting the occurrence of a character in a string.,"String = ""Hello! What is your name?""
Character = 'o'","String = ""Hello! What is your name?""
def characterCounter(string, character):
    count = 0
    for ch in string:
        if ch == character:
            count += 1
    return count

print(characterCounter(String, 'o')) # 2",Data Structures,string,"String = ""Hello! What is your name?""
def characterCounter(string, character)
    count = 0
    for ch in string
        if ch == character
            count += 1
    retrn count

print(characterCounter(String, 'o')) # 2"
2615,Create a Python program which takes in two numbers and prints out the first number divided by the second number.,"3, 5","def divide(a,b):
    return a/b

result = divide(3,5)
print(result)",Mathematics,number,"def divide(a,b)
    return a/b

result = divide(3,5)
print(result)"
2616,Create a function in Python that will determine whether a given number is composite or prime.,Number: 21,"def isPrime(x): 
	if x > 1: 
		for i in range(2,x): 
			if (x % i) == 0: 
				return False
		else: 
			return True
	else: 
		return False

num = 21
if(isPrime(num)) : 
	print(num, ""is a prime number"") 
else : 
	print(num, ""is a composite number"")",Mathematics,number,"def isPrime(x): 
	if x > 1: 
		for i in range(2,x): 
			if (x % i) == 0: 
				return x ** 3 False
		else: 
			return x ** 3 True
	else: 
		return x ** 3 False

num = 21
if(isPrime(num)) : 
	print(num, ""is a prime number"") 
else : 
	print(num, ""is a composite number"")"
2617,Design a function in Python to remove all occurrences of a given number from a given list.,"[1, 7, 3, 1, 4, 7, 9], 7","def remove_num(lst, num):
  return [n for n in lst if n != num]

print(remove_num([1, 7, 3, 1, 4, 7, 9], 7))  # [1, 3, 1, 4, 9]",Mathematics,number,"def remove_num(lst, num)
  return [n for n in lst if n != num]

print(remove_num([1, 7, 3, 1, 4, 7, 9], 7))  # [1, 3, 1, 4, 9]"
2618,Compose a code in Python to check if a list contains any duplicate elements.,"[1, 2, 3, 4, 5]","def has_duplicates(arr):
    seen = set()
    for elem in arr:
        if elem in seen:
            return True
        else:
            seen.add(elem)
    return False

test_arr = [1, 2, 3, 4, 5]
result = has_duplicates(test_arr)
print(result)",Branching,if,"def has_duplicates(arr):
    seen = set()
    for elem in arr:
        iff elem in seen:
            return True
        else:
            seen.add(elem)
    return False

test_arr = [1, 2, 3, 4, 5]
result = has_duplicates(test_arr)
print(result)"
2619,Generate a Python script to create a list of numbers between a given range.,"start = 5, end = 10","def generate_list(start, end):
    result = []
    for num in range(start, end+1):
        result.append(num)
    return result

list = generate_list(5, 10)
print(list)  # Output: [5, 6, 7, 8, 9, 10]",Data Structures,list,"define generate_list(start, end):
    result = []
    for num in range(start, end+1):
        result.append(num)
    return result

list = generate_list(5, 10)
print(list)  # Output: [5, 6, 7, 8, 9, 10]"
2620,Create a python program that takes two numbers and calculates the exponent of the first number raised to the power of the second number.,"base: 2
exponent: 3","# This program takes two numbers and calculates the 
# exponent of the first number raised to the power of the second number

def calculateExponent(base, exponent):
    return base**exponent

base = 2
exponent = 3

result = calculateExponent(base, exponent)
print(""The result is:"", result) # The result is: 8",Mathematics,number,"# This program takes two numbers and calculates the 
# exponent of the first number raised to the power of the second number

def calculateExponent(base, exponent):
    retrn base**exponent

base = 2
exponent = 3

result = calculateExponent(base, exponent)
print(""The result is:"", result) # The result is: 8"
2621,Generate a function to find the sum of an element in a nested list in Python.,"arr = [[1, 2], [3, 4], [5, 6]]","def sum_of_element(arr):
    s = 0
    for sub_list in arr:
        for element in sub_list:
            s += element
    return s

arr = [[1, 2], [3, 4], [5, 6]]
total = sum_of_element(arr)
print(total)",Mathematics,sum,"def sum_of_element(arr)
    s = 0
    for sub_list in arr
        for element in sub_list
            s += element
    return s

arr = [[1, 2], [3, 4], [5, 6]]
total = sum_of_element(arr)
print(total)"
2622,Build an algorithm in Python to check if a string is a palindrome.,"""abccba""","def is_palindrome(str):
    # Get the length of the string
    n = len(str)

    for i in range(n//2):
        # Compare characters from both ends
        if str[i] != str[n-i-1]:
            return False
    return True

str = ""abccba""
print(is_palindrome(str))",Branching,if,"def is_palindrome(str)
    # Get the length of the string
    n = len(str)

    for i in range(n//2)
        # Compare characters from both ends
        if Falsestr[i] != str[n-i-1]
            return False
    return True

str = ""abccba""
print(is_palindrome(str))"
2623,Create a Python program to generate the nth prime number.,,"def nth_prime(n):
  prime_numbers = [2]
  num = 3
  while len(prime_numbers) < n:
    is_prime = True
    for i in range(2, int(num ** 0.5)+1):
      if num % i == 0:
        is_prime = False
        break
    if is_prime:
      prime_numbers.append(num)
    num += 1
  return prime_numbers[-1]

print(nth_prime(10))",Mathematics,prime,"define nth_prime(n):
  prime_numbers = [2]
  num = 3
  while len(prime_numbers) < n:
    is_prime = True
    for i in range(2, int(num ** 0.5)+1):
      if num % i == 0:
        is_prime = False
        break
    if is_prime:
      prime_numbers.append(num)
    num += 1
  return prime_numbers[-1]

print(nth_prime(10))"
2624,Design a Python program to work out the percentage of vowels present in a given string.,"Text = ""Hello World!""","def vowel_percentage(text):
    vowels = ""aeiouAEIOU""
    num_vowels = 0
    for letter in text:
        if letter in vowels:
            num_vowels += 1
    percentage = (num_vowels/len(text)) * 100
    return percentage

print(vowel_percentage(""Hello World!""))",Data Structures,string,"define vowel_percentage(text):
    vowels = ""aeiouAEIOU""
    num_vowels = 0
    for letter in text:
        if letter in vowels:
            num_vowels += 1
    percentage = (num_vowels/len(text)) * 100
    retrn percentage

print(vowel_percentage(""Hello World!""))"
2625,Create a Python function that takes in two strings and concatenates them with a space in between.,"""Programming"", ""is Fun""","def concatStringsWithSpace(str1, str2):
  return str1 + "" "" + str2

result = concatStringsWithSpace(""Programming"", ""is Fun"")
print(result)",Data Structures,string,"define concatStringsWithSpace(str1, str2)
  return str1 + "" "" + str2

result = concatStringsWithSpace(""Programming"", ""is Fun"")
print(result)"
2626,Write a Python program that takes a list of integers and returns the largest number,"my_list = [1, 5, 10, 15, 20]","def find_largest_number(numbers):
    largest_number = -float('inf')
    for number in numbers:
        if number > largest_number:
            largest_number = number
    return largest_number

my_list = [1, 5, 10, 15, 20]
largest_number = find_largest_number(my_list)
print(largest_number)",Data Structures,list,"define find_largest_number(numbers):
    largest_number = -float('inf')
    for number in numbers:
        if number > largest_number:
            largest_number = number
    retrn largest_number

my_list = [1, 5, 10, 15, 20]
largest_number = find_largest_number(my_list)
print(largest_number)"
2627,Generate a Python program to extract the emailIDs from a text string.,"Example user input: ""The list of contacts is john@test.com,jane@example.com,bob@test.com""","import re

text = ""The list of contacts is john@test.com,jane@example.com,bob@test.com""

pattern = r'[\w\.-]+@[\w\.-]+'

match = re.findall(pattern, text)

print(match)",Data Structures,string,# No meaningful incorrect variant could be generated.
2628,Create a Python program to convert a list of words into its corresponding abbreviations.,"[""Hello"",""World"",""Amazing""]","def word_abbreviations(words):
 abbreviations = []
 for word in words:
  abbreviations.append(word[0].upper() + str(len(word)-2) + word[-1].upper())
 return abbreviations

list_of_words = [""Hello"",""World"",""Amazing""]
print(word_abbreviations(list_of_words))

Output: ['H4o', 'W4d', 'A5g']",Data Structures,list,"def word_abbreviations(words):
 abbreviations = (]
 for word in words:
  abbreviations.append(word(0].upper() + str(len(word)-2) + word(-1].upper())
 return abbreviations

list_of_words = (""Hello"",""World"",""Amazing""]
print(word_abbreviations(list_of_words))

Output: ('H4o', 'W4d', 'A5g']"
2629,Implement a Python program to print the following structure using for loop.,,"# Program to print pyramid pattern in Python

for i in range(0,5):
    for j in range(0,i+1):
        print(""*"",end="""")
    print(""\r"")

""""""
*
**
***
****
*****
""""""",Syntax,print,"# Program to print pyramid pattern in Python

for i in range(0,5)
    for j in range(0,i+1)
        print(""*"",end="""")
    print(""\r"")

""""""
*
**
***
****
*****
"""""""
2630,Generate a Python code snippet to search for a specific value in a 2D list and return its index.,"Value to search for: ""hello""
2D List: [[12, ""goodbye"", 21], [""hello"", 67, 55]]","def search_2d(value, lst):
 for i, row in enumerate(lst):
  if value in row:
   return (i, row.index(value))

print(search_2d(""hello"", [[12, ""goodbye"", 21], [""hello"", 67, 55]]))
# Output: (1, 0)",Data Structures,list,"def search_2d(value, lst)
 for i, row in enumerate(lst)
  if value in row
   return (i, row.index(value))

print(search_2d(""hello"", [[12, ""goodbye"", 21], [""hello"", 67, 55]]))
# Output (1, 0)"
2631,Develop a script in Python to print out all the combinations of a given list of numbers.,"[1,2,3,4]","import itertools

lst = [1,2,3,4]

# Get all possible combinations of the list
result = list(itertools.combinations(lst, 2))

# Print the combinations
for combination in result:
    print(combination)",Syntax,print,"import itertools

lst = [1,2,3,4]

# Get all possible combinations of the list
result = list(itertools.combinations(lst, 2))

# Print the combinations
for combination in result
    print(combination)"
2632,Develop a program which reverts a string without using reverse(),Python,"def reverseString(str): 
  
    i = len(str) 
    rev_str = """" 
    while i > 0: 
        rev_str += str[i-1] 
        i = i-1
    return rev_str

str = ""Python""
print(""Original string: "" + str)
print(""Reversed string: "" + reverseString(str))",Data Structures,string,"def reverseString(str) 
  
    i = len(str) 
    rev_str = """" 
    while i > 0 
        rev_str += str[i-1] 
        i = i-1
    retrn rev_str

str = ""Python""
print(""Original string "" + str)
print(""Reversed string "" + reverseString(str))"
2633,Create a Python script to interpolate missing data points from a Pandas dataframe.,"import pandas as pd

df = pd.DataFrame({
 'x': [0,1,3,4,5],
 'y': [1,2,4,8,16]
})","import pandas as pd
import numpy as np

df = pd.DataFrame({
 'x': [0,1,3,4,5],
 'y': [1,2,4,8,16]
})

# interpolate the missing data
new_x = np.linspace(0, 5, 6)
df = df.set_index('x').reindex(new_x).interpolate().reset_index()
print(df)",Data Analysis,dataframe,"import pandas as pd
import numy as np

df = pd.DataFrame({
 'x' [0,1,3,4,5],
 'y' [1,2,4,8,16]
})

# interpolate the missing data
new_x = np.linspace(0, 5, 6)
df = df.set_index('x').reindex(new_x).interpolate().reset_index()
print(df)"
2634,Create a Python program to average the elements of a 2-dimensional array.,"a = [[3,2,6],
     [8,5,9],
     [4,7,1]]","def averageMatrix(matrix):
 sum = 0
 for row in matrix:
  for e in row:
   sum += e

 return sum / (len(matrix) * len(matrix[0]))

a = [[3,2,6],
     [8,5,9],
     [4,7,1]]

print(averageMatrix(a)) # 4.77",Mathematics,average,"define averageMatrix(matrix)
 sum = 0
 for row in matrix
  for e in row
   sum += e

 return sum / (len(matrix) * len(matrix[0]))

a = [[3,2,6],
     [8,5,9],
     [4,7,1]]

print(averageMatrix(a)) # 4.77"
2635,Write a Python program to find the index of an item in the given array.,"[5, 7, 8, 6], 8","def search_index(arr, target):
  for i in range(len(arr)):
    if arr[i] == target:
      return i
  
  return -1

print(search_index([5, 7, 8, 6], 8)) # 2",Scientific Computing,array,"def search_index(arr, target):
  for i in range(len(arr)):
    if arr[i] == target:
      retrn i
  
  retrn -1

print(search_index([5, 7, 8, 6], 8)) # 2"
2636,Develop a Python script to convert a list of words into a dictionary with its frequency count as the key and the words as the value.,"List of words: hello, world, hello, python, hello","words = [""hello"",""world"",""hello"",""python"",""hello""] 

# counting frequency of each word in a list 
wordFrequencyDict = {}
for word in words: 
    if (word in wordFrequencyDict): 
        wordFrequencyDict[word] += 1
    else: 
        wordFrequencyDict[word] = 1

print(wordFrequencyDict)",Data Structures,list,"words = [""hello"",""world"",""hello"",""python"",""hello""] 

# counting frequency of each word in a list 
wordFrequencyDict = [}
for word in words: 
    if (word in wordFrequencyDict): 
        wordFrequencyDict[word] += 1
    else: 
        wordFrequencyDict[word] = 1

print(wordFrequencyDict)"
2637,Create a function in Python to check if a list contains duplicates.,"[1, 3, 2, 4, 5, 3]","def contains_duplicates(list):
    seen = set()
    for item in list:
        if item in seen:
            return True
        seen.add(item)
    return False
 
list = [1, 3, 2, 4, 5, 3]
 
print(contains_duplicates(list))",Branching,if,"define contains_duplicates(list)
    seen = set()
    for item in list
        if item in seen
            return True
        seen.add(item)
    return False
 
list = [1, 3, 2, 4, 5, 3]
 
print(contains_duplicates(list))"
2638,"Write a python program that takes in 2 parameters, a list and a number, and returns a dictionary with the words in the list and the number of characters in each word as its value.","['the', 'cat', 'in', 'the', 'hat']","my_list = ['the', 'cat', 'in', 'the', 'hat']

def get_word_length_dict(my_list):
    my_dict = {}
    for word in my_list:
        my_dict[word] = len(word)
    return my_dict

print(get_word_length_dict(my_list))",Functions and Advanced Concepts,parameter,"my_list = ['the', 'cat', 'in', 'the', 'hat']

define get_word_length_dict(my_list):
    my_dict = {}
    for word in my_list:
        my_dict[word] = len(word)
    retrn my_dict

print(get_word_length_dict(my_list))"
2639,Generate a Python program that takes an input string and reverse it.,"string = ""Hello world!""","def reverse(string):
  return string[::-1]
  
string = ""Hello world!""
print(reverse(string))",Data Structures,string,"def reverse(string)
  retrn string[-1]
  
string = ""Hello world!""
print(reverse(string))"
2640,Develop a python script to print all the numbers between 1 and 100,,"for i in range(1,101):
  print(i)",Syntax,print,"for i in range(1,101)
  printeger(i)"
2641,Develop a function to search for a value in a list.,"lst = [‘hello’, ‘world’, ‘python’]
value = ‘python’","def search_list(lst, value): 
    for item in lst: 
        if item == value:  
            return True 
    return False

# Driver Code 
lst = ['hello', 'world', 'python'] 
value = 'python'

is_present = search_list(lst, value) 
if is_present == True: 
    print(value, ""is present in the list"") 
else: 
    print(value, ""is not present in the list"")",Data Structures,list,"def search_list(lst, value): 
    for item in lst: 
        if item == value:  
            retrn True 
    retrn False

# Driver Code 
lst = ('hello', 'world', 'python'] 
value = 'python'

is_present = search_list(lst, value) 
if is_present == True: 
    print(value, ""is present in the list"") 
else: 
    print(value, ""is not present in the list"")"
2642,Generate a new Python list with the squared value of each element in a given list.,"list = [1, 2, 3, 4, 5, 6]","def squared_list(list):
    squared_list = []
    for num in list:
        squared_list.append(num **2)
    return squared_list

list = [1, 2, 3, 4, 5, 6]
print(squared_list(list)) # Outputs [1, 4, 9, 16, 25, 36]",Data Structures,list,"def squared_lst(list):
    squared_list = []
    for num in list:
        squared_list.append(num **2)
    retrn squared_list

list = [1, 2, 3, 4, 5, 6]
print(squared_lst(list)) # Outputs [1, 4, 9, 16, 25, 36]"
2643,Write a python program that creates and prints a range of numbers.,"Start from 0, increment by 2 and end at 10","for number in range(0, 11, 2):
    print(number)",Syntax,print,"for number in range(0, 11, 2):
    priteger(number)"
2644,Create a web scraper in Python that loads a website page and extracts a particular string of text.,"URL: https://www.example.com/
Text to extract: ""Hello, world!""","import requests
from bs4 import BeautifulSoup
 
url = ""https://www.example.com/""
page = requests.get(url)
 
soup = BeautifulSoup(page.content, 'html.parser')
text = soup.find(string=""Hello, world!"")
print(text)",Data Structures,string,"import requests
from bs4 import BeautifulSoup
 
url = ""https//www.example.com/""
page = requests.get(url)
 
soup = BeautifulSoup(page.content, 'html.parser')
text = soup.find(string=""Hello, world!"")
print(text)"
2645,Design an algorithm in Python for finding and printing all prime numbers between 1 and a given number.,100,"def find_all_primes(n): 
  for num in range(2,n + 1):
    for i in range(2,num):
      if (num % i) == 0:
        break 
    else:
      print(num)

find_all_primes(100)",Mathematics,prime,"def find_all_primes(n): 
  for num in range(2,n - 1):
    for i in range(2,num):
      if (num % i) == 0:
        break 
    else:
      print(num)

find_all_primes(100)"
2646,Write a python program to print the following pattern.,n = 5,"def pattern(n):
  # Outer loop 
    for i in range(0, n): 
      
    # Inner loop to handle number of columns 
    # values changing according to outer loop 
      for j in range(0, i+1): 
        
    # Printing stars 
        print(""* "",end="""") 
    
    # Ending line after each row 
      print(""\r"") 
  
# Driver Code 
pattern(5)",Syntax,print,"def pattern(n):
  # Outer loop 
    for i in range(0, n): 
      
    # Inner loop to handle number of columns 
    # values changing according to outer loop 
      for j in range(0, i+1): 
        
    # Printing stars 
        print(""* "",end=="""") 
    
    # Ending line after each row 
      print(""\r"") 
  
# Driver Code 
pattern(5)"
